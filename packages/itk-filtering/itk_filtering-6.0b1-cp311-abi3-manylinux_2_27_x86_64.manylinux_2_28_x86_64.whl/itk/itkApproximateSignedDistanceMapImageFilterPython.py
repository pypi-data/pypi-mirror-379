# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkApproximateSignedDistanceMapImageFilterPython
else:
    import _itkApproximateSignedDistanceMapImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkApproximateSignedDistanceMapImageFilterID2ID2_New():
    return itkApproximateSignedDistanceMapImageFilterID2ID2.New()

class itkApproximateSignedDistanceMapImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterID2ID2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterID2ID2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterID2ID2 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID2ID2_swigregister(itkApproximateSignedDistanceMapImageFilterID2ID2)

def itkApproximateSignedDistanceMapImageFilterID3ID3_New():
    return itkApproximateSignedDistanceMapImageFilterID3ID3.New()

class itkApproximateSignedDistanceMapImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterID3ID3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterID3ID3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterID3ID3 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID3ID3_swigregister(itkApproximateSignedDistanceMapImageFilterID3ID3)

def itkApproximateSignedDistanceMapImageFilterID4ID4_New():
    return itkApproximateSignedDistanceMapImageFilterID4ID4.New()

class itkApproximateSignedDistanceMapImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterID4ID4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterID4ID4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> double"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterID4ID4

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterID4ID4 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterID4ID4_swigregister(itkApproximateSignedDistanceMapImageFilterID4ID4)

def itkApproximateSignedDistanceMapImageFilterIF2IF2_New():
    return itkApproximateSignedDistanceMapImageFilterIF2IF2.New()

class itkApproximateSignedDistanceMapImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterIF2IF2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterIF2IF2 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF2IF2_swigregister(itkApproximateSignedDistanceMapImageFilterIF2IF2)

def itkApproximateSignedDistanceMapImageFilterIF3IF3_New():
    return itkApproximateSignedDistanceMapImageFilterIF3IF3.New()

class itkApproximateSignedDistanceMapImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterIF3IF3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterIF3IF3 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF3IF3_swigregister(itkApproximateSignedDistanceMapImageFilterIF3IF3)

def itkApproximateSignedDistanceMapImageFilterIF4IF4_New():
    return itkApproximateSignedDistanceMapImageFilterIF4IF4.New()

class itkApproximateSignedDistanceMapImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterIF4IF4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterIF4IF4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> float"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterIF4IF4

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterIF4IF4 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterIF4IF4_swigregister(itkApproximateSignedDistanceMapImageFilterIF4IF4)

def itkApproximateSignedDistanceMapImageFilterISS2ISS2_New():
    return itkApproximateSignedDistanceMapImageFilterISS2ISS2.New()

class itkApproximateSignedDistanceMapImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterISS2ISS2_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterISS2ISS2

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterISS2ISS2 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS2ISS2_swigregister(itkApproximateSignedDistanceMapImageFilterISS2ISS2)

def itkApproximateSignedDistanceMapImageFilterISS3ISS3_New():
    return itkApproximateSignedDistanceMapImageFilterISS3ISS3.New()

class itkApproximateSignedDistanceMapImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterISS3ISS3_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterISS3ISS3

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterISS3ISS3 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS3ISS3_swigregister(itkApproximateSignedDistanceMapImageFilterISS3ISS3)

def itkApproximateSignedDistanceMapImageFilterISS4ISS4_New():
    return itkApproximateSignedDistanceMapImageFilterISS4ISS4.New()

class itkApproximateSignedDistanceMapImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkApproximateSignedDistanceMapImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkApproximateSignedDistanceMapImageFilterISS4ISS4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkApproximateSignedDistanceMapImageFilterISS4ISS4_Pointer"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_Clone(self)

    def SetInsideValue(self, _arg):
        r"""
        SetInsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_SetInsideValue(self, _arg)

    def GetInsideValue(self):
        r"""GetInsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_GetInsideValue(self)

    def SetOutsideValue(self, _arg):
        r"""
        SetOutsideValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_SetOutsideValue(self, _arg)

    def GetOutsideValue(self):
        r"""GetOutsideValue(self) -> short"""
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_GetOutsideValue(self)
    InputEqualityComparableCheck = _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_InputEqualityComparableCheck
    
    __swig_destroy__ = _itkApproximateSignedDistanceMapImageFilterPython.delete_itkApproximateSignedDistanceMapImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkApproximateSignedDistanceMapImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkApproximateSignedDistanceMapImageFilterISS4ISS4

        Create a new object of the class itkApproximateSignedDistanceMapImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkApproximateSignedDistanceMapImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkApproximateSignedDistanceMapImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkApproximateSignedDistanceMapImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkApproximateSignedDistanceMapImageFilterISS4ISS4 in _itkApproximateSignedDistanceMapImageFilterPython:
_itkApproximateSignedDistanceMapImageFilterPython.itkApproximateSignedDistanceMapImageFilterISS4ISS4_swigregister(itkApproximateSignedDistanceMapImageFilterISS4ISS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def approximate_signed_distance_map_image_filter(*args: itkt.ImageLike,  inside_value: float=..., outside_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ApproximateSignedDistanceMapImageFilter"""
    import itk

    kwarg_typehints = { 'inside_value':inside_value,'outside_value':outside_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ApproximateSignedDistanceMapImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def approximate_signed_distance_map_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDistanceMap.ApproximateSignedDistanceMapImageFilter
    approximate_signed_distance_map_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    approximate_signed_distance_map_image_filter.__doc__ = filter_object.__doc__



