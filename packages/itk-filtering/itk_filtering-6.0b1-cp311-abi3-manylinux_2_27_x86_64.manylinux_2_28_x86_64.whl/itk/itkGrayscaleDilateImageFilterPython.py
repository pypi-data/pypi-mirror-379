# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleDilateImageFilterPython
else:
    import _itkGrayscaleDilateImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFlatStructuringElementPython
import itk.itkNeighborhoodPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkRGBPixelPython
import itk.itkOffsetPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkMathematicalMorphologyEnumsPython

def itkGrayscaleDilateImageFilterID2ID2SE2_New():
    return itkGrayscaleDilateImageFilterID2ID2SE2.New()

class itkGrayscaleDilateImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterID2ID2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterID2ID2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: double const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> double"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID2ID2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterID2ID2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID2ID2SE2_swigregister(itkGrayscaleDilateImageFilterID2ID2SE2)

def itkGrayscaleDilateImageFilterID3ID3SE3_New():
    return itkGrayscaleDilateImageFilterID3ID3SE3.New()

class itkGrayscaleDilateImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterID3ID3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterID3ID3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: double const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> double"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID3ID3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterID3ID3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID3ID3SE3_swigregister(itkGrayscaleDilateImageFilterID3ID3SE3)

def itkGrayscaleDilateImageFilterID4ID4SE4_New():
    return itkGrayscaleDilateImageFilterID4ID4SE4.New()

class itkGrayscaleDilateImageFilterID4ID4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterID4ID4SE4):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterID4ID4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterID4ID4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: double const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> double"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterID4ID4SE4

        Create a new object of the class itkGrayscaleDilateImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterID4ID4SE4 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterID4ID4SE4_swigregister(itkGrayscaleDilateImageFilterID4ID4SE4)

def itkGrayscaleDilateImageFilterIF2IF2SE2_New():
    return itkGrayscaleDilateImageFilterIF2IF2SE2.New()

class itkGrayscaleDilateImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIF2IF2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: float const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> float"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF2IF2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIF2IF2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF2IF2SE2_swigregister(itkGrayscaleDilateImageFilterIF2IF2SE2)

def itkGrayscaleDilateImageFilterIF3IF3SE3_New():
    return itkGrayscaleDilateImageFilterIF3IF3SE3.New()

class itkGrayscaleDilateImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIF3IF3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: float const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> float"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF3IF3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIF3IF3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF3IF3SE3_swigregister(itkGrayscaleDilateImageFilterIF3IF3SE3)

def itkGrayscaleDilateImageFilterIF4IF4SE4_New():
    return itkGrayscaleDilateImageFilterIF4IF4SE4.New()

class itkGrayscaleDilateImageFilterIF4IF4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF4IF4SE4):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIF4IF4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIF4IF4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: float const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> float"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIF4IF4SE4

        Create a new object of the class itkGrayscaleDilateImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIF4IF4SE4 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIF4IF4SE4_swigregister(itkGrayscaleDilateImageFilterIF4IF4SE4)

def itkGrayscaleDilateImageFilterISS2ISS2SE2_New():
    return itkGrayscaleDilateImageFilterISS2ISS2SE2.New()

class itkGrayscaleDilateImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterISS2ISS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS2ISS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterISS2ISS2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS2ISS2SE2_swigregister(itkGrayscaleDilateImageFilterISS2ISS2SE2)

def itkGrayscaleDilateImageFilterISS3ISS3SE3_New():
    return itkGrayscaleDilateImageFilterISS3ISS3SE3.New()

class itkGrayscaleDilateImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterISS3ISS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS3ISS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterISS3ISS3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS3ISS3SE3_swigregister(itkGrayscaleDilateImageFilterISS3ISS3SE3)

def itkGrayscaleDilateImageFilterISS4ISS4SE4_New():
    return itkGrayscaleDilateImageFilterISS4ISS4SE4.New()

class itkGrayscaleDilateImageFilterISS4ISS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS4ISS4SE4):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterISS4ISS4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterISS4ISS4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterISS4ISS4SE4

        Create a new object of the class itkGrayscaleDilateImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterISS4ISS4SE4 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterISS4ISS4SE4_swigregister(itkGrayscaleDilateImageFilterISS4ISS4SE4)

def itkGrayscaleDilateImageFilterIUC2IUC2SE2_New():
    return itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()

class itkGrayscaleDilateImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUC2IUC2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned char const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned char"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC2IUC2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUC2IUC2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC2IUC2SE2_swigregister(itkGrayscaleDilateImageFilterIUC2IUC2SE2)

def itkGrayscaleDilateImageFilterIUC3IUC3SE3_New():
    return itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()

class itkGrayscaleDilateImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUC3IUC3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned char const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned char"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC3IUC3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUC3IUC3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC3IUC3SE3_swigregister(itkGrayscaleDilateImageFilterIUC3IUC3SE3)

def itkGrayscaleDilateImageFilterIUC4IUC4SE4_New():
    return itkGrayscaleDilateImageFilterIUC4IUC4SE4.New()

class itkGrayscaleDilateImageFilterIUC4IUC4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC4IUC4SE4):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUC4IUC4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUC4IUC4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned char const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned char"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUC4IUC4SE4

        Create a new object of the class itkGrayscaleDilateImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUC4IUC4SE4 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUC4IUC4SE4_swigregister(itkGrayscaleDilateImageFilterIUC4IUC4SE4)

def itkGrayscaleDilateImageFilterIUS2IUS2SE2_New():
    return itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()

class itkGrayscaleDilateImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUS2IUS2SE2_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS2IUS2SE2

        Create a new object of the class itkGrayscaleDilateImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUS2IUS2SE2 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS2IUS2SE2_swigregister(itkGrayscaleDilateImageFilterIUS2IUS2SE2)

def itkGrayscaleDilateImageFilterIUS3IUS3SE3_New():
    return itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()

class itkGrayscaleDilateImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUS3IUS3SE3_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS3IUS3SE3

        Create a new object of the class itkGrayscaleDilateImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUS3IUS3SE3 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS3IUS3SE3_swigregister(itkGrayscaleDilateImageFilterIUS3IUS3SE3)

def itkGrayscaleDilateImageFilterIUS4IUS4SE4_New():
    return itkGrayscaleDilateImageFilterIUS4IUS4SE4.New()

class itkGrayscaleDilateImageFilterIUS4IUS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS4IUS4SE4):
    r"""Proxy of C++ itkGrayscaleDilateImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleDilateImageFilterIUS4IUS4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleDilateImageFilterIUS4IUS4SE4_Pointer"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_Clone(self)

    def SetBoundary(self, value):
        r"""
        SetBoundary(self, value)

        Parameters
        ----------
        value: unsigned short const

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_SetBoundary(self, value)

    def GetBoundary(self):
        r"""GetBoundary(self) -> unsigned short"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_GetBoundary(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkGrayscaleDilateImageFilterPython.delete_itkGrayscaleDilateImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleDilateImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleDilateImageFilterIUS4IUS4SE4

        Create a new object of the class itkGrayscaleDilateImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleDilateImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleDilateImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleDilateImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleDilateImageFilterIUS4IUS4SE4 in _itkGrayscaleDilateImageFilterPython:
_itkGrayscaleDilateImageFilterPython.itkGrayscaleDilateImageFilterIUS4IUS4SE4_swigregister(itkGrayscaleDilateImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def grayscale_dilate_image_filter(*args: itkt.ImageLike,  kernel: Union[itkt.FlatStructuringElement, itkt.FlatStructuringElement]=..., boundary: float=..., algorithm=..., radius: Union[Sequence[int], int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for GrayscaleDilateImageFilter"""
    import itk

    kwarg_typehints = { 'kernel':kernel,'boundary':boundary,'algorithm':algorithm,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.GrayscaleDilateImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def grayscale_dilate_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.GrayscaleDilateImageFilter
    grayscale_dilate_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    grayscale_dilate_image_filter.__doc__ = filter_object.__doc__



