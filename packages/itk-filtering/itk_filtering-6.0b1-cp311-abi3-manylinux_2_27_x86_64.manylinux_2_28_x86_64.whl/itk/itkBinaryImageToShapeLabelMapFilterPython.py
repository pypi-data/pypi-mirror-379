# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryImageToShapeLabelMapFilterPython
else:
    import _itkBinaryImageToShapeLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.ITKLabelMapBasePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkStatisticsLabelObjectPython
import itk.itkHistogramPython
import itk.itkArrayPython
import itk.itkSamplePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkVariableLengthVectorPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython

def itkBinaryImageToShapeLabelMapFilterIUC2LM2_New():
    return itkBinaryImageToShapeLabelMapFilterIUC2LM2.New()

class itkBinaryImageToShapeLabelMapFilterIUC2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUC2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUC2LM2_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUC2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUC2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUC2LM2

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUC2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUC2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUC2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUC2LM2 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC2LM2_swigregister(itkBinaryImageToShapeLabelMapFilterIUC2LM2)

def itkBinaryImageToShapeLabelMapFilterIUC3LM3_New():
    return itkBinaryImageToShapeLabelMapFilterIUC3LM3.New()

class itkBinaryImageToShapeLabelMapFilterIUC3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUC3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUC3LM3_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUC3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUC3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUC3LM3

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUC3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUC3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUC3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUC3LM3 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC3LM3_swigregister(itkBinaryImageToShapeLabelMapFilterIUC3LM3)

def itkBinaryImageToShapeLabelMapFilterIUC4LM4_New():
    return itkBinaryImageToShapeLabelMapFilterIUC4LM4.New()

class itkBinaryImageToShapeLabelMapFilterIUC4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUC4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUC4LM4_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUC4LM4_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUC4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUC4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUC4LM4

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUC4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUC4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUC4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUC4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUC4LM4 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUC4LM4_swigregister(itkBinaryImageToShapeLabelMapFilterIUC4LM4)

def itkBinaryImageToShapeLabelMapFilterIUS2LM2_New():
    return itkBinaryImageToShapeLabelMapFilterIUS2LM2.New()

class itkBinaryImageToShapeLabelMapFilterIUS2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUS2LM2_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUS2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUS2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUS2LM2

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUS2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUS2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUS2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUS2LM2 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS2LM2_swigregister(itkBinaryImageToShapeLabelMapFilterIUS2LM2)

def itkBinaryImageToShapeLabelMapFilterIUS3LM3_New():
    return itkBinaryImageToShapeLabelMapFilterIUS3LM3.New()

class itkBinaryImageToShapeLabelMapFilterIUS3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUS3LM3_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUS3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUS3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUS3LM3

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUS3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUS3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUS3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUS3LM3 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS3LM3_swigregister(itkBinaryImageToShapeLabelMapFilterIUS3LM3)

def itkBinaryImageToShapeLabelMapFilterIUS4LM4_New():
    return itkBinaryImageToShapeLabelMapFilterIUS4LM4.New()

class itkBinaryImageToShapeLabelMapFilterIUS4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4):
    r"""Proxy of C++ itkBinaryImageToShapeLabelMapFilterIUS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToShapeLabelMapFilterIUS4LM4_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToShapeLabelMapFilterIUS4LM4_Pointer"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_InputOStreamWritableCheck
    

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetInputForegroundValue(self)

    def SetComputeFeretDiameter(self, _arg):
        r"""
        SetComputeFeretDiameter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetComputeFeretDiameter(self, _arg)

    def GetComputeFeretDiameter(self):
        r"""GetComputeFeretDiameter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetComputeFeretDiameter(self)

    def ComputeFeretDiameterOn(self):
        r"""ComputeFeretDiameterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputeFeretDiameterOn(self)

    def ComputeFeretDiameterOff(self):
        r"""ComputeFeretDiameterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputeFeretDiameterOff(self)

    def SetComputePerimeter(self, _arg):
        r"""
        SetComputePerimeter(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetComputePerimeter(self, _arg)

    def GetComputePerimeter(self):
        r"""GetComputePerimeter(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetComputePerimeter(self)

    def ComputePerimeterOn(self):
        r"""ComputePerimeterOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputePerimeterOn(self)

    def ComputePerimeterOff(self):
        r"""ComputePerimeterOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputePerimeterOff(self)

    def SetComputeOrientedBoundingBox(self, _arg):
        r"""
        SetComputeOrientedBoundingBox(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_SetComputeOrientedBoundingBox(self, _arg)

    def GetComputeOrientedBoundingBox(self):
        r"""GetComputeOrientedBoundingBox(self) -> bool const &"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_GetComputeOrientedBoundingBox(self)

    def ComputeOrientedBoundingBoxOn(self):
        r"""ComputeOrientedBoundingBoxOn(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputeOrientedBoundingBoxOn(self)

    def ComputeOrientedBoundingBoxOff(self):
        r"""ComputeOrientedBoundingBoxOff(self)"""
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_ComputeOrientedBoundingBoxOff(self)
    __swig_destroy__ = _itkBinaryImageToShapeLabelMapFilterPython.delete_itkBinaryImageToShapeLabelMapFilterIUS4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToShapeLabelMapFilterIUS4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToShapeLabelMapFilterIUS4LM4

        Create a new object of the class itkBinaryImageToShapeLabelMapFilterIUS4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToShapeLabelMapFilterIUS4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToShapeLabelMapFilterIUS4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToShapeLabelMapFilterIUS4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToShapeLabelMapFilterIUS4LM4 in _itkBinaryImageToShapeLabelMapFilterPython:
_itkBinaryImageToShapeLabelMapFilterPython.itkBinaryImageToShapeLabelMapFilterIUS4LM4_swigregister(itkBinaryImageToShapeLabelMapFilterIUS4LM4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_image_to_shape_label_map_filter(*args: itkt.ImageLike,  fully_connected: bool=..., output_background_value: int=..., input_foreground_value: int=..., compute_feret_diameter: bool=..., compute_perimeter: bool=..., compute_oriented_bounding_box: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryImageToShapeLabelMapFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'output_background_value':output_background_value,'input_foreground_value':input_foreground_value,'compute_feret_diameter':compute_feret_diameter,'compute_perimeter':compute_perimeter,'compute_oriented_bounding_box':compute_oriented_bounding_box }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryImageToShapeLabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_image_to_shape_label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.BinaryImageToShapeLabelMapFilter
    binary_image_to_shape_label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_image_to_shape_label_map_filter.__doc__ = filter_object.__doc__



