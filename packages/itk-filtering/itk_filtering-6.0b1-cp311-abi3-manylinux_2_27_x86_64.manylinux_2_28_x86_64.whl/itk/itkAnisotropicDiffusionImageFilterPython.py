# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKAnisotropicSmoothingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkAnisotropicDiffusionImageFilterPython
else:
    import _itkAnisotropicDiffusionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython
class itkAnisotropicDiffusionImageFilterICVF22ICVF22(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF22ICVF22 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister(itkAnisotropicDiffusionImageFilterICVF22ICVF22)
class itkAnisotropicDiffusionImageFilterICVF23ICVF23(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF23ICVF23 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23_swigregister(itkAnisotropicDiffusionImageFilterICVF23ICVF23)
class itkAnisotropicDiffusionImageFilterICVF24ICVF24(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF24ICVF24 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24_swigregister(itkAnisotropicDiffusionImageFilterICVF24ICVF24)
class itkAnisotropicDiffusionImageFilterICVF32ICVF32(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF32ICVF32 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32_swigregister(itkAnisotropicDiffusionImageFilterICVF32ICVF32)
class itkAnisotropicDiffusionImageFilterICVF33ICVF33(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF33ICVF33 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister(itkAnisotropicDiffusionImageFilterICVF33ICVF33)
class itkAnisotropicDiffusionImageFilterICVF34ICVF34(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF34ICVF34 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34_swigregister(itkAnisotropicDiffusionImageFilterICVF34ICVF34)
class itkAnisotropicDiffusionImageFilterICVF42ICVF42(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF42ICVF42 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42_swigregister(itkAnisotropicDiffusionImageFilterICVF42ICVF42)
class itkAnisotropicDiffusionImageFilterICVF43ICVF43(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF43ICVF43 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43_swigregister(itkAnisotropicDiffusionImageFilterICVF43ICVF43)
class itkAnisotropicDiffusionImageFilterICVF44ICVF44(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_cast(obj)

# Register itkAnisotropicDiffusionImageFilterICVF44ICVF44 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44_swigregister(itkAnisotropicDiffusionImageFilterICVF44ICVF44)
class itkAnisotropicDiffusionImageFilterID2ID2(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterID2ID2):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_cast(obj)

# Register itkAnisotropicDiffusionImageFilterID2ID2 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID2ID2_swigregister(itkAnisotropicDiffusionImageFilterID2ID2)
class itkAnisotropicDiffusionImageFilterID3ID3(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterID3ID3):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_cast(obj)

# Register itkAnisotropicDiffusionImageFilterID3ID3 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID3ID3_swigregister(itkAnisotropicDiffusionImageFilterID3ID3)
class itkAnisotropicDiffusionImageFilterID4ID4(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterID4ID4):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_cast(obj)

# Register itkAnisotropicDiffusionImageFilterID4ID4 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterID4ID4_swigregister(itkAnisotropicDiffusionImageFilterID4ID4)
class itkAnisotropicDiffusionImageFilterIF2IF2(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIF2IF2):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIF2IF2 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF2IF2_swigregister(itkAnisotropicDiffusionImageFilterIF2IF2)
class itkAnisotropicDiffusionImageFilterIF3IF3(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIF3IF3):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIF3IF3 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF3IF3_swigregister(itkAnisotropicDiffusionImageFilterIF3IF3)
class itkAnisotropicDiffusionImageFilterIF4IF4(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIF4IF4):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIF4IF4 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIF4IF4_swigregister(itkAnisotropicDiffusionImageFilterIF4IF4)
class itkAnisotropicDiffusionImageFilterIVF22IVF22(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF22IVF22):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF22IVF22 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22_swigregister(itkAnisotropicDiffusionImageFilterIVF22IVF22)
class itkAnisotropicDiffusionImageFilterIVF23IVF23(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF23IVF23):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF23IVF23 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23_swigregister(itkAnisotropicDiffusionImageFilterIVF23IVF23)
class itkAnisotropicDiffusionImageFilterIVF24IVF24(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF24IVF24):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF24IVF24 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24_swigregister(itkAnisotropicDiffusionImageFilterIVF24IVF24)
class itkAnisotropicDiffusionImageFilterIVF32IVF32(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF32IVF32):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF32IVF32 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32_swigregister(itkAnisotropicDiffusionImageFilterIVF32IVF32)
class itkAnisotropicDiffusionImageFilterIVF33IVF33(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF33IVF33):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF33IVF33 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33_swigregister(itkAnisotropicDiffusionImageFilterIVF33IVF33)
class itkAnisotropicDiffusionImageFilterIVF34IVF34(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF34IVF34):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF34IVF34 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34_swigregister(itkAnisotropicDiffusionImageFilterIVF34IVF34)
class itkAnisotropicDiffusionImageFilterIVF42IVF42(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF42IVF42):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF42IVF42 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42_swigregister(itkAnisotropicDiffusionImageFilterIVF42IVF42)
class itkAnisotropicDiffusionImageFilterIVF43IVF43(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF43IVF43):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF43IVF43 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43_swigregister(itkAnisotropicDiffusionImageFilterIVF43IVF43)
class itkAnisotropicDiffusionImageFilterIVF44IVF44(itk.itkDenseFiniteDifferenceImageFilterPython.itkDenseFiniteDifferenceImageFilterIVF44IVF44):
    r"""Proxy of C++ itkAnisotropicDiffusionImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetTimeStep(self, _arg):
        r"""
        SetTimeStep(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_SetTimeStep(self, _arg)

    def GetTimeStep(self):
        r"""GetTimeStep(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_GetTimeStep(self)

    def SetConductanceParameter(self, _arg):
        r"""
        SetConductanceParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_SetConductanceParameter(self, _arg)

    def GetConductanceParameter(self):
        r"""GetConductanceParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_GetConductanceParameter(self)

    def SetConductanceScalingUpdateInterval(self, _arg):
        r"""
        SetConductanceScalingUpdateInterval(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_SetConductanceScalingUpdateInterval(self, _arg)

    def GetConductanceScalingUpdateInterval(self):
        r"""GetConductanceScalingUpdateInterval(self) -> unsigned int"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_GetConductanceScalingUpdateInterval(self)

    def SetConductanceScalingParameter(self, _arg):
        r"""
        SetConductanceScalingParameter(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_SetConductanceScalingParameter(self, _arg)

    def GetConductanceScalingParameter(self):
        r"""GetConductanceScalingParameter(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_GetConductanceScalingParameter(self)

    def SetFixedAverageGradientMagnitude(self, a):
        r"""
        SetFixedAverageGradientMagnitude(self, a)

        Parameters
        ----------
        a: double

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_SetFixedAverageGradientMagnitude(self, a)

    def GetFixedAverageGradientMagnitude(self):
        r"""GetFixedAverageGradientMagnitude(self) -> double"""
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_GetFixedAverageGradientMagnitude(self)
    __swig_destroy__ = _itkAnisotropicDiffusionImageFilterPython.delete_itkAnisotropicDiffusionImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkAnisotropicDiffusionImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_cast(obj)

# Register itkAnisotropicDiffusionImageFilterIVF44IVF44 in _itkAnisotropicDiffusionImageFilterPython:
_itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44_swigregister(itkAnisotropicDiffusionImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def anisotropic_diffusion_image_filter(*args: itkt.ImageLike,  time_step: float=..., conductance_parameter: float=..., conductance_scaling_update_interval: int=..., conductance_scaling_parameter: float=..., fixed_average_gradient_magnitude: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for AnisotropicDiffusionImageFilter"""
    import itk

    kwarg_typehints = { 'time_step':time_step,'conductance_parameter':conductance_parameter,'conductance_scaling_update_interval':conductance_scaling_update_interval,'conductance_scaling_parameter':conductance_scaling_parameter,'fixed_average_gradient_magnitude':fixed_average_gradient_magnitude,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.AnisotropicDiffusionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def anisotropic_diffusion_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKAnisotropicSmoothing.AnisotropicDiffusionImageFilter
    anisotropic_diffusion_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    anisotropic_diffusion_image_filter.__doc__ = filter_object.__doc__



