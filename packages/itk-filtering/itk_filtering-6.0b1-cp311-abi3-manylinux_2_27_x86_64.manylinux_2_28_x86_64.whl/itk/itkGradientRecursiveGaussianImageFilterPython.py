# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGradientPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGradientRecursiveGaussianImageFilterPython
else:
    import _itkGradientRecursiveGaussianImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython

def itkGradientRecursiveGaussianImageFilterID2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterID2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterID2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2ICVF22):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterID2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterID2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterID2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterID2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterID2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterID2ICVF22)

def itkGradientRecursiveGaussianImageFilterID3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterID3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterID3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ICVF23):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterID3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterID3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterID3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterID3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterID3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterID3ICVF23)

def itkGradientRecursiveGaussianImageFilterID4ICVF24_New():
    return itkGradientRecursiveGaussianImageFilterID4ICVF24.New()

class itkGradientRecursiveGaussianImageFilterID4ICVF24(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4ICVF24):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterID4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterID4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterID4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterID4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterID4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterID4ICVF24

        Create a new object of the class itkGradientRecursiveGaussianImageFilterID4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterID4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterID4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterID4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterID4ICVF24 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterID4ICVF24_swigregister(itkGradientRecursiveGaussianImageFilterID4ICVF24)

def itkGradientRecursiveGaussianImageFilterIF2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIF2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2ICVF22):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIF2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIF2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIF2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIF2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIF2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIF2ICVF22)

def itkGradientRecursiveGaussianImageFilterIF3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIF3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3ICVF23):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIF3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIF3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIF3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIF3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIF3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIF3ICVF23)

def itkGradientRecursiveGaussianImageFilterIF4ICVF24_New():
    return itkGradientRecursiveGaussianImageFilterIF4ICVF24.New()

class itkGradientRecursiveGaussianImageFilterIF4ICVF24(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4ICVF24):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIF4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIF4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIF4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIF4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIF4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIF4ICVF24

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIF4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIF4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIF4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIF4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIF4ICVF24 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIF4ICVF24_swigregister(itkGradientRecursiveGaussianImageFilterIF4ICVF24)

def itkGradientRecursiveGaussianImageFilterISS2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterISS2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2ICVF22):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterISS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterISS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterISS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterISS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterISS2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterISS2ICVF22)

def itkGradientRecursiveGaussianImageFilterISS3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterISS3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ICVF23):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterISS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterISS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterISS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterISS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterISS3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterISS3ICVF23)

def itkGradientRecursiveGaussianImageFilterISS4ICVF24_New():
    return itkGradientRecursiveGaussianImageFilterISS4ICVF24.New()

class itkGradientRecursiveGaussianImageFilterISS4ICVF24(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4ICVF24):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterISS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterISS4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterISS4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterISS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterISS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterISS4ICVF24

        Create a new object of the class itkGradientRecursiveGaussianImageFilterISS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterISS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterISS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterISS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterISS4ICVF24 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterISS4ICVF24_swigregister(itkGradientRecursiveGaussianImageFilterISS4ICVF24)

def itkGradientRecursiveGaussianImageFilterIUC2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIUC2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2ICVF22):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUC2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUC2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUC2ICVF22)

def itkGradientRecursiveGaussianImageFilterIUC3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIUC3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3ICVF23):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUC3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUC3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUC3ICVF23)

def itkGradientRecursiveGaussianImageFilterIUC4ICVF24_New():
    return itkGradientRecursiveGaussianImageFilterIUC4ICVF24.New()

class itkGradientRecursiveGaussianImageFilterIUC4ICVF24(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4ICVF24):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUC4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUC4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUC4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUC4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUC4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUC4ICVF24

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUC4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUC4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUC4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUC4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUC4ICVF24 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUC4ICVF24_swigregister(itkGradientRecursiveGaussianImageFilterIUC4ICVF24)

def itkGradientRecursiveGaussianImageFilterIUS2ICVF22_New():
    return itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()

class itkGradientRecursiveGaussianImageFilterIUS2ICVF22(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2ICVF22):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUS2ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS2ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS2ICVF22

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS2ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS2ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUS2ICVF22 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS2ICVF22_swigregister(itkGradientRecursiveGaussianImageFilterIUS2ICVF22)

def itkGradientRecursiveGaussianImageFilterIUS3ICVF23_New():
    return itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()

class itkGradientRecursiveGaussianImageFilterIUS3ICVF23(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3ICVF23):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUS3ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS3ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS3ICVF23

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS3ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS3ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUS3ICVF23 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS3ICVF23_swigregister(itkGradientRecursiveGaussianImageFilterIUS3ICVF23)

def itkGradientRecursiveGaussianImageFilterIUS4ICVF24_New():
    return itkGradientRecursiveGaussianImageFilterIUS4ICVF24.New()

class itkGradientRecursiveGaussianImageFilterIUS4ICVF24(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4ICVF24):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIUS4ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIUS4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIUS4ICVF24_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIUS4ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIUS4ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIUS4ICVF24

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIUS4ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIUS4ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIUS4ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIUS4ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIUS4ICVF24 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIUS4ICVF24_swigregister(itkGradientRecursiveGaussianImageFilterIUS4ICVF24)

def itkGradientRecursiveGaussianImageFilterIVF22ICVF42_New():
    return itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()

class itkGradientRecursiveGaussianImageFilterIVF22ICVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22ICVF42):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIVF22ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD2 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD2"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF22ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF22ICVF42

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF22ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF22ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIVF22ICVF42 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF22ICVF42_swigregister(itkGradientRecursiveGaussianImageFilterIVF22ICVF42)

def itkGradientRecursiveGaussianImageFilterIVF23ICVF43_New():
    return itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()

class itkGradientRecursiveGaussianImageFilterIVF23ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23ICVF43):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIVF23ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD3 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD3"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF23ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF23ICVF43

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF23ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF23ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIVF23ICVF43 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF23ICVF43_swigregister(itkGradientRecursiveGaussianImageFilterIVF23ICVF43)

def itkGradientRecursiveGaussianImageFilterIVF24ICVF44_New():
    return itkGradientRecursiveGaussianImageFilterIVF24ICVF44.New()

class itkGradientRecursiveGaussianImageFilterIVF24ICVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF24ICVF44):
    r"""Proxy of C++ itkGradientRecursiveGaussianImageFilterIVF24ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGradientRecursiveGaussianImageFilterIVF24ICVF44_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGradientRecursiveGaussianImageFilterIVF24ICVF44_Pointer"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_Clone(self)

    def SetSigmaArray(self, sigma):
        r"""
        SetSigmaArray(self, sigma)

        Parameters
        ----------
        sigma: itkFixedArrayD4 const &

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_SetSigmaArray(self, sigma)

    def SetSigma(self, sigma):
        r"""
        SetSigma(self, sigma)

        Parameters
        ----------
        sigma: double

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_SetSigma(self, sigma)

    def GetSigmaArray(self):
        r"""GetSigmaArray(self) -> itkFixedArrayD4"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_GetSigmaArray(self)

    def GetSigma(self):
        r"""GetSigma(self) -> double"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_GetSigma(self)

    def SetNormalizeAcrossScale(self, normalize):
        r"""
        SetNormalizeAcrossScale(self, normalize)

        Parameters
        ----------
        normalize: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_SetNormalizeAcrossScale(self, normalize)

    def GetNormalizeAcrossScale(self):
        r"""GetNormalizeAcrossScale(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_GetNormalizeAcrossScale(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_GenerateInputRequestedRegion(self)

    def SetUseImageDirection(self, _arg):
        r"""
        SetUseImageDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_SetUseImageDirection(self, _arg)

    def GetUseImageDirection(self):
        r"""GetUseImageDirection(self) -> bool"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_GetUseImageDirection(self)

    def UseImageDirectionOn(self):
        r"""UseImageDirectionOn(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_UseImageDirectionOn(self)

    def UseImageDirectionOff(self):
        r"""UseImageDirectionOff(self)"""
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_UseImageDirectionOff(self)
    __swig_destroy__ = _itkGradientRecursiveGaussianImageFilterPython.delete_itkGradientRecursiveGaussianImageFilterIVF24ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGradientRecursiveGaussianImageFilterIVF24ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGradientRecursiveGaussianImageFilterIVF24ICVF44

        Create a new object of the class itkGradientRecursiveGaussianImageFilterIVF24ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGradientRecursiveGaussianImageFilterIVF24ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGradientRecursiveGaussianImageFilterIVF24ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGradientRecursiveGaussianImageFilterIVF24ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGradientRecursiveGaussianImageFilterIVF24ICVF44 in _itkGradientRecursiveGaussianImageFilterPython:
_itkGradientRecursiveGaussianImageFilterPython.itkGradientRecursiveGaussianImageFilterIVF24ICVF44_swigregister(itkGradientRecursiveGaussianImageFilterIVF24ICVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def gradient_recursive_gaussian_image_filter(*args: itkt.ImageLike,  sigma_array: Sequence[float]=..., sigma: float=..., normalize_across_scale: bool=..., use_image_direction: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for GradientRecursiveGaussianImageFilter"""
    import itk

    kwarg_typehints = { 'sigma_array':sigma_array,'sigma':sigma,'normalize_across_scale':normalize_across_scale,'use_image_direction':use_image_direction }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.GradientRecursiveGaussianImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def gradient_recursive_gaussian_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGradient.GradientRecursiveGaussianImageFilter
    gradient_recursive_gaussian_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    gradient_recursive_gaussian_image_filter.__doc__ = filter_object.__doc__



