# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageNoisePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpeckleNoiseImageFilterPython
else:
    import _itkSpeckleNoiseImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkNoiseBaseImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkSpeckleNoiseImageFilterID2ID2_New():
    return itkSpeckleNoiseImageFilterID2ID2.New()

class itkSpeckleNoiseImageFilterID2ID2(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID2ID2):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterID2ID2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterID2ID2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterID2ID2

        Create a new object of the class itkSpeckleNoiseImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterID2ID2 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID2ID2_swigregister(itkSpeckleNoiseImageFilterID2ID2)

def itkSpeckleNoiseImageFilterID3ID3_New():
    return itkSpeckleNoiseImageFilterID3ID3.New()

class itkSpeckleNoiseImageFilterID3ID3(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID3ID3):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterID3ID3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterID3ID3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterID3ID3

        Create a new object of the class itkSpeckleNoiseImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterID3ID3 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID3ID3_swigregister(itkSpeckleNoiseImageFilterID3ID3)

def itkSpeckleNoiseImageFilterID4ID4_New():
    return itkSpeckleNoiseImageFilterID4ID4.New()

class itkSpeckleNoiseImageFilterID4ID4(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterID4ID4):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterID4ID4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterID4ID4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterID4ID4

        Create a new object of the class itkSpeckleNoiseImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterID4ID4 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterID4ID4_swigregister(itkSpeckleNoiseImageFilterID4ID4)

def itkSpeckleNoiseImageFilterIF2IF2_New():
    return itkSpeckleNoiseImageFilterIF2IF2.New()

class itkSpeckleNoiseImageFilterIF2IF2(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF2IF2):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIF2IF2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIF2IF2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIF2IF2

        Create a new object of the class itkSpeckleNoiseImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIF2IF2 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF2IF2_swigregister(itkSpeckleNoiseImageFilterIF2IF2)

def itkSpeckleNoiseImageFilterIF3IF3_New():
    return itkSpeckleNoiseImageFilterIF3IF3.New()

class itkSpeckleNoiseImageFilterIF3IF3(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF3IF3):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIF3IF3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIF3IF3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIF3IF3

        Create a new object of the class itkSpeckleNoiseImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIF3IF3 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF3IF3_swigregister(itkSpeckleNoiseImageFilterIF3IF3)

def itkSpeckleNoiseImageFilterIF4IF4_New():
    return itkSpeckleNoiseImageFilterIF4IF4.New()

class itkSpeckleNoiseImageFilterIF4IF4(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIF4IF4):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIF4IF4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIF4IF4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIF4IF4

        Create a new object of the class itkSpeckleNoiseImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIF4IF4 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIF4IF4_swigregister(itkSpeckleNoiseImageFilterIF4IF4)

def itkSpeckleNoiseImageFilterISS2ISS2_New():
    return itkSpeckleNoiseImageFilterISS2ISS2.New()

class itkSpeckleNoiseImageFilterISS2ISS2(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS2ISS2):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterISS2ISS2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterISS2ISS2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterISS2ISS2

        Create a new object of the class itkSpeckleNoiseImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterISS2ISS2 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS2ISS2_swigregister(itkSpeckleNoiseImageFilterISS2ISS2)

def itkSpeckleNoiseImageFilterISS3ISS3_New():
    return itkSpeckleNoiseImageFilterISS3ISS3.New()

class itkSpeckleNoiseImageFilterISS3ISS3(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS3ISS3):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterISS3ISS3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterISS3ISS3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterISS3ISS3

        Create a new object of the class itkSpeckleNoiseImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterISS3ISS3 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS3ISS3_swigregister(itkSpeckleNoiseImageFilterISS3ISS3)

def itkSpeckleNoiseImageFilterISS4ISS4_New():
    return itkSpeckleNoiseImageFilterISS4ISS4.New()

class itkSpeckleNoiseImageFilterISS4ISS4(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterISS4ISS4):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterISS4ISS4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterISS4ISS4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterISS4ISS4

        Create a new object of the class itkSpeckleNoiseImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterISS4ISS4 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterISS4ISS4_swigregister(itkSpeckleNoiseImageFilterISS4ISS4)

def itkSpeckleNoiseImageFilterIUC2IUC2_New():
    return itkSpeckleNoiseImageFilterIUC2IUC2.New()

class itkSpeckleNoiseImageFilterIUC2IUC2(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC2IUC2):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUC2IUC2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUC2IUC2

        Create a new object of the class itkSpeckleNoiseImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUC2IUC2 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC2IUC2_swigregister(itkSpeckleNoiseImageFilterIUC2IUC2)

def itkSpeckleNoiseImageFilterIUC3IUC3_New():
    return itkSpeckleNoiseImageFilterIUC3IUC3.New()

class itkSpeckleNoiseImageFilterIUC3IUC3(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC3IUC3):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUC3IUC3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUC3IUC3

        Create a new object of the class itkSpeckleNoiseImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUC3IUC3 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC3IUC3_swigregister(itkSpeckleNoiseImageFilterIUC3IUC3)

def itkSpeckleNoiseImageFilterIUC4IUC4_New():
    return itkSpeckleNoiseImageFilterIUC4IUC4.New()

class itkSpeckleNoiseImageFilterIUC4IUC4(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUC4IUC4):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUC4IUC4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUC4IUC4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUC4IUC4

        Create a new object of the class itkSpeckleNoiseImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUC4IUC4 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUC4IUC4_swigregister(itkSpeckleNoiseImageFilterIUC4IUC4)

def itkSpeckleNoiseImageFilterIUS2IUS2_New():
    return itkSpeckleNoiseImageFilterIUS2IUS2.New()

class itkSpeckleNoiseImageFilterIUS2IUS2(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS2IUS2):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUS2IUS2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUS2IUS2_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUS2IUS2

        Create a new object of the class itkSpeckleNoiseImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUS2IUS2 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS2IUS2_swigregister(itkSpeckleNoiseImageFilterIUS2IUS2)

def itkSpeckleNoiseImageFilterIUS3IUS3_New():
    return itkSpeckleNoiseImageFilterIUS3IUS3.New()

class itkSpeckleNoiseImageFilterIUS3IUS3(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS3IUS3):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUS3IUS3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUS3IUS3_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUS3IUS3

        Create a new object of the class itkSpeckleNoiseImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUS3IUS3 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS3IUS3_swigregister(itkSpeckleNoiseImageFilterIUS3IUS3)

def itkSpeckleNoiseImageFilterIUS4IUS4_New():
    return itkSpeckleNoiseImageFilterIUS4IUS4.New()

class itkSpeckleNoiseImageFilterIUS4IUS4(itk.itkNoiseBaseImageFilterPython.itkNoiseBaseImageFilterIUS4IUS4):
    r"""Proxy of C++ itkSpeckleNoiseImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpeckleNoiseImageFilterIUS4IUS4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpeckleNoiseImageFilterIUS4IUS4_Pointer"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_Clone(self)

    def GetStandardDeviation(self):
        r"""GetStandardDeviation(self) -> double"""
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_GetStandardDeviation(self)

    def SetStandardDeviation(self, _arg):
        r"""
        SetStandardDeviation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_SetStandardDeviation(self, _arg)
    InputConvertibleToOutputCheck = _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkSpeckleNoiseImageFilterPython.delete_itkSpeckleNoiseImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpeckleNoiseImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpeckleNoiseImageFilterIUS4IUS4

        Create a new object of the class itkSpeckleNoiseImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpeckleNoiseImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpeckleNoiseImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpeckleNoiseImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpeckleNoiseImageFilterIUS4IUS4 in _itkSpeckleNoiseImageFilterPython:
_itkSpeckleNoiseImageFilterPython.itkSpeckleNoiseImageFilterIUS4IUS4_swigregister(itkSpeckleNoiseImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def speckle_noise_image_filter(*args: itkt.ImageLike,  standard_deviation: float=..., seed: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SpeckleNoiseImageFilter"""
    import itk

    kwarg_typehints = { 'standard_deviation':standard_deviation,'seed':seed }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SpeckleNoiseImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def speckle_noise_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageNoise.SpeckleNoiseImageFilter
    speckle_noise_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    speckle_noise_image_filter.__doc__ = filter_object.__doc__



