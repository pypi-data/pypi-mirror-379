# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHConcaveImageFilterPython
else:
    import _itkHConcaveImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkHConcaveImageFilterID2ID2_New():
    return itkHConcaveImageFilterID2ID2.New()

class itkHConcaveImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkHConcaveImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterID2ID2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterID2ID2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> double"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterID2ID2

        Create a new object of the class itkHConcaveImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterID2ID2 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterID2ID2_swigregister(itkHConcaveImageFilterID2ID2)

def itkHConcaveImageFilterID3ID3_New():
    return itkHConcaveImageFilterID3ID3.New()

class itkHConcaveImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkHConcaveImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterID3ID3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterID3ID3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> double"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterID3ID3

        Create a new object of the class itkHConcaveImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterID3ID3 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterID3ID3_swigregister(itkHConcaveImageFilterID3ID3)

def itkHConcaveImageFilterID4ID4_New():
    return itkHConcaveImageFilterID4ID4.New()

class itkHConcaveImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkHConcaveImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterID4ID4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterID4ID4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> double"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterID4ID4

        Create a new object of the class itkHConcaveImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterID4ID4 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterID4ID4_swigregister(itkHConcaveImageFilterID4ID4)

def itkHConcaveImageFilterIF2IF2_New():
    return itkHConcaveImageFilterIF2IF2.New()

class itkHConcaveImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkHConcaveImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIF2IF2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIF2IF2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> float"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIF2IF2

        Create a new object of the class itkHConcaveImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIF2IF2 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIF2IF2_swigregister(itkHConcaveImageFilterIF2IF2)

def itkHConcaveImageFilterIF3IF3_New():
    return itkHConcaveImageFilterIF3IF3.New()

class itkHConcaveImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkHConcaveImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIF3IF3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIF3IF3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> float"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIF3IF3

        Create a new object of the class itkHConcaveImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIF3IF3 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIF3IF3_swigregister(itkHConcaveImageFilterIF3IF3)

def itkHConcaveImageFilterIF4IF4_New():
    return itkHConcaveImageFilterIF4IF4.New()

class itkHConcaveImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkHConcaveImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIF4IF4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIF4IF4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> float"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIF4IF4

        Create a new object of the class itkHConcaveImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIF4IF4 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIF4IF4_swigregister(itkHConcaveImageFilterIF4IF4)

def itkHConcaveImageFilterISS2ISS2_New():
    return itkHConcaveImageFilterISS2ISS2.New()

class itkHConcaveImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkHConcaveImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterISS2ISS2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterISS2ISS2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterISS2ISS2

        Create a new object of the class itkHConcaveImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterISS2ISS2 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterISS2ISS2_swigregister(itkHConcaveImageFilterISS2ISS2)

def itkHConcaveImageFilterISS3ISS3_New():
    return itkHConcaveImageFilterISS3ISS3.New()

class itkHConcaveImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkHConcaveImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterISS3ISS3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterISS3ISS3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterISS3ISS3

        Create a new object of the class itkHConcaveImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterISS3ISS3 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterISS3ISS3_swigregister(itkHConcaveImageFilterISS3ISS3)

def itkHConcaveImageFilterISS4ISS4_New():
    return itkHConcaveImageFilterISS4ISS4.New()

class itkHConcaveImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkHConcaveImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterISS4ISS4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterISS4ISS4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterISS4ISS4

        Create a new object of the class itkHConcaveImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterISS4ISS4 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterISS4ISS4_swigregister(itkHConcaveImageFilterISS4ISS4)

def itkHConcaveImageFilterIUC2IUC2_New():
    return itkHConcaveImageFilterIUC2IUC2.New()

class itkHConcaveImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkHConcaveImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUC2IUC2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUC2IUC2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned char"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUC2IUC2

        Create a new object of the class itkHConcaveImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUC2IUC2 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC2IUC2_swigregister(itkHConcaveImageFilterIUC2IUC2)

def itkHConcaveImageFilterIUC3IUC3_New():
    return itkHConcaveImageFilterIUC3IUC3.New()

class itkHConcaveImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkHConcaveImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUC3IUC3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUC3IUC3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned char"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUC3IUC3

        Create a new object of the class itkHConcaveImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUC3IUC3 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC3IUC3_swigregister(itkHConcaveImageFilterIUC3IUC3)

def itkHConcaveImageFilterIUC4IUC4_New():
    return itkHConcaveImageFilterIUC4IUC4.New()

class itkHConcaveImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkHConcaveImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUC4IUC4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUC4IUC4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned char"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUC4IUC4

        Create a new object of the class itkHConcaveImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUC4IUC4 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUC4IUC4_swigregister(itkHConcaveImageFilterIUC4IUC4)

def itkHConcaveImageFilterIUS2IUS2_New():
    return itkHConcaveImageFilterIUS2IUS2.New()

class itkHConcaveImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkHConcaveImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUS2IUS2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUS2IUS2_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUS2IUS2

        Create a new object of the class itkHConcaveImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUS2IUS2 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS2IUS2_swigregister(itkHConcaveImageFilterIUS2IUS2)

def itkHConcaveImageFilterIUS3IUS3_New():
    return itkHConcaveImageFilterIUS3IUS3.New()

class itkHConcaveImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkHConcaveImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUS3IUS3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUS3IUS3_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUS3IUS3

        Create a new object of the class itkHConcaveImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUS3IUS3 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS3IUS3_swigregister(itkHConcaveImageFilterIUS3IUS3)

def itkHConcaveImageFilterIUS4IUS4_New():
    return itkHConcaveImageFilterIUS4IUS4.New()

class itkHConcaveImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkHConcaveImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHConcaveImageFilterIUS4IUS4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHConcaveImageFilterIUS4IUS4_Pointer"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_Clone(self)

    def SetHeight(self, _arg):
        r"""
        SetHeight(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_SetHeight(self, _arg)

    def GetHeight(self):
        r"""GetHeight(self) -> unsigned short"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_GetHeight(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkHConcaveImageFilterPython.delete_itkHConcaveImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHConcaveImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHConcaveImageFilterIUS4IUS4

        Create a new object of the class itkHConcaveImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHConcaveImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHConcaveImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHConcaveImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHConcaveImageFilterIUS4IUS4 in _itkHConcaveImageFilterPython:
_itkHConcaveImageFilterPython.itkHConcaveImageFilterIUS4IUS4_swigregister(itkHConcaveImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def h_concave_image_filter(*args: itkt.ImageLike,  height: float=..., fully_connected: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for HConcaveImageFilter"""
    import itk

    kwarg_typehints = { 'height':height,'fully_connected':fully_connected }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.HConcaveImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def h_concave_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.HConcaveImageFilter
    h_concave_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    h_concave_image_filter.__doc__ = filter_object.__doc__



