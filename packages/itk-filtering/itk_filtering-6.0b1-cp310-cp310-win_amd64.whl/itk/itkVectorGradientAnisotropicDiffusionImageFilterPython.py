# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKAnisotropicSmoothingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorGradientAnisotropicDiffusionImageFilterPython
else:
    import _itkVectorGradientAnisotropicDiffusionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkAnisotropicDiffusionImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF22ICVF22)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF23ICVF23)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF24ICVF24)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF32ICVF32)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF33ICVF33)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF34ICVF34)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF42ICVF42)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF43ICVF43)

def itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44.New()

class itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterICVF44ICVF44)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF22IVF22)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF23IVF23)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF24IVF24)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF32IVF32)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF33IVF33)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF34IVF34)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF42IVF42)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF43IVF43)

def itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_New():
    return itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44.New()

class itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44):
    r"""Proxy of C++ itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_Pointer"""
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientAnisotropicDiffusionImageFilterPython.delete_itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44

        Create a new object of the class itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44 in _itkVectorGradientAnisotropicDiffusionImageFilterPython:
_itkVectorGradientAnisotropicDiffusionImageFilterPython.itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44_swigregister(itkVectorGradientAnisotropicDiffusionImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def vector_gradient_anisotropic_diffusion_image_filter(*args: itkt.ImageLike,  time_step: float=..., conductance_parameter: float=..., conductance_scaling_update_interval: int=..., conductance_scaling_parameter: float=..., fixed_average_gradient_magnitude: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VectorGradientAnisotropicDiffusionImageFilter"""
    import itk

    kwarg_typehints = { 'time_step':time_step,'conductance_parameter':conductance_parameter,'conductance_scaling_update_interval':conductance_scaling_update_interval,'conductance_scaling_parameter':conductance_scaling_parameter,'fixed_average_gradient_magnitude':fixed_average_gradient_magnitude,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VectorGradientAnisotropicDiffusionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def vector_gradient_anisotropic_diffusion_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKAnisotropicSmoothing.VectorGradientAnisotropicDiffusionImageFilter
    vector_gradient_anisotropic_diffusion_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vector_gradient_anisotropic_diffusion_image_filter.__doc__ = filter_object.__doc__



