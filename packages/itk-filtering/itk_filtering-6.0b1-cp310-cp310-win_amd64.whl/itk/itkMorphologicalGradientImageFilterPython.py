# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMorphologicalGradientImageFilterPython
else:
    import _itkMorphologicalGradientImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFlatStructuringElementPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkBoxImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkNeighborhoodPython
import itk.itkMathematicalMorphologyEnumsPython

def itkMorphologicalGradientImageFilterID2ID2SE2_New():
    return itkMorphologicalGradientImageFilterID2ID2SE2.New()

class itkMorphologicalGradientImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterID2ID2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterID2ID2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID2ID2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterID2ID2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID2ID2SE2_swigregister(itkMorphologicalGradientImageFilterID2ID2SE2)

def itkMorphologicalGradientImageFilterID3ID3SE3_New():
    return itkMorphologicalGradientImageFilterID3ID3SE3.New()

class itkMorphologicalGradientImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterID3ID3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterID3ID3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID3ID3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterID3ID3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID3ID3SE3_swigregister(itkMorphologicalGradientImageFilterID3ID3SE3)

def itkMorphologicalGradientImageFilterID4ID4SE4_New():
    return itkMorphologicalGradientImageFilterID4ID4SE4.New()

class itkMorphologicalGradientImageFilterID4ID4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterID4ID4SE4):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterID4ID4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterID4ID4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterID4ID4SE4

        Create a new object of the class itkMorphologicalGradientImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterID4ID4SE4 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterID4ID4SE4_swigregister(itkMorphologicalGradientImageFilterID4ID4SE4)

def itkMorphologicalGradientImageFilterIF2IF2SE2_New():
    return itkMorphologicalGradientImageFilterIF2IF2SE2.New()

class itkMorphologicalGradientImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIF2IF2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF2IF2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIF2IF2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF2IF2SE2_swigregister(itkMorphologicalGradientImageFilterIF2IF2SE2)

def itkMorphologicalGradientImageFilterIF3IF3SE3_New():
    return itkMorphologicalGradientImageFilterIF3IF3SE3.New()

class itkMorphologicalGradientImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIF3IF3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF3IF3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIF3IF3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF3IF3SE3_swigregister(itkMorphologicalGradientImageFilterIF3IF3SE3)

def itkMorphologicalGradientImageFilterIF4IF4SE4_New():
    return itkMorphologicalGradientImageFilterIF4IF4SE4.New()

class itkMorphologicalGradientImageFilterIF4IF4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF4IF4SE4):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIF4IF4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIF4IF4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIF4IF4SE4

        Create a new object of the class itkMorphologicalGradientImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIF4IF4SE4 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIF4IF4SE4_swigregister(itkMorphologicalGradientImageFilterIF4IF4SE4)

def itkMorphologicalGradientImageFilterISS2ISS2SE2_New():
    return itkMorphologicalGradientImageFilterISS2ISS2SE2.New()

class itkMorphologicalGradientImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterISS2ISS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS2ISS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterISS2ISS2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS2ISS2SE2_swigregister(itkMorphologicalGradientImageFilterISS2ISS2SE2)

def itkMorphologicalGradientImageFilterISS3ISS3SE3_New():
    return itkMorphologicalGradientImageFilterISS3ISS3SE3.New()

class itkMorphologicalGradientImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterISS3ISS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS3ISS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterISS3ISS3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS3ISS3SE3_swigregister(itkMorphologicalGradientImageFilterISS3ISS3SE3)

def itkMorphologicalGradientImageFilterISS4ISS4SE4_New():
    return itkMorphologicalGradientImageFilterISS4ISS4SE4.New()

class itkMorphologicalGradientImageFilterISS4ISS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS4ISS4SE4):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterISS4ISS4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterISS4ISS4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterISS4ISS4SE4

        Create a new object of the class itkMorphologicalGradientImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterISS4ISS4SE4 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterISS4ISS4SE4_swigregister(itkMorphologicalGradientImageFilterISS4ISS4SE4)

def itkMorphologicalGradientImageFilterIUC2IUC2SE2_New():
    return itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()

class itkMorphologicalGradientImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUC2IUC2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC2IUC2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUC2IUC2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC2IUC2SE2_swigregister(itkMorphologicalGradientImageFilterIUC2IUC2SE2)

def itkMorphologicalGradientImageFilterIUC3IUC3SE3_New():
    return itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()

class itkMorphologicalGradientImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUC3IUC3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC3IUC3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUC3IUC3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC3IUC3SE3_swigregister(itkMorphologicalGradientImageFilterIUC3IUC3SE3)

def itkMorphologicalGradientImageFilterIUC4IUC4SE4_New():
    return itkMorphologicalGradientImageFilterIUC4IUC4SE4.New()

class itkMorphologicalGradientImageFilterIUC4IUC4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC4IUC4SE4):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUC4IUC4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUC4IUC4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUC4IUC4SE4

        Create a new object of the class itkMorphologicalGradientImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUC4IUC4SE4 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUC4IUC4SE4_swigregister(itkMorphologicalGradientImageFilterIUC4IUC4SE4)

def itkMorphologicalGradientImageFilterIUS2IUS2SE2_New():
    return itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()

class itkMorphologicalGradientImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUS2IUS2SE2_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS2IUS2SE2

        Create a new object of the class itkMorphologicalGradientImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUS2IUS2SE2 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS2IUS2SE2_swigregister(itkMorphologicalGradientImageFilterIUS2IUS2SE2)

def itkMorphologicalGradientImageFilterIUS3IUS3SE3_New():
    return itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()

class itkMorphologicalGradientImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUS3IUS3SE3_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS3IUS3SE3

        Create a new object of the class itkMorphologicalGradientImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUS3IUS3SE3 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS3IUS3SE3_swigregister(itkMorphologicalGradientImageFilterIUS3IUS3SE3)

def itkMorphologicalGradientImageFilterIUS4IUS4SE4_New():
    return itkMorphologicalGradientImageFilterIUS4IUS4SE4.New()

class itkMorphologicalGradientImageFilterIUS4IUS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS4IUS4SE4):
    r"""Proxy of C++ itkMorphologicalGradientImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMorphologicalGradientImageFilterIUS4IUS4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMorphologicalGradientImageFilterIUS4IUS4SE4_Pointer"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4_Clone(self)

    def SetAlgorithm(self, algo):
        r"""
        SetAlgorithm(self, algo)

        Parameters
        ----------
        algo: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4_SetAlgorithm(self, algo)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4_GetAlgorithm(self)
    __swig_destroy__ = _itkMorphologicalGradientImageFilterPython.delete_itkMorphologicalGradientImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMorphologicalGradientImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMorphologicalGradientImageFilterIUS4IUS4SE4

        Create a new object of the class itkMorphologicalGradientImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMorphologicalGradientImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMorphologicalGradientImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMorphologicalGradientImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMorphologicalGradientImageFilterIUS4IUS4SE4 in _itkMorphologicalGradientImageFilterPython:
_itkMorphologicalGradientImageFilterPython.itkMorphologicalGradientImageFilterIUS4IUS4SE4_swigregister(itkMorphologicalGradientImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def morphological_gradient_image_filter(*args: itkt.ImageLike,  kernel: Union[itkt.FlatStructuringElement, itkt.FlatStructuringElement]=..., algorithm=..., radius: Union[Sequence[int], int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MorphologicalGradientImageFilter"""
    import itk

    kwarg_typehints = { 'kernel':kernel,'algorithm':algorithm,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MorphologicalGradientImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def morphological_gradient_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.MorphologicalGradientImageFilter
    morphological_gradient_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    morphological_gradient_image_filter.__doc__ = filter_object.__doc__



