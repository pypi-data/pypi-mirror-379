# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelMapFilterPython
else:
    import _itkLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKLabelMapBasePython
import itk.itkStatisticsLabelObjectPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkImageToImageFilterCommonPython

def itkLabelMapFilterLM2ID2_New():
    return itkLabelMapFilterLM2ID2.New()

class itkLabelMapFilterLM2ID2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2ID2):
    r"""Proxy of C++ itkLabelMapFilterLM2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2ID2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2ID2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ID2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ID2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2ID2

        Create a new object of the class itkLabelMapFilterLM2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2ID2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2ID2_swigregister(itkLabelMapFilterLM2ID2)

def itkLabelMapFilterLM2IF2_New():
    return itkLabelMapFilterLM2IF2.New()

class itkLabelMapFilterLM2IF2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2IF2):
    r"""Proxy of C++ itkLabelMapFilterLM2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2IF2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2IF2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IF2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IF2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2IF2

        Create a new object of the class itkLabelMapFilterLM2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2IF2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2IF2_swigregister(itkLabelMapFilterLM2IF2)

def itkLabelMapFilterLM2IRGBUC2_New():
    return itkLabelMapFilterLM2IRGBUC2.New()

class itkLabelMapFilterLM2IRGBUC2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2IRGBUC2):
    r"""Proxy of C++ itkLabelMapFilterLM2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2IRGBUC2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2IRGBUC2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2IRGBUC2

        Create a new object of the class itkLabelMapFilterLM2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2IRGBUC2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2_swigregister(itkLabelMapFilterLM2IRGBUC2)

def itkLabelMapFilterLM2ISS2_New():
    return itkLabelMapFilterLM2ISS2.New()

class itkLabelMapFilterLM2ISS2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2ISS2):
    r"""Proxy of C++ itkLabelMapFilterLM2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2ISS2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2ISS2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2ISS2

        Create a new object of the class itkLabelMapFilterLM2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2ISS2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2_swigregister(itkLabelMapFilterLM2ISS2)

def itkLabelMapFilterLM2IUC2_New():
    return itkLabelMapFilterLM2IUC2.New()

class itkLabelMapFilterLM2IUC2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2IUC2):
    r"""Proxy of C++ itkLabelMapFilterLM2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2IUC2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2IUC2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2IUC2

        Create a new object of the class itkLabelMapFilterLM2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2IUC2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2_swigregister(itkLabelMapFilterLM2IUC2)

def itkLabelMapFilterLM2IUS2_New():
    return itkLabelMapFilterLM2IUS2.New()

class itkLabelMapFilterLM2IUS2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2IUS2):
    r"""Proxy of C++ itkLabelMapFilterLM2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2IUS2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2IUS2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2IUS2

        Create a new object of the class itkLabelMapFilterLM2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2IUS2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2_swigregister(itkLabelMapFilterLM2IUS2)

def itkLabelMapFilterLM2LM2_New():
    return itkLabelMapFilterLM2LM2.New()

class itkLabelMapFilterLM2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterLM2LM2):
    r"""Proxy of C++ itkLabelMapFilterLM2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM2LM2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM2LM2_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2LM2_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2LM2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM2LM2

        Create a new object of the class itkLabelMapFilterLM2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM2LM2 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM2LM2_swigregister(itkLabelMapFilterLM2LM2)

def itkLabelMapFilterLM3ID3_New():
    return itkLabelMapFilterLM3ID3.New()

class itkLabelMapFilterLM3ID3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3ID3):
    r"""Proxy of C++ itkLabelMapFilterLM3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3ID3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3ID3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ID3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ID3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3ID3

        Create a new object of the class itkLabelMapFilterLM3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3ID3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3ID3_swigregister(itkLabelMapFilterLM3ID3)

def itkLabelMapFilterLM3IF3_New():
    return itkLabelMapFilterLM3IF3.New()

class itkLabelMapFilterLM3IF3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3IF3):
    r"""Proxy of C++ itkLabelMapFilterLM3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3IF3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3IF3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IF3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IF3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3IF3

        Create a new object of the class itkLabelMapFilterLM3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3IF3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3IF3_swigregister(itkLabelMapFilterLM3IF3)

def itkLabelMapFilterLM3IRGBUC3_New():
    return itkLabelMapFilterLM3IRGBUC3.New()

class itkLabelMapFilterLM3IRGBUC3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3IRGBUC3):
    r"""Proxy of C++ itkLabelMapFilterLM3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3IRGBUC3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3IRGBUC3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3IRGBUC3

        Create a new object of the class itkLabelMapFilterLM3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3IRGBUC3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3_swigregister(itkLabelMapFilterLM3IRGBUC3)

def itkLabelMapFilterLM3ISS3_New():
    return itkLabelMapFilterLM3ISS3.New()

class itkLabelMapFilterLM3ISS3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3ISS3):
    r"""Proxy of C++ itkLabelMapFilterLM3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3ISS3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3ISS3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3ISS3

        Create a new object of the class itkLabelMapFilterLM3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3ISS3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3_swigregister(itkLabelMapFilterLM3ISS3)

def itkLabelMapFilterLM3IUC3_New():
    return itkLabelMapFilterLM3IUC3.New()

class itkLabelMapFilterLM3IUC3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3IUC3):
    r"""Proxy of C++ itkLabelMapFilterLM3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3IUC3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3IUC3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3IUC3

        Create a new object of the class itkLabelMapFilterLM3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3IUC3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3_swigregister(itkLabelMapFilterLM3IUC3)

def itkLabelMapFilterLM3IUS3_New():
    return itkLabelMapFilterLM3IUS3.New()

class itkLabelMapFilterLM3IUS3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3IUS3):
    r"""Proxy of C++ itkLabelMapFilterLM3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3IUS3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3IUS3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3IUS3

        Create a new object of the class itkLabelMapFilterLM3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3IUS3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3_swigregister(itkLabelMapFilterLM3IUS3)

def itkLabelMapFilterLM3LM3_New():
    return itkLabelMapFilterLM3LM3.New()

class itkLabelMapFilterLM3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterLM3LM3):
    r"""Proxy of C++ itkLabelMapFilterLM3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM3LM3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM3LM3_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3LM3_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3LM3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM3LM3

        Create a new object of the class itkLabelMapFilterLM3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM3LM3 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM3LM3_swigregister(itkLabelMapFilterLM3LM3)

def itkLabelMapFilterLM4ID4_New():
    return itkLabelMapFilterLM4ID4.New()

class itkLabelMapFilterLM4ID4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4ID4):
    r"""Proxy of C++ itkLabelMapFilterLM4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4ID4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4ID4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ID4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ID4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4ID4

        Create a new object of the class itkLabelMapFilterLM4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4ID4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4ID4_swigregister(itkLabelMapFilterLM4ID4)

def itkLabelMapFilterLM4IF4_New():
    return itkLabelMapFilterLM4IF4.New()

class itkLabelMapFilterLM4IF4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4IF4):
    r"""Proxy of C++ itkLabelMapFilterLM4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4IF4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4IF4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IF4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IF4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4IF4

        Create a new object of the class itkLabelMapFilterLM4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4IF4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4IF4_swigregister(itkLabelMapFilterLM4IF4)

def itkLabelMapFilterLM4IRGBUC4_New():
    return itkLabelMapFilterLM4IRGBUC4.New()

class itkLabelMapFilterLM4IRGBUC4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4IRGBUC4):
    r"""Proxy of C++ itkLabelMapFilterLM4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4IRGBUC4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4IRGBUC4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4IRGBUC4

        Create a new object of the class itkLabelMapFilterLM4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4IRGBUC4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4_swigregister(itkLabelMapFilterLM4IRGBUC4)

def itkLabelMapFilterLM4ISS4_New():
    return itkLabelMapFilterLM4ISS4.New()

class itkLabelMapFilterLM4ISS4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4ISS4):
    r"""Proxy of C++ itkLabelMapFilterLM4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4ISS4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4ISS4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4ISS4

        Create a new object of the class itkLabelMapFilterLM4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4ISS4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4_swigregister(itkLabelMapFilterLM4ISS4)

def itkLabelMapFilterLM4IUC4_New():
    return itkLabelMapFilterLM4IUC4.New()

class itkLabelMapFilterLM4IUC4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4IUC4):
    r"""Proxy of C++ itkLabelMapFilterLM4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4IUC4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4IUC4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4IUC4

        Create a new object of the class itkLabelMapFilterLM4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4IUC4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4_swigregister(itkLabelMapFilterLM4IUC4)

def itkLabelMapFilterLM4IUS4_New():
    return itkLabelMapFilterLM4IUS4.New()

class itkLabelMapFilterLM4IUS4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4IUS4):
    r"""Proxy of C++ itkLabelMapFilterLM4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4IUS4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4IUS4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4IUS4

        Create a new object of the class itkLabelMapFilterLM4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4IUS4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4_swigregister(itkLabelMapFilterLM4IUS4)

def itkLabelMapFilterLM4LM4_New():
    return itkLabelMapFilterLM4LM4.New()

class itkLabelMapFilterLM4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterLM4LM4):
    r"""Proxy of C++ itkLabelMapFilterLM4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapFilterLM4LM4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapFilterLM4LM4_Pointer"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4LM4_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4LM4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkLabelMapFilterPython.delete_itkLabelMapFilterLM4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapFilterLM4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapFilterPython.itkLabelMapFilterLM4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapFilterLM4LM4

        Create a new object of the class itkLabelMapFilterLM4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapFilterLM4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapFilterLM4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapFilterLM4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapFilterLM4LM4 in _itkLabelMapFilterPython:
_itkLabelMapFilterPython.itkLabelMapFilterLM4LM4_swigregister(itkLabelMapFilterLM4LM4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_map_filter(*args: itkt.ImageLike, **kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelMapFilter"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.LabelMapFilter
    label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_map_filter.__doc__ = filter_object.__doc__



