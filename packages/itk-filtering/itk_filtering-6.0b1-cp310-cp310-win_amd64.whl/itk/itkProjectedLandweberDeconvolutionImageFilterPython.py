# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDeconvolutionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkProjectedLandweberDeconvolutionImageFilterPython
else:
    import _itkProjectedLandweberDeconvolutionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkLandweberDeconvolutionImageFilterPython
import itk.itkIterativeDeconvolutionImageFilterPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkFFTConvolutionImageFilterPython
import itk.itkConvolutionImageFilterBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageBoundaryConditionPython

def itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterID2ID2):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterID3ID3):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterID4ID4):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF2IF2):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF3IF3):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIF4IF4):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS2ISS2):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS3ISS3):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterISS4ISS4):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC2IUC2):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC3IUC3):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUC4IUC4):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS2IUS2):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS3IUS3):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass(itk.itkLandweberDeconvolutionImageFilterPython.itkLandweberDeconvolutionImageFilterIUS4IUS4):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass)

def itkProjectedLandweberDeconvolutionImageFilterID2ID2_New():
    return itkProjectedLandweberDeconvolutionImageFilterID2ID2.New()

class itkProjectedLandweberDeconvolutionImageFilterID2ID2(itkProjectedLandweberDeconvolutionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID2ID2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID2ID2

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID2ID2 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID2ID2_swigregister(itkProjectedLandweberDeconvolutionImageFilterID2ID2)

def itkProjectedLandweberDeconvolutionImageFilterID3ID3_New():
    return itkProjectedLandweberDeconvolutionImageFilterID3ID3.New()

class itkProjectedLandweberDeconvolutionImageFilterID3ID3(itkProjectedLandweberDeconvolutionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID3ID3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID3ID3

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID3ID3 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID3ID3_swigregister(itkProjectedLandweberDeconvolutionImageFilterID3ID3)

def itkProjectedLandweberDeconvolutionImageFilterID4ID4_New():
    return itkProjectedLandweberDeconvolutionImageFilterID4ID4.New()

class itkProjectedLandweberDeconvolutionImageFilterID4ID4(itkProjectedLandweberDeconvolutionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterID4ID4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterID4ID4

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterID4ID4 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterID4ID4_swigregister(itkProjectedLandweberDeconvolutionImageFilterID4ID4)

def itkProjectedLandweberDeconvolutionImageFilterIF2IF2_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF2IF2.New()

class itkProjectedLandweberDeconvolutionImageFilterIF2IF2(itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF2IF2

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF2IF2 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF2IF2_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF2IF2)

def itkProjectedLandweberDeconvolutionImageFilterIF3IF3_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF3IF3.New()

class itkProjectedLandweberDeconvolutionImageFilterIF3IF3(itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF3IF3

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF3IF3 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF3IF3_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF3IF3)

def itkProjectedLandweberDeconvolutionImageFilterIF4IF4_New():
    return itkProjectedLandweberDeconvolutionImageFilterIF4IF4.New()

class itkProjectedLandweberDeconvolutionImageFilterIF4IF4(itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIF4IF4

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIF4IF4 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIF4IF4_swigregister(itkProjectedLandweberDeconvolutionImageFilterIF4IF4)

def itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS2ISS2.New()

class itkProjectedLandweberDeconvolutionImageFilterISS2ISS2(itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS2ISS2

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS2ISS2 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS2ISS2_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS2ISS2)

def itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS3ISS3.New()

class itkProjectedLandweberDeconvolutionImageFilterISS3ISS3(itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS3ISS3

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS3ISS3 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS3ISS3_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS3ISS3)

def itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_New():
    return itkProjectedLandweberDeconvolutionImageFilterISS4ISS4.New()

class itkProjectedLandweberDeconvolutionImageFilterISS4ISS4(itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterISS4ISS4

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterISS4ISS4 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterISS4ISS4_swigregister(itkProjectedLandweberDeconvolutionImageFilterISS4ISS4)

def itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2(itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC2IUC2)

def itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3(itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC3IUC3)

def itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4.New()

class itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4(itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUC4IUC4)

def itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2(itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS2IUS2)

def itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3(itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS3IUS3)

def itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_New():
    return itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4.New()

class itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4(itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Pointer"""
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkProjectedLandweberDeconvolutionImageFilterPython.delete_itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4

        Create a new object of the class itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4 in _itkProjectedLandweberDeconvolutionImageFilterPython:
_itkProjectedLandweberDeconvolutionImageFilterPython.itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4_swigregister(itkProjectedLandweberDeconvolutionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projected_landweber_deconvolution_image_filter(*args: itkt.ImageLike,  alpha: float=..., number_of_iterations: int=..., stop_iteration: bool=..., size_greatest_prime_factor: int=..., boundary_condition: itkt.ImageBoundaryCondition=..., kernel_image: itkt.Image=..., normalize: bool=..., output_region_mode=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectedLandweberDeconvolutionImageFilter"""
    import itk

    kwarg_typehints = { 'alpha':alpha,'number_of_iterations':number_of_iterations,'stop_iteration':stop_iteration,'size_greatest_prime_factor':size_greatest_prime_factor,'boundary_condition':boundary_condition,'kernel_image':kernel_image,'normalize':normalize,'output_region_mode':output_region_mode }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectedLandweberDeconvolutionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projected_landweber_deconvolution_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDeconvolution.ProjectedLandweberDeconvolutionImageFilter
    projected_landweber_deconvolution_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projected_landweber_deconvolution_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def projected_iterative_deconvolution_image_filter(*args: itkt.ImageLike,  alpha: float=..., number_of_iterations: int=..., stop_iteration: bool=..., size_greatest_prime_factor: int=..., boundary_condition: itkt.ImageBoundaryCondition=..., kernel_image: itkt.Image=..., normalize: bool=..., output_region_mode=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ProjectedIterativeDeconvolutionImageFilter"""
    import itk

    kwarg_typehints = { 'alpha':alpha,'number_of_iterations':number_of_iterations,'stop_iteration':stop_iteration,'size_greatest_prime_factor':size_greatest_prime_factor,'boundary_condition':boundary_condition,'kernel_image':kernel_image,'normalize':normalize,'output_region_mode':output_region_mode }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ProjectedIterativeDeconvolutionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def projected_iterative_deconvolution_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDeconvolution.ProjectedIterativeDeconvolutionImageFilter
    projected_iterative_deconvolution_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    projected_iterative_deconvolution_image_filter.__doc__ = filter_object.__doc__



