# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkObjectByObjectLabelMapFilterPython
else:
    import _itkObjectByObjectLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkLabelMapFilterPython
import itk.ITKLabelMapBasePython
import itk.itkStatisticsLabelObjectPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkImageRegionPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkObjectByObjectLabelMapFilterLM2_New():
    return itkObjectByObjectLabelMapFilterLM2.New()

class itkObjectByObjectLabelMapFilterLM2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2LM2):
    r"""Proxy of C++ itkObjectByObjectLabelMapFilterLM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkObjectByObjectLabelMapFilterLM2_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkObjectByObjectLabelMapFilterLM2_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_Clone(self)

    def SetFilter(self, filter):
        r"""
        SetFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC2IUC2 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetFilter(self, filter)

    def GetFilter(self, *args):
        r"""
        GetFilter(self) -> itkImageToImageFilterIUC2IUC2
        GetFilter(self) -> itkImageToImageFilterIUC2IUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetFilter(self, *args)

    def SetInputFilter(self, filter):
        r"""
        SetInputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC2IUC2 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInputFilter(self, filter)

    def GetModifiableInputFilter(self):
        r"""GetModifiableInputFilter(self) -> itkImageToImageFilterIUC2IUC2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableInputFilter(self)

    def GetInputFilter(self, *args):
        r"""
        GetInputFilter(self) -> itkImageToImageFilterIUC2IUC2
        GetInputFilter(self) -> itkImageToImageFilterIUC2IUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInputFilter(self, *args)

    def SetOutputFilter(self, filter):
        r"""
        SetOutputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageSourceIUC2 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetOutputFilter(self, filter)

    def GetModifiableOutputFilter(self):
        r"""GetModifiableOutputFilter(self) -> itkImageSourceIUC2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetModifiableOutputFilter(self)

    def GetOutputFilter(self, *args):
        r"""
        GetOutputFilter(self) -> itkImageSourceIUC2
        GetOutputFilter(self) -> itkImageSourceIUC2
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetOutputFilter(self, *args)

    def SetKeepLabels(self, _arg):
        r"""
        SetKeepLabels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetKeepLabels(self, _arg)

    def GetKeepLabels(self):
        r"""GetKeepLabels(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetKeepLabels(self)

    def KeepLabelsOn(self):
        r"""KeepLabelsOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOn(self)

    def KeepLabelsOff(self):
        r"""KeepLabelsOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_KeepLabelsOff(self)

    def SetPadSize(self, _arg):
        r"""
        SetPadSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetPadSize(self, _arg)

    def GetPadSize(self):
        r"""GetPadSize(self) -> itkSize2"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetPadSize(self)

    def SetConstrainPaddingToImage(self, _arg):
        r"""
        SetConstrainPaddingToImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetConstrainPaddingToImage(self, _arg)

    def GetConstrainPaddingToImage(self):
        r"""GetConstrainPaddingToImage(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetConstrainPaddingToImage(self)

    def ConstrainPaddingToImageOn(self):
        r"""ConstrainPaddingToImageOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOn(self)

    def ConstrainPaddingToImageOff(self):
        r"""ConstrainPaddingToImageOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_ConstrainPaddingToImageOff(self)

    def SetBinaryInternalOutput(self, _arg):
        r"""
        SetBinaryInternalOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetBinaryInternalOutput(self, _arg)

    def GetBinaryInternalOutput(self):
        r"""GetBinaryInternalOutput(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetBinaryInternalOutput(self)

    def BinaryInternalOutputOn(self):
        r"""BinaryInternalOutputOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOn(self)

    def BinaryInternalOutputOff(self):
        r"""BinaryInternalOutputOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_BinaryInternalOutputOff(self)

    def SetInternalForegroundValue(self, _arg):
        r"""
        SetInternalForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_SetInternalForegroundValue(self, _arg)

    def GetInternalForegroundValue(self):
        r"""GetInternalForegroundValue(self) -> unsigned char"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetInternalForegroundValue(self)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_GetLabel(self)
    __swig_destroy__ = _itkObjectByObjectLabelMapFilterPython.delete_itkObjectByObjectLabelMapFilterLM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkObjectByObjectLabelMapFilterLM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkObjectByObjectLabelMapFilterLM2

        Create a new object of the class itkObjectByObjectLabelMapFilterLM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkObjectByObjectLabelMapFilterLM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkObjectByObjectLabelMapFilterLM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkObjectByObjectLabelMapFilterLM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkObjectByObjectLabelMapFilterLM2 in _itkObjectByObjectLabelMapFilterPython:
_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM2_swigregister(itkObjectByObjectLabelMapFilterLM2)

def itkObjectByObjectLabelMapFilterLM3_New():
    return itkObjectByObjectLabelMapFilterLM3.New()

class itkObjectByObjectLabelMapFilterLM3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3LM3):
    r"""Proxy of C++ itkObjectByObjectLabelMapFilterLM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkObjectByObjectLabelMapFilterLM3_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkObjectByObjectLabelMapFilterLM3_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_Clone(self)

    def SetFilter(self, filter):
        r"""
        SetFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC3IUC3 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetFilter(self, filter)

    def GetFilter(self, *args):
        r"""
        GetFilter(self) -> itkImageToImageFilterIUC3IUC3
        GetFilter(self) -> itkImageToImageFilterIUC3IUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetFilter(self, *args)

    def SetInputFilter(self, filter):
        r"""
        SetInputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC3IUC3 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInputFilter(self, filter)

    def GetModifiableInputFilter(self):
        r"""GetModifiableInputFilter(self) -> itkImageToImageFilterIUC3IUC3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableInputFilter(self)

    def GetInputFilter(self, *args):
        r"""
        GetInputFilter(self) -> itkImageToImageFilterIUC3IUC3
        GetInputFilter(self) -> itkImageToImageFilterIUC3IUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInputFilter(self, *args)

    def SetOutputFilter(self, filter):
        r"""
        SetOutputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageSourceIUC3 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetOutputFilter(self, filter)

    def GetModifiableOutputFilter(self):
        r"""GetModifiableOutputFilter(self) -> itkImageSourceIUC3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetModifiableOutputFilter(self)

    def GetOutputFilter(self, *args):
        r"""
        GetOutputFilter(self) -> itkImageSourceIUC3
        GetOutputFilter(self) -> itkImageSourceIUC3
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetOutputFilter(self, *args)

    def SetKeepLabels(self, _arg):
        r"""
        SetKeepLabels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetKeepLabels(self, _arg)

    def GetKeepLabels(self):
        r"""GetKeepLabels(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetKeepLabels(self)

    def KeepLabelsOn(self):
        r"""KeepLabelsOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOn(self)

    def KeepLabelsOff(self):
        r"""KeepLabelsOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_KeepLabelsOff(self)

    def SetPadSize(self, _arg):
        r"""
        SetPadSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetPadSize(self, _arg)

    def GetPadSize(self):
        r"""GetPadSize(self) -> itkSize3"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetPadSize(self)

    def SetConstrainPaddingToImage(self, _arg):
        r"""
        SetConstrainPaddingToImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetConstrainPaddingToImage(self, _arg)

    def GetConstrainPaddingToImage(self):
        r"""GetConstrainPaddingToImage(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetConstrainPaddingToImage(self)

    def ConstrainPaddingToImageOn(self):
        r"""ConstrainPaddingToImageOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOn(self)

    def ConstrainPaddingToImageOff(self):
        r"""ConstrainPaddingToImageOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_ConstrainPaddingToImageOff(self)

    def SetBinaryInternalOutput(self, _arg):
        r"""
        SetBinaryInternalOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetBinaryInternalOutput(self, _arg)

    def GetBinaryInternalOutput(self):
        r"""GetBinaryInternalOutput(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetBinaryInternalOutput(self)

    def BinaryInternalOutputOn(self):
        r"""BinaryInternalOutputOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOn(self)

    def BinaryInternalOutputOff(self):
        r"""BinaryInternalOutputOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_BinaryInternalOutputOff(self)

    def SetInternalForegroundValue(self, _arg):
        r"""
        SetInternalForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_SetInternalForegroundValue(self, _arg)

    def GetInternalForegroundValue(self):
        r"""GetInternalForegroundValue(self) -> unsigned char"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetInternalForegroundValue(self)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_GetLabel(self)
    __swig_destroy__ = _itkObjectByObjectLabelMapFilterPython.delete_itkObjectByObjectLabelMapFilterLM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkObjectByObjectLabelMapFilterLM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkObjectByObjectLabelMapFilterLM3

        Create a new object of the class itkObjectByObjectLabelMapFilterLM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkObjectByObjectLabelMapFilterLM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkObjectByObjectLabelMapFilterLM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkObjectByObjectLabelMapFilterLM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkObjectByObjectLabelMapFilterLM3 in _itkObjectByObjectLabelMapFilterPython:
_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM3_swigregister(itkObjectByObjectLabelMapFilterLM3)

def itkObjectByObjectLabelMapFilterLM4_New():
    return itkObjectByObjectLabelMapFilterLM4.New()

class itkObjectByObjectLabelMapFilterLM4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4LM4):
    r"""Proxy of C++ itkObjectByObjectLabelMapFilterLM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkObjectByObjectLabelMapFilterLM4_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkObjectByObjectLabelMapFilterLM4_Pointer"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_Clone(self)

    def SetFilter(self, filter):
        r"""
        SetFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC4IUC4 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetFilter(self, filter)

    def GetFilter(self, *args):
        r"""
        GetFilter(self) -> itkImageToImageFilterIUC4IUC4
        GetFilter(self) -> itkImageToImageFilterIUC4IUC4
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetFilter(self, *args)

    def SetInputFilter(self, filter):
        r"""
        SetInputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageToImageFilterIUC4IUC4 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetInputFilter(self, filter)

    def GetModifiableInputFilter(self):
        r"""GetModifiableInputFilter(self) -> itkImageToImageFilterIUC4IUC4"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetModifiableInputFilter(self)

    def GetInputFilter(self, *args):
        r"""
        GetInputFilter(self) -> itkImageToImageFilterIUC4IUC4
        GetInputFilter(self) -> itkImageToImageFilterIUC4IUC4
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetInputFilter(self, *args)

    def SetOutputFilter(self, filter):
        r"""
        SetOutputFilter(self, filter)

        Parameters
        ----------
        filter: itkImageSourceIUC4 *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetOutputFilter(self, filter)

    def GetModifiableOutputFilter(self):
        r"""GetModifiableOutputFilter(self) -> itkImageSourceIUC4"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetModifiableOutputFilter(self)

    def GetOutputFilter(self, *args):
        r"""
        GetOutputFilter(self) -> itkImageSourceIUC4
        GetOutputFilter(self) -> itkImageSourceIUC4
        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetOutputFilter(self, *args)

    def SetKeepLabels(self, _arg):
        r"""
        SetKeepLabels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetKeepLabels(self, _arg)

    def GetKeepLabels(self):
        r"""GetKeepLabels(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetKeepLabels(self)

    def KeepLabelsOn(self):
        r"""KeepLabelsOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_KeepLabelsOn(self)

    def KeepLabelsOff(self):
        r"""KeepLabelsOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_KeepLabelsOff(self)

    def SetPadSize(self, _arg):
        r"""
        SetPadSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetPadSize(self, _arg)

    def GetPadSize(self):
        r"""GetPadSize(self) -> itkSize4"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetPadSize(self)

    def SetConstrainPaddingToImage(self, _arg):
        r"""
        SetConstrainPaddingToImage(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetConstrainPaddingToImage(self, _arg)

    def GetConstrainPaddingToImage(self):
        r"""GetConstrainPaddingToImage(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetConstrainPaddingToImage(self)

    def ConstrainPaddingToImageOn(self):
        r"""ConstrainPaddingToImageOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_ConstrainPaddingToImageOn(self)

    def ConstrainPaddingToImageOff(self):
        r"""ConstrainPaddingToImageOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_ConstrainPaddingToImageOff(self)

    def SetBinaryInternalOutput(self, _arg):
        r"""
        SetBinaryInternalOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetBinaryInternalOutput(self, _arg)

    def GetBinaryInternalOutput(self):
        r"""GetBinaryInternalOutput(self) -> bool"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetBinaryInternalOutput(self)

    def BinaryInternalOutputOn(self):
        r"""BinaryInternalOutputOn(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_BinaryInternalOutputOn(self)

    def BinaryInternalOutputOff(self):
        r"""BinaryInternalOutputOff(self)"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_BinaryInternalOutputOff(self)

    def SetInternalForegroundValue(self, _arg):
        r"""
        SetInternalForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_SetInternalForegroundValue(self, _arg)

    def GetInternalForegroundValue(self):
        r"""GetInternalForegroundValue(self) -> unsigned char"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetInternalForegroundValue(self)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_GetLabel(self)
    __swig_destroy__ = _itkObjectByObjectLabelMapFilterPython.delete_itkObjectByObjectLabelMapFilterLM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkObjectByObjectLabelMapFilterLM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkObjectByObjectLabelMapFilterLM4

        Create a new object of the class itkObjectByObjectLabelMapFilterLM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkObjectByObjectLabelMapFilterLM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkObjectByObjectLabelMapFilterLM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkObjectByObjectLabelMapFilterLM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkObjectByObjectLabelMapFilterLM4 in _itkObjectByObjectLabelMapFilterPython:
_itkObjectByObjectLabelMapFilterPython.itkObjectByObjectLabelMapFilterLM4_swigregister(itkObjectByObjectLabelMapFilterLM4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def object_by_object_label_map_filter(*args: itkt.ImageLike,  filter=..., input_filter=..., output_filter=..., keep_labels: bool=..., pad_size: Sequence[int]=..., constrain_padding_to_image: bool=..., binary_internal_output: bool=..., internal_foreground_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ObjectByObjectLabelMapFilter"""
    import itk

    kwarg_typehints = { 'filter':filter,'input_filter':input_filter,'output_filter':output_filter,'keep_labels':keep_labels,'pad_size':pad_size,'constrain_padding_to_image':constrain_padding_to_image,'binary_internal_output':binary_internal_output,'internal_foreground_value':internal_foreground_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ObjectByObjectLabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def object_by_object_label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.ObjectByObjectLabelMapFilter
    object_by_object_label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    object_by_object_label_map_filter.__doc__ = filter_object.__doc__



