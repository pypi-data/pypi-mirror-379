# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkStatisticsLabelMapFilterPython
else:
    import _itkStatisticsLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKLabelMapBasePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkStatisticsLabelObjectPython
import itk.itkHistogramPython
import itk.itkArrayPython
import itk.itkSamplePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkArray2DPython
import itk.itkOptimizerParametersPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkShapeLabelMapFilterPython
import itk.itkInPlaceLabelMapFilterPython
import itk.itkLabelMapFilterPython

def itkStatisticsLabelMapFilterLM2ID2_New():
    return itkStatisticsLabelMapFilterLM2ID2.New()

class itkStatisticsLabelMapFilterLM2ID2(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2IUL2):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM2ID2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM2ID2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD2"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM2ID2

        Create a new object of the class itkStatisticsLabelMapFilterLM2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM2ID2 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ID2_swigregister(itkStatisticsLabelMapFilterLM2ID2)

def itkStatisticsLabelMapFilterLM2IF2_New():
    return itkStatisticsLabelMapFilterLM2IF2.New()

class itkStatisticsLabelMapFilterLM2IF2(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2IUL2):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM2IF2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM2IF2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF2"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM2IF2

        Create a new object of the class itkStatisticsLabelMapFilterLM2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM2IF2 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IF2_swigregister(itkStatisticsLabelMapFilterLM2IF2)

def itkStatisticsLabelMapFilterLM2ISS2_New():
    return itkStatisticsLabelMapFilterLM2ISS2.New()

class itkStatisticsLabelMapFilterLM2ISS2(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2IUL2):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM2ISS2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM2ISS2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS2"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM2ISS2

        Create a new object of the class itkStatisticsLabelMapFilterLM2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM2ISS2 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2ISS2_swigregister(itkStatisticsLabelMapFilterLM2ISS2)

def itkStatisticsLabelMapFilterLM2IUC2_New():
    return itkStatisticsLabelMapFilterLM2IUC2.New()

class itkStatisticsLabelMapFilterLM2IUC2(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2IUL2):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM2IUC2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM2IUC2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC2"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM2IUC2

        Create a new object of the class itkStatisticsLabelMapFilterLM2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM2IUC2 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUC2_swigregister(itkStatisticsLabelMapFilterLM2IUC2)

def itkStatisticsLabelMapFilterLM2IUS2_New():
    return itkStatisticsLabelMapFilterLM2IUS2.New()

class itkStatisticsLabelMapFilterLM2IUS2(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM2IUL2):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM2IUS2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM2IUS2_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS2"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM2IUS2

        Create a new object of the class itkStatisticsLabelMapFilterLM2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM2IUS2 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM2IUS2_swigregister(itkStatisticsLabelMapFilterLM2IUS2)

def itkStatisticsLabelMapFilterLM3ID3_New():
    return itkStatisticsLabelMapFilterLM3ID3.New()

class itkStatisticsLabelMapFilterLM3ID3(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3IUL3):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM3ID3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM3ID3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD3"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM3ID3

        Create a new object of the class itkStatisticsLabelMapFilterLM3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM3ID3 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ID3_swigregister(itkStatisticsLabelMapFilterLM3ID3)

def itkStatisticsLabelMapFilterLM3IF3_New():
    return itkStatisticsLabelMapFilterLM3IF3.New()

class itkStatisticsLabelMapFilterLM3IF3(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3IUL3):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM3IF3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM3IF3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF3"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM3IF3

        Create a new object of the class itkStatisticsLabelMapFilterLM3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM3IF3 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IF3_swigregister(itkStatisticsLabelMapFilterLM3IF3)

def itkStatisticsLabelMapFilterLM3ISS3_New():
    return itkStatisticsLabelMapFilterLM3ISS3.New()

class itkStatisticsLabelMapFilterLM3ISS3(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3IUL3):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM3ISS3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM3ISS3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS3"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM3ISS3

        Create a new object of the class itkStatisticsLabelMapFilterLM3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM3ISS3 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3ISS3_swigregister(itkStatisticsLabelMapFilterLM3ISS3)

def itkStatisticsLabelMapFilterLM3IUC3_New():
    return itkStatisticsLabelMapFilterLM3IUC3.New()

class itkStatisticsLabelMapFilterLM3IUC3(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3IUL3):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM3IUC3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM3IUC3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC3"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM3IUC3

        Create a new object of the class itkStatisticsLabelMapFilterLM3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM3IUC3 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUC3_swigregister(itkStatisticsLabelMapFilterLM3IUC3)

def itkStatisticsLabelMapFilterLM3IUS3_New():
    return itkStatisticsLabelMapFilterLM3IUS3.New()

class itkStatisticsLabelMapFilterLM3IUS3(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM3IUL3):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM3IUS3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM3IUS3_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS3"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM3IUS3

        Create a new object of the class itkStatisticsLabelMapFilterLM3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM3IUS3 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM3IUS3_swigregister(itkStatisticsLabelMapFilterLM3IUS3)

def itkStatisticsLabelMapFilterLM4ID4_New():
    return itkStatisticsLabelMapFilterLM4ID4.New()

class itkStatisticsLabelMapFilterLM4ID4(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM4IUL4):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM4ID4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM4ID4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD4"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM4ID4

        Create a new object of the class itkStatisticsLabelMapFilterLM4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM4ID4 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ID4_swigregister(itkStatisticsLabelMapFilterLM4ID4)

def itkStatisticsLabelMapFilterLM4IF4_New():
    return itkStatisticsLabelMapFilterLM4IF4.New()

class itkStatisticsLabelMapFilterLM4IF4(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM4IUL4):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM4IF4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM4IF4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF4"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM4IF4

        Create a new object of the class itkStatisticsLabelMapFilterLM4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM4IF4 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IF4_swigregister(itkStatisticsLabelMapFilterLM4IF4)

def itkStatisticsLabelMapFilterLM4ISS4_New():
    return itkStatisticsLabelMapFilterLM4ISS4.New()

class itkStatisticsLabelMapFilterLM4ISS4(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM4IUL4):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM4ISS4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM4ISS4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS4"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM4ISS4

        Create a new object of the class itkStatisticsLabelMapFilterLM4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM4ISS4 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4ISS4_swigregister(itkStatisticsLabelMapFilterLM4ISS4)

def itkStatisticsLabelMapFilterLM4IUC4_New():
    return itkStatisticsLabelMapFilterLM4IUC4.New()

class itkStatisticsLabelMapFilterLM4IUC4(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM4IUL4):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM4IUC4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM4IUC4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC4"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM4IUC4

        Create a new object of the class itkStatisticsLabelMapFilterLM4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM4IUC4 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUC4_swigregister(itkStatisticsLabelMapFilterLM4IUC4)

def itkStatisticsLabelMapFilterLM4IUS4_New():
    return itkStatisticsLabelMapFilterLM4IUS4.New()

class itkStatisticsLabelMapFilterLM4IUS4(itk.itkShapeLabelMapFilterPython.itkShapeLabelMapFilterLM4IUL4):
    r"""Proxy of C++ itkStatisticsLabelMapFilterLM4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkStatisticsLabelMapFilterLM4IUS4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkStatisticsLabelMapFilterLM4IUS4_Pointer"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS4"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_SetInput2(self, input)

    def SetComputeHistogram(self, _arg):
        r"""
        SetComputeHistogram(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_SetComputeHistogram(self, _arg)

    def GetComputeHistogram(self):
        r"""GetComputeHistogram(self) -> bool const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_GetComputeHistogram(self)

    def ComputeHistogramOn(self):
        r"""ComputeHistogramOn(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_ComputeHistogramOn(self)

    def ComputeHistogramOff(self):
        r"""ComputeHistogramOff(self)"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_ComputeHistogramOff(self)

    def SetNumberOfBins(self, _arg):
        r"""
        SetNumberOfBins(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_SetNumberOfBins(self, _arg)

    def GetNumberOfBins(self):
        r"""GetNumberOfBins(self) -> unsigned int const &"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_GetNumberOfBins(self)

    @staticmethod
    def GetDefaultNumberOfBins():
        r"""GetDefaultNumberOfBins() -> unsigned int"""
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_GetDefaultNumberOfBins()
    __swig_destroy__ = _itkStatisticsLabelMapFilterPython.delete_itkStatisticsLabelMapFilterLM4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkStatisticsLabelMapFilterLM4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkStatisticsLabelMapFilterLM4IUS4

        Create a new object of the class itkStatisticsLabelMapFilterLM4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkStatisticsLabelMapFilterLM4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkStatisticsLabelMapFilterLM4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkStatisticsLabelMapFilterLM4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkStatisticsLabelMapFilterLM4IUS4 in _itkStatisticsLabelMapFilterPython:
_itkStatisticsLabelMapFilterPython.itkStatisticsLabelMapFilterLM4IUS4_swigregister(itkStatisticsLabelMapFilterLM4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def statistics_label_map_filter(*args: itkt.ImageLike,  feature_image: itkt.Image=..., compute_histogram: bool=..., number_of_bins: int=..., compute_feret_diameter: bool=..., compute_perimeter: bool=..., compute_oriented_bounding_box: bool=..., label_image: itkt.Image=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for StatisticsLabelMapFilter"""
    import itk

    kwarg_typehints = { 'feature_image':feature_image,'compute_histogram':compute_histogram,'number_of_bins':number_of_bins,'compute_feret_diameter':compute_feret_diameter,'compute_perimeter':compute_perimeter,'compute_oriented_bounding_box':compute_oriented_bounding_box,'label_image':label_image }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.StatisticsLabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def statistics_label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.StatisticsLabelMapFilter
    statistics_label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    statistics_label_map_filter.__doc__ = filter_object.__doc__



