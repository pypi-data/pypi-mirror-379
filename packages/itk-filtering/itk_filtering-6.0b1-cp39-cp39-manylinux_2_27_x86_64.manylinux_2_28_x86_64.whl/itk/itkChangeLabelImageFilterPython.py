# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageLabelPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkChangeLabelImageFilterPython
else:
    import _itkChangeLabelImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython

def itkChangeLabelImageFilterISS2ISS2_Superclass_New():
    return itkChangeLabelImageFilterISS2ISS2_Superclass.New()

class itkChangeLabelImageFilterISS2ISS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkChangeLabelImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< short,short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS2ISS2_Superclass

        Create a new object of the class itkChangeLabelImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS2ISS2_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Superclass_swigregister(itkChangeLabelImageFilterISS2ISS2_Superclass)

def itkChangeLabelImageFilterISS3ISS3_Superclass_New():
    return itkChangeLabelImageFilterISS3ISS3_Superclass.New()

class itkChangeLabelImageFilterISS3ISS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkChangeLabelImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< short,short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS3ISS3_Superclass

        Create a new object of the class itkChangeLabelImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS3ISS3_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Superclass_swigregister(itkChangeLabelImageFilterISS3ISS3_Superclass)

def itkChangeLabelImageFilterISS4ISS4_Superclass_New():
    return itkChangeLabelImageFilterISS4ISS4_Superclass.New()

class itkChangeLabelImageFilterISS4ISS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkChangeLabelImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< short,short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< short,short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS4ISS4_Superclass

        Create a new object of the class itkChangeLabelImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS4ISS4_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Superclass_swigregister(itkChangeLabelImageFilterISS4ISS4_Superclass)

def itkChangeLabelImageFilterIUC2IUC2_Superclass_New():
    return itkChangeLabelImageFilterIUC2IUC2_Superclass.New()

class itkChangeLabelImageFilterIUC2IUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned char,unsigned char > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC2IUC2_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Superclass_swigregister(itkChangeLabelImageFilterIUC2IUC2_Superclass)

def itkChangeLabelImageFilterIUC3IUC3_Superclass_New():
    return itkChangeLabelImageFilterIUC3IUC3_Superclass.New()

class itkChangeLabelImageFilterIUC3IUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned char,unsigned char > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC3IUC3_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Superclass_swigregister(itkChangeLabelImageFilterIUC3IUC3_Superclass)

def itkChangeLabelImageFilterIUC4IUC4_Superclass_New():
    return itkChangeLabelImageFilterIUC4IUC4_Superclass.New()

class itkChangeLabelImageFilterIUC4IUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned char,unsigned char > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned char,unsigned char > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC4IUC4_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Superclass_swigregister(itkChangeLabelImageFilterIUC4IUC4_Superclass)

def itkChangeLabelImageFilterIUS2IUS2_Superclass_New():
    return itkChangeLabelImageFilterIUS2IUS2_Superclass.New()

class itkChangeLabelImageFilterIUS2IUS2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned short,unsigned short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS2IUS2_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Superclass_swigregister(itkChangeLabelImageFilterIUS2IUS2_Superclass)

def itkChangeLabelImageFilterIUS3IUS3_Superclass_New():
    return itkChangeLabelImageFilterIUS3IUS3_Superclass.New()

class itkChangeLabelImageFilterIUS3IUS3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned short,unsigned short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS3IUS3_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Superclass_swigregister(itkChangeLabelImageFilterIUS3IUS3_Superclass)

def itkChangeLabelImageFilterIUS4IUS4_Superclass_New():
    return itkChangeLabelImageFilterIUS4IUS4_Superclass.New()

class itkChangeLabelImageFilterIUS4IUS4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short >
        GetFunctor(self) -> itk::Functor::ChangeLabel< unsigned short,unsigned short > const &
        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::ChangeLabel< unsigned short,unsigned short > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkChangeLabelImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS4IUS4_Superclass in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Superclass_swigregister(itkChangeLabelImageFilterIUS4IUS4_Superclass)

def itkChangeLabelImageFilterISS2ISS2_New():
    return itkChangeLabelImageFilterISS2ISS2.New()

class itkChangeLabelImageFilterISS2ISS2(itkChangeLabelImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS2ISS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS2ISS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: short const &
        result: short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< short,short,std::less< short >,std::allocator< std::pair< short const,short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS2ISS2

        Create a new object of the class itkChangeLabelImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS2ISS2 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS2ISS2_swigregister(itkChangeLabelImageFilterISS2ISS2)

def itkChangeLabelImageFilterISS3ISS3_New():
    return itkChangeLabelImageFilterISS3ISS3.New()

class itkChangeLabelImageFilterISS3ISS3(itkChangeLabelImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS3ISS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS3ISS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: short const &
        result: short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< short,short,std::less< short >,std::allocator< std::pair< short const,short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS3ISS3

        Create a new object of the class itkChangeLabelImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS3ISS3 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS3ISS3_swigregister(itkChangeLabelImageFilterISS3ISS3)

def itkChangeLabelImageFilterISS4ISS4_New():
    return itkChangeLabelImageFilterISS4ISS4.New()

class itkChangeLabelImageFilterISS4ISS4(itkChangeLabelImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterISS4ISS4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterISS4ISS4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: short const &
        result: short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< short,short,std::less< short >,std::allocator< std::pair< short const,short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterISS4ISS4

        Create a new object of the class itkChangeLabelImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterISS4ISS4 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterISS4ISS4_swigregister(itkChangeLabelImageFilterISS4ISS4)

def itkChangeLabelImageFilterIUC2IUC2_New():
    return itkChangeLabelImageFilterIUC2IUC2.New()

class itkChangeLabelImageFilterIUC2IUC2(itkChangeLabelImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC2IUC2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC2IUC2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned char const &
        result: unsigned char const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned char,unsigned char,std::less< unsigned char >,std::allocator< std::pair< unsigned char const,unsigned char > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC2IUC2

        Create a new object of the class itkChangeLabelImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC2IUC2 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC2IUC2_swigregister(itkChangeLabelImageFilterIUC2IUC2)

def itkChangeLabelImageFilterIUC3IUC3_New():
    return itkChangeLabelImageFilterIUC3IUC3.New()

class itkChangeLabelImageFilterIUC3IUC3(itkChangeLabelImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC3IUC3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC3IUC3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned char const &
        result: unsigned char const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned char,unsigned char,std::less< unsigned char >,std::allocator< std::pair< unsigned char const,unsigned char > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC3IUC3

        Create a new object of the class itkChangeLabelImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC3IUC3 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC3IUC3_swigregister(itkChangeLabelImageFilterIUC3IUC3)

def itkChangeLabelImageFilterIUC4IUC4_New():
    return itkChangeLabelImageFilterIUC4IUC4.New()

class itkChangeLabelImageFilterIUC4IUC4(itkChangeLabelImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUC4IUC4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUC4IUC4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned char const &
        result: unsigned char const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned char,unsigned char,std::less< unsigned char >,std::allocator< std::pair< unsigned char const,unsigned char > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUC4IUC4

        Create a new object of the class itkChangeLabelImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUC4IUC4 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUC4IUC4_swigregister(itkChangeLabelImageFilterIUC4IUC4)

def itkChangeLabelImageFilterIUS2IUS2_New():
    return itkChangeLabelImageFilterIUS2IUS2.New()

class itkChangeLabelImageFilterIUS2IUS2(itkChangeLabelImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS2IUS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS2IUS2_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned short const &
        result: unsigned short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned short,unsigned short,std::less< unsigned short >,std::allocator< std::pair< unsigned short const,unsigned short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS2IUS2

        Create a new object of the class itkChangeLabelImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS2IUS2 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS2IUS2_swigregister(itkChangeLabelImageFilterIUS2IUS2)

def itkChangeLabelImageFilterIUS3IUS3_New():
    return itkChangeLabelImageFilterIUS3IUS3.New()

class itkChangeLabelImageFilterIUS3IUS3(itkChangeLabelImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS3IUS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS3IUS3_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned short const &
        result: unsigned short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned short,unsigned short,std::less< unsigned short >,std::allocator< std::pair< unsigned short const,unsigned short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS3IUS3

        Create a new object of the class itkChangeLabelImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS3IUS3 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS3IUS3_swigregister(itkChangeLabelImageFilterIUS3IUS3)

def itkChangeLabelImageFilterIUS4IUS4_New():
    return itkChangeLabelImageFilterIUS4IUS4.New()

class itkChangeLabelImageFilterIUS4IUS4(itkChangeLabelImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkChangeLabelImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkChangeLabelImageFilterIUS4IUS4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkChangeLabelImageFilterIUS4IUS4_Pointer"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_Clone(self)

    def SetChange(self, original, result):
        r"""
        SetChange(self, original, result)

        Parameters
        ----------
        original: unsigned short const &
        result: unsigned short const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_SetChange(self, original, result)

    def SetChangeMap(self, changeMap):
        r"""
        SetChangeMap(self, changeMap)

        Parameters
        ----------
        changeMap: std::map< unsigned short,unsigned short,std::less< unsigned short >,std::allocator< std::pair< unsigned short const,unsigned short > > > const &

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_SetChangeMap(self, changeMap)

    def ClearChangeMap(self):
        r"""ClearChangeMap(self)"""
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_ClearChangeMap(self)
    InputConvertibleToOutputCheck = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    PixelTypeComparable = _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_PixelTypeComparable
    
    __swig_destroy__ = _itkChangeLabelImageFilterPython.delete_itkChangeLabelImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkChangeLabelImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkChangeLabelImageFilterIUS4IUS4

        Create a new object of the class itkChangeLabelImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkChangeLabelImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkChangeLabelImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkChangeLabelImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkChangeLabelImageFilterIUS4IUS4 in _itkChangeLabelImageFilterPython:
_itkChangeLabelImageFilterPython.itkChangeLabelImageFilterIUS4IUS4_swigregister(itkChangeLabelImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def change_label_image_filter(*args: itkt.ImageLike,  change: int=..., change_map=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ChangeLabelImageFilter"""
    import itk

    kwarg_typehints = { 'change':change,'change_map':change_map,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ChangeLabelImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def change_label_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageLabel.ChangeLabelImageFilter
    change_label_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    change_label_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageLabel.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__



