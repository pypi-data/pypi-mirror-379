# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageComparePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSTAPLEImageFilterPython
else:
    import _itkSTAPLEImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkSTAPLEImageFilterID2ID2_New():
    return itkSTAPLEImageFilterID2ID2.New()

class itkSTAPLEImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkSTAPLEImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterID2ID2_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterID2ID2_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterID2ID2

        Create a new object of the class itkSTAPLEImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterID2ID2 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID2ID2_swigregister(itkSTAPLEImageFilterID2ID2)

def itkSTAPLEImageFilterID3ID3_New():
    return itkSTAPLEImageFilterID3ID3.New()

class itkSTAPLEImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkSTAPLEImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterID3ID3_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterID3ID3_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterID3ID3

        Create a new object of the class itkSTAPLEImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterID3ID3 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID3ID3_swigregister(itkSTAPLEImageFilterID3ID3)

def itkSTAPLEImageFilterID4ID4_New():
    return itkSTAPLEImageFilterID4ID4.New()

class itkSTAPLEImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkSTAPLEImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterID4ID4_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterID4ID4_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterID4ID4

        Create a new object of the class itkSTAPLEImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterID4ID4 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterID4ID4_swigregister(itkSTAPLEImageFilterID4ID4)

def itkSTAPLEImageFilterIF2IF2_New():
    return itkSTAPLEImageFilterIF2IF2.New()

class itkSTAPLEImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkSTAPLEImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterIF2IF2_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterIF2IF2_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterIF2IF2

        Create a new object of the class itkSTAPLEImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterIF2IF2 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF2IF2_swigregister(itkSTAPLEImageFilterIF2IF2)

def itkSTAPLEImageFilterIF3IF3_New():
    return itkSTAPLEImageFilterIF3IF3.New()

class itkSTAPLEImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkSTAPLEImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterIF3IF3_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterIF3IF3_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterIF3IF3

        Create a new object of the class itkSTAPLEImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterIF3IF3 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF3IF3_swigregister(itkSTAPLEImageFilterIF3IF3)

def itkSTAPLEImageFilterIF4IF4_New():
    return itkSTAPLEImageFilterIF4IF4.New()

class itkSTAPLEImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkSTAPLEImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSTAPLEImageFilterIF4IF4_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSTAPLEImageFilterIF4IF4_Pointer"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetForegroundValue(self)

    def GetSensitivity(self, *args):
        r"""
        GetSensitivity(self) -> vectorD
        GetSensitivity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetSensitivity(self, *args)

    def GetSpecificity(self, *args):
        r"""
        GetSpecificity(self) -> vectorD
        GetSpecificity(self, i) -> double

        Parameters
        ----------
        i: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetSpecificity(self, *args)

    def SetMaximumIterations(self, _arg):
        r"""
        SetMaximumIterations(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_SetMaximumIterations(self, _arg)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetMaximumIterations(self)

    def SetConfidenceWeight(self, _arg):
        r"""
        SetConfidenceWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_SetConfidenceWeight(self, _arg)

    def GetConfidenceWeight(self):
        r"""GetConfidenceWeight(self) -> double"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetConfidenceWeight(self)

    def GetElapsedIterations(self):
        r"""GetElapsedIterations(self) -> unsigned int"""
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_GetElapsedIterations(self)
    InputHasNumericTraitsCheck = _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSTAPLEImageFilterPython.delete_itkSTAPLEImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSTAPLEImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSTAPLEImageFilterIF4IF4

        Create a new object of the class itkSTAPLEImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSTAPLEImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSTAPLEImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSTAPLEImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSTAPLEImageFilterIF4IF4 in _itkSTAPLEImageFilterPython:
_itkSTAPLEImageFilterPython.itkSTAPLEImageFilterIF4IF4_swigregister(itkSTAPLEImageFilterIF4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def staple_image_filter(*args: itkt.ImageLike,  foreground_value: float=..., maximum_iterations: int=..., confidence_weight: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for STAPLEImageFilter"""
    import itk

    kwarg_typehints = { 'foreground_value':foreground_value,'maximum_iterations':maximum_iterations,'confidence_weight':confidence_weight }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.STAPLEImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def staple_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageCompare.STAPLEImageFilter
    staple_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    staple_image_filter.__doc__ = filter_object.__doc__



