# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKQuadEdgeMeshFilteringPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBorderQuadEdgeMeshFilterPython
else:
    import _itkBorderQuadEdgeMeshFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkQuadEdgeMeshPointPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
import itk.pyBasePython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython
import itk.itkQuadEdgeMeshBasePython
import itk.itkQuadEdgeMeshLineCellPython
import itk.itkArrayPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkQuadEdgeCellTraitsInfoPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMapContainerPython
class itkBorderQuadEdgeMeshFilterEnums(object):
    r"""Proxy of C++ itkBorderQuadEdgeMeshFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    BorderTransform_SQUARE_BORDER_TRANSFORM = _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_BorderTransform_SQUARE_BORDER_TRANSFORM
    
    BorderTransform_DISK_BORDER_TRANSFORM = _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_BorderTransform_DISK_BORDER_TRANSFORM
    
    BorderPick_LONGEST = _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_BorderPick_LONGEST
    
    BorderPick_LARGEST = _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_BorderPick_LARGEST
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkBorderQuadEdgeMeshFilterEnums
        __init__(self, arg0) -> itkBorderQuadEdgeMeshFilterEnums

        Parameters
        ----------
        arg0: itkBorderQuadEdgeMeshFilterEnums const &

        """
        _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_swiginit(self, _itkBorderQuadEdgeMeshFilterPython.new_itkBorderQuadEdgeMeshFilterEnums(*args))
    __swig_destroy__ = _itkBorderQuadEdgeMeshFilterPython.delete_itkBorderQuadEdgeMeshFilterEnums

# Register itkBorderQuadEdgeMeshFilterEnums in _itkBorderQuadEdgeMeshFilterPython:
_itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterEnums_swigregister(itkBorderQuadEdgeMeshFilterEnums)

def itkBorderQuadEdgeMeshFilterQEMD2_New():
    return itkBorderQuadEdgeMeshFilterQEMD2.New()

class itkBorderQuadEdgeMeshFilterQEMD2(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD2QEMD2):
    r"""Proxy of C++ itkBorderQuadEdgeMeshFilterQEMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBorderQuadEdgeMeshFilterQEMD2_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBorderQuadEdgeMeshFilterQEMD2_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_Clone(self)

    def SetTransformType(self, _arg):
        r"""
        SetTransformType(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderTransform const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_SetTransformType(self, _arg)

    def GetTransformType(self):
        r"""GetTransformType(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderTransform"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_GetTransformType(self)

    def SetBorderPick(self, _arg):
        r"""
        SetBorderPick(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderPick const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_SetBorderPick(self, _arg)

    def GetBorderPick(self):
        r"""GetBorderPick(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderPick"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_GetBorderPick(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> float"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_GetRadius(self)

    def ComputeTransform(self):
        r"""ComputeTransform(self)"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_ComputeTransform(self)

    def GetBoundaryPtMap(self):
        r"""GetBoundaryPtMap(self) -> mapULUL"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_GetBoundaryPtMap(self)

    def GetBorder(self):
        r"""GetBorder(self) -> std::vector< itkQuadEdgeMeshPointF2GQEULULBBT,std::allocator< itkQuadEdgeMeshPointF2GQEULULBBT > >"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_GetBorder(self)
    __swig_destroy__ = _itkBorderQuadEdgeMeshFilterPython.delete_itkBorderQuadEdgeMeshFilterQEMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBorderQuadEdgeMeshFilterQEMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBorderQuadEdgeMeshFilterQEMD2

        Create a new object of the class itkBorderQuadEdgeMeshFilterQEMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBorderQuadEdgeMeshFilterQEMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBorderQuadEdgeMeshFilterQEMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBorderQuadEdgeMeshFilterQEMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBorderQuadEdgeMeshFilterQEMD2 in _itkBorderQuadEdgeMeshFilterPython:
_itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD2_swigregister(itkBorderQuadEdgeMeshFilterQEMD2)

def itkBorderQuadEdgeMeshFilterQEMD3_New():
    return itkBorderQuadEdgeMeshFilterQEMD3.New()

class itkBorderQuadEdgeMeshFilterQEMD3(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD3QEMD3):
    r"""Proxy of C++ itkBorderQuadEdgeMeshFilterQEMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBorderQuadEdgeMeshFilterQEMD3_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBorderQuadEdgeMeshFilterQEMD3_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_Clone(self)

    def SetTransformType(self, _arg):
        r"""
        SetTransformType(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderTransform const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_SetTransformType(self, _arg)

    def GetTransformType(self):
        r"""GetTransformType(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderTransform"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_GetTransformType(self)

    def SetBorderPick(self, _arg):
        r"""
        SetBorderPick(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderPick const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_SetBorderPick(self, _arg)

    def GetBorderPick(self):
        r"""GetBorderPick(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderPick"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_GetBorderPick(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> float"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_GetRadius(self)

    def ComputeTransform(self):
        r"""ComputeTransform(self)"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_ComputeTransform(self)

    def GetBoundaryPtMap(self):
        r"""GetBoundaryPtMap(self) -> mapULUL"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_GetBoundaryPtMap(self)

    def GetBorder(self):
        r"""GetBorder(self) -> std::vector< itkQuadEdgeMeshPointF3GQEULULBBT,std::allocator< itkQuadEdgeMeshPointF3GQEULULBBT > >"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_GetBorder(self)
    __swig_destroy__ = _itkBorderQuadEdgeMeshFilterPython.delete_itkBorderQuadEdgeMeshFilterQEMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBorderQuadEdgeMeshFilterQEMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBorderQuadEdgeMeshFilterQEMD3

        Create a new object of the class itkBorderQuadEdgeMeshFilterQEMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBorderQuadEdgeMeshFilterQEMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBorderQuadEdgeMeshFilterQEMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBorderQuadEdgeMeshFilterQEMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBorderQuadEdgeMeshFilterQEMD3 in _itkBorderQuadEdgeMeshFilterPython:
_itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD3_swigregister(itkBorderQuadEdgeMeshFilterQEMD3)

def itkBorderQuadEdgeMeshFilterQEMD4_New():
    return itkBorderQuadEdgeMeshFilterQEMD4.New()

class itkBorderQuadEdgeMeshFilterQEMD4(itk.itkQuadEdgeMeshToQuadEdgeMeshFilterPython.itkQuadEdgeMeshToQuadEdgeMeshFilterQEMD4QEMD4):
    r"""Proxy of C++ itkBorderQuadEdgeMeshFilterQEMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBorderQuadEdgeMeshFilterQEMD4_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBorderQuadEdgeMeshFilterQEMD4_Pointer"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_Clone(self)

    def SetTransformType(self, _arg):
        r"""
        SetTransformType(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderTransform const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_SetTransformType(self, _arg)

    def GetTransformType(self):
        r"""GetTransformType(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderTransform"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_GetTransformType(self)

    def SetBorderPick(self, _arg):
        r"""
        SetBorderPick(self, _arg)

        Parameters
        ----------
        _arg: enum itkBorderQuadEdgeMeshFilterEnums::BorderPick const

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_SetBorderPick(self, _arg)

    def GetBorderPick(self):
        r"""GetBorderPick(self) -> itkBorderQuadEdgeMeshFilterEnums::BorderPick"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_GetBorderPick(self)

    def SetRadius(self, _arg):
        r"""
        SetRadius(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_SetRadius(self, _arg)

    def GetRadius(self):
        r"""GetRadius(self) -> float"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_GetRadius(self)

    def ComputeTransform(self):
        r"""ComputeTransform(self)"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_ComputeTransform(self)

    def GetBoundaryPtMap(self):
        r"""GetBoundaryPtMap(self) -> mapULUL"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_GetBoundaryPtMap(self)

    def GetBorder(self):
        r"""GetBorder(self) -> std::vector< itkQuadEdgeMeshPointF4GQEULULBBT,std::allocator< itkQuadEdgeMeshPointF4GQEULULBBT > >"""
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_GetBorder(self)
    __swig_destroy__ = _itkBorderQuadEdgeMeshFilterPython.delete_itkBorderQuadEdgeMeshFilterQEMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBorderQuadEdgeMeshFilterQEMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBorderQuadEdgeMeshFilterQEMD4

        Create a new object of the class itkBorderQuadEdgeMeshFilterQEMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBorderQuadEdgeMeshFilterQEMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBorderQuadEdgeMeshFilterQEMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBorderQuadEdgeMeshFilterQEMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBorderQuadEdgeMeshFilterQEMD4 in _itkBorderQuadEdgeMeshFilterPython:
_itkBorderQuadEdgeMeshFilterPython.itkBorderQuadEdgeMeshFilterQEMD4_swigregister(itkBorderQuadEdgeMeshFilterQEMD4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def border_quad_edge_mesh_filter(*args: itkt.Mesh,  transform_type=..., border_pick=..., radius: float=..., output: itkt.QuadEdgeMesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for BorderQuadEdgeMeshFilter"""
    import itk

    kwarg_typehints = { 'transform_type':transform_type,'border_pick':border_pick,'radius':radius,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BorderQuadEdgeMeshFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def border_quad_edge_mesh_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKQuadEdgeMeshFiltering.BorderQuadEdgeMeshFilter
    border_quad_edge_mesh_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    border_quad_edge_mesh_filter.__doc__ = filter_object.__doc__



