# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSignedMaurerDistanceMapImageFilterPython
else:
    import _itkSignedMaurerDistanceMapImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkRGBAPixelPython
import itk.itkOffsetPython
import itk.itkIndexPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkSignedMaurerDistanceMapImageFilterID2ID2_New():
    return itkSignedMaurerDistanceMapImageFilterID2ID2.New()

class itkSignedMaurerDistanceMapImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID2ID2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID2ID2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2ID2_swigregister(itkSignedMaurerDistanceMapImageFilterID2ID2)

def itkSignedMaurerDistanceMapImageFilterID2IF2_New():
    return itkSignedMaurerDistanceMapImageFilterID2IF2.New()

class itkSignedMaurerDistanceMapImageFilterID2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2IF2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID2IF2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID2IF2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID2IF2_swigregister(itkSignedMaurerDistanceMapImageFilterID2IF2)

def itkSignedMaurerDistanceMapImageFilterID3ID3_New():
    return itkSignedMaurerDistanceMapImageFilterID3ID3.New()

class itkSignedMaurerDistanceMapImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID3ID3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID3ID3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3ID3_swigregister(itkSignedMaurerDistanceMapImageFilterID3ID3)

def itkSignedMaurerDistanceMapImageFilterID3IF3_New():
    return itkSignedMaurerDistanceMapImageFilterID3IF3.New()

class itkSignedMaurerDistanceMapImageFilterID3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3IF3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID3IF3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID3IF3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID3IF3_swigregister(itkSignedMaurerDistanceMapImageFilterID3IF3)

def itkSignedMaurerDistanceMapImageFilterID4ID4_New():
    return itkSignedMaurerDistanceMapImageFilterID4ID4.New()

class itkSignedMaurerDistanceMapImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID4ID4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID4ID4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4ID4_swigregister(itkSignedMaurerDistanceMapImageFilterID4ID4)

def itkSignedMaurerDistanceMapImageFilterID4IF4_New():
    return itkSignedMaurerDistanceMapImageFilterID4IF4.New()

class itkSignedMaurerDistanceMapImageFilterID4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4IF4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterID4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterID4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterID4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterID4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterID4IF4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterID4IF4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterID4IF4_swigregister(itkSignedMaurerDistanceMapImageFilterID4IF4)

def itkSignedMaurerDistanceMapImageFilterIF2ID2_New():
    return itkSignedMaurerDistanceMapImageFilterIF2ID2.New()

class itkSignedMaurerDistanceMapImageFilterIF2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2ID2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF2ID2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF2ID2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2ID2_swigregister(itkSignedMaurerDistanceMapImageFilterIF2ID2)

def itkSignedMaurerDistanceMapImageFilterIF2IF2_New():
    return itkSignedMaurerDistanceMapImageFilterIF2IF2.New()

class itkSignedMaurerDistanceMapImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF2IF2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF2IF2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF2IF2_swigregister(itkSignedMaurerDistanceMapImageFilterIF2IF2)

def itkSignedMaurerDistanceMapImageFilterIF3ID3_New():
    return itkSignedMaurerDistanceMapImageFilterIF3ID3.New()

class itkSignedMaurerDistanceMapImageFilterIF3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3ID3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF3ID3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF3ID3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3ID3_swigregister(itkSignedMaurerDistanceMapImageFilterIF3ID3)

def itkSignedMaurerDistanceMapImageFilterIF3IF3_New():
    return itkSignedMaurerDistanceMapImageFilterIF3IF3.New()

class itkSignedMaurerDistanceMapImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF3IF3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF3IF3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF3IF3_swigregister(itkSignedMaurerDistanceMapImageFilterIF3IF3)

def itkSignedMaurerDistanceMapImageFilterIF4ID4_New():
    return itkSignedMaurerDistanceMapImageFilterIF4ID4.New()

class itkSignedMaurerDistanceMapImageFilterIF4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4ID4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF4ID4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF4ID4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4ID4_swigregister(itkSignedMaurerDistanceMapImageFilterIF4ID4)

def itkSignedMaurerDistanceMapImageFilterIF4IF4_New():
    return itkSignedMaurerDistanceMapImageFilterIF4IF4.New()

class itkSignedMaurerDistanceMapImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIF4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIF4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIF4IF4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIF4IF4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIF4IF4_swigregister(itkSignedMaurerDistanceMapImageFilterIF4IF4)

def itkSignedMaurerDistanceMapImageFilterISS2ID2_New():
    return itkSignedMaurerDistanceMapImageFilterISS2ID2.New()

class itkSignedMaurerDistanceMapImageFilterISS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ID2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS2ID2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS2ID2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2ID2_swigregister(itkSignedMaurerDistanceMapImageFilterISS2ID2)

def itkSignedMaurerDistanceMapImageFilterISS2IF2_New():
    return itkSignedMaurerDistanceMapImageFilterISS2IF2.New()

class itkSignedMaurerDistanceMapImageFilterISS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2IF2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS2IF2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS2IF2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS2IF2_swigregister(itkSignedMaurerDistanceMapImageFilterISS2IF2)

def itkSignedMaurerDistanceMapImageFilterISS3ID3_New():
    return itkSignedMaurerDistanceMapImageFilterISS3ID3.New()

class itkSignedMaurerDistanceMapImageFilterISS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ID3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS3ID3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS3ID3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3ID3_swigregister(itkSignedMaurerDistanceMapImageFilterISS3ID3)

def itkSignedMaurerDistanceMapImageFilterISS3IF3_New():
    return itkSignedMaurerDistanceMapImageFilterISS3IF3.New()

class itkSignedMaurerDistanceMapImageFilterISS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3IF3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS3IF3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS3IF3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS3IF3_swigregister(itkSignedMaurerDistanceMapImageFilterISS3IF3)

def itkSignedMaurerDistanceMapImageFilterISS4ID4_New():
    return itkSignedMaurerDistanceMapImageFilterISS4ID4.New()

class itkSignedMaurerDistanceMapImageFilterISS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ID4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS4ID4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS4ID4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4ID4_swigregister(itkSignedMaurerDistanceMapImageFilterISS4ID4)

def itkSignedMaurerDistanceMapImageFilterISS4IF4_New():
    return itkSignedMaurerDistanceMapImageFilterISS4IF4.New()

class itkSignedMaurerDistanceMapImageFilterISS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4IF4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterISS4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterISS4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterISS4IF4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterISS4IF4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterISS4IF4_swigregister(itkSignedMaurerDistanceMapImageFilterISS4IF4)

def itkSignedMaurerDistanceMapImageFilterIUC2ID2_New():
    return itkSignedMaurerDistanceMapImageFilterIUC2ID2.New()

class itkSignedMaurerDistanceMapImageFilterIUC2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2ID2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC2ID2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC2ID2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2ID2_swigregister(itkSignedMaurerDistanceMapImageFilterIUC2ID2)

def itkSignedMaurerDistanceMapImageFilterIUC2IF2_New():
    return itkSignedMaurerDistanceMapImageFilterIUC2IF2.New()

class itkSignedMaurerDistanceMapImageFilterIUC2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IF2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC2IF2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC2IF2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC2IF2_swigregister(itkSignedMaurerDistanceMapImageFilterIUC2IF2)

def itkSignedMaurerDistanceMapImageFilterIUC3ID3_New():
    return itkSignedMaurerDistanceMapImageFilterIUC3ID3.New()

class itkSignedMaurerDistanceMapImageFilterIUC3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3ID3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC3ID3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC3ID3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3ID3_swigregister(itkSignedMaurerDistanceMapImageFilterIUC3ID3)

def itkSignedMaurerDistanceMapImageFilterIUC3IF3_New():
    return itkSignedMaurerDistanceMapImageFilterIUC3IF3.New()

class itkSignedMaurerDistanceMapImageFilterIUC3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IF3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC3IF3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC3IF3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC3IF3_swigregister(itkSignedMaurerDistanceMapImageFilterIUC3IF3)

def itkSignedMaurerDistanceMapImageFilterIUC4ID4_New():
    return itkSignedMaurerDistanceMapImageFilterIUC4ID4.New()

class itkSignedMaurerDistanceMapImageFilterIUC4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4ID4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC4ID4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC4ID4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4ID4_swigregister(itkSignedMaurerDistanceMapImageFilterIUC4ID4)

def itkSignedMaurerDistanceMapImageFilterIUC4IF4_New():
    return itkSignedMaurerDistanceMapImageFilterIUC4IF4.New()

class itkSignedMaurerDistanceMapImageFilterIUC4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IF4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUC4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUC4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUC4IF4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUC4IF4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUC4IF4_swigregister(itkSignedMaurerDistanceMapImageFilterIUC4IF4)

def itkSignedMaurerDistanceMapImageFilterIUS2ID2_New():
    return itkSignedMaurerDistanceMapImageFilterIUS2ID2.New()

class itkSignedMaurerDistanceMapImageFilterIUS2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2ID2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS2ID2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS2ID2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS2ID2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2ID2_swigregister(itkSignedMaurerDistanceMapImageFilterIUS2ID2)

def itkSignedMaurerDistanceMapImageFilterIUS2IF2_New():
    return itkSignedMaurerDistanceMapImageFilterIUS2IF2.New()

class itkSignedMaurerDistanceMapImageFilterIUS2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IF2):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS2IF2_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS2IF2

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS2IF2 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS2IF2_swigregister(itkSignedMaurerDistanceMapImageFilterIUS2IF2)

def itkSignedMaurerDistanceMapImageFilterIUS3ID3_New():
    return itkSignedMaurerDistanceMapImageFilterIUS3ID3.New()

class itkSignedMaurerDistanceMapImageFilterIUS3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3ID3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS3ID3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS3ID3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS3ID3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3ID3_swigregister(itkSignedMaurerDistanceMapImageFilterIUS3ID3)

def itkSignedMaurerDistanceMapImageFilterIUS3IF3_New():
    return itkSignedMaurerDistanceMapImageFilterIUS3IF3.New()

class itkSignedMaurerDistanceMapImageFilterIUS3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IF3):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS3IF3_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS3IF3

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS3IF3 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS3IF3_swigregister(itkSignedMaurerDistanceMapImageFilterIUS3IF3)

def itkSignedMaurerDistanceMapImageFilterIUS4ID4_New():
    return itkSignedMaurerDistanceMapImageFilterIUS4ID4.New()

class itkSignedMaurerDistanceMapImageFilterIUS4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4ID4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS4ID4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS4ID4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS4ID4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4ID4_swigregister(itkSignedMaurerDistanceMapImageFilterIUS4ID4)

def itkSignedMaurerDistanceMapImageFilterIUS4IF4_New():
    return itkSignedMaurerDistanceMapImageFilterIUS4IF4.New()

class itkSignedMaurerDistanceMapImageFilterIUS4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IF4):
    r"""Proxy of C++ itkSignedMaurerDistanceMapImageFilterIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSignedMaurerDistanceMapImageFilterIUS4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSignedMaurerDistanceMapImageFilterIUS4IF4_Pointer"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_Clone(self)

    def SetSquaredDistance(self, _arg):
        r"""
        SetSquaredDistance(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SetSquaredDistance(self, _arg)

    def GetSquaredDistance(self):
        r"""GetSquaredDistance(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_GetSquaredDistance(self)

    def SquaredDistanceOn(self):
        r"""SquaredDistanceOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SquaredDistanceOn(self)

    def SquaredDistanceOff(self):
        r"""SquaredDistanceOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SquaredDistanceOff(self)

    def SetInsideIsPositive(self, _arg):
        r"""
        SetInsideIsPositive(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SetInsideIsPositive(self, _arg)

    def GetInsideIsPositive(self):
        r"""GetInsideIsPositive(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_GetInsideIsPositive(self)

    def InsideIsPositiveOn(self):
        r"""InsideIsPositiveOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_InsideIsPositiveOn(self)

    def InsideIsPositiveOff(self):
        r"""InsideIsPositiveOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_InsideIsPositiveOff(self)

    def SetUseImageSpacing(self, _arg):
        r"""
        SetUseImageSpacing(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SetUseImageSpacing(self, _arg)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_UseImageSpacingOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_GetBackgroundValue(self)
    IntConvertibleToInputCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_IntConvertibleToInputCheck
    
    InputHasNumericTraitsCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_InputHasNumericTraitsCheck
    
    OutputImagePixelTypeIsFloatingPointCheck = _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_OutputImagePixelTypeIsFloatingPointCheck
    
    __swig_destroy__ = _itkSignedMaurerDistanceMapImageFilterPython.delete_itkSignedMaurerDistanceMapImageFilterIUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSignedMaurerDistanceMapImageFilterIUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSignedMaurerDistanceMapImageFilterIUS4IF4

        Create a new object of the class itkSignedMaurerDistanceMapImageFilterIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSignedMaurerDistanceMapImageFilterIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSignedMaurerDistanceMapImageFilterIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSignedMaurerDistanceMapImageFilterIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSignedMaurerDistanceMapImageFilterIUS4IF4 in _itkSignedMaurerDistanceMapImageFilterPython:
_itkSignedMaurerDistanceMapImageFilterPython.itkSignedMaurerDistanceMapImageFilterIUS4IF4_swigregister(itkSignedMaurerDistanceMapImageFilterIUS4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def signed_maurer_distance_map_image_filter(*args: itkt.ImageLike,  squared_distance: bool=..., inside_is_positive: bool=..., use_image_spacing: bool=..., background_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SignedMaurerDistanceMapImageFilter"""
    import itk

    kwarg_typehints = { 'squared_distance':squared_distance,'inside_is_positive':inside_is_positive,'use_image_spacing':use_image_spacing,'background_value':background_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SignedMaurerDistanceMapImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def signed_maurer_distance_map_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDistanceMap.SignedMaurerDistanceMapImageFilter
    signed_maurer_distance_map_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    signed_maurer_distance_map_image_filter.__doc__ = filter_object.__doc__



