# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSparseFieldFourthOrderLevelSetImageFilterPython
else:
    import _itkSparseFieldFourthOrderLevelSetImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkSparseFieldLevelSetImageFilterPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageToImageFilterAPython
import itk.itkLevelSetFunctionPython
class vectoritkImageNBNIF22(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNIF22_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNIF22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNIF22

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type
        j: std::vector< itkImageNBNIF22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type
        j: std::vector< itkImageNBNIF22_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type
        j: std::vector< itkImageNBNIF22_Pointer >::difference_type
        v: std::vector< itkImageNBNIF22_Pointer,std::allocator< itkImageNBNIF22_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type
        j: std::vector< itkImageNBNIF22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNIF22

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNIF22_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNIF22_Pointer,std::allocator< itkImageNBNIF22_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF22_Pointer >::difference_type
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNIF22_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNIF22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNIF22_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNIF22_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNIF22_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNIF22_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNIF22_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNIF22_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNIF22_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF22_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNIF22_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNIF22_Pointer >::iterator
        last: std::vector< itkImageNBNIF22_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNIF22
        __init__(self, other) -> vectoritkImageNBNIF22

        Parameters
        ----------
        other: std::vector< itkImageNBNIF22_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNIF22

        Parameters
        ----------
        size: std::vector< itkImageNBNIF22_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNIF22

        Parameters
        ----------
        size: std::vector< itkImageNBNIF22_Pointer >::size_type
        value: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNIF22(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNIF22_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNIF22_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF22_Pointer >::size_type
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF22_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF22_Pointer >::size_type
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNIF22_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF22_Pointer >::iterator
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF22_Pointer >::iterator
        n: std::vector< itkImageNBNIF22_Pointer >::size_type
        x: std::vector< itkImageNBNIF22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF22_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNIF22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNIF22

# Register vectoritkImageNBNIF22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF22_swigregister(vectoritkImageNBNIF22)
class vectoritkImageNBNID22(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNID22_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNID22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNID22

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type
        j: std::vector< itkImageNBNID22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type
        j: std::vector< itkImageNBNID22_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type
        j: std::vector< itkImageNBNID22_Pointer >::difference_type
        v: std::vector< itkImageNBNID22_Pointer,std::allocator< itkImageNBNID22_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type
        j: std::vector< itkImageNBNID22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNID22

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNID22_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNID22_Pointer,std::allocator< itkImageNBNID22_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNID22_Pointer >::difference_type
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNID22_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNID22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNID22_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNID22_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNID22_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNID22_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNID22_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNID22_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNID22_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID22_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNID22_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNID22_Pointer >::iterator
        last: std::vector< itkImageNBNID22_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNID22
        __init__(self, other) -> vectoritkImageNBNID22

        Parameters
        ----------
        other: std::vector< itkImageNBNID22_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNID22

        Parameters
        ----------
        size: std::vector< itkImageNBNID22_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNID22

        Parameters
        ----------
        size: std::vector< itkImageNBNID22_Pointer >::size_type
        value: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNID22(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNID22_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNID22_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNID22_Pointer >::size_type
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID22_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID22_Pointer >::size_type
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNID22_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID22_Pointer >::iterator
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNID22_Pointer >::iterator
        n: std::vector< itkImageNBNID22_Pointer >::size_type
        x: std::vector< itkImageNBNID22_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNID22_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNID22_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNID22

# Register vectoritkImageNBNID22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID22_swigregister(vectoritkImageNBNID22)
class vectoritkImageNBNIF33(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNIF33_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNIF33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNIF33

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type
        j: std::vector< itkImageNBNIF33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type
        j: std::vector< itkImageNBNIF33_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type
        j: std::vector< itkImageNBNIF33_Pointer >::difference_type
        v: std::vector< itkImageNBNIF33_Pointer,std::allocator< itkImageNBNIF33_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type
        j: std::vector< itkImageNBNIF33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNIF33

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNIF33_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNIF33_Pointer,std::allocator< itkImageNBNIF33_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF33_Pointer >::difference_type
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNIF33_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNIF33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNIF33_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNIF33_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNIF33_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNIF33_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNIF33_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNIF33_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNIF33_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF33_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNIF33_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNIF33_Pointer >::iterator
        last: std::vector< itkImageNBNIF33_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNIF33
        __init__(self, other) -> vectoritkImageNBNIF33

        Parameters
        ----------
        other: std::vector< itkImageNBNIF33_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNIF33

        Parameters
        ----------
        size: std::vector< itkImageNBNIF33_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNIF33

        Parameters
        ----------
        size: std::vector< itkImageNBNIF33_Pointer >::size_type
        value: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNIF33(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNIF33_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNIF33_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF33_Pointer >::size_type
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF33_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF33_Pointer >::size_type
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNIF33_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF33_Pointer >::iterator
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF33_Pointer >::iterator
        n: std::vector< itkImageNBNIF33_Pointer >::size_type
        x: std::vector< itkImageNBNIF33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF33_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNIF33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNIF33

# Register vectoritkImageNBNIF33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF33_swigregister(vectoritkImageNBNIF33)
class vectoritkImageNBNID33(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNID33_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNID33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNID33

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type
        j: std::vector< itkImageNBNID33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type
        j: std::vector< itkImageNBNID33_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type
        j: std::vector< itkImageNBNID33_Pointer >::difference_type
        v: std::vector< itkImageNBNID33_Pointer,std::allocator< itkImageNBNID33_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type
        j: std::vector< itkImageNBNID33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNID33

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNID33_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNID33_Pointer,std::allocator< itkImageNBNID33_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNID33_Pointer >::difference_type
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNID33_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNID33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNID33_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNID33_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNID33_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNID33_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNID33_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNID33_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNID33_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID33_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNID33_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNID33_Pointer >::iterator
        last: std::vector< itkImageNBNID33_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNID33
        __init__(self, other) -> vectoritkImageNBNID33

        Parameters
        ----------
        other: std::vector< itkImageNBNID33_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNID33

        Parameters
        ----------
        size: std::vector< itkImageNBNID33_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNID33

        Parameters
        ----------
        size: std::vector< itkImageNBNID33_Pointer >::size_type
        value: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNID33(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNID33_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNID33_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNID33_Pointer >::size_type
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID33_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID33_Pointer >::size_type
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNID33_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID33_Pointer >::iterator
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNID33_Pointer >::iterator
        n: std::vector< itkImageNBNID33_Pointer >::size_type
        x: std::vector< itkImageNBNID33_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNID33_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNID33_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNID33

# Register vectoritkImageNBNID33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID33_swigregister(vectoritkImageNBNID33)
class vectoritkImageNBNIF44(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNIF44_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNIF44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNIF44

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type
        j: std::vector< itkImageNBNIF44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type
        j: std::vector< itkImageNBNIF44_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type
        j: std::vector< itkImageNBNIF44_Pointer >::difference_type
        v: std::vector< itkImageNBNIF44_Pointer,std::allocator< itkImageNBNIF44_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type
        j: std::vector< itkImageNBNIF44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNIF44

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNIF44_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNIF44_Pointer,std::allocator< itkImageNBNIF44_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNIF44_Pointer >::difference_type
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNIF44_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNIF44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNIF44_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNIF44_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNIF44_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNIF44_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNIF44_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNIF44_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNIF44_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF44_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNIF44_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNIF44_Pointer >::iterator
        last: std::vector< itkImageNBNIF44_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNIF44
        __init__(self, other) -> vectoritkImageNBNIF44

        Parameters
        ----------
        other: std::vector< itkImageNBNIF44_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNIF44

        Parameters
        ----------
        size: std::vector< itkImageNBNIF44_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNIF44

        Parameters
        ----------
        size: std::vector< itkImageNBNIF44_Pointer >::size_type
        value: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNIF44(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNIF44_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNIF44_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF44_Pointer >::size_type
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF44_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNIF44_Pointer >::size_type
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNIF44_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF44_Pointer >::iterator
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNIF44_Pointer >::iterator
        n: std::vector< itkImageNBNIF44_Pointer >::size_type
        x: std::vector< itkImageNBNIF44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNIF44_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNIF44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNIF44

# Register vectoritkImageNBNIF44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNIF44_swigregister(vectoritkImageNBNIF44)
class vectoritkImageNBNID44(collections.abc.MutableSequence if _swig_python_version_info >= (3, 3) else collections.MutableSequence):
    r"""Proxy of C++ std::vector< itkImageNBNID44_Pointer > class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def iterator(self):
        r"""iterator(self) -> SwigPyIterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_iterator(self)
    def __iter__(self):
        return self.iterator()

    def __nonzero__(self):
        r"""__nonzero__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___nonzero__(self)

    def __bool__(self):
        r"""__bool__(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___bool__(self)

    def __len__(self):
        r"""__len__(self) -> std::vector< itkImageNBNID44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___len__(self)

    def __getslice__(self, i, j):
        r"""
        __getslice__(self, i, j) -> vectoritkImageNBNID44

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type
        j: std::vector< itkImageNBNID44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___getslice__(self, i, j)

    def __setslice__(self, *args):
        r"""
        __setslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type
        j: std::vector< itkImageNBNID44_Pointer >::difference_type

        __setslice__(self, i, j, v)

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type
        j: std::vector< itkImageNBNID44_Pointer >::difference_type
        v: std::vector< itkImageNBNID44_Pointer,std::allocator< itkImageNBNID44_Pointer > > const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___setslice__(self, *args)

    def __delslice__(self, i, j):
        r"""
        __delslice__(self, i, j)

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type
        j: std::vector< itkImageNBNID44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___delslice__(self, i, j)

    def __delitem__(self, *args):
        r"""
        __delitem__(self, i)

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type

        __delitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___delitem__(self, *args)

    def __getitem__(self, *args):
        r"""
        __getitem__(self, slice) -> vectoritkImageNBNID44

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __getitem__(self, i) -> std::vector< itkImageNBNID44_Pointer >::value_type const &

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___getitem__(self, *args)

    def __setitem__(self, *args):
        r"""
        __setitem__(self, slice, v)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *
        v: std::vector< itkImageNBNID44_Pointer,std::allocator< itkImageNBNID44_Pointer > > const &

        __setitem__(self, slice)

        Parameters
        ----------
        slice: SWIGPY_SLICEOBJECT *

        __setitem__(self, i, x)

        Parameters
        ----------
        i: std::vector< itkImageNBNID44_Pointer >::difference_type
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44___setitem__(self, *args)

    def pop(self):
        r"""pop(self) -> std::vector< itkImageNBNID44_Pointer >::value_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_pop(self)

    def append(self, x):
        r"""
        append(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_append(self, x)

    def empty(self):
        r"""empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_empty(self)

    def size(self):
        r"""size(self) -> std::vector< itkImageNBNID44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_size(self)

    def swap(self, v):
        r"""
        swap(self, v)

        Parameters
        ----------
        v: std::vector< itkImageNBNID44_Pointer > &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_swap(self, v)

    def begin(self):
        r"""begin(self) -> std::vector< itkImageNBNID44_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_begin(self)

    def end(self):
        r"""end(self) -> std::vector< itkImageNBNID44_Pointer >::iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_end(self)

    def rbegin(self):
        r"""rbegin(self) -> std::vector< itkImageNBNID44_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_rbegin(self)

    def rend(self):
        r"""rend(self) -> std::vector< itkImageNBNID44_Pointer >::reverse_iterator"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_rend(self)

    def clear(self):
        r"""clear(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_clear(self)

    def get_allocator(self):
        r"""get_allocator(self) -> std::vector< itkImageNBNID44_Pointer >::allocator_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_get_allocator(self)

    def pop_back(self):
        r"""pop_back(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_pop_back(self)

    def erase(self, *args):
        r"""
        erase(self, pos) -> std::vector< itkImageNBNID44_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID44_Pointer >::iterator

        erase(self, first, last) -> std::vector< itkImageNBNID44_Pointer >::iterator

        Parameters
        ----------
        first: std::vector< itkImageNBNID44_Pointer >::iterator
        last: std::vector< itkImageNBNID44_Pointer >::iterator

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_erase(self, *args)

    def __init__(self, *args):
        r"""
        __init__(self) -> vectoritkImageNBNID44
        __init__(self, other) -> vectoritkImageNBNID44

        Parameters
        ----------
        other: std::vector< itkImageNBNID44_Pointer > const &

        __init__(self, size) -> vectoritkImageNBNID44

        Parameters
        ----------
        size: std::vector< itkImageNBNID44_Pointer >::size_type

        __init__(self, size, value) -> vectoritkImageNBNID44

        Parameters
        ----------
        size: std::vector< itkImageNBNID44_Pointer >::size_type
        value: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_vectoritkImageNBNID44(*args))

    def push_back(self, x):
        r"""
        push_back(self, x)

        Parameters
        ----------
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_push_back(self, x)

    def front(self):
        r"""front(self) -> std::vector< itkImageNBNID44_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_front(self)

    def back(self):
        r"""back(self) -> std::vector< itkImageNBNID44_Pointer >::value_type const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_back(self)

    def assign(self, n, x):
        r"""
        assign(self, n, x)

        Parameters
        ----------
        n: std::vector< itkImageNBNID44_Pointer >::size_type
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_assign(self, n, x)

    def resize(self, *args):
        r"""
        resize(self, new_size)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID44_Pointer >::size_type

        resize(self, new_size, x)

        Parameters
        ----------
        new_size: std::vector< itkImageNBNID44_Pointer >::size_type
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_resize(self, *args)

    def insert(self, *args):
        r"""
        insert(self, pos, x) -> std::vector< itkImageNBNID44_Pointer >::iterator

        Parameters
        ----------
        pos: std::vector< itkImageNBNID44_Pointer >::iterator
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        insert(self, pos, n, x)

        Parameters
        ----------
        pos: std::vector< itkImageNBNID44_Pointer >::iterator
        n: std::vector< itkImageNBNID44_Pointer >::size_type
        x: std::vector< itkImageNBNID44_Pointer >::value_type const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_insert(self, *args)

    def reserve(self, n):
        r"""
        reserve(self, n)

        Parameters
        ----------
        n: std::vector< itkImageNBNID44_Pointer >::size_type

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_reserve(self, n)

    def capacity(self):
        r"""capacity(self) -> std::vector< itkImageNBNID44_Pointer >::size_type"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_capacity(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_vectoritkImageNBNID44

# Register vectoritkImageNBNID44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.vectoritkImageNBNID44_swigregister(vectoritkImageNBNID44)

def itkImageNBNID22_New():
    return itkImageNBNID22.New()

class itkImageNBNID22(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkImageNBNID22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeID2 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex2 const &
        value: itkNormalBandNodeID2 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeID2

        Parameters
        ----------
        index: itkIndex2 const &

        GetPixel(self, index) -> itkNormalBandNodeID2 *&

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeID2
        GetBufferPointer(self) -> itkNormalBandNodeID2 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNID22 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double > > * > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double > > * > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNID22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNID22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNID22

        Create a new object of the class itkImageNBNID22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNID22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNID22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNID22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNID22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID22_swigregister(itkImageNBNID22)

def itkImageNBNID33_New():
    return itkImageNBNID33.New()

class itkImageNBNID33(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageNBNID33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeID3 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: itkNormalBandNodeID3 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeID3

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> itkNormalBandNodeID3 *&

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeID3
        GetBufferPointer(self) -> itkNormalBandNodeID3 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,3 > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,3 > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,3 > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNID33 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double,3 > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double,3 > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double,3 > > *,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double,3 > > *,3 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNID33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNID33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNID33

        Create a new object of the class itkImageNBNID33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNID33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNID33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNID33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNID33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID33_swigregister(itkImageNBNID33)

def itkImageNBNID44_New():
    return itkImageNBNID44.New()

class itkImageNBNID44(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkImageNBNID44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeID4 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex4 const &
        value: itkNormalBandNodeID4 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeID4

        Parameters
        ----------
        index: itkIndex4 const &

        GetPixel(self, index) -> itkNormalBandNodeID4 *&

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeID4
        GetBufferPointer(self) -> itkNormalBandNodeID4 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,4 > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,4 > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< double,4 > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNID44 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double,4 > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< double,4 > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double,4 > > *,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< double,4 > > *,4 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNID44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNID44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNID44

        Create a new object of the class itkImageNBNID44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNID44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNID44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNID44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNID44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNID44_swigregister(itkImageNBNID44)

def itkImageNBNIF22_New():
    return itkImageNBNIF22.New()

class itkImageNBNIF22(itk.itkImagePython.itkImageBase2):
    r"""Proxy of C++ itkImageNBNIF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeIF2 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex2 const &
        value: itkNormalBandNodeIF2 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeIF2

        Parameters
        ----------
        index: itkIndex2 const &

        GetPixel(self, index) -> itkNormalBandNodeIF2 *&

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeIF2
        GetBufferPointer(self) -> itkNormalBandNodeIF2 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNIF22 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float > > * > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float > > * > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNIF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNIF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNIF22

        Create a new object of the class itkImageNBNIF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNIF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNIF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNIF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNIF22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF22_swigregister(itkImageNBNIF22)

def itkImageNBNIF33_New():
    return itkImageNBNIF33.New()

class itkImageNBNIF33(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkImageNBNIF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeIF3 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: itkNormalBandNodeIF3 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeIF3

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> itkNormalBandNodeIF3 *&

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeIF3
        GetBufferPointer(self) -> itkNormalBandNodeIF3 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,3 > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,3 > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,3 > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNIF33 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float,3 > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float,3 > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float,3 > > *,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float,3 > > *,3 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNIF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNIF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNIF33

        Create a new object of the class itkImageNBNIF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNIF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNIF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNIF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNIF33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF33_swigregister(itkImageNBNIF33)

def itkImageNBNIF44_New():
    return itkImageNBNIF44.New()

class itkImageNBNIF44(itk.itkImagePython.itkImageBase4):
    r"""Proxy of C++ itkImageNBNIF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageNBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageNBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_Clone(self)

    def Allocate(self, initializePixels=False):
        r"""
        Allocate(self, initializePixels=False)

        Parameters
        ----------
        initializePixels: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_Allocate(self, initializePixels)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: itkNormalBandNodeIF4 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex4 const &
        value: itkNormalBandNodeIF4 *const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> itkNormalBandNodeIF4

        Parameters
        ----------
        index: itkIndex4 const &

        GetPixel(self, index) -> itkNormalBandNodeIF4 *&

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> itkNormalBandNodeIF4
        GetBufferPointer(self) -> itkNormalBandNodeIF4 *const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,4 > > * >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,4 > > * > const *
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,itk::NormalBandNode< itk::Image< float,4 > > * > *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_SetPixelContainer(self, container)

    def Graft(self, image):
        r"""
        Graft(self, image)

        Parameters
        ----------
        image: itkImageNBNIF44 const *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_Graft(self, image)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float,4 > > * >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< itk::NormalBandNode< itk::Image< float,4 > > * > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float,4 > > *,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::Image< itk::NormalBandNode< itk::Image< float,4 > > *,4 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkImageNBNIF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageNBNIF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_cast(obj)

    def __array__(self, dtype=None):
        import itk
        import numpy as np
        array = itk.array_from_image(self)
        return np.asarray(array, dtype=dtype)


    def New(*args, **kargs):
        """New() -> itkImageNBNIF44

        Create a new object of the class itkImageNBNIF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageNBNIF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageNBNIF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageNBNIF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageNBNIF44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkImageNBNIF44_swigregister(itkImageNBNIF44)

def itkLevelSetFunctionWithRefitTermID2SINBNID22_New():
    return itkLevelSetFunctionWithRefitTermID2SINBNID22.New()

class itkLevelSetFunctionWithRefitTermID2SINBNID22(itk.itkLevelSetFunctionPython.itkLevelSetFunctionID2):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermID2SINBNID22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermID2SINBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermID2SINBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNID22 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNID22"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermID2SINBNID22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermID2SINBNID22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermID2SINBNID22

        Create a new object of the class itkLevelSetFunctionWithRefitTermID2SINBNID22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermID2SINBNID22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermID2SINBNID22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermID2SINBNID22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermID2SINBNID22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID2SINBNID22_swigregister(itkLevelSetFunctionWithRefitTermID2SINBNID22)

def itkLevelSetFunctionWithRefitTermID3SINBNID33_New():
    return itkLevelSetFunctionWithRefitTermID3SINBNID33.New()

class itkLevelSetFunctionWithRefitTermID3SINBNID33(itk.itkLevelSetFunctionPython.itkLevelSetFunctionID3):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermID3SINBNID33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermID3SINBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermID3SINBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNID33 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNID33"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermID3SINBNID33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermID3SINBNID33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermID3SINBNID33

        Create a new object of the class itkLevelSetFunctionWithRefitTermID3SINBNID33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermID3SINBNID33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermID3SINBNID33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermID3SINBNID33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermID3SINBNID33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID3SINBNID33_swigregister(itkLevelSetFunctionWithRefitTermID3SINBNID33)

def itkLevelSetFunctionWithRefitTermID4SINBNID44_New():
    return itkLevelSetFunctionWithRefitTermID4SINBNID44.New()

class itkLevelSetFunctionWithRefitTermID4SINBNID44(itk.itkLevelSetFunctionPython.itkLevelSetFunctionID4):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermID4SINBNID44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermID4SINBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermID4SINBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: double const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNID44 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNID44"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermID4SINBNID44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermID4SINBNID44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermID4SINBNID44

        Create a new object of the class itkLevelSetFunctionWithRefitTermID4SINBNID44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermID4SINBNID44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermID4SINBNID44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermID4SINBNID44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermID4SINBNID44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermID4SINBNID44_swigregister(itkLevelSetFunctionWithRefitTermID4SINBNID44)

def itkLevelSetFunctionWithRefitTermIF2SINBNIF22_New():
    return itkLevelSetFunctionWithRefitTermIF2SINBNIF22.New()

class itkLevelSetFunctionWithRefitTermIF2SINBNIF22(itk.itkLevelSetFunctionPython.itkLevelSetFunctionIF2):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermIF2SINBNIF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermIF2SINBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermIF2SINBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNIF22 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNIF22"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermIF2SINBNIF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermIF2SINBNIF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermIF2SINBNIF22

        Create a new object of the class itkLevelSetFunctionWithRefitTermIF2SINBNIF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermIF2SINBNIF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermIF2SINBNIF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermIF2SINBNIF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermIF2SINBNIF22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF2SINBNIF22_swigregister(itkLevelSetFunctionWithRefitTermIF2SINBNIF22)

def itkLevelSetFunctionWithRefitTermIF3SINBNIF33_New():
    return itkLevelSetFunctionWithRefitTermIF3SINBNIF33.New()

class itkLevelSetFunctionWithRefitTermIF3SINBNIF33(itk.itkLevelSetFunctionPython.itkLevelSetFunctionIF3):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermIF3SINBNIF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermIF3SINBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermIF3SINBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNIF33 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNIF33"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermIF3SINBNIF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermIF3SINBNIF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermIF3SINBNIF33

        Create a new object of the class itkLevelSetFunctionWithRefitTermIF3SINBNIF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermIF3SINBNIF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermIF3SINBNIF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermIF3SINBNIF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermIF3SINBNIF33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF3SINBNIF33_swigregister(itkLevelSetFunctionWithRefitTermIF3SINBNIF33)

def itkLevelSetFunctionWithRefitTermIF4SINBNIF44_New():
    return itkLevelSetFunctionWithRefitTermIF4SINBNIF44.New()

class itkLevelSetFunctionWithRefitTermIF4SINBNIF44(itk.itkLevelSetFunctionPython.itkLevelSetFunctionIF4):
    r"""Proxy of C++ itkLevelSetFunctionWithRefitTermIF4SINBNIF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLevelSetFunctionWithRefitTermIF4SINBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLevelSetFunctionWithRefitTermIF4SINBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_Clone(self)

    def SetRefitWeight(self, w):
        r"""
        SetRefitWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_SetRefitWeight(self, w)

    def SetOtherPropagationWeight(self, w):
        r"""
        SetOtherPropagationWeight(self, w)

        Parameters
        ----------
        w: float const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_SetOtherPropagationWeight(self, w)

    def SetSparseTargetImage(self, im):
        r"""
        SetSparseTargetImage(self, im)

        Parameters
        ----------
        im: itkSparseImageNBNIF44 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_SetSparseTargetImage(self, im)

    def GetSparseTargetImage(self):
        r"""GetSparseTargetImage(self) -> itkSparseImageNBNIF44"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_GetSparseTargetImage(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkLevelSetFunctionWithRefitTermIF4SINBNIF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLevelSetFunctionWithRefitTermIF4SINBNIF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLevelSetFunctionWithRefitTermIF4SINBNIF44

        Create a new object of the class itkLevelSetFunctionWithRefitTermIF4SINBNIF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLevelSetFunctionWithRefitTermIF4SINBNIF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLevelSetFunctionWithRefitTermIF4SINBNIF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLevelSetFunctionWithRefitTermIF4SINBNIF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLevelSetFunctionWithRefitTermIF4SINBNIF44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkLevelSetFunctionWithRefitTermIF4SINBNIF44_swigregister(itkLevelSetFunctionWithRefitTermIF4SINBNIF44)
class itkNormalBandNodeID2(object):
    r"""Proxy of C++ itkNormalBandNodeID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeID2
        __init__(self, arg0) -> itkNormalBandNodeID2

        Parameters
        ----------
        arg0: itkNormalBandNodeID2 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID2_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeID2(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeID2

# Register itkNormalBandNodeID2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID2_swigregister(itkNormalBandNodeID2)
class itkNormalBandNodeID3(object):
    r"""Proxy of C++ itkNormalBandNodeID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeID3
        __init__(self, arg0) -> itkNormalBandNodeID3

        Parameters
        ----------
        arg0: itkNormalBandNodeID3 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID3_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeID3(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeID3

# Register itkNormalBandNodeID3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID3_swigregister(itkNormalBandNodeID3)
class itkNormalBandNodeID4(object):
    r"""Proxy of C++ itkNormalBandNodeID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeID4
        __init__(self, arg0) -> itkNormalBandNodeID4

        Parameters
        ----------
        arg0: itkNormalBandNodeID4 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID4_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeID4(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeID4

# Register itkNormalBandNodeID4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeID4_swigregister(itkNormalBandNodeID4)
class itkNormalBandNodeIF2(object):
    r"""Proxy of C++ itkNormalBandNodeIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeIF2
        __init__(self, arg0) -> itkNormalBandNodeIF2

        Parameters
        ----------
        arg0: itkNormalBandNodeIF2 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF2_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeIF2(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeIF2

# Register itkNormalBandNodeIF2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF2_swigregister(itkNormalBandNodeIF2)
class itkNormalBandNodeIF3(object):
    r"""Proxy of C++ itkNormalBandNodeIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeIF3
        __init__(self, arg0) -> itkNormalBandNodeIF3

        Parameters
        ----------
        arg0: itkNormalBandNodeIF3 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF3_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeIF3(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeIF3

# Register itkNormalBandNodeIF3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF3_swigregister(itkNormalBandNodeIF3)
class itkNormalBandNodeIF4(object):
    r"""Proxy of C++ itkNormalBandNodeIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNormalBandNodeIF4
        __init__(self, arg0) -> itkNormalBandNodeIF4

        Parameters
        ----------
        arg0: itkNormalBandNodeIF4 const &

        """
        _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF4_swiginit(self, _itkSparseFieldFourthOrderLevelSetImageFilterPython.new_itkNormalBandNodeIF4(*args))
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkNormalBandNodeIF4

# Register itkNormalBandNodeIF4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkNormalBandNodeIF4_swigregister(itkNormalBandNodeIF4)
class itkSparseFieldFourthOrderLevelSetImageFilterID2ID2(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermID2SINBNID22 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterID2ID2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID2ID2_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterID2ID2)
class itkSparseFieldFourthOrderLevelSetImageFilterID3ID3(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermID3SINBNID33 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterID3ID3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID3ID3_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterID3ID3)
class itkSparseFieldFourthOrderLevelSetImageFilterID4ID4(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> double const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermID4SINBNID44 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterID4ID4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterID4ID4_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterID4ID4)
class itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermIF2SINBNIF22 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterIF2IF2)
class itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermIF3SINBNIF33 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterIF3IF3)
class itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4(itk.itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4):
    r"""Proxy of C++ itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def GetMaxRefitIteration(self):
        r"""GetMaxRefitIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetMaxRefitIteration(self)

    def SetMaxRefitIteration(self, _arg):
        r"""
        SetMaxRefitIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetMaxRefitIteration(self, _arg)

    def GetMaxNormalIteration(self):
        r"""GetMaxNormalIteration(self) -> unsigned int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetMaxNormalIteration(self)

    def SetMaxNormalIteration(self, _arg):
        r"""
        SetMaxNormalIteration(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetMaxNormalIteration(self, _arg)

    def GetCurvatureBandWidth(self):
        r"""GetCurvatureBandWidth(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetCurvatureBandWidth(self)

    def SetCurvatureBandWidth(self, _arg):
        r"""
        SetCurvatureBandWidth(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetCurvatureBandWidth(self, _arg)

    def GetRMSChangeNormalProcessTrigger(self):
        r"""GetRMSChangeNormalProcessTrigger(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetRMSChangeNormalProcessTrigger(self)

    def SetRMSChangeNormalProcessTrigger(self, _arg):
        r"""
        SetRMSChangeNormalProcessTrigger(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetRMSChangeNormalProcessTrigger(self, _arg)

    def GetNormalProcessType(self):
        r"""GetNormalProcessType(self) -> int const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetNormalProcessType(self)

    def SetNormalProcessType(self, _arg):
        r"""
        SetNormalProcessType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetNormalProcessType(self, _arg)

    def GetNormalProcessConductance(self):
        r"""GetNormalProcessConductance(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetNormalProcessConductance(self)

    def SetNormalProcessConductance(self, _arg):
        r"""
        SetNormalProcessConductance(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetNormalProcessConductance(self, _arg)

    def SetNormalProcessUnsharpFlag(self, _arg):
        r"""
        SetNormalProcessUnsharpFlag(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetNormalProcessUnsharpFlag(self, _arg)

    def GetNormalProcessUnsharpFlag(self):
        r"""GetNormalProcessUnsharpFlag(self) -> bool const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetNormalProcessUnsharpFlag(self)

    def NormalProcessUnsharpFlagOn(self):
        r"""NormalProcessUnsharpFlagOn(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_NormalProcessUnsharpFlagOn(self)

    def NormalProcessUnsharpFlagOff(self):
        r"""NormalProcessUnsharpFlagOff(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_NormalProcessUnsharpFlagOff(self)

    def SetNormalProcessUnsharpWeight(self, _arg):
        r"""
        SetNormalProcessUnsharpWeight(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetNormalProcessUnsharpWeight(self, _arg)

    def GetNormalProcessUnsharpWeight(self):
        r"""GetNormalProcessUnsharpWeight(self) -> float const &"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetNormalProcessUnsharpWeight(self)

    def SetLevelSetFunction(self, lsf):
        r"""
        SetLevelSetFunction(self, lsf)

        Parameters
        ----------
        lsf: itkLevelSetFunctionWithRefitTermIF4SINBNIF44 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetLevelSetFunction(self, lsf)

    def GetMinimumNumberOfLayers(self):
        r"""GetMinimumNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_GetMinimumNumberOfLayers(self)

    def SetNumberOfLayers(self, n):
        r"""
        SetNumberOfLayers(self, n)

        Parameters
        ----------
        n: unsigned int const

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_SetNumberOfLayers(self, n)

    def InitializeIteration(self):
        r"""InitializeIteration(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_InitializeIteration(self)
    OutputHasNumericTraitsCheck = _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_cast(obj)

# Register itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4_swigregister(itkSparseFieldFourthOrderLevelSetImageFilterIF4IF4)

def itkSparseFieldLayerNBNID2_New():
    return itkSparseFieldLayerNBNID2.New()

class itkSparseFieldLayerNBNID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNID2_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNID2_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeID2
        Front(self) -> itkNormalBandNodeID2
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID2 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID2 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNID2::RegionType,std::allocator< itkSparseFieldLayerNBNID2::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNID2

        Create a new object of the class itkSparseFieldLayerNBNID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNID2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID2_swigregister(itkSparseFieldLayerNBNID2)

def itkSparseFieldLayerNBNID3_New():
    return itkSparseFieldLayerNBNID3.New()

class itkSparseFieldLayerNBNID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNID3_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNID3_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeID3
        Front(self) -> itkNormalBandNodeID3
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID3 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID3 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNID3::RegionType,std::allocator< itkSparseFieldLayerNBNID3::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNID3

        Create a new object of the class itkSparseFieldLayerNBNID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNID3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID3_swigregister(itkSparseFieldLayerNBNID3)

def itkSparseFieldLayerNBNID4_New():
    return itkSparseFieldLayerNBNID4.New()

class itkSparseFieldLayerNBNID4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNID4_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNID4_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeID4
        Front(self) -> itkNormalBandNodeID4
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID4 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeID4 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNID4::RegionType,std::allocator< itkSparseFieldLayerNBNID4::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNID4

        Create a new object of the class itkSparseFieldLayerNBNID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNID4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNID4_swigregister(itkSparseFieldLayerNBNID4)

def itkSparseFieldLayerNBNIF2_New():
    return itkSparseFieldLayerNBNIF2.New()

class itkSparseFieldLayerNBNIF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNIF2_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNIF2_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeIF2
        Front(self) -> itkNormalBandNodeIF2
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF2 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF2 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNIF2::RegionType,std::allocator< itkSparseFieldLayerNBNIF2::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNIF2

        Create a new object of the class itkSparseFieldLayerNBNIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNIF2 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF2_swigregister(itkSparseFieldLayerNBNIF2)

def itkSparseFieldLayerNBNIF3_New():
    return itkSparseFieldLayerNBNIF3.New()

class itkSparseFieldLayerNBNIF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNIF3_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNIF3_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeIF3
        Front(self) -> itkNormalBandNodeIF3
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF3 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF3 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNIF3::RegionType,std::allocator< itkSparseFieldLayerNBNIF3::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNIF3

        Create a new object of the class itkSparseFieldLayerNBNIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNIF3 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF3_swigregister(itkSparseFieldLayerNBNIF3)

def itkSparseFieldLayerNBNIF4_New():
    return itkSparseFieldLayerNBNIF4.New()

class itkSparseFieldLayerNBNIF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerNBNIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerNBNIF4_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerNBNIF4_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkNormalBandNodeIF4
        Front(self) -> itkNormalBandNodeIF4
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF4 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkNormalBandNodeIF4 *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerNBNIF4::RegionType,std::allocator< itkSparseFieldLayerNBNIF4::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseFieldLayerNBNIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerNBNIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerNBNIF4

        Create a new object of the class itkSparseFieldLayerNBNIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerNBNIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerNBNIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerNBNIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerNBNIF4 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseFieldLayerNBNIF4_swigregister(itkSparseFieldLayerNBNIF4)

def itkSparseImageNBNID22_New():
    return itkSparseImageNBNID22.New()

class itkSparseImageNBNID22(itkImageNBNID22):
    r"""Proxy of C++ itkSparseImageNBNID22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNID22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double > > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double > > > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeID2

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNID2"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNID22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNID22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNID22

        Create a new object of the class itkSparseImageNBNID22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNID22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNID22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNID22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNID22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID22_swigregister(itkSparseImageNBNID22)

def itkSparseImageNBNID33_New():
    return itkSparseImageNBNID33.New()

class itkSparseImageNBNID33(itkImageNBNID33):
    r"""Proxy of C++ itkSparseImageNBNID33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNID33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double,3 > >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double,3 > >,3 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeID3

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNID3"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNID33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNID33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNID33

        Create a new object of the class itkSparseImageNBNID33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNID33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNID33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNID33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNID33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID33_swigregister(itkSparseImageNBNID33)

def itkSparseImageNBNID44_New():
    return itkSparseImageNBNID44.New()

class itkSparseImageNBNID44(itkImageNBNID44):
    r"""Proxy of C++ itkSparseImageNBNID44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNID44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double,4 > >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< double,4 > >,4 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeID4

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNID4"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNID44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNID44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNID44

        Create a new object of the class itkSparseImageNBNID44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNID44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNID44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNID44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNID44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNID44_swigregister(itkSparseImageNBNID44)

def itkSparseImageNBNIF22_New():
    return itkSparseImageNBNIF22.New()

class itkSparseImageNBNIF22(itkImageNBNIF22):
    r"""Proxy of C++ itkSparseImageNBNIF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNIF22_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float > > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float > > > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeIF2

        Parameters
        ----------
        index: itkIndex2 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNIF2"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNIF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNIF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNIF22

        Create a new object of the class itkSparseImageNBNIF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNIF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNIF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNIF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNIF22 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF22_swigregister(itkSparseImageNBNIF22)

def itkSparseImageNBNIF33_New():
    return itkSparseImageNBNIF33.New()

class itkSparseImageNBNIF33(itkImageNBNIF33):
    r"""Proxy of C++ itkSparseImageNBNIF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNIF33_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float,3 > >,3 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float,3 > >,3 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeIF3

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNIF3"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNIF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNIF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNIF33

        Create a new object of the class itkSparseImageNBNIF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNIF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNIF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNIF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNIF33 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF33_swigregister(itkSparseImageNBNIF33)

def itkSparseImageNBNIF44_New():
    return itkSparseImageNBNIF44.New()

class itkSparseImageNBNIF44(itkImageNBNIF44):
    r"""Proxy of C++ itkSparseImageNBNIF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseImageNBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseImageNBNIF44_Pointer"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_Clone(self)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float,4 > >,4 > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::SparseImage< itk::NormalBandNode< itk::Image< float,4 > >,4 > > const
        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_GetNeighborhoodAccessor(self, *args)

    def AddNode(self, index):
        r"""
        AddNode(self, index) -> itkNormalBandNodeIF4

        Parameters
        ----------
        index: itkIndex4 const &

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_AddNode(self, index)

    def GetNodeList(self):
        r"""GetNodeList(self) -> itkSparseFieldLayerNBNIF4"""
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_GetNodeList(self)
    __swig_destroy__ = _itkSparseFieldFourthOrderLevelSetImageFilterPython.delete_itkSparseImageNBNIF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseImageNBNIF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseImageNBNIF44

        Create a new object of the class itkSparseImageNBNIF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseImageNBNIF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseImageNBNIF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseImageNBNIF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseImageNBNIF44 in _itkSparseFieldFourthOrderLevelSetImageFilterPython:
_itkSparseFieldFourthOrderLevelSetImageFilterPython.itkSparseImageNBNIF44_swigregister(itkSparseImageNBNIF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def sparse_field_fourth_order_level_set_image_filter(*args: itkt.ImageLike,  max_refit_iteration: int=..., max_normal_iteration: int=..., curvature_band_width: float=..., rms_change_normal_process_trigger: float=..., normal_process_type: int=..., normal_process_conductance: float=..., normal_process_unsharp_flag: bool=..., normal_process_unsharp_weight: float=..., level_set_function=..., number_of_layers: Union[int, int]=..., iso_surface_value: float=..., interpolate_surface_location: bool=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SparseFieldFourthOrderLevelSetImageFilter"""
    import itk

    kwarg_typehints = { 'max_refit_iteration':max_refit_iteration,'max_normal_iteration':max_normal_iteration,'curvature_band_width':curvature_band_width,'rms_change_normal_process_trigger':rms_change_normal_process_trigger,'normal_process_type':normal_process_type,'normal_process_conductance':normal_process_conductance,'normal_process_unsharp_flag':normal_process_unsharp_flag,'normal_process_unsharp_weight':normal_process_unsharp_weight,'level_set_function':level_set_function,'number_of_layers':number_of_layers,'iso_surface_value':iso_surface_value,'interpolate_surface_location':interpolate_surface_location,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SparseFieldFourthOrderLevelSetImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def sparse_field_fourth_order_level_set_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.SparseFieldFourthOrderLevelSetImageFilter
    sparse_field_fourth_order_level_set_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    sparse_field_fourth_order_level_set_image_filter.__doc__ = filter_object.__doc__



