# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryErodeImageFilterPython
else:
    import _itkBinaryErodeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkBinaryDilateImageFilterPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkFlatStructuringElementPython
import itk.itkNeighborhoodPython
import itk.itkVectorPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkRGBPixelPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkIndexPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageRegionPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython

def itkBinaryErodeImageFilterID2ID2SE2_New():
    return itkBinaryErodeImageFilterID2ID2SE2.New()

class itkBinaryErodeImageFilterID2ID2SE2(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID2ID2SE2_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> double"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterID2ID2SE2

        Create a new object of the class itkBinaryErodeImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterID2ID2SE2 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID2ID2SE2_swigregister(itkBinaryErodeImageFilterID2ID2SE2)

def itkBinaryErodeImageFilterID3ID3SE3_New():
    return itkBinaryErodeImageFilterID3ID3SE3.New()

class itkBinaryErodeImageFilterID3ID3SE3(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID3ID3SE3_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> double"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterID3ID3SE3

        Create a new object of the class itkBinaryErodeImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterID3ID3SE3 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID3ID3SE3_swigregister(itkBinaryErodeImageFilterID3ID3SE3)

def itkBinaryErodeImageFilterID4ID4SE4_New():
    return itkBinaryErodeImageFilterID4ID4SE4.New()

class itkBinaryErodeImageFilterID4ID4SE4(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterID4ID4SE4_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> double"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterID4ID4SE4

        Create a new object of the class itkBinaryErodeImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterID4ID4SE4 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterID4ID4SE4_swigregister(itkBinaryErodeImageFilterID4ID4SE4)

def itkBinaryErodeImageFilterIF2IF2SE2_New():
    return itkBinaryErodeImageFilterIF2IF2SE2.New()

class itkBinaryErodeImageFilterIF2IF2SE2(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF2IF2SE2_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> float"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryErodeImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIF2IF2SE2 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF2IF2SE2_swigregister(itkBinaryErodeImageFilterIF2IF2SE2)

def itkBinaryErodeImageFilterIF3IF3SE3_New():
    return itkBinaryErodeImageFilterIF3IF3SE3.New()

class itkBinaryErodeImageFilterIF3IF3SE3(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF3IF3SE3_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> float"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryErodeImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIF3IF3SE3 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF3IF3SE3_swigregister(itkBinaryErodeImageFilterIF3IF3SE3)

def itkBinaryErodeImageFilterIF4IF4SE4_New():
    return itkBinaryErodeImageFilterIF4IF4SE4.New()

class itkBinaryErodeImageFilterIF4IF4SE4(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIF4IF4SE4_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> float"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIF4IF4SE4

        Create a new object of the class itkBinaryErodeImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIF4IF4SE4 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIF4IF4SE4_swigregister(itkBinaryErodeImageFilterIF4IF4SE4)

def itkBinaryErodeImageFilterISS2ISS2SE2_New():
    return itkBinaryErodeImageFilterISS2ISS2SE2.New()

class itkBinaryErodeImageFilterISS2ISS2SE2(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS2ISS2SE2_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryErodeImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterISS2ISS2SE2 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS2ISS2SE2_swigregister(itkBinaryErodeImageFilterISS2ISS2SE2)

def itkBinaryErodeImageFilterISS3ISS3SE3_New():
    return itkBinaryErodeImageFilterISS3ISS3SE3.New()

class itkBinaryErodeImageFilterISS3ISS3SE3(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS3ISS3SE3_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryErodeImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterISS3ISS3SE3 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS3ISS3SE3_swigregister(itkBinaryErodeImageFilterISS3ISS3SE3)

def itkBinaryErodeImageFilterISS4ISS4SE4_New():
    return itkBinaryErodeImageFilterISS4ISS4SE4.New()

class itkBinaryErodeImageFilterISS4ISS4SE4(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterISS4ISS4SE4_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterISS4ISS4SE4

        Create a new object of the class itkBinaryErodeImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterISS4ISS4SE4 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterISS4ISS4SE4_swigregister(itkBinaryErodeImageFilterISS4ISS4SE4)

def itkBinaryErodeImageFilterIUC2IUC2SE2_New():
    return itkBinaryErodeImageFilterIUC2IUC2SE2.New()

class itkBinaryErodeImageFilterIUC2IUC2SE2(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC2IUC2SE2_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned char"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryErodeImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUC2IUC2SE2 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC2IUC2SE2_swigregister(itkBinaryErodeImageFilterIUC2IUC2SE2)

def itkBinaryErodeImageFilterIUC3IUC3SE3_New():
    return itkBinaryErodeImageFilterIUC3IUC3SE3.New()

class itkBinaryErodeImageFilterIUC3IUC3SE3(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC3IUC3SE3_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned char"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryErodeImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUC3IUC3SE3 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC3IUC3SE3_swigregister(itkBinaryErodeImageFilterIUC3IUC3SE3)

def itkBinaryErodeImageFilterIUC4IUC4SE4_New():
    return itkBinaryErodeImageFilterIUC4IUC4SE4.New()

class itkBinaryErodeImageFilterIUC4IUC4SE4(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUC4IUC4SE4_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned char"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUC4IUC4SE4

        Create a new object of the class itkBinaryErodeImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUC4IUC4SE4 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUC4IUC4SE4_swigregister(itkBinaryErodeImageFilterIUC4IUC4SE4)

def itkBinaryErodeImageFilterIUS2IUS2SE2_New():
    return itkBinaryErodeImageFilterIUS2IUS2SE2.New()

class itkBinaryErodeImageFilterIUS2IUS2SE2(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS2IUS2SE2_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryErodeImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUS2IUS2SE2 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS2IUS2SE2_swigregister(itkBinaryErodeImageFilterIUS2IUS2SE2)

def itkBinaryErodeImageFilterIUS3IUS3SE3_New():
    return itkBinaryErodeImageFilterIUS3IUS3SE3.New()

class itkBinaryErodeImageFilterIUS3IUS3SE3(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS3IUS3SE3_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryErodeImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUS3IUS3SE3 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS3IUS3SE3_swigregister(itkBinaryErodeImageFilterIUS3IUS3SE3)

def itkBinaryErodeImageFilterIUS4IUS4SE4_New():
    return itkBinaryErodeImageFilterIUS4IUS4SE4.New()

class itkBinaryErodeImageFilterIUS4IUS4SE4(itk.itkBinaryDilateImageFilterPython.itkBinaryDilateImageFilterIUS4IUS4SE4_Superclass):
    r"""Proxy of C++ itkBinaryErodeImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryErodeImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryErodeImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4_Clone(self)

    def SetErodeValue(self, value):
        r"""
        SetErodeValue(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4_SetErodeValue(self, value)

    def GetErodeValue(self):
        r"""GetErodeValue(self) -> unsigned short"""
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4_GetErodeValue(self)
    __swig_destroy__ = _itkBinaryErodeImageFilterPython.delete_itkBinaryErodeImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryErodeImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryErodeImageFilterIUS4IUS4SE4

        Create a new object of the class itkBinaryErodeImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryErodeImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryErodeImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryErodeImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryErodeImageFilterIUS4IUS4SE4 in _itkBinaryErodeImageFilterPython:
_itkBinaryErodeImageFilterPython.itkBinaryErodeImageFilterIUS4IUS4SE4_swigregister(itkBinaryErodeImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_erode_image_filter(*args: itkt.ImageLike,  erode_value: int=..., foreground_value: int=..., background_value: int=..., boundary_to_foreground: bool=..., kernel: Union[itkt.FlatStructuringElement, itkt.FlatStructuringElement]=..., radius: Union[Sequence[int], int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryErodeImageFilter"""
    import itk

    kwarg_typehints = { 'erode_value':erode_value,'foreground_value':foreground_value,'background_value':background_value,'boundary_to_foreground':boundary_to_foreground,'kernel':kernel,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryErodeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_erode_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKBinaryMathematicalMorphology.BinaryErodeImageFilter
    binary_erode_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_erode_image_filter.__doc__ = filter_object.__doc__



