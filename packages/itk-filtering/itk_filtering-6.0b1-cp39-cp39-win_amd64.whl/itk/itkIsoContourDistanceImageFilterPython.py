# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKDistanceMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkIsoContourDistanceImageFilterPython
else:
    import _itkIsoContourDistanceImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKNarrowBandBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkIsoContourDistanceImageFilterID2ID2_New():
    return itkIsoContourDistanceImageFilterID2ID2.New()

class itkIsoContourDistanceImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterID2ID2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterID2ID2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI2D *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI2D_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterID2ID2

        Create a new object of the class itkIsoContourDistanceImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterID2ID2 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID2ID2_swigregister(itkIsoContourDistanceImageFilterID2ID2)

def itkIsoContourDistanceImageFilterID3ID3_New():
    return itkIsoContourDistanceImageFilterID3ID3.New()

class itkIsoContourDistanceImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterID3ID3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterID3ID3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI3D *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI3D_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterID3ID3

        Create a new object of the class itkIsoContourDistanceImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterID3ID3 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID3ID3_swigregister(itkIsoContourDistanceImageFilterID3ID3)

def itkIsoContourDistanceImageFilterID4ID4_New():
    return itkIsoContourDistanceImageFilterID4ID4.New()

class itkIsoContourDistanceImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterID4ID4_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterID4ID4_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI4D *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI4D_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterID4ID4

        Create a new object of the class itkIsoContourDistanceImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterID4ID4 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterID4ID4_swigregister(itkIsoContourDistanceImageFilterID4ID4)

def itkIsoContourDistanceImageFilterIF2IF2_New():
    return itkIsoContourDistanceImageFilterIF2IF2.New()

class itkIsoContourDistanceImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterIF2IF2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterIF2IF2_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> float"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI2F *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI2F_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterIF2IF2

        Create a new object of the class itkIsoContourDistanceImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterIF2IF2 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF2IF2_swigregister(itkIsoContourDistanceImageFilterIF2IF2)

def itkIsoContourDistanceImageFilterIF3IF3_New():
    return itkIsoContourDistanceImageFilterIF3IF3.New()

class itkIsoContourDistanceImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterIF3IF3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterIF3IF3_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> float"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI3F *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI3F_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterIF3IF3

        Create a new object of the class itkIsoContourDistanceImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterIF3IF3 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF3IF3_swigregister(itkIsoContourDistanceImageFilterIF3IF3)

def itkIsoContourDistanceImageFilterIF4IF4_New():
    return itkIsoContourDistanceImageFilterIF4IF4.New()

class itkIsoContourDistanceImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkIsoContourDistanceImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkIsoContourDistanceImageFilterIF4IF4_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkIsoContourDistanceImageFilterIF4IF4_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_GetLevelSetValue(self)

    def SetFarValue(self, _arg):
        r"""
        SetFarValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_SetFarValue(self, _arg)

    def GetFarValue(self):
        r"""GetFarValue(self) -> float"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_GetFarValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_NarrowBandingOff(self)

    def SetNarrowBand(self, ptr):
        r"""
        SetNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkNarrowBandBNI4F *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_SetNarrowBand(self, ptr)

    def GetNarrowBand(self):
        r"""GetNarrowBand(self) -> itkNarrowBandBNI4F_Pointer"""
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_GetNarrowBand(self)
    InputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_InputEqualityComparableCheck
    
    OutputEqualityComparableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_OutputEqualityComparableCheck
    
    SameDimensionCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_SameDimensionCheck
    
    DoubleConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_DoubleConvertibleToOutputCheck
    
    InputConvertibleToOutputCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    OutputAdditiveOperatorsCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_OutputAdditiveOperatorsCheck
    
    InputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_InputOStreamWritableCheck
    
    OutputOStreamWritableCheck = _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkIsoContourDistanceImageFilterPython.delete_itkIsoContourDistanceImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkIsoContourDistanceImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkIsoContourDistanceImageFilterIF4IF4

        Create a new object of the class itkIsoContourDistanceImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkIsoContourDistanceImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkIsoContourDistanceImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkIsoContourDistanceImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkIsoContourDistanceImageFilterIF4IF4 in _itkIsoContourDistanceImageFilterPython:
_itkIsoContourDistanceImageFilterPython.itkIsoContourDistanceImageFilterIF4IF4_swigregister(itkIsoContourDistanceImageFilterIF4IF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def iso_contour_distance_image_filter(*args: itkt.ImageLike,  level_set_value: float=..., far_value: float=..., narrow_banding: bool=..., narrow_band=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for IsoContourDistanceImageFilter"""
    import itk

    kwarg_typehints = { 'level_set_value':level_set_value,'far_value':far_value,'narrow_banding':narrow_banding,'narrow_band':narrow_band }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.IsoContourDistanceImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def iso_contour_distance_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKDistanceMap.IsoContourDistanceImageFilter
    iso_contour_distance_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    iso_contour_distance_image_filter.__doc__ = filter_object.__doc__



