# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFusionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelToRGBImageFilterPython
else:
    import _itkLabelToRGBImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython

def itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_New():
    return itkLabelToRGBImageFilterISS2IRGBUC2_Superclass.New()

class itkLabelToRGBImageFilterISS2IRGBUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2IRGBUC2):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS2IRGBUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS2IRGBUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS2IRGBUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS2IRGBUC2_Superclass

        Create a new object of the class itkLabelToRGBImageFilterISS2IRGBUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS2IRGBUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS2IRGBUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS2IRGBUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS2IRGBUC2_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Superclass_swigregister(itkLabelToRGBImageFilterISS2IRGBUC2_Superclass)

def itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_New():
    return itkLabelToRGBImageFilterISS3IRGBUC3_Superclass.New()

class itkLabelToRGBImageFilterISS3IRGBUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3IRGBUC3):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS3IRGBUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS3IRGBUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS3IRGBUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS3IRGBUC3_Superclass

        Create a new object of the class itkLabelToRGBImageFilterISS3IRGBUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS3IRGBUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS3IRGBUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS3IRGBUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS3IRGBUC3_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Superclass_swigregister(itkLabelToRGBImageFilterISS3IRGBUC3_Superclass)

def itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_New():
    return itkLabelToRGBImageFilterISS4IRGBUC4_Superclass.New()

class itkLabelToRGBImageFilterISS4IRGBUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4IRGBUC4):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS4IRGBUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS4IRGBUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS4IRGBUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS4IRGBUC4_Superclass

        Create a new object of the class itkLabelToRGBImageFilterISS4IRGBUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS4IRGBUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS4IRGBUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS4IRGBUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS4IRGBUC4_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Superclass_swigregister(itkLabelToRGBImageFilterISS4IRGBUC4_Superclass)

def itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_New():
    return itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass.New()

class itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IRGBUC2):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass_swigregister(itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass)

def itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_New():
    return itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass.New()

class itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IRGBUC3):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass_swigregister(itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass)

def itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_New():
    return itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass.New()

class itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IRGBUC4):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned char,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass_swigregister(itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass)

def itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_New():
    return itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass.New()

class itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL2IRGBUC2):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass_swigregister(itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass)

def itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_New():
    return itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass.New()

class itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL3IRGBUC3):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass_swigregister(itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass)

def itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_New():
    return itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass.New()

class itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUL4IRGBUC4):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass_swigregister(itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass)

def itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_New():
    return itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass.New()

class itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IRGBUC2):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass_swigregister(itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass)

def itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_New():
    return itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass.New()

class itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IRGBUC3):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass_swigregister(itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass)

def itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_New():
    return itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass.New()

class itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IRGBUC4):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_Clone(self)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_GetFunctor(self, *args)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelToRGBFunctor< unsigned short,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_SetFunctor(self, functor)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass

        Create a new object of the class itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass_swigregister(itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass)

def itkLabelToRGBImageFilterISS2IRGBUC2_New():
    return itkLabelToRGBImageFilterISS2IRGBUC2.New()

class itkLabelToRGBImageFilterISS2IRGBUC2(itkLabelToRGBImageFilterISS2IRGBUC2_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS2IRGBUC2

        Create a new object of the class itkLabelToRGBImageFilterISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS2IRGBUC2 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS2IRGBUC2_swigregister(itkLabelToRGBImageFilterISS2IRGBUC2)

def itkLabelToRGBImageFilterISS3IRGBUC3_New():
    return itkLabelToRGBImageFilterISS3IRGBUC3.New()

class itkLabelToRGBImageFilterISS3IRGBUC3(itkLabelToRGBImageFilterISS3IRGBUC3_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS3IRGBUC3

        Create a new object of the class itkLabelToRGBImageFilterISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS3IRGBUC3 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS3IRGBUC3_swigregister(itkLabelToRGBImageFilterISS3IRGBUC3)

def itkLabelToRGBImageFilterISS4IRGBUC4_New():
    return itkLabelToRGBImageFilterISS4IRGBUC4.New()

class itkLabelToRGBImageFilterISS4IRGBUC4(itkLabelToRGBImageFilterISS4IRGBUC4_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterISS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterISS4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterISS4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterISS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterISS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterISS4IRGBUC4

        Create a new object of the class itkLabelToRGBImageFilterISS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterISS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterISS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterISS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterISS4IRGBUC4 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterISS4IRGBUC4_swigregister(itkLabelToRGBImageFilterISS4IRGBUC4)

def itkLabelToRGBImageFilterIUC2IRGBUC2_New():
    return itkLabelToRGBImageFilterIUC2IRGBUC2.New()

class itkLabelToRGBImageFilterIUC2IRGBUC2(itkLabelToRGBImageFilterIUC2IRGBUC2_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC2IRGBUC2

        Create a new object of the class itkLabelToRGBImageFilterIUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC2IRGBUC2 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC2IRGBUC2_swigregister(itkLabelToRGBImageFilterIUC2IRGBUC2)

def itkLabelToRGBImageFilterIUC3IRGBUC3_New():
    return itkLabelToRGBImageFilterIUC3IRGBUC3.New()

class itkLabelToRGBImageFilterIUC3IRGBUC3(itkLabelToRGBImageFilterIUC3IRGBUC3_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC3IRGBUC3

        Create a new object of the class itkLabelToRGBImageFilterIUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC3IRGBUC3 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC3IRGBUC3_swigregister(itkLabelToRGBImageFilterIUC3IRGBUC3)

def itkLabelToRGBImageFilterIUC4IRGBUC4_New():
    return itkLabelToRGBImageFilterIUC4IRGBUC4.New()

class itkLabelToRGBImageFilterIUC4IRGBUC4(itkLabelToRGBImageFilterIUC4IRGBUC4_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUC4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUC4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUC4IRGBUC4

        Create a new object of the class itkLabelToRGBImageFilterIUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUC4IRGBUC4 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUC4IRGBUC4_swigregister(itkLabelToRGBImageFilterIUC4IRGBUC4)

def itkLabelToRGBImageFilterIUL2IRGBUC2_New():
    return itkLabelToRGBImageFilterIUL2IRGBUC2.New()

class itkLabelToRGBImageFilterIUL2IRGBUC2(itkLabelToRGBImageFilterIUL2IRGBUC2_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL2IRGBUC2

        Create a new object of the class itkLabelToRGBImageFilterIUL2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL2IRGBUC2 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL2IRGBUC2_swigregister(itkLabelToRGBImageFilterIUL2IRGBUC2)

def itkLabelToRGBImageFilterIUL3IRGBUC3_New():
    return itkLabelToRGBImageFilterIUL3IRGBUC3.New()

class itkLabelToRGBImageFilterIUL3IRGBUC3(itkLabelToRGBImageFilterIUL3IRGBUC3_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL3IRGBUC3

        Create a new object of the class itkLabelToRGBImageFilterIUL3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL3IRGBUC3 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL3IRGBUC3_swigregister(itkLabelToRGBImageFilterIUL3IRGBUC3)

def itkLabelToRGBImageFilterIUL4IRGBUC4_New():
    return itkLabelToRGBImageFilterIUL4IRGBUC4.New()

class itkLabelToRGBImageFilterIUL4IRGBUC4(itkLabelToRGBImageFilterIUL4IRGBUC4_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUL4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUL4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUL4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned long const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUL4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUL4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUL4IRGBUC4

        Create a new object of the class itkLabelToRGBImageFilterIUL4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUL4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUL4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUL4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUL4IRGBUC4 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUL4IRGBUC4_swigregister(itkLabelToRGBImageFilterIUL4IRGBUC4)

def itkLabelToRGBImageFilterIUS2IRGBUC2_New():
    return itkLabelToRGBImageFilterIUS2IRGBUC2.New()

class itkLabelToRGBImageFilterIUS2IRGBUC2(itkLabelToRGBImageFilterIUS2IRGBUC2_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS2IRGBUC2_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS2IRGBUC2

        Create a new object of the class itkLabelToRGBImageFilterIUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS2IRGBUC2 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS2IRGBUC2_swigregister(itkLabelToRGBImageFilterIUS2IRGBUC2)

def itkLabelToRGBImageFilterIUS3IRGBUC3_New():
    return itkLabelToRGBImageFilterIUS3IRGBUC3.New()

class itkLabelToRGBImageFilterIUS3IRGBUC3(itkLabelToRGBImageFilterIUS3IRGBUC3_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS3IRGBUC3_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS3IRGBUC3

        Create a new object of the class itkLabelToRGBImageFilterIUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS3IRGBUC3 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS3IRGBUC3_swigregister(itkLabelToRGBImageFilterIUS3IRGBUC3)

def itkLabelToRGBImageFilterIUS4IRGBUC4_New():
    return itkLabelToRGBImageFilterIUS4IRGBUC4.New()

class itkLabelToRGBImageFilterIUS4IRGBUC4(itkLabelToRGBImageFilterIUS4IRGBUC4_Superclass):
    r"""Proxy of C++ itkLabelToRGBImageFilterIUS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelToRGBImageFilterIUS4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelToRGBImageFilterIUS4IRGBUC4_Pointer"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_Clone(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short const &"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_GetBackgroundValue(self)

    def SetBackgroundColor(self, _arg):
        r"""
        SetBackgroundColor(self, _arg)

        Parameters
        ----------
        _arg: itkRGBPixelUC

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_SetBackgroundColor(self, _arg)

    def GetBackgroundColor(self):
        r"""GetBackgroundColor(self) -> itkRGBPixelUC"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_GetBackgroundColor(self)

    def ResetColors(self):
        r"""ResetColors(self)"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_ResetColors(self)

    def GetNumberOfColors(self):
        r"""GetNumberOfColors(self) -> unsigned int"""
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_GetNumberOfColors(self)

    def AddColor(self, r, g, b):
        r"""
        AddColor(self, r, g, b)

        Parameters
        ----------
        r: unsigned char
        g: unsigned char
        b: unsigned char

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_AddColor(self, r, g, b)
    __swig_destroy__ = _itkLabelToRGBImageFilterPython.delete_itkLabelToRGBImageFilterIUS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelToRGBImageFilterIUS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelToRGBImageFilterIUS4IRGBUC4

        Create a new object of the class itkLabelToRGBImageFilterIUS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelToRGBImageFilterIUS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelToRGBImageFilterIUS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelToRGBImageFilterIUS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelToRGBImageFilterIUS4IRGBUC4 in _itkLabelToRGBImageFilterPython:
_itkLabelToRGBImageFilterPython.itkLabelToRGBImageFilterIUS4IRGBUC4_swigregister(itkLabelToRGBImageFilterIUS4IRGBUC4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def unary_functor_image_filter(*args: itkt.ImageLike,  functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for UnaryFunctorImageFilter"""
    import itk

    kwarg_typehints = { 'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.UnaryFunctorImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def unary_functor_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFusion.UnaryFunctorImageFilter
    unary_functor_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    unary_functor_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_to_rgb_image_filter(*args: itkt.ImageLike,  background_value: int=..., background_color: tuple[int, int, int]=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelToRGBImageFilter"""
    import itk

    kwarg_typehints = { 'background_value':background_value,'background_color':background_color,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelToRGBImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_to_rgb_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFusion.LabelToRGBImageFilter
    label_to_rgb_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_to_rgb_image_filter.__doc__ = filter_object.__doc__



