# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGradientPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorGradientMagnitudeImageFilterPython
else:
    import _itkVectorGradientMagnitudeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython

def itkVectorGradientMagnitudeImageFilterIVF22D_New():
    return itkVectorGradientMagnitudeImageFilterIVF22D.New()

class itkVectorGradientMagnitudeImageFilterIVF22D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF22ID2):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF22D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF22D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayD2"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD2

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayD2"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF22D

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF22D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF22D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF22D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF22D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF22D in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22D_swigregister(itkVectorGradientMagnitudeImageFilterIVF22D)

def itkVectorGradientMagnitudeImageFilterIVF22F_New():
    return itkVectorGradientMagnitudeImageFilterIVF22F.New()

class itkVectorGradientMagnitudeImageFilterIVF22F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF22IF2):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF22F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF22F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF22F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF2

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayF2"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF2

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayF2"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF22F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF22F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF22F

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF22F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF22F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF22F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF22F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF22F in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF22F_swigregister(itkVectorGradientMagnitudeImageFilterIVF22F)

def itkVectorGradientMagnitudeImageFilterIVF33D_New():
    return itkVectorGradientMagnitudeImageFilterIVF33D.New()

class itkVectorGradientMagnitudeImageFilterIVF33D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF33ID3):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF33D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF33D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayD3"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD3

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayD3"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF33D

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF33D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF33D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF33D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF33D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF33D in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33D_swigregister(itkVectorGradientMagnitudeImageFilterIVF33D)

def itkVectorGradientMagnitudeImageFilterIVF33F_New():
    return itkVectorGradientMagnitudeImageFilterIVF33F.New()

class itkVectorGradientMagnitudeImageFilterIVF33F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF33IF3):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF33F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF33F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF33F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF3

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayF3"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF3

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayF3"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF33F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF33F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF33F

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF33F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF33F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF33F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF33F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF33F in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF33F_swigregister(itkVectorGradientMagnitudeImageFilterIVF33F)

def itkVectorGradientMagnitudeImageFilterIVF44D_New():
    return itkVectorGradientMagnitudeImageFilterIVF44D.New()

class itkVectorGradientMagnitudeImageFilterIVF44D(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF44ID4):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF44D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF44D_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayD4"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayD4"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF44D

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF44D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF44D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF44D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF44D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF44D in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44D_swigregister(itkVectorGradientMagnitudeImageFilterIVF44D)

def itkVectorGradientMagnitudeImageFilterIVF44F_New():
    return itkVectorGradientMagnitudeImageFilterIVF44F.New()

class itkVectorGradientMagnitudeImageFilterIVF44F(itk.itkImageToImageFilterBPython.itkImageToImageFilterIVF44IF4):
    r"""Proxy of C++ itkVectorGradientMagnitudeImageFilterIVF44F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorGradientMagnitudeImageFilterIVF44F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorGradientMagnitudeImageFilterIVF44F_Pointer"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_Clone(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_GenerateInputRequestedRegion(self)

    def SetUseImageSpacing(self, arg0):
        r"""
        SetUseImageSpacing(self, arg0)

        Parameters
        ----------
        arg0: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUseImageSpacing(self, arg0)

    def GetUseImageSpacing(self):
        r"""GetUseImageSpacing(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_GetUseImageSpacing(self)

    def UseImageSpacingOn(self):
        r"""UseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_UseImageSpacingOn(self)

    def UseImageSpacingOff(self):
        r"""UseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_UseImageSpacingOff(self)

    def SetUseImageSpacingOn(self):
        r"""SetUseImageSpacingOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUseImageSpacingOn(self)

    def SetUseImageSpacingOff(self):
        r"""SetUseImageSpacingOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUseImageSpacingOff(self)

    def SetDerivativeWeights(self, _arg):
        r"""
        SetDerivativeWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF4

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetDerivativeWeights(self, _arg)

    def GetDerivativeWeights(self):
        r"""GetDerivativeWeights(self) -> itkFixedArrayF4"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_GetDerivativeWeights(self)

    def SetComponentWeights(self, _arg):
        r"""
        SetComponentWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayF4

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetComponentWeights(self, _arg)

    def GetComponentWeights(self):
        r"""GetComponentWeights(self) -> itkFixedArrayF4"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_GetComponentWeights(self)

    def SetUsePrincipleComponents(self, _arg):
        r"""
        SetUsePrincipleComponents(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUsePrincipleComponents(self, _arg)

    def GetUsePrincipleComponents(self):
        r"""GetUsePrincipleComponents(self) -> bool"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_GetUsePrincipleComponents(self)

    def UsePrincipleComponentsOn(self):
        r"""UsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_UsePrincipleComponentsOn(self)

    def UsePrincipleComponentsOff(self):
        r"""UsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_UsePrincipleComponentsOff(self)

    def SetUsePrincipleComponentsOn(self):
        r"""SetUsePrincipleComponentsOn(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUsePrincipleComponentsOn(self)

    def SetUsePrincipleComponentsOff(self):
        r"""SetUsePrincipleComponentsOff(self)"""
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SetUsePrincipleComponentsOff(self)

    @staticmethod
    def CubicSolver(arg0, arg1):
        r"""
        CubicSolver(arg0, arg1) -> int

        Parameters
        ----------
        arg0: double const *
        arg1: double *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_CubicSolver(arg0, arg1)
    SameDimensionCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_SameDimensionCheck
    
    InputHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_InputHasNumericTraitsCheck
    
    RealTypeHasNumericTraitsCheck = _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_RealTypeHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorGradientMagnitudeImageFilterPython.delete_itkVectorGradientMagnitudeImageFilterIVF44F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorGradientMagnitudeImageFilterIVF44F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorGradientMagnitudeImageFilterIVF44F

        Create a new object of the class itkVectorGradientMagnitudeImageFilterIVF44F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorGradientMagnitudeImageFilterIVF44F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorGradientMagnitudeImageFilterIVF44F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorGradientMagnitudeImageFilterIVF44F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorGradientMagnitudeImageFilterIVF44F in _itkVectorGradientMagnitudeImageFilterPython:
_itkVectorGradientMagnitudeImageFilterPython.itkVectorGradientMagnitudeImageFilterIVF44F_swigregister(itkVectorGradientMagnitudeImageFilterIVF44F)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def vector_gradient_magnitude_image_filter(*args: itkt.ImageLike,  use_image_spacing: bool=..., derivative_weights: Sequence[float]=..., component_weights: Sequence[float]=..., use_principle_components: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VectorGradientMagnitudeImageFilter"""
    import itk

    kwarg_typehints = { 'use_image_spacing':use_image_spacing,'derivative_weights':derivative_weights,'component_weights':component_weights,'use_principle_components':use_principle_components }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VectorGradientMagnitudeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def vector_gradient_magnitude_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGradient.VectorGradientMagnitudeImageFilter
    vector_gradient_magnitude_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vector_gradient_magnitude_image_filter.__doc__ = filter_object.__doc__



