# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSparseFieldLevelSetImageFilterPython
else:
    import _itkSparseFieldLevelSetImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkFiniteDifferenceFunctionPython

def itkSparseFieldLayerSFLSNI2_New():
    return itkSparseFieldLayerSFLSNI2.New()

class itkSparseFieldLayerSFLSNI2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerSFLSNI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerSFLSNI2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerSFLSNI2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkSparseFieldLevelSetNodeI2
        Front(self) -> itkSparseFieldLevelSetNodeI2
        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI2 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI2 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerSFLSNI2::RegionType,std::allocator< itkSparseFieldLayerSFLSNI2::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerSFLSNI2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerSFLSNI2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerSFLSNI2

        Create a new object of the class itkSparseFieldLayerSFLSNI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerSFLSNI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerSFLSNI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerSFLSNI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerSFLSNI2 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI2_swigregister(itkSparseFieldLayerSFLSNI2)

def itkSparseFieldLayerSFLSNI3_New():
    return itkSparseFieldLayerSFLSNI3.New()

class itkSparseFieldLayerSFLSNI3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerSFLSNI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerSFLSNI3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerSFLSNI3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkSparseFieldLevelSetNodeI3
        Front(self) -> itkSparseFieldLevelSetNodeI3
        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI3 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI3 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerSFLSNI3::RegionType,std::allocator< itkSparseFieldLayerSFLSNI3::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerSFLSNI3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerSFLSNI3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerSFLSNI3

        Create a new object of the class itkSparseFieldLayerSFLSNI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerSFLSNI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerSFLSNI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerSFLSNI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerSFLSNI3 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI3_swigregister(itkSparseFieldLayerSFLSNI3)

def itkSparseFieldLayerSFLSNI4_New():
    return itkSparseFieldLayerSFLSNI4.New()

class itkSparseFieldLayerSFLSNI4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSparseFieldLayerSFLSNI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLayerSFLSNI4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLayerSFLSNI4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_Clone(self)

    def Front(self, *args):
        r"""
        Front(self) -> itkSparseFieldLevelSetNodeI4
        Front(self) -> itkSparseFieldLevelSetNodeI4
        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_Front(self, *args)

    def PopFront(self):
        r"""PopFront(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_PopFront(self)

    def PushFront(self, n):
        r"""
        PushFront(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI4 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_PushFront(self, n)

    def Unlink(self, n):
        r"""
        Unlink(self, n)

        Parameters
        ----------
        n: itkSparseFieldLevelSetNodeI4 *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_Unlink(self, n)

    def Empty(self):
        r"""Empty(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_Empty(self)

    def Size(self):
        r"""Size(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_Size(self)

    def SplitRegions(self, num):
        r"""
        SplitRegions(self, num) -> std::vector< itkSparseFieldLayerSFLSNI4::RegionType,std::allocator< itkSparseFieldLayerSFLSNI4::RegionType > >

        Parameters
        ----------
        num: int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_SplitRegions(self, num)
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLayerSFLSNI4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLayerSFLSNI4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLayerSFLSNI4

        Create a new object of the class itkSparseFieldLayerSFLSNI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLayerSFLSNI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLayerSFLSNI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLayerSFLSNI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLayerSFLSNI4 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLayerSFLSNI4_swigregister(itkSparseFieldLayerSFLSNI4)

def itkSparseFieldLevelSetImageFilterID2ID2_New():
    return itkSparseFieldLevelSetImageFilterID2ID2.New()

class itkSparseFieldLevelSetImageFilterID2ID2(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID2ID2):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterID2ID2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterID2ID2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterID2ID2

        Create a new object of the class itkSparseFieldLevelSetImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterID2ID2 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID2ID2_swigregister(itkSparseFieldLevelSetImageFilterID2ID2)

def itkSparseFieldLevelSetImageFilterID3ID3_New():
    return itkSparseFieldLevelSetImageFilterID3ID3.New()

class itkSparseFieldLevelSetImageFilterID3ID3(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID3ID3):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterID3ID3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterID3ID3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterID3ID3

        Create a new object of the class itkSparseFieldLevelSetImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterID3ID3 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID3ID3_swigregister(itkSparseFieldLevelSetImageFilterID3ID3)

def itkSparseFieldLevelSetImageFilterID4ID4_New():
    return itkSparseFieldLevelSetImageFilterID4ID4.New()

class itkSparseFieldLevelSetImageFilterID4ID4(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterID4ID4):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterID4ID4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterID4ID4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> double"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterID4ID4

        Create a new object of the class itkSparseFieldLevelSetImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterID4ID4 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterID4ID4_swigregister(itkSparseFieldLevelSetImageFilterID4ID4)

def itkSparseFieldLevelSetImageFilterIF2IF2_New():
    return itkSparseFieldLevelSetImageFilterIF2IF2.New()

class itkSparseFieldLevelSetImageFilterIF2IF2(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF2IF2):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterIF2IF2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterIF2IF2_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterIF2IF2

        Create a new object of the class itkSparseFieldLevelSetImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterIF2IF2 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF2IF2_swigregister(itkSparseFieldLevelSetImageFilterIF2IF2)

def itkSparseFieldLevelSetImageFilterIF3IF3_New():
    return itkSparseFieldLevelSetImageFilterIF3IF3.New()

class itkSparseFieldLevelSetImageFilterIF3IF3(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF3IF3):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterIF3IF3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterIF3IF3_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterIF3IF3

        Create a new object of the class itkSparseFieldLevelSetImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterIF3IF3 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF3IF3_swigregister(itkSparseFieldLevelSetImageFilterIF3IF3)

def itkSparseFieldLevelSetImageFilterIF4IF4_New():
    return itkSparseFieldLevelSetImageFilterIF4IF4.New()

class itkSparseFieldLevelSetImageFilterIF4IF4(itk.itkFiniteDifferenceImageFilterPython.itkFiniteDifferenceImageFilterIF4IF4):
    r"""Proxy of C++ itkSparseFieldLevelSetImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSparseFieldLevelSetImageFilterIF4IF4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSparseFieldLevelSetImageFilterIF4IF4_Pointer"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_Clone(self)

    def SetNumberOfLayers(self, _arg):
        r"""
        SetNumberOfLayers(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_SetNumberOfLayers(self, _arg)

    def GetNumberOfLayers(self):
        r"""GetNumberOfLayers(self) -> unsigned int"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_GetNumberOfLayers(self)

    def SetIsoSurfaceValue(self, _arg):
        r"""
        SetIsoSurfaceValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_SetIsoSurfaceValue(self, _arg)

    def GetIsoSurfaceValue(self):
        r"""GetIsoSurfaceValue(self) -> float"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_GetIsoSurfaceValue(self)

    def SetInterpolateSurfaceLocation(self, _arg):
        r"""
        SetInterpolateSurfaceLocation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_SetInterpolateSurfaceLocation(self, _arg)

    def GetInterpolateSurfaceLocation(self):
        r"""GetInterpolateSurfaceLocation(self) -> bool"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_GetInterpolateSurfaceLocation(self)

    def InterpolateSurfaceLocationOn(self):
        r"""InterpolateSurfaceLocationOn(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_InterpolateSurfaceLocationOn(self)

    def InterpolateSurfaceLocationOff(self):
        r"""InterpolateSurfaceLocationOff(self)"""
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_InterpolateSurfaceLocationOff(self)
    OutputEqualityComparableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_OutputEqualityComparableCheck
    
    DoubleConvertibleToOutputCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_DoubleConvertibleToOutputCheck
    
    OutputOStreamWritableCheck = _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSparseFieldLevelSetImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSparseFieldLevelSetImageFilterIF4IF4

        Create a new object of the class itkSparseFieldLevelSetImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSparseFieldLevelSetImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSparseFieldLevelSetImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSparseFieldLevelSetImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSparseFieldLevelSetImageFilterIF4IF4 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetImageFilterIF4IF4_swigregister(itkSparseFieldLevelSetImageFilterIF4IF4)
class itkSparseFieldLevelSetNodeI2(object):
    r"""Proxy of C++ itkSparseFieldLevelSetNodeI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetNodeI2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSparseFieldLevelSetNodeI2
        __init__(self, arg0) -> itkSparseFieldLevelSetNodeI2

        Parameters
        ----------
        arg0: itkSparseFieldLevelSetNodeI2 const &

        """
        _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI2_swiginit(self, _itkSparseFieldLevelSetImageFilterPython.new_itkSparseFieldLevelSetNodeI2(*args))

# Register itkSparseFieldLevelSetNodeI2 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI2_swigregister(itkSparseFieldLevelSetNodeI2)
class itkSparseFieldLevelSetNodeI3(object):
    r"""Proxy of C++ itkSparseFieldLevelSetNodeI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetNodeI3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSparseFieldLevelSetNodeI3
        __init__(self, arg0) -> itkSparseFieldLevelSetNodeI3

        Parameters
        ----------
        arg0: itkSparseFieldLevelSetNodeI3 const &

        """
        _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI3_swiginit(self, _itkSparseFieldLevelSetImageFilterPython.new_itkSparseFieldLevelSetNodeI3(*args))

# Register itkSparseFieldLevelSetNodeI3 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI3_swigregister(itkSparseFieldLevelSetNodeI3)
class itkSparseFieldLevelSetNodeI4(object):
    r"""Proxy of C++ itkSparseFieldLevelSetNodeI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkSparseFieldLevelSetImageFilterPython.delete_itkSparseFieldLevelSetNodeI4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkSparseFieldLevelSetNodeI4
        __init__(self, arg0) -> itkSparseFieldLevelSetNodeI4

        Parameters
        ----------
        arg0: itkSparseFieldLevelSetNodeI4 const &

        """
        _itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI4_swiginit(self, _itkSparseFieldLevelSetImageFilterPython.new_itkSparseFieldLevelSetNodeI4(*args))

# Register itkSparseFieldLevelSetNodeI4 in _itkSparseFieldLevelSetImageFilterPython:
_itkSparseFieldLevelSetImageFilterPython.itkSparseFieldLevelSetNodeI4_swigregister(itkSparseFieldLevelSetNodeI4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def sparse_field_level_set_image_filter(*args: itkt.ImageLike,  number_of_layers: int=..., iso_surface_value: float=..., interpolate_surface_location: bool=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for SparseFieldLevelSetImageFilter"""
    import itk

    kwarg_typehints = { 'number_of_layers':number_of_layers,'iso_surface_value':iso_surface_value,'interpolate_surface_location':interpolate_surface_location,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.SparseFieldLevelSetImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def sparse_field_level_set_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.SparseFieldLevelSetImageFilter
    sparse_field_level_set_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    sparse_field_level_set_image_filter.__doc__ = filter_object.__doc__



