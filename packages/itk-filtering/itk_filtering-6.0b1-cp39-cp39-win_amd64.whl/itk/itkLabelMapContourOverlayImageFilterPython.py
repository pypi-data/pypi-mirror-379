# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFusionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelMapContourOverlayImageFilterPython
else:
    import _itkLabelMapContourOverlayImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkStatisticsLabelObjectPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkCovariantVectorPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkArrayPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkShapeLabelObjectPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkImageRegionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkLabelMapFilterPython
import itk.ITKLabelMapBasePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkVectorImagePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_New():
    return itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2.New()

class itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2IRGBUC2):
    r"""Proxy of C++ itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PLAIN = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_PLAIN
    
    CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_CONTOUR
    
    SLICE_CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SLICE_CONTOUR
    
    HIGH_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_HIGH_LABEL_ON_TOP
    
    LOW_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_LOW_LABEL_ON_TOP
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC2 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC2"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetOpacity(self)

    def SetType(self, _arg):
        r"""
        SetType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetType(self, _arg)

    def GetType(self):
        r"""GetType(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetType(self)

    def SetPriority(self, _arg):
        r"""
        SetPriority(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetPriority(self, _arg)

    def GetPriority(self):
        r"""GetPriority(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetPriority(self)

    def SetDilationRadius(self, _arg):
        r"""
        SetDilationRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetDilationRadius(self, _arg)

    def GetDilationRadius(self):
        r"""GetDilationRadius(self) -> itkSize2"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetDilationRadius(self)

    def SetContourThickness(self, _arg):
        r"""
        SetContourThickness(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetContourThickness(self, _arg)

    def GetContourThickness(self):
        r"""GetContourThickness(self) -> itkSize2"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetContourThickness(self)

    def SetSliceDimension(self, _arg):
        r"""
        SetSliceDimension(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetSliceDimension(self, _arg)

    def GetSliceDimension(self):
        r"""GetSliceDimension(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetSliceDimension(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapContourOverlayImageFilterPython.delete_itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2

        Create a new object of the class itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2 in _itkLabelMapContourOverlayImageFilterPython:
_itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2_swigregister(itkLabelMapContourOverlayImageFilterLM2IUC2IRGBUC2)

def itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_New():
    return itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3.New()

class itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3IRGBUC3):
    r"""Proxy of C++ itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PLAIN = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_PLAIN
    
    CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_CONTOUR
    
    SLICE_CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SLICE_CONTOUR
    
    HIGH_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_HIGH_LABEL_ON_TOP
    
    LOW_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_LOW_LABEL_ON_TOP
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC3 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC3"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetOpacity(self)

    def SetType(self, _arg):
        r"""
        SetType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetType(self, _arg)

    def GetType(self):
        r"""GetType(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetType(self)

    def SetPriority(self, _arg):
        r"""
        SetPriority(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetPriority(self, _arg)

    def GetPriority(self):
        r"""GetPriority(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetPriority(self)

    def SetDilationRadius(self, _arg):
        r"""
        SetDilationRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetDilationRadius(self, _arg)

    def GetDilationRadius(self):
        r"""GetDilationRadius(self) -> itkSize3"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetDilationRadius(self)

    def SetContourThickness(self, _arg):
        r"""
        SetContourThickness(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetContourThickness(self, _arg)

    def GetContourThickness(self):
        r"""GetContourThickness(self) -> itkSize3"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetContourThickness(self)

    def SetSliceDimension(self, _arg):
        r"""
        SetSliceDimension(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetSliceDimension(self, _arg)

    def GetSliceDimension(self):
        r"""GetSliceDimension(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetSliceDimension(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapContourOverlayImageFilterPython.delete_itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3

        Create a new object of the class itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3 in _itkLabelMapContourOverlayImageFilterPython:
_itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3_swigregister(itkLabelMapContourOverlayImageFilterLM3IUC3IRGBUC3)

def itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_New():
    return itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4.New()

class itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4IRGBUC4):
    r"""Proxy of C++ itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr
    PLAIN = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_PLAIN
    
    CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_CONTOUR
    
    SLICE_CONTOUR = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SLICE_CONTOUR
    
    HIGH_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_HIGH_LABEL_ON_TOP
    
    LOW_LABEL_ON_TOP = _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_LOW_LABEL_ON_TOP
    

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_Pointer"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC4 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC4"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetInput2(self, input)

    def SetOpacity(self, _arg):
        r"""
        SetOpacity(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetOpacity(self, _arg)

    def GetOpacity(self):
        r"""GetOpacity(self) -> double const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetOpacity(self)

    def SetType(self, _arg):
        r"""
        SetType(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetType(self, _arg)

    def GetType(self):
        r"""GetType(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetType(self)

    def SetPriority(self, _arg):
        r"""
        SetPriority(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetPriority(self, _arg)

    def GetPriority(self):
        r"""GetPriority(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetPriority(self)

    def SetDilationRadius(self, _arg):
        r"""
        SetDilationRadius(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetDilationRadius(self, _arg)

    def GetDilationRadius(self):
        r"""GetDilationRadius(self) -> itkSize4"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetDilationRadius(self)

    def SetContourThickness(self, _arg):
        r"""
        SetContourThickness(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetContourThickness(self, _arg)

    def GetContourThickness(self):
        r"""GetContourThickness(self) -> itkSize4"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetContourThickness(self)

    def SetSliceDimension(self, _arg):
        r"""
        SetSliceDimension(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetSliceDimension(self, _arg)

    def GetSliceDimension(self):
        r"""GetSliceDimension(self) -> int const &"""
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetSliceDimension(self)

    def SetFunctor(self, functor):
        r"""
        SetFunctor(self, functor)

        Parameters
        ----------
        functor: itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_SetFunctor(self, functor)

    def GetFunctor(self, *args):
        r"""
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > >
        GetFunctor(self) -> itk::Functor::LabelOverlayFunctor< unsigned char,unsigned long,itk::RGBPixel< unsigned char > > const &
        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_GetFunctor(self, *args)
    __swig_destroy__ = _itkLabelMapContourOverlayImageFilterPython.delete_itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4

        Create a new object of the class itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4 in _itkLabelMapContourOverlayImageFilterPython:
_itkLabelMapContourOverlayImageFilterPython.itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4_swigregister(itkLabelMapContourOverlayImageFilterLM4IUC4IRGBUC4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_map_contour_overlay_image_filter(*args: itkt.ImageLike,  feature_image: itkt.Image=..., opacity: float=..., type: int=..., priority: int=..., dilation_radius: Sequence[int]=..., contour_thickness: Sequence[int]=..., slice_dimension: int=..., functor=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelMapContourOverlayImageFilter"""
    import itk

    kwarg_typehints = { 'feature_image':feature_image,'opacity':opacity,'type':type,'priority':priority,'dilation_radius':dilation_radius,'contour_thickness':contour_thickness,'slice_dimension':slice_dimension,'functor':functor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelMapContourOverlayImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_map_contour_overlay_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFusion.LabelMapContourOverlayImageFilter
    label_map_contour_overlay_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_map_contour_overlay_image_filter.__doc__ = filter_object.__doc__



