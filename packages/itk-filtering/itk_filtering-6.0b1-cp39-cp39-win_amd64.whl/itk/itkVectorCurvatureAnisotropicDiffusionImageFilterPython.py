# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKAnisotropicSmoothingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVectorCurvatureAnisotropicDiffusionImageFilterPython
else:
    import _itkVectorCurvatureAnisotropicDiffusionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkAnisotropicDiffusionImageFilterPython
import itk.itkDenseFiniteDifferenceImageFilterPython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkFiniteDifferenceFunctionPython

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF22ICVF22)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF23ICVF23)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF24ICVF24)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF32ICVF32)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF33ICVF33)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF34ICVF34)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF42ICVF42)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF43ICVF43)

def itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterICVF44ICVF44)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF22IVF22):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF22IVF22)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF23IVF23):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF23IVF23)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF24IVF24):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF24IVF24)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF32IVF32):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF32IVF32)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF33IVF33):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF33IVF33)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF34IVF34):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF34IVF34)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF42IVF42):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF42IVF42)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF43IVF43):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF43IVF43)

def itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_New():
    return itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44.New()

class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44(itk.itkAnisotropicDiffusionImageFilterPython.itkAnisotropicDiffusionImageFilterIVF44IVF44):
    r"""Proxy of C++ itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_Pointer"""
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_Clone(self)
    InputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_InputHasNumericTraitsCheck
    
    OutputHasNumericTraitsCheck = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.delete_itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44

        Create a new object of the class itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44 in _itkVectorCurvatureAnisotropicDiffusionImageFilterPython:
_itkVectorCurvatureAnisotropicDiffusionImageFilterPython.itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44_swigregister(itkVectorCurvatureAnisotropicDiffusionImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def vector_curvature_anisotropic_diffusion_image_filter(*args: itkt.ImageLike,  time_step: float=..., conductance_parameter: float=..., conductance_scaling_update_interval: int=..., conductance_scaling_parameter: float=..., fixed_average_gradient_magnitude: float=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., maximum_rms_error: float=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for VectorCurvatureAnisotropicDiffusionImageFilter"""
    import itk

    kwarg_typehints = { 'time_step':time_step,'conductance_parameter':conductance_parameter,'conductance_scaling_update_interval':conductance_scaling_update_interval,'conductance_scaling_parameter':conductance_scaling_parameter,'fixed_average_gradient_magnitude':fixed_average_gradient_magnitude,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'maximum_rms_error':maximum_rms_error,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VectorCurvatureAnisotropicDiffusionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def vector_curvature_anisotropic_diffusion_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKAnisotropicSmoothing.VectorCurvatureAnisotropicDiffusionImageFilter
    vector_curvature_anisotropic_diffusion_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vector_curvature_anisotropic_diffusion_image_filter.__doc__ = filter_object.__doc__



