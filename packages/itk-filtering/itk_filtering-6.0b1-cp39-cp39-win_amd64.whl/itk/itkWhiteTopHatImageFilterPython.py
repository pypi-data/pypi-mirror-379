# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkWhiteTopHatImageFilterPython
else:
    import _itkWhiteTopHatImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkMathematicalMorphologyEnumsPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkFlatStructuringElementPython
import itk.itkNeighborhoodPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkIndexPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkWhiteTopHatImageFilterID2ID2SE2_New():
    return itkWhiteTopHatImageFilterID2ID2SE2.New()

class itkWhiteTopHatImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkWhiteTopHatImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterID2ID2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterID2ID2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterID2ID2SE2

        Create a new object of the class itkWhiteTopHatImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterID2ID2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID2ID2SE2_swigregister(itkWhiteTopHatImageFilterID2ID2SE2)

def itkWhiteTopHatImageFilterID3ID3SE3_New():
    return itkWhiteTopHatImageFilterID3ID3SE3.New()

class itkWhiteTopHatImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkWhiteTopHatImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterID3ID3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterID3ID3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterID3ID3SE3

        Create a new object of the class itkWhiteTopHatImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterID3ID3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID3ID3SE3_swigregister(itkWhiteTopHatImageFilterID3ID3SE3)

def itkWhiteTopHatImageFilterID4ID4SE4_New():
    return itkWhiteTopHatImageFilterID4ID4SE4.New()

class itkWhiteTopHatImageFilterID4ID4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterID4ID4SE4):
    r"""Proxy of C++ itkWhiteTopHatImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterID4ID4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterID4ID4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterID4ID4SE4

        Create a new object of the class itkWhiteTopHatImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterID4ID4SE4 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterID4ID4SE4_swigregister(itkWhiteTopHatImageFilterID4ID4SE4)

def itkWhiteTopHatImageFilterIF2IF2SE2_New():
    return itkWhiteTopHatImageFilterIF2IF2SE2.New()

class itkWhiteTopHatImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIF2IF2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIF2IF2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIF2IF2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIF2IF2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF2IF2SE2_swigregister(itkWhiteTopHatImageFilterIF2IF2SE2)

def itkWhiteTopHatImageFilterIF3IF3SE3_New():
    return itkWhiteTopHatImageFilterIF3IF3SE3.New()

class itkWhiteTopHatImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIF3IF3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIF3IF3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIF3IF3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIF3IF3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF3IF3SE3_swigregister(itkWhiteTopHatImageFilterIF3IF3SE3)

def itkWhiteTopHatImageFilterIF4IF4SE4_New():
    return itkWhiteTopHatImageFilterIF4IF4SE4.New()

class itkWhiteTopHatImageFilterIF4IF4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF4IF4SE4):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIF4IF4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIF4IF4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIF4IF4SE4

        Create a new object of the class itkWhiteTopHatImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIF4IF4SE4 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIF4IF4SE4_swigregister(itkWhiteTopHatImageFilterIF4IF4SE4)

def itkWhiteTopHatImageFilterISS2ISS2SE2_New():
    return itkWhiteTopHatImageFilterISS2ISS2SE2.New()

class itkWhiteTopHatImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkWhiteTopHatImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterISS2ISS2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterISS2ISS2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterISS2ISS2SE2

        Create a new object of the class itkWhiteTopHatImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterISS2ISS2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS2ISS2SE2_swigregister(itkWhiteTopHatImageFilterISS2ISS2SE2)

def itkWhiteTopHatImageFilterISS3ISS3SE3_New():
    return itkWhiteTopHatImageFilterISS3ISS3SE3.New()

class itkWhiteTopHatImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkWhiteTopHatImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterISS3ISS3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterISS3ISS3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterISS3ISS3SE3

        Create a new object of the class itkWhiteTopHatImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterISS3ISS3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS3ISS3SE3_swigregister(itkWhiteTopHatImageFilterISS3ISS3SE3)

def itkWhiteTopHatImageFilterISS4ISS4SE4_New():
    return itkWhiteTopHatImageFilterISS4ISS4SE4.New()

class itkWhiteTopHatImageFilterISS4ISS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS4ISS4SE4):
    r"""Proxy of C++ itkWhiteTopHatImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterISS4ISS4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterISS4ISS4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterISS4ISS4SE4

        Create a new object of the class itkWhiteTopHatImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterISS4ISS4SE4 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterISS4ISS4SE4_swigregister(itkWhiteTopHatImageFilterISS4ISS4SE4)

def itkWhiteTopHatImageFilterIUC2IUC2SE2_New():
    return itkWhiteTopHatImageFilterIUC2IUC2SE2.New()

class itkWhiteTopHatImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUC2IUC2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUC2IUC2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUC2IUC2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC2IUC2SE2_swigregister(itkWhiteTopHatImageFilterIUC2IUC2SE2)

def itkWhiteTopHatImageFilterIUC3IUC3SE3_New():
    return itkWhiteTopHatImageFilterIUC3IUC3SE3.New()

class itkWhiteTopHatImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUC3IUC3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUC3IUC3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUC3IUC3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC3IUC3SE3_swigregister(itkWhiteTopHatImageFilterIUC3IUC3SE3)

def itkWhiteTopHatImageFilterIUC4IUC4SE4_New():
    return itkWhiteTopHatImageFilterIUC4IUC4SE4.New()

class itkWhiteTopHatImageFilterIUC4IUC4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC4IUC4SE4):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUC4IUC4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUC4IUC4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUC4IUC4SE4

        Create a new object of the class itkWhiteTopHatImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUC4IUC4SE4 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUC4IUC4SE4_swigregister(itkWhiteTopHatImageFilterIUC4IUC4SE4)

def itkWhiteTopHatImageFilterIUS2IUS2SE2_New():
    return itkWhiteTopHatImageFilterIUS2IUS2SE2.New()

class itkWhiteTopHatImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUS2IUS2SE2_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUS2IUS2SE2

        Create a new object of the class itkWhiteTopHatImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUS2IUS2SE2 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS2IUS2SE2_swigregister(itkWhiteTopHatImageFilterIUS2IUS2SE2)

def itkWhiteTopHatImageFilterIUS3IUS3SE3_New():
    return itkWhiteTopHatImageFilterIUS3IUS3SE3.New()

class itkWhiteTopHatImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUS3IUS3SE3_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUS3IUS3SE3

        Create a new object of the class itkWhiteTopHatImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUS3IUS3SE3 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS3IUS3SE3_swigregister(itkWhiteTopHatImageFilterIUS3IUS3SE3)

def itkWhiteTopHatImageFilterIUS4IUS4SE4_New():
    return itkWhiteTopHatImageFilterIUS4IUS4SE4.New()

class itkWhiteTopHatImageFilterIUS4IUS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS4IUS4SE4):
    r"""Proxy of C++ itkWhiteTopHatImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkWhiteTopHatImageFilterIUS4IUS4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkWhiteTopHatImageFilterIUS4IUS4SE4_Pointer"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_Clone(self)

    def SetSafeBorder(self, _arg):
        r"""
        SetSafeBorder(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_SetSafeBorder(self, _arg)

    def GetSafeBorder(self):
        r"""GetSafeBorder(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_GetSafeBorder(self)

    def SafeBorderOn(self):
        r"""SafeBorderOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_SafeBorderOn(self)

    def SafeBorderOff(self):
        r"""SafeBorderOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_SafeBorderOff(self)

    def SetAlgorithm(self, _arg):
        r"""
        SetAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: enum itkMathematicalMorphologyEnums::Algorithm

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_SetAlgorithm(self, _arg)

    def GetAlgorithm(self):
        r"""GetAlgorithm(self) -> itkMathematicalMorphologyEnums::Algorithm"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_GetAlgorithm(self)

    def SetForceAlgorithm(self, _arg):
        r"""
        SetForceAlgorithm(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_SetForceAlgorithm(self, _arg)

    def GetForceAlgorithm(self):
        r"""GetForceAlgorithm(self) -> bool const &"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_GetForceAlgorithm(self)

    def ForceAlgorithmOn(self):
        r"""ForceAlgorithmOn(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_ForceAlgorithmOn(self)

    def ForceAlgorithmOff(self):
        r"""ForceAlgorithmOff(self)"""
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_ForceAlgorithmOff(self)
    __swig_destroy__ = _itkWhiteTopHatImageFilterPython.delete_itkWhiteTopHatImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkWhiteTopHatImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkWhiteTopHatImageFilterIUS4IUS4SE4

        Create a new object of the class itkWhiteTopHatImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkWhiteTopHatImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkWhiteTopHatImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkWhiteTopHatImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkWhiteTopHatImageFilterIUS4IUS4SE4 in _itkWhiteTopHatImageFilterPython:
_itkWhiteTopHatImageFilterPython.itkWhiteTopHatImageFilterIUS4IUS4SE4_swigregister(itkWhiteTopHatImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def white_top_hat_image_filter(*args: itkt.ImageLike,  safe_border: bool=..., algorithm=..., force_algorithm: bool=..., kernel: itkt.FlatStructuringElement=..., radius: Union[Sequence[int], int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for WhiteTopHatImageFilter"""
    import itk

    kwarg_typehints = { 'safe_border':safe_border,'algorithm':algorithm,'force_algorithm':force_algorithm,'kernel':kernel,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.WhiteTopHatImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def white_top_hat_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.WhiteTopHatImageFilter
    white_top_hat_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    white_top_hat_image_filter.__doc__ = filter_object.__doc__



