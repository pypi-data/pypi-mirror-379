# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageLabelPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelContourImageFilterPython
else:
    import _itkLabelContourImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython
import itk.itkVectorImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageToImageFilterBPython
import itk.itkScanlineFilterCommonPython

def itkLabelContourImageFilterID2ID2_New():
    return itkLabelContourImageFilterID2ID2.New()

class itkLabelContourImageFilterID2ID2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID2ID2):
    r"""Proxy of C++ itkLabelContourImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterID2ID2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterID2ID2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterID2ID2

        Create a new object of the class itkLabelContourImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterID2ID2 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterID2ID2_swigregister(itkLabelContourImageFilterID2ID2)

def itkLabelContourImageFilterID3ID3_New():
    return itkLabelContourImageFilterID3ID3.New()

class itkLabelContourImageFilterID3ID3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID3ID3):
    r"""Proxy of C++ itkLabelContourImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterID3ID3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterID3ID3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterID3ID3

        Create a new object of the class itkLabelContourImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterID3ID3 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterID3ID3_swigregister(itkLabelContourImageFilterID3ID3)

def itkLabelContourImageFilterID4ID4_New():
    return itkLabelContourImageFilterID4ID4.New()

class itkLabelContourImageFilterID4ID4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterID4ID4):
    r"""Proxy of C++ itkLabelContourImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterID4ID4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterID4ID4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterID4ID4

        Create a new object of the class itkLabelContourImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterID4ID4 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterID4ID4_swigregister(itkLabelContourImageFilterID4ID4)

def itkLabelContourImageFilterIF2IF2_New():
    return itkLabelContourImageFilterIF2IF2.New()

class itkLabelContourImageFilterIF2IF2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF2IF2):
    r"""Proxy of C++ itkLabelContourImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIF2IF2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIF2IF2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIF2IF2

        Create a new object of the class itkLabelContourImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIF2IF2 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIF2IF2_swigregister(itkLabelContourImageFilterIF2IF2)

def itkLabelContourImageFilterIF3IF3_New():
    return itkLabelContourImageFilterIF3IF3.New()

class itkLabelContourImageFilterIF3IF3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF3IF3):
    r"""Proxy of C++ itkLabelContourImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIF3IF3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIF3IF3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIF3IF3

        Create a new object of the class itkLabelContourImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIF3IF3 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIF3IF3_swigregister(itkLabelContourImageFilterIF3IF3)

def itkLabelContourImageFilterIF4IF4_New():
    return itkLabelContourImageFilterIF4IF4.New()

class itkLabelContourImageFilterIF4IF4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIF4IF4):
    r"""Proxy of C++ itkLabelContourImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIF4IF4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIF4IF4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIF4IF4

        Create a new object of the class itkLabelContourImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIF4IF4 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIF4IF4_swigregister(itkLabelContourImageFilterIF4IF4)

def itkLabelContourImageFilterISS2ISS2_New():
    return itkLabelContourImageFilterISS2ISS2.New()

class itkLabelContourImageFilterISS2ISS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS2ISS2):
    r"""Proxy of C++ itkLabelContourImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterISS2ISS2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterISS2ISS2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterISS2ISS2

        Create a new object of the class itkLabelContourImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterISS2ISS2 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterISS2ISS2_swigregister(itkLabelContourImageFilterISS2ISS2)

def itkLabelContourImageFilterISS3ISS3_New():
    return itkLabelContourImageFilterISS3ISS3.New()

class itkLabelContourImageFilterISS3ISS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS3ISS3):
    r"""Proxy of C++ itkLabelContourImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterISS3ISS3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterISS3ISS3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterISS3ISS3

        Create a new object of the class itkLabelContourImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterISS3ISS3 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterISS3ISS3_swigregister(itkLabelContourImageFilterISS3ISS3)

def itkLabelContourImageFilterISS4ISS4_New():
    return itkLabelContourImageFilterISS4ISS4.New()

class itkLabelContourImageFilterISS4ISS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterISS4ISS4):
    r"""Proxy of C++ itkLabelContourImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterISS4ISS4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterISS4ISS4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterISS4ISS4

        Create a new object of the class itkLabelContourImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterISS4ISS4 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterISS4ISS4_swigregister(itkLabelContourImageFilterISS4ISS4)

def itkLabelContourImageFilterIUC2IUC2_New():
    return itkLabelContourImageFilterIUC2IUC2.New()

class itkLabelContourImageFilterIUC2IUC2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC2IUC2):
    r"""Proxy of C++ itkLabelContourImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUC2IUC2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUC2IUC2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUC2IUC2

        Create a new object of the class itkLabelContourImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUC2IUC2 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC2IUC2_swigregister(itkLabelContourImageFilterIUC2IUC2)

def itkLabelContourImageFilterIUC3IUC3_New():
    return itkLabelContourImageFilterIUC3IUC3.New()

class itkLabelContourImageFilterIUC3IUC3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC3IUC3):
    r"""Proxy of C++ itkLabelContourImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUC3IUC3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUC3IUC3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUC3IUC3

        Create a new object of the class itkLabelContourImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUC3IUC3 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC3IUC3_swigregister(itkLabelContourImageFilterIUC3IUC3)

def itkLabelContourImageFilterIUC4IUC4_New():
    return itkLabelContourImageFilterIUC4IUC4.New()

class itkLabelContourImageFilterIUC4IUC4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUC4IUC4):
    r"""Proxy of C++ itkLabelContourImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUC4IUC4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUC4IUC4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUC4IUC4

        Create a new object of the class itkLabelContourImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUC4IUC4 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUC4IUC4_swigregister(itkLabelContourImageFilterIUC4IUC4)

def itkLabelContourImageFilterIUS2IUS2_New():
    return itkLabelContourImageFilterIUS2IUS2.New()

class itkLabelContourImageFilterIUS2IUS2(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS2IUS2):
    r"""Proxy of C++ itkLabelContourImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUS2IUS2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUS2IUS2_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUS2IUS2

        Create a new object of the class itkLabelContourImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUS2IUS2 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS2IUS2_swigregister(itkLabelContourImageFilterIUS2IUS2)

def itkLabelContourImageFilterIUS3IUS3_New():
    return itkLabelContourImageFilterIUS3IUS3.New()

class itkLabelContourImageFilterIUS3IUS3(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS3IUS3):
    r"""Proxy of C++ itkLabelContourImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUS3IUS3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUS3IUS3_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUS3IUS3

        Create a new object of the class itkLabelContourImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUS3IUS3 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS3IUS3_swigregister(itkLabelContourImageFilterIUS3IUS3)

def itkLabelContourImageFilterIUS4IUS4_New():
    return itkLabelContourImageFilterIUS4IUS4.New()

class itkLabelContourImageFilterIUS4IUS4(itk.itkInPlaceImageFilterAPython.itkInPlaceImageFilterIUS4IUS4):
    r"""Proxy of C++ itkLabelContourImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelContourImageFilterIUS4IUS4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelContourImageFilterIUS4IUS4_Pointer"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_FullyConnectedOff(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_GetBackgroundValue(self)
    __swig_destroy__ = _itkLabelContourImageFilterPython.delete_itkLabelContourImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelContourImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelContourImageFilterIUS4IUS4

        Create a new object of the class itkLabelContourImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelContourImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelContourImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelContourImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelContourImageFilterIUS4IUS4 in _itkLabelContourImageFilterPython:
_itkLabelContourImageFilterPython.itkLabelContourImageFilterIUS4IUS4_swigregister(itkLabelContourImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_contour_image_filter(*args: itkt.ImageLike,  fully_connected: bool=..., background_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelContourImageFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'background_value':background_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelContourImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_contour_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageLabel.LabelContourImageFilter
    label_contour_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_contour_image_filter.__doc__ = filter_object.__doc__



