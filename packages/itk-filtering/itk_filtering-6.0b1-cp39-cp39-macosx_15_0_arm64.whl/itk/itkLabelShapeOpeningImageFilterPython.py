# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelShapeOpeningImageFilterPython
else:
    import _itkLabelShapeOpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkLabelShapeOpeningImageFilterISS2_New():
    return itkLabelShapeOpeningImageFilterISS2.New()

class itkLabelShapeOpeningImageFilterISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterISS2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterISS2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterISS2

        Create a new object of the class itkLabelShapeOpeningImageFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterISS2 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS2_swigregister(itkLabelShapeOpeningImageFilterISS2)

def itkLabelShapeOpeningImageFilterISS3_New():
    return itkLabelShapeOpeningImageFilterISS3.New()

class itkLabelShapeOpeningImageFilterISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterISS3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterISS3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterISS3

        Create a new object of the class itkLabelShapeOpeningImageFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterISS3 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS3_swigregister(itkLabelShapeOpeningImageFilterISS3)

def itkLabelShapeOpeningImageFilterISS4_New():
    return itkLabelShapeOpeningImageFilterISS4.New()

class itkLabelShapeOpeningImageFilterISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterISS4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterISS4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterISS4

        Create a new object of the class itkLabelShapeOpeningImageFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterISS4 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterISS4_swigregister(itkLabelShapeOpeningImageFilterISS4)

def itkLabelShapeOpeningImageFilterIUC2_New():
    return itkLabelShapeOpeningImageFilterIUC2.New()

class itkLabelShapeOpeningImageFilterIUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUC2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUC2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUC2

        Create a new object of the class itkLabelShapeOpeningImageFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUC2 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC2_swigregister(itkLabelShapeOpeningImageFilterIUC2)

def itkLabelShapeOpeningImageFilterIUC3_New():
    return itkLabelShapeOpeningImageFilterIUC3.New()

class itkLabelShapeOpeningImageFilterIUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUC3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUC3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUC3

        Create a new object of the class itkLabelShapeOpeningImageFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUC3 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC3_swigregister(itkLabelShapeOpeningImageFilterIUC3)

def itkLabelShapeOpeningImageFilterIUC4_New():
    return itkLabelShapeOpeningImageFilterIUC4.New()

class itkLabelShapeOpeningImageFilterIUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUC4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUC4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUC4

        Create a new object of the class itkLabelShapeOpeningImageFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUC4 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUC4_swigregister(itkLabelShapeOpeningImageFilterIUC4)

def itkLabelShapeOpeningImageFilterIUS2_New():
    return itkLabelShapeOpeningImageFilterIUS2.New()

class itkLabelShapeOpeningImageFilterIUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUS2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUS2_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUS2

        Create a new object of the class itkLabelShapeOpeningImageFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUS2 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS2_swigregister(itkLabelShapeOpeningImageFilterIUS2)

def itkLabelShapeOpeningImageFilterIUS3_New():
    return itkLabelShapeOpeningImageFilterIUS3.New()

class itkLabelShapeOpeningImageFilterIUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUS3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUS3_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUS3

        Create a new object of the class itkLabelShapeOpeningImageFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUS3 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS3_swigregister(itkLabelShapeOpeningImageFilterIUS3)

def itkLabelShapeOpeningImageFilterIUS4_New():
    return itkLabelShapeOpeningImageFilterIUS4.New()

class itkLabelShapeOpeningImageFilterIUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkLabelShapeOpeningImageFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelShapeOpeningImageFilterIUS4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelShapeOpeningImageFilterIUS4_Pointer"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_Clone(self)
    InputEqualityComparableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_InputEqualityComparableCheck
    
    IntConvertibleToInputCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_IntConvertibleToInputCheck
    
    InputOStreamWritableCheck = _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_InputOStreamWritableCheck
    

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_GetBackgroundValue(self)

    def GetLambda(self):
        r"""GetLambda(self) -> double"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_GetLambda(self)

    def SetLambda(self, _arg):
        r"""
        SetLambda(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_SetLambda(self, _arg)

    def GetReverseOrdering(self):
        r"""GetReverseOrdering(self) -> bool"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_GetReverseOrdering(self)

    def SetReverseOrdering(self, _arg):
        r"""
        SetReverseOrdering(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_SetReverseOrdering(self, _arg)

    def ReverseOrderingOn(self):
        r"""ReverseOrderingOn(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_ReverseOrderingOn(self)

    def ReverseOrderingOff(self):
        r"""ReverseOrderingOff(self)"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_ReverseOrderingOff(self)

    def GetAttribute(self):
        r"""GetAttribute(self) -> unsigned int"""
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_GetAttribute(self)

    def SetAttribute(self, *args):
        r"""
        SetAttribute(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        SetAttribute(self, s)

        Parameters
        ----------
        s: std::string const &

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_SetAttribute(self, *args)
    __swig_destroy__ = _itkLabelShapeOpeningImageFilterPython.delete_itkLabelShapeOpeningImageFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelShapeOpeningImageFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelShapeOpeningImageFilterIUS4

        Create a new object of the class itkLabelShapeOpeningImageFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelShapeOpeningImageFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelShapeOpeningImageFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelShapeOpeningImageFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelShapeOpeningImageFilterIUS4 in _itkLabelShapeOpeningImageFilterPython:
_itkLabelShapeOpeningImageFilterPython.itkLabelShapeOpeningImageFilterIUS4_swigregister(itkLabelShapeOpeningImageFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_shape_opening_image_filter(*args: itkt.ImageLike,  background_value: int=..., reverse_ordering: bool=..., attribute: Union[int, str]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelShapeOpeningImageFilter"""
    import itk

    kwarg_typehints = { 'background_value':background_value,'reverse_ordering':reverse_ordering,'attribute':attribute }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelShapeOpeningImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_shape_opening_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.LabelShapeOpeningImageFilter
    label_shape_opening_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_shape_opening_image_filter.__doc__ = filter_object.__doc__



