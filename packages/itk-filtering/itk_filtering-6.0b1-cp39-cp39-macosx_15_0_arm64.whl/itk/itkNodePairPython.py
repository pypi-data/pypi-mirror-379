# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNodePairPython
else:
    import _itkNodePairPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
class itkNodePairI2D(object):
    r"""Proxy of C++ itkNodePairI2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI2D
        __init__(self, iNode, iValue) -> itkNodePairI2D

        Parameters
        ----------
        iNode: itkIndex2 const &
        iValue: double const &

        __init__(self, iPair) -> itkNodePairI2D

        Parameters
        ----------
        iPair: itkNodePairI2D const &

        """
        _itkNodePairPython.itkNodePairI2D_swiginit(self, _itkNodePairPython.new_itkNodePairI2D(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: double const &

        """
        return _itkNodePairPython.itkNodePairI2D_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> double const
        GetValue(self) -> double &
        """
        return _itkNodePairPython.itkNodePairI2D_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex2 const &

        """
        return _itkNodePairPython.itkNodePairI2D_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex2
        GetNode(self) -> itkIndex2
        """
        return _itkNodePairPython.itkNodePairI2D_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2D const &

        """
        return _itkNodePairPython.itkNodePairI2D___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2D const &

        """
        return _itkNodePairPython.itkNodePairI2D___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2D const &

        """
        return _itkNodePairPython.itkNodePairI2D___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2D const &

        """
        return _itkNodePairPython.itkNodePairI2D___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2D

# Register itkNodePairI2D in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2D_swigregister(itkNodePairI2D)
class itkNodePairI2F(object):
    r"""Proxy of C++ itkNodePairI2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI2F
        __init__(self, iNode, iValue) -> itkNodePairI2F

        Parameters
        ----------
        iNode: itkIndex2 const &
        iValue: float const &

        __init__(self, iPair) -> itkNodePairI2F

        Parameters
        ----------
        iPair: itkNodePairI2F const &

        """
        _itkNodePairPython.itkNodePairI2F_swiginit(self, _itkNodePairPython.new_itkNodePairI2F(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: float const &

        """
        return _itkNodePairPython.itkNodePairI2F_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> float const
        GetValue(self) -> float &
        """
        return _itkNodePairPython.itkNodePairI2F_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex2 const &

        """
        return _itkNodePairPython.itkNodePairI2F_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex2
        GetNode(self) -> itkIndex2
        """
        return _itkNodePairPython.itkNodePairI2F_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2F const &

        """
        return _itkNodePairPython.itkNodePairI2F___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2F const &

        """
        return _itkNodePairPython.itkNodePairI2F___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2F const &

        """
        return _itkNodePairPython.itkNodePairI2F___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2F const &

        """
        return _itkNodePairPython.itkNodePairI2F___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2F

# Register itkNodePairI2F in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2F_swigregister(itkNodePairI2F)
class itkNodePairI2SS(object):
    r"""Proxy of C++ itkNodePairI2SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI2SS
        __init__(self, iNode, iValue) -> itkNodePairI2SS

        Parameters
        ----------
        iNode: itkIndex2 const &
        iValue: short const &

        __init__(self, iPair) -> itkNodePairI2SS

        Parameters
        ----------
        iPair: itkNodePairI2SS const &

        """
        _itkNodePairPython.itkNodePairI2SS_swiginit(self, _itkNodePairPython.new_itkNodePairI2SS(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: short const &

        """
        return _itkNodePairPython.itkNodePairI2SS_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> short const
        GetValue(self) -> short &
        """
        return _itkNodePairPython.itkNodePairI2SS_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex2 const &

        """
        return _itkNodePairPython.itkNodePairI2SS_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex2
        GetNode(self) -> itkIndex2
        """
        return _itkNodePairPython.itkNodePairI2SS_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2SS const &

        """
        return _itkNodePairPython.itkNodePairI2SS___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2SS const &

        """
        return _itkNodePairPython.itkNodePairI2SS___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2SS const &

        """
        return _itkNodePairPython.itkNodePairI2SS___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2SS const &

        """
        return _itkNodePairPython.itkNodePairI2SS___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2SS

# Register itkNodePairI2SS in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2SS_swigregister(itkNodePairI2SS)
class itkNodePairI2UC(object):
    r"""Proxy of C++ itkNodePairI2UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI2UC
        __init__(self, iNode, iValue) -> itkNodePairI2UC

        Parameters
        ----------
        iNode: itkIndex2 const &
        iValue: unsigned char const &

        __init__(self, iPair) -> itkNodePairI2UC

        Parameters
        ----------
        iPair: itkNodePairI2UC const &

        """
        _itkNodePairPython.itkNodePairI2UC_swiginit(self, _itkNodePairPython.new_itkNodePairI2UC(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned char const &

        """
        return _itkNodePairPython.itkNodePairI2UC_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned char const
        GetValue(self) -> unsigned char &
        """
        return _itkNodePairPython.itkNodePairI2UC_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex2 const &

        """
        return _itkNodePairPython.itkNodePairI2UC_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex2
        GetNode(self) -> itkIndex2
        """
        return _itkNodePairPython.itkNodePairI2UC_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2UC const &

        """
        return _itkNodePairPython.itkNodePairI2UC___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2UC const &

        """
        return _itkNodePairPython.itkNodePairI2UC___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2UC const &

        """
        return _itkNodePairPython.itkNodePairI2UC___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2UC const &

        """
        return _itkNodePairPython.itkNodePairI2UC___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2UC

# Register itkNodePairI2UC in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2UC_swigregister(itkNodePairI2UC)
class itkNodePairI2US(object):
    r"""Proxy of C++ itkNodePairI2US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI2US
        __init__(self, iNode, iValue) -> itkNodePairI2US

        Parameters
        ----------
        iNode: itkIndex2 const &
        iValue: unsigned short const &

        __init__(self, iPair) -> itkNodePairI2US

        Parameters
        ----------
        iPair: itkNodePairI2US const &

        """
        _itkNodePairPython.itkNodePairI2US_swiginit(self, _itkNodePairPython.new_itkNodePairI2US(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned short const &

        """
        return _itkNodePairPython.itkNodePairI2US_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned short const
        GetValue(self) -> unsigned short &
        """
        return _itkNodePairPython.itkNodePairI2US_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex2 const &

        """
        return _itkNodePairPython.itkNodePairI2US_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex2
        GetNode(self) -> itkIndex2
        """
        return _itkNodePairPython.itkNodePairI2US_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2US const &

        """
        return _itkNodePairPython.itkNodePairI2US___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2US const &

        """
        return _itkNodePairPython.itkNodePairI2US___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2US const &

        """
        return _itkNodePairPython.itkNodePairI2US___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI2US const &

        """
        return _itkNodePairPython.itkNodePairI2US___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI2US

# Register itkNodePairI2US in _itkNodePairPython:
_itkNodePairPython.itkNodePairI2US_swigregister(itkNodePairI2US)
class itkNodePairI3D(object):
    r"""Proxy of C++ itkNodePairI3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI3D
        __init__(self, iNode, iValue) -> itkNodePairI3D

        Parameters
        ----------
        iNode: itkIndex3 const &
        iValue: double const &

        __init__(self, iPair) -> itkNodePairI3D

        Parameters
        ----------
        iPair: itkNodePairI3D const &

        """
        _itkNodePairPython.itkNodePairI3D_swiginit(self, _itkNodePairPython.new_itkNodePairI3D(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: double const &

        """
        return _itkNodePairPython.itkNodePairI3D_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> double const
        GetValue(self) -> double &
        """
        return _itkNodePairPython.itkNodePairI3D_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex3 const &

        """
        return _itkNodePairPython.itkNodePairI3D_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex3
        GetNode(self) -> itkIndex3
        """
        return _itkNodePairPython.itkNodePairI3D_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3D const &

        """
        return _itkNodePairPython.itkNodePairI3D___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3D const &

        """
        return _itkNodePairPython.itkNodePairI3D___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3D const &

        """
        return _itkNodePairPython.itkNodePairI3D___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3D const &

        """
        return _itkNodePairPython.itkNodePairI3D___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3D

# Register itkNodePairI3D in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3D_swigregister(itkNodePairI3D)
class itkNodePairI3F(object):
    r"""Proxy of C++ itkNodePairI3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI3F
        __init__(self, iNode, iValue) -> itkNodePairI3F

        Parameters
        ----------
        iNode: itkIndex3 const &
        iValue: float const &

        __init__(self, iPair) -> itkNodePairI3F

        Parameters
        ----------
        iPair: itkNodePairI3F const &

        """
        _itkNodePairPython.itkNodePairI3F_swiginit(self, _itkNodePairPython.new_itkNodePairI3F(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: float const &

        """
        return _itkNodePairPython.itkNodePairI3F_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> float const
        GetValue(self) -> float &
        """
        return _itkNodePairPython.itkNodePairI3F_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex3 const &

        """
        return _itkNodePairPython.itkNodePairI3F_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex3
        GetNode(self) -> itkIndex3
        """
        return _itkNodePairPython.itkNodePairI3F_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3F const &

        """
        return _itkNodePairPython.itkNodePairI3F___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3F const &

        """
        return _itkNodePairPython.itkNodePairI3F___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3F const &

        """
        return _itkNodePairPython.itkNodePairI3F___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3F const &

        """
        return _itkNodePairPython.itkNodePairI3F___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3F

# Register itkNodePairI3F in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3F_swigregister(itkNodePairI3F)
class itkNodePairI3SS(object):
    r"""Proxy of C++ itkNodePairI3SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI3SS
        __init__(self, iNode, iValue) -> itkNodePairI3SS

        Parameters
        ----------
        iNode: itkIndex3 const &
        iValue: short const &

        __init__(self, iPair) -> itkNodePairI3SS

        Parameters
        ----------
        iPair: itkNodePairI3SS const &

        """
        _itkNodePairPython.itkNodePairI3SS_swiginit(self, _itkNodePairPython.new_itkNodePairI3SS(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: short const &

        """
        return _itkNodePairPython.itkNodePairI3SS_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> short const
        GetValue(self) -> short &
        """
        return _itkNodePairPython.itkNodePairI3SS_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex3 const &

        """
        return _itkNodePairPython.itkNodePairI3SS_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex3
        GetNode(self) -> itkIndex3
        """
        return _itkNodePairPython.itkNodePairI3SS_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3SS const &

        """
        return _itkNodePairPython.itkNodePairI3SS___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3SS const &

        """
        return _itkNodePairPython.itkNodePairI3SS___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3SS const &

        """
        return _itkNodePairPython.itkNodePairI3SS___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3SS const &

        """
        return _itkNodePairPython.itkNodePairI3SS___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3SS

# Register itkNodePairI3SS in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3SS_swigregister(itkNodePairI3SS)
class itkNodePairI3UC(object):
    r"""Proxy of C++ itkNodePairI3UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI3UC
        __init__(self, iNode, iValue) -> itkNodePairI3UC

        Parameters
        ----------
        iNode: itkIndex3 const &
        iValue: unsigned char const &

        __init__(self, iPair) -> itkNodePairI3UC

        Parameters
        ----------
        iPair: itkNodePairI3UC const &

        """
        _itkNodePairPython.itkNodePairI3UC_swiginit(self, _itkNodePairPython.new_itkNodePairI3UC(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned char const &

        """
        return _itkNodePairPython.itkNodePairI3UC_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned char const
        GetValue(self) -> unsigned char &
        """
        return _itkNodePairPython.itkNodePairI3UC_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex3 const &

        """
        return _itkNodePairPython.itkNodePairI3UC_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex3
        GetNode(self) -> itkIndex3
        """
        return _itkNodePairPython.itkNodePairI3UC_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3UC const &

        """
        return _itkNodePairPython.itkNodePairI3UC___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3UC const &

        """
        return _itkNodePairPython.itkNodePairI3UC___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3UC const &

        """
        return _itkNodePairPython.itkNodePairI3UC___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3UC const &

        """
        return _itkNodePairPython.itkNodePairI3UC___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3UC

# Register itkNodePairI3UC in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3UC_swigregister(itkNodePairI3UC)
class itkNodePairI3US(object):
    r"""Proxy of C++ itkNodePairI3US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI3US
        __init__(self, iNode, iValue) -> itkNodePairI3US

        Parameters
        ----------
        iNode: itkIndex3 const &
        iValue: unsigned short const &

        __init__(self, iPair) -> itkNodePairI3US

        Parameters
        ----------
        iPair: itkNodePairI3US const &

        """
        _itkNodePairPython.itkNodePairI3US_swiginit(self, _itkNodePairPython.new_itkNodePairI3US(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned short const &

        """
        return _itkNodePairPython.itkNodePairI3US_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned short const
        GetValue(self) -> unsigned short &
        """
        return _itkNodePairPython.itkNodePairI3US_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex3 const &

        """
        return _itkNodePairPython.itkNodePairI3US_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex3
        GetNode(self) -> itkIndex3
        """
        return _itkNodePairPython.itkNodePairI3US_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3US const &

        """
        return _itkNodePairPython.itkNodePairI3US___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3US const &

        """
        return _itkNodePairPython.itkNodePairI3US___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3US const &

        """
        return _itkNodePairPython.itkNodePairI3US___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI3US const &

        """
        return _itkNodePairPython.itkNodePairI3US___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI3US

# Register itkNodePairI3US in _itkNodePairPython:
_itkNodePairPython.itkNodePairI3US_swigregister(itkNodePairI3US)
class itkNodePairI4D(object):
    r"""Proxy of C++ itkNodePairI4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI4D
        __init__(self, iNode, iValue) -> itkNodePairI4D

        Parameters
        ----------
        iNode: itkIndex4 const &
        iValue: double const &

        __init__(self, iPair) -> itkNodePairI4D

        Parameters
        ----------
        iPair: itkNodePairI4D const &

        """
        _itkNodePairPython.itkNodePairI4D_swiginit(self, _itkNodePairPython.new_itkNodePairI4D(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: double const &

        """
        return _itkNodePairPython.itkNodePairI4D_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> double const
        GetValue(self) -> double &
        """
        return _itkNodePairPython.itkNodePairI4D_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex4 const &

        """
        return _itkNodePairPython.itkNodePairI4D_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex4
        GetNode(self) -> itkIndex4
        """
        return _itkNodePairPython.itkNodePairI4D_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4D const &

        """
        return _itkNodePairPython.itkNodePairI4D___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4D const &

        """
        return _itkNodePairPython.itkNodePairI4D___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4D const &

        """
        return _itkNodePairPython.itkNodePairI4D___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4D const &

        """
        return _itkNodePairPython.itkNodePairI4D___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI4D

# Register itkNodePairI4D in _itkNodePairPython:
_itkNodePairPython.itkNodePairI4D_swigregister(itkNodePairI4D)
class itkNodePairI4F(object):
    r"""Proxy of C++ itkNodePairI4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI4F
        __init__(self, iNode, iValue) -> itkNodePairI4F

        Parameters
        ----------
        iNode: itkIndex4 const &
        iValue: float const &

        __init__(self, iPair) -> itkNodePairI4F

        Parameters
        ----------
        iPair: itkNodePairI4F const &

        """
        _itkNodePairPython.itkNodePairI4F_swiginit(self, _itkNodePairPython.new_itkNodePairI4F(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: float const &

        """
        return _itkNodePairPython.itkNodePairI4F_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> float const
        GetValue(self) -> float &
        """
        return _itkNodePairPython.itkNodePairI4F_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex4 const &

        """
        return _itkNodePairPython.itkNodePairI4F_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex4
        GetNode(self) -> itkIndex4
        """
        return _itkNodePairPython.itkNodePairI4F_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4F const &

        """
        return _itkNodePairPython.itkNodePairI4F___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4F const &

        """
        return _itkNodePairPython.itkNodePairI4F___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4F const &

        """
        return _itkNodePairPython.itkNodePairI4F___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4F const &

        """
        return _itkNodePairPython.itkNodePairI4F___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI4F

# Register itkNodePairI4F in _itkNodePairPython:
_itkNodePairPython.itkNodePairI4F_swigregister(itkNodePairI4F)
class itkNodePairI4SS(object):
    r"""Proxy of C++ itkNodePairI4SS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI4SS
        __init__(self, iNode, iValue) -> itkNodePairI4SS

        Parameters
        ----------
        iNode: itkIndex4 const &
        iValue: short const &

        __init__(self, iPair) -> itkNodePairI4SS

        Parameters
        ----------
        iPair: itkNodePairI4SS const &

        """
        _itkNodePairPython.itkNodePairI4SS_swiginit(self, _itkNodePairPython.new_itkNodePairI4SS(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: short const &

        """
        return _itkNodePairPython.itkNodePairI4SS_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> short const
        GetValue(self) -> short &
        """
        return _itkNodePairPython.itkNodePairI4SS_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex4 const &

        """
        return _itkNodePairPython.itkNodePairI4SS_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex4
        GetNode(self) -> itkIndex4
        """
        return _itkNodePairPython.itkNodePairI4SS_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4SS const &

        """
        return _itkNodePairPython.itkNodePairI4SS___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4SS const &

        """
        return _itkNodePairPython.itkNodePairI4SS___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4SS const &

        """
        return _itkNodePairPython.itkNodePairI4SS___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4SS const &

        """
        return _itkNodePairPython.itkNodePairI4SS___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI4SS

# Register itkNodePairI4SS in _itkNodePairPython:
_itkNodePairPython.itkNodePairI4SS_swigregister(itkNodePairI4SS)
class itkNodePairI4UC(object):
    r"""Proxy of C++ itkNodePairI4UC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI4UC
        __init__(self, iNode, iValue) -> itkNodePairI4UC

        Parameters
        ----------
        iNode: itkIndex4 const &
        iValue: unsigned char const &

        __init__(self, iPair) -> itkNodePairI4UC

        Parameters
        ----------
        iPair: itkNodePairI4UC const &

        """
        _itkNodePairPython.itkNodePairI4UC_swiginit(self, _itkNodePairPython.new_itkNodePairI4UC(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned char const &

        """
        return _itkNodePairPython.itkNodePairI4UC_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned char const
        GetValue(self) -> unsigned char &
        """
        return _itkNodePairPython.itkNodePairI4UC_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex4 const &

        """
        return _itkNodePairPython.itkNodePairI4UC_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex4
        GetNode(self) -> itkIndex4
        """
        return _itkNodePairPython.itkNodePairI4UC_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4UC const &

        """
        return _itkNodePairPython.itkNodePairI4UC___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4UC const &

        """
        return _itkNodePairPython.itkNodePairI4UC___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4UC const &

        """
        return _itkNodePairPython.itkNodePairI4UC___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4UC const &

        """
        return _itkNodePairPython.itkNodePairI4UC___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI4UC

# Register itkNodePairI4UC in _itkNodePairPython:
_itkNodePairPython.itkNodePairI4UC_swigregister(itkNodePairI4UC)
class itkNodePairI4US(object):
    r"""Proxy of C++ itkNodePairI4US class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkNodePairI4US
        __init__(self, iNode, iValue) -> itkNodePairI4US

        Parameters
        ----------
        iNode: itkIndex4 const &
        iValue: unsigned short const &

        __init__(self, iPair) -> itkNodePairI4US

        Parameters
        ----------
        iPair: itkNodePairI4US const &

        """
        _itkNodePairPython.itkNodePairI4US_swiginit(self, _itkNodePairPython.new_itkNodePairI4US(*args))

    def SetValue(self, iValue):
        r"""
        SetValue(self, iValue)

        Parameters
        ----------
        iValue: unsigned short const &

        """
        return _itkNodePairPython.itkNodePairI4US_SetValue(self, iValue)

    def GetValue(self, *args):
        r"""
        GetValue(self) -> unsigned short const
        GetValue(self) -> unsigned short &
        """
        return _itkNodePairPython.itkNodePairI4US_GetValue(self, *args)

    def SetNode(self, iNode):
        r"""
        SetNode(self, iNode)

        Parameters
        ----------
        iNode: itkIndex4 const &

        """
        return _itkNodePairPython.itkNodePairI4US_SetNode(self, iNode)

    def GetNode(self, *args):
        r"""
        GetNode(self) -> itkIndex4
        GetNode(self) -> itkIndex4
        """
        return _itkNodePairPython.itkNodePairI4US_GetNode(self, *args)

    def __lt__(self, iRight):
        r"""
        __lt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4US const &

        """
        return _itkNodePairPython.itkNodePairI4US___lt__(self, iRight)

    def __gt__(self, iRight):
        r"""
        __gt__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4US const &

        """
        return _itkNodePairPython.itkNodePairI4US___gt__(self, iRight)

    def __le__(self, iRight):
        r"""
        __le__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4US const &

        """
        return _itkNodePairPython.itkNodePairI4US___le__(self, iRight)

    def __ge__(self, iRight):
        r"""
        __ge__(self, iRight) -> bool

        Parameters
        ----------
        iRight: itkNodePairI4US const &

        """
        return _itkNodePairPython.itkNodePairI4US___ge__(self, iRight)
    __swig_destroy__ = _itkNodePairPython.delete_itkNodePairI4US

# Register itkNodePairI4US in _itkNodePairPython:
_itkNodePairPython.itkNodePairI4US_swigregister(itkNodePairI4US)

