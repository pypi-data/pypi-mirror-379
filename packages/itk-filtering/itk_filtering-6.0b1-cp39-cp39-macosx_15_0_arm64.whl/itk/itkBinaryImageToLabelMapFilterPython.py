# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryImageToLabelMapFilterPython
else:
    import _itkBinaryImageToLabelMapFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkLabelImageToLabelMapFilterPython
import itk.ITKLabelMapBasePython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkStatisticsLabelObjectPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkArray2DPython
import itk.itkDiffusionTensor3DPython
import itk.itkTransformBasePython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython

def itkBinaryImageToLabelMapFilterIUC2LM2_New():
    return itkBinaryImageToLabelMapFilterIUC2LM2.New()

class itkBinaryImageToLabelMapFilterIUC2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC2LM2):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUC2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUC2LM2_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUC2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUC2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUC2LM2

        Create a new object of the class itkBinaryImageToLabelMapFilterIUC2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUC2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUC2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUC2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUC2LM2 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC2LM2_swigregister(itkBinaryImageToLabelMapFilterIUC2LM2)

def itkBinaryImageToLabelMapFilterIUC3LM3_New():
    return itkBinaryImageToLabelMapFilterIUC3LM3.New()

class itkBinaryImageToLabelMapFilterIUC3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC3LM3):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUC3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUC3LM3_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUC3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUC3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUC3LM3

        Create a new object of the class itkBinaryImageToLabelMapFilterIUC3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUC3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUC3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUC3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUC3LM3 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC3LM3_swigregister(itkBinaryImageToLabelMapFilterIUC3LM3)

def itkBinaryImageToLabelMapFilterIUC4LM4_New():
    return itkBinaryImageToLabelMapFilterIUC4LM4.New()

class itkBinaryImageToLabelMapFilterIUC4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUC4LM4):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUC4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUC4LM4_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUC4LM4_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned char"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUC4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUC4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUC4LM4

        Create a new object of the class itkBinaryImageToLabelMapFilterIUC4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUC4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUC4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUC4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUC4LM4 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUC4LM4_swigregister(itkBinaryImageToLabelMapFilterIUC4LM4)

def itkBinaryImageToLabelMapFilterIUS2LM2_New():
    return itkBinaryImageToLabelMapFilterIUS2LM2.New()

class itkBinaryImageToLabelMapFilterIUS2LM2(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS2LM2):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUS2LM2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUS2LM2_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUS2LM2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUS2LM2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUS2LM2

        Create a new object of the class itkBinaryImageToLabelMapFilterIUS2LM2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUS2LM2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUS2LM2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUS2LM2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUS2LM2 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS2LM2_swigregister(itkBinaryImageToLabelMapFilterIUS2LM2)

def itkBinaryImageToLabelMapFilterIUS3LM3_New():
    return itkBinaryImageToLabelMapFilterIUS3LM3.New()

class itkBinaryImageToLabelMapFilterIUS3LM3(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS3LM3):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUS3LM3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUS3LM3_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUS3LM3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUS3LM3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUS3LM3

        Create a new object of the class itkBinaryImageToLabelMapFilterIUS3LM3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUS3LM3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUS3LM3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUS3LM3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUS3LM3 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS3LM3_swigregister(itkBinaryImageToLabelMapFilterIUS3LM3)

def itkBinaryImageToLabelMapFilterIUS4LM4_New():
    return itkBinaryImageToLabelMapFilterIUS4LM4.New()

class itkBinaryImageToLabelMapFilterIUS4LM4(itk.ITKLabelMapBasePython.itkImageToImageFilterIUS4LM4):
    r"""Proxy of C++ itkBinaryImageToLabelMapFilterIUS4LM4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryImageToLabelMapFilterIUS4LM4_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryImageToLabelMapFilterIUS4LM4_Pointer"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_FullyConnectedOff(self)

    def GetNumberOfObjects(self):
        r"""GetNumberOfObjects(self) -> unsigned long const &"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_GetNumberOfObjects(self)

    def SetOutputBackgroundValue(self, _arg):
        r"""
        SetOutputBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_SetOutputBackgroundValue(self, _arg)

    def GetOutputBackgroundValue(self):
        r"""GetOutputBackgroundValue(self) -> unsigned long"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_GetOutputBackgroundValue(self)

    def SetInputForegroundValue(self, _arg):
        r"""
        SetInputForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_SetInputForegroundValue(self, _arg)

    def GetInputForegroundValue(self):
        r"""GetInputForegroundValue(self) -> unsigned short"""
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_GetInputForegroundValue(self)
    __swig_destroy__ = _itkBinaryImageToLabelMapFilterPython.delete_itkBinaryImageToLabelMapFilterIUS4LM4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryImageToLabelMapFilterIUS4LM4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryImageToLabelMapFilterIUS4LM4

        Create a new object of the class itkBinaryImageToLabelMapFilterIUS4LM4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryImageToLabelMapFilterIUS4LM4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryImageToLabelMapFilterIUS4LM4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryImageToLabelMapFilterIUS4LM4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryImageToLabelMapFilterIUS4LM4 in _itkBinaryImageToLabelMapFilterPython:
_itkBinaryImageToLabelMapFilterPython.itkBinaryImageToLabelMapFilterIUS4LM4_swigregister(itkBinaryImageToLabelMapFilterIUS4LM4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_image_to_label_map_filter(*args: itkt.ImageLike,  fully_connected: bool=..., output_background_value: int=..., input_foreground_value: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryImageToLabelMapFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected,'output_background_value':output_background_value,'input_foreground_value':input_foreground_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryImageToLabelMapFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_image_to_label_map_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.BinaryImageToLabelMapFilter
    binary_image_to_label_map_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_image_to_label_map_filter.__doc__ = filter_object.__doc__



