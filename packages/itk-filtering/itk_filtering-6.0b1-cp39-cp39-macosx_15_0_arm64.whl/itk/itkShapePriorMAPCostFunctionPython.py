# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShapePriorMAPCostFunctionPython
else:
    import _itkShapePriorMAPCostFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkShapePriorMAPCostFunctionBasePython
import itk.itkShapeSignedDistanceFunctionPython
import itk.itkOptimizerParametersPython
import itk.itkSpatialFunctionPython
import itk.itkFunctionBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkContinuousIndexPython
import itk.ITKFastMarchingBasePython
import itk.itkLevelSetNodePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.ITKCostFunctionsPython
import itk.vnl_least_squares_functionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.itkCostFunctionPython
import itk.itkArray2DPython

def itkShapePriorMAPCostFunctionID2D_New():
    return itkShapePriorMAPCostFunctionID2D.New()

class itkShapePriorMAPCostFunctionID2D(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionID2D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionID2D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionID2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionID2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionID2D

        Create a new object of the class itkShapePriorMAPCostFunctionID2D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionID2D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionID2D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionID2D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionID2D in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID2D_swigregister(itkShapePriorMAPCostFunctionID2D)

def itkShapePriorMAPCostFunctionID3D_New():
    return itkShapePriorMAPCostFunctionID3D.New()

class itkShapePriorMAPCostFunctionID3D(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionID3D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionID3D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionID3D

        Create a new object of the class itkShapePriorMAPCostFunctionID3D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionID3D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionID3D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionID3D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionID3D in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID3D_swigregister(itkShapePriorMAPCostFunctionID3D)

def itkShapePriorMAPCostFunctionID4D_New():
    return itkShapePriorMAPCostFunctionID4D.New()

class itkShapePriorMAPCostFunctionID4D(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionID4D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionID4D_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionID4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionID4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionID4D

        Create a new object of the class itkShapePriorMAPCostFunctionID4D and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionID4D.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionID4D.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionID4D.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionID4D in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionID4D_swigregister(itkShapePriorMAPCostFunctionID4D)

def itkShapePriorMAPCostFunctionIF2F_New():
    return itkShapePriorMAPCostFunctionIF2F.New()

class itkShapePriorMAPCostFunctionIF2F(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionIF2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionIF2F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionIF2F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionIF2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionIF2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionIF2F

        Create a new object of the class itkShapePriorMAPCostFunctionIF2F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionIF2F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionIF2F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionIF2F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionIF2F in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF2F_swigregister(itkShapePriorMAPCostFunctionIF2F)

def itkShapePriorMAPCostFunctionIF3F_New():
    return itkShapePriorMAPCostFunctionIF3F.New()

class itkShapePriorMAPCostFunctionIF3F(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionIF3F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionIF3F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionIF3F

        Create a new object of the class itkShapePriorMAPCostFunctionIF3F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionIF3F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionIF3F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionIF3F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionIF3F in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF3F_swigregister(itkShapePriorMAPCostFunctionIF3F)

def itkShapePriorMAPCostFunctionIF4F_New():
    return itkShapePriorMAPCostFunctionIF4F.New()

class itkShapePriorMAPCostFunctionIF4F(itk.itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionIF4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShapePriorMAPCostFunctionIF4F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShapePriorMAPCostFunctionIF4F_Pointer"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_Clone(self)

    def SetShapeParameterMeans(self, _arg):
        r"""
        SetShapeParameterMeans(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_SetShapeParameterMeans(self, _arg)

    def GetShapeParameterMeans(self):
        r"""GetShapeParameterMeans(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_GetShapeParameterMeans(self)

    def SetShapeParameterStandardDeviations(self, _arg):
        r"""
        SetShapeParameterStandardDeviations(self, _arg)

        Parameters
        ----------
        _arg: itkArrayD

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_SetShapeParameterStandardDeviations(self, _arg)

    def GetShapeParameterStandardDeviations(self):
        r"""GetShapeParameterStandardDeviations(self) -> itkArrayD"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_GetShapeParameterStandardDeviations(self)

    def SetWeights(self, _arg):
        r"""
        SetWeights(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayD4

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_SetWeights(self, _arg)

    def GetWeights(self):
        r"""GetWeights(self) -> itkFixedArrayD4"""
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_GetWeights(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionPython.delete_itkShapePriorMAPCostFunctionIF4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionIF4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShapePriorMAPCostFunctionIF4F

        Create a new object of the class itkShapePriorMAPCostFunctionIF4F and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShapePriorMAPCostFunctionIF4F.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShapePriorMAPCostFunctionIF4F.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShapePriorMAPCostFunctionIF4F.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShapePriorMAPCostFunctionIF4F in _itkShapePriorMAPCostFunctionPython:
_itkShapePriorMAPCostFunctionPython.itkShapePriorMAPCostFunctionIF4F_swigregister(itkShapePriorMAPCostFunctionIF4F)

