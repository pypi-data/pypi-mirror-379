# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastMarchingThresholdStoppingCriterionPython
else:
    import _itkFastMarchingThresholdStoppingCriterionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkNodePairPython

def itkFastMarchingThresholdStoppingCriterionID2ID2_New():
    return itkFastMarchingThresholdStoppingCriterionID2ID2.New()

class itkFastMarchingThresholdStoppingCriterionID2ID2(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseID2ID2):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionID2ID2_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionID2ID2_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionID2ID2

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionID2ID2 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID2ID2_swigregister(itkFastMarchingThresholdStoppingCriterionID2ID2)

def itkFastMarchingThresholdStoppingCriterionID3ID3_New():
    return itkFastMarchingThresholdStoppingCriterionID3ID3.New()

class itkFastMarchingThresholdStoppingCriterionID3ID3(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseID3ID3):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionID3ID3_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionID3ID3_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionID3ID3

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionID3ID3 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID3ID3_swigregister(itkFastMarchingThresholdStoppingCriterionID3ID3)

def itkFastMarchingThresholdStoppingCriterionID4ID4_New():
    return itkFastMarchingThresholdStoppingCriterionID4ID4.New()

class itkFastMarchingThresholdStoppingCriterionID4ID4(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseID4ID4):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionID4ID4_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionID4ID4_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> double"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionID4ID4

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionID4ID4 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionID4ID4_swigregister(itkFastMarchingThresholdStoppingCriterionID4ID4)

def itkFastMarchingThresholdStoppingCriterionIF2IF2_New():
    return itkFastMarchingThresholdStoppingCriterionIF2IF2.New()

class itkFastMarchingThresholdStoppingCriterionIF2IF2(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseIF2IF2):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionIF2IF2_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionIF2IF2_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionIF2IF2

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionIF2IF2 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF2IF2_swigregister(itkFastMarchingThresholdStoppingCriterionIF2IF2)

def itkFastMarchingThresholdStoppingCriterionIF3IF3_New():
    return itkFastMarchingThresholdStoppingCriterionIF3IF3.New()

class itkFastMarchingThresholdStoppingCriterionIF3IF3(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseIF3IF3):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionIF3IF3_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionIF3IF3_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionIF3IF3

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionIF3IF3 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF3IF3_swigregister(itkFastMarchingThresholdStoppingCriterionIF3IF3)

def itkFastMarchingThresholdStoppingCriterionIF4IF4_New():
    return itkFastMarchingThresholdStoppingCriterionIF4IF4.New()

class itkFastMarchingThresholdStoppingCriterionIF4IF4(itk.itkFastMarchingStoppingCriterionBasePython.itkFastMarchingStoppingCriterionBaseIF4IF4):
    r"""Proxy of C++ itkFastMarchingThresholdStoppingCriterionIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingThresholdStoppingCriterionIF4IF4_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingThresholdStoppingCriterionIF4IF4_Pointer"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4_Clone(self)

    def SetThreshold(self, _arg):
        r"""
        SetThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4_SetThreshold(self, _arg)

    def GetThreshold(self):
        r"""GetThreshold(self) -> float"""
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4_GetThreshold(self)
    __swig_destroy__ = _itkFastMarchingThresholdStoppingCriterionPython.delete_itkFastMarchingThresholdStoppingCriterionIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingThresholdStoppingCriterionIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingThresholdStoppingCriterionIF4IF4

        Create a new object of the class itkFastMarchingThresholdStoppingCriterionIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingThresholdStoppingCriterionIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingThresholdStoppingCriterionIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingThresholdStoppingCriterionIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingThresholdStoppingCriterionIF4IF4 in _itkFastMarchingThresholdStoppingCriterionPython:
_itkFastMarchingThresholdStoppingCriterionPython.itkFastMarchingThresholdStoppingCriterionIF4IF4_swigregister(itkFastMarchingThresholdStoppingCriterionIF4IF4)

