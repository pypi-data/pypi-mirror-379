# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMultiScaleHessianBasedMeasureImageFilterPython
else:
    import _itkMultiScaleHessianBasedMeasureImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
class itkMultiScaleHessianBasedMeasureImageFilterEnums(object):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    SigmaStepMethod_EquispacedSigmaSteps = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_SigmaStepMethod_EquispacedSigmaSteps
    
    SigmaStepMethod_LogarithmicSigmaSteps = _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_SigmaStepMethod_LogarithmicSigmaSteps
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums
        __init__(self, arg0) -> itkMultiScaleHessianBasedMeasureImageFilterEnums

        Parameters
        ----------
        arg0: itkMultiScaleHessianBasedMeasureImageFilterEnums const &

        """
        _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_swiginit(self, _itkMultiScaleHessianBasedMeasureImageFilterPython.new_itkMultiScaleHessianBasedMeasureImageFilterEnums(*args))
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterEnums

# Register itkMultiScaleHessianBasedMeasureImageFilterEnums in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterEnums_swigregister(itkMultiScaleHessianBasedMeasureImageFilterEnums)

def itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New()

class itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD22ID2 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ID2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ID2
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ID2
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD22"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterID2ISSRTD22ID2)

def itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New()

class itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD33ID3 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ID3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ID3
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ID3
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD33"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterID3ISSRTD33ID3)

def itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_New():
    return itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4.New()

class itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD44ID4 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ID4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ID4
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ID4
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD44"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4_swigregister(itkMultiScaleHessianBasedMeasureImageFilterID4ISSRTD44ID4)

def itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD22IF2 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IF2
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IF2
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD22"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIF2ISSRTD22IF2)

def itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD33IF3 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IF3
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IF3
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD33"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIF3ISSRTD33IF3)

def itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4.New()

class itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD44IF4 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IF4
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IF4
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD44"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIF4ISSRTD44IF4)

def itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New()

class itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD22ISS2 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ISS2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ISS2
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22ISS2
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD22"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterISS2ISSRTD22ISS2)

def itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New()

class itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD33ISS3 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ISS3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ISS3
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33ISS3
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD33"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterISS3ISSRTD33ISS3)

def itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_New():
    return itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4.New()

class itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD44ISS4 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ISS4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ISS4
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44ISS4
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD44"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4_swigregister(itkMultiScaleHessianBasedMeasureImageFilterISS4ISSRTD44ISS4)

def itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD22IUC2 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUC2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUC2
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUC2
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD22"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUC2ISSRTD22IUC2)

def itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD33IUC3 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUC3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUC3
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUC3
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD33"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUC3ISSRTD33IUC3)

def itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD44IUC4 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUC4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUC4
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUC4
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD44"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUC4ISSRTD44IUC4)

def itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD22IUS2 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUS2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUS2
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD22IUS2
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD22"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF2"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUS2ISSRTD22IUS2)

def itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD33IUS3 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUS3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUS3
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD33IUS3
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD33"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF3"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUS3ISSRTD33IUS3)

def itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_New():
    return itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4.New()

class itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_Pointer"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_Clone(self)

    def SetSigmaMinimum(self, _arg):
        r"""
        SetSigmaMinimum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetSigmaMinimum(self, _arg)

    def GetSigmaMinimum(self):
        r"""GetSigmaMinimum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetSigmaMinimum(self)

    def SetSigmaMaximum(self, _arg):
        r"""
        SetSigmaMaximum(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetSigmaMaximum(self, _arg)

    def GetSigmaMaximum(self):
        r"""GetSigmaMaximum(self) -> double"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetSigmaMaximum(self)

    def SetNumberOfSigmaSteps(self, _arg):
        r"""
        SetNumberOfSigmaSteps(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetNumberOfSigmaSteps(self, _arg)

    def GetNumberOfSigmaSteps(self):
        r"""GetNumberOfSigmaSteps(self) -> unsigned int"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetNumberOfSigmaSteps(self)

    def SetHessianToMeasureFilter(self, _arg):
        r"""
        SetHessianToMeasureFilter(self, _arg)

        Parameters
        ----------
        _arg: itkImageToImageFilterISSRTD44IUS4 *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetHessianToMeasureFilter(self, _arg)

    def GetModifiableHessianToMeasureFilter(self):
        r"""GetModifiableHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUS4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetModifiableHessianToMeasureFilter(self)

    def GetHessianToMeasureFilter(self, *args):
        r"""
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUS4
        GetHessianToMeasureFilter(self) -> itkImageToImageFilterISSRTD44IUS4
        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetHessianToMeasureFilter(self, *args)

    def SetNonNegativeHessianBasedMeasure(self, _arg):
        r"""
        SetNonNegativeHessianBasedMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetNonNegativeHessianBasedMeasure(self, _arg)

    def GetNonNegativeHessianBasedMeasure(self):
        r"""GetNonNegativeHessianBasedMeasure(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetNonNegativeHessianBasedMeasure(self)

    def NonNegativeHessianBasedMeasureOn(self):
        r"""NonNegativeHessianBasedMeasureOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_NonNegativeHessianBasedMeasureOn(self)

    def NonNegativeHessianBasedMeasureOff(self):
        r"""NonNegativeHessianBasedMeasureOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_NonNegativeHessianBasedMeasureOff(self)

    def SetSigmaStepMethod(self, _arg):
        r"""
        SetSigmaStepMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod const

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetSigmaStepMethod(self, _arg)

    def GetSigmaStepMethod(self):
        r"""GetSigmaStepMethod(self) -> itkMultiScaleHessianBasedMeasureImageFilterEnums::SigmaStepMethod"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetSigmaStepMethod(self)

    def SetSigmaStepMethodToEquispaced(self):
        r"""SetSigmaStepMethodToEquispaced(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetSigmaStepMethodToEquispaced(self)

    def SetSigmaStepMethodToLogarithmic(self):
        r"""SetSigmaStepMethodToLogarithmic(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetSigmaStepMethodToLogarithmic(self)

    def GetHessianOutput(self):
        r"""GetHessianOutput(self) -> itkImageSSRTD44"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetHessianOutput(self)

    def GetScalesOutput(self):
        r"""GetScalesOutput(self) -> itkImageF4"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetScalesOutput(self)

    def SetGenerateScalesOutput(self, _arg):
        r"""
        SetGenerateScalesOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetGenerateScalesOutput(self, _arg)

    def GetGenerateScalesOutput(self):
        r"""GetGenerateScalesOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetGenerateScalesOutput(self)

    def GenerateScalesOutputOn(self):
        r"""GenerateScalesOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GenerateScalesOutputOn(self)

    def GenerateScalesOutputOff(self):
        r"""GenerateScalesOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GenerateScalesOutputOff(self)

    def SetGenerateHessianOutput(self, _arg):
        r"""
        SetGenerateHessianOutput(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_SetGenerateHessianOutput(self, _arg)

    def GetGenerateHessianOutput(self):
        r"""GetGenerateHessianOutput(self) -> bool"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GetGenerateHessianOutput(self)

    def GenerateHessianOutputOn(self):
        r"""GenerateHessianOutputOn(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GenerateHessianOutputOn(self)

    def GenerateHessianOutputOff(self):
        r"""GenerateHessianOutputOff(self)"""
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_GenerateHessianOutputOff(self)
    __swig_destroy__ = _itkMultiScaleHessianBasedMeasureImageFilterPython.delete_itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4

        Create a new object of the class itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4 in _itkMultiScaleHessianBasedMeasureImageFilterPython:
_itkMultiScaleHessianBasedMeasureImageFilterPython.itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4_swigregister(itkMultiScaleHessianBasedMeasureImageFilterIUS4ISSRTD44IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def multi_scale_hessian_based_measure_image_filter(*args: itkt.ImageLike,  sigma_minimum: float=..., sigma_maximum: float=..., number_of_sigma_steps: int=..., hessian_to_measure_filter=..., non_negative_hessian_based_measure: bool=..., sigma_step_method=..., generate_scales_output: bool=..., generate_hessian_output: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MultiScaleHessianBasedMeasureImageFilter"""
    import itk

    kwarg_typehints = { 'sigma_minimum':sigma_minimum,'sigma_maximum':sigma_maximum,'number_of_sigma_steps':number_of_sigma_steps,'hessian_to_measure_filter':hessian_to_measure_filter,'non_negative_hessian_based_measure':non_negative_hessian_based_measure,'sigma_step_method':sigma_step_method,'generate_scales_output':generate_scales_output,'generate_hessian_output':generate_hessian_output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MultiScaleHessianBasedMeasureImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def multi_scale_hessian_based_measure_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFeature.MultiScaleHessianBasedMeasureImageFilter
    multi_scale_hessian_based_measure_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    multi_scale_hessian_based_measure_image_filter.__doc__ = filter_object.__doc__



