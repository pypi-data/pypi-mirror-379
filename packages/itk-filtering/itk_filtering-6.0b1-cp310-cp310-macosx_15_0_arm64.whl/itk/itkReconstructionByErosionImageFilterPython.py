# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkReconstructionByErosionImageFilterPython
else:
    import _itkReconstructionByErosionImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkReconstructionByErosionImageFilterID2ID2_Superclass_New():
    return itkReconstructionByErosionImageFilterID2ID2_Superclass.New()

class itkReconstructionByErosionImageFilterID2ID2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID2ID2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID2ID2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID2ID2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageD2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID2ID2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID2ID2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID2ID2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterID2ID2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID2ID2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID2ID2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID2ID2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID2ID2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Superclass_swigregister(itkReconstructionByErosionImageFilterID2ID2_Superclass)

def itkReconstructionByErosionImageFilterID3ID3_Superclass_New():
    return itkReconstructionByErosionImageFilterID3ID3_Superclass.New()

class itkReconstructionByErosionImageFilterID3ID3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID3ID3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID3ID3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID3ID3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageD3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID3ID3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID3ID3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID3ID3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterID3ID3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID3ID3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID3ID3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID3ID3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID3ID3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Superclass_swigregister(itkReconstructionByErosionImageFilterID3ID3_Superclass)

def itkReconstructionByErosionImageFilterID4ID4_Superclass_New():
    return itkReconstructionByErosionImageFilterID4ID4_Superclass.New()

class itkReconstructionByErosionImageFilterID4ID4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID4ID4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID4ID4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID4ID4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageD4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID4ID4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID4ID4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID4ID4_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterID4ID4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID4ID4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID4ID4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID4ID4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID4ID4_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Superclass_swigregister(itkReconstructionByErosionImageFilterID4ID4_Superclass)

def itkReconstructionByErosionImageFilterIF2IF2_Superclass_New():
    return itkReconstructionByErosionImageFilterIF2IF2_Superclass.New()

class itkReconstructionByErosionImageFilterIF2IF2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF2IF2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF2IF2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageF2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF2IF2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF2IF2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF2IF2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIF2IF2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF2IF2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF2IF2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF2IF2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF2IF2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Superclass_swigregister(itkReconstructionByErosionImageFilterIF2IF2_Superclass)

def itkReconstructionByErosionImageFilterIF3IF3_Superclass_New():
    return itkReconstructionByErosionImageFilterIF3IF3_Superclass.New()

class itkReconstructionByErosionImageFilterIF3IF3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF3IF3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF3IF3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageF3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF3IF3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF3IF3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF3IF3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIF3IF3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF3IF3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF3IF3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF3IF3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF3IF3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Superclass_swigregister(itkReconstructionByErosionImageFilterIF3IF3_Superclass)

def itkReconstructionByErosionImageFilterIF4IF4_Superclass_New():
    return itkReconstructionByErosionImageFilterIF4IF4_Superclass.New()

class itkReconstructionByErosionImageFilterIF4IF4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF4IF4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF4IF4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageF4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF4IF4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF4IF4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF4IF4_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIF4IF4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF4IF4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF4IF4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF4IF4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF4IF4_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Superclass_swigregister(itkReconstructionByErosionImageFilterIF4IF4_Superclass)

def itkReconstructionByErosionImageFilterISS2ISS2_Superclass_New():
    return itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New()

class itkReconstructionByErosionImageFilterISS2ISS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS2ISS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS2ISS2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageSS2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS2ISS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS2ISS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS2ISS2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterISS2ISS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS2ISS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS2ISS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS2ISS2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Superclass_swigregister(itkReconstructionByErosionImageFilterISS2ISS2_Superclass)

def itkReconstructionByErosionImageFilterISS3ISS3_Superclass_New():
    return itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New()

class itkReconstructionByErosionImageFilterISS3ISS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS3ISS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS3ISS3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageSS3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS3ISS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS3ISS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS3ISS3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterISS3ISS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS3ISS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS3ISS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS3ISS3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Superclass_swigregister(itkReconstructionByErosionImageFilterISS3ISS3_Superclass)

def itkReconstructionByErosionImageFilterISS4ISS4_Superclass_New():
    return itkReconstructionByErosionImageFilterISS4ISS4_Superclass.New()

class itkReconstructionByErosionImageFilterISS4ISS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS4ISS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS4ISS4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageSS4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS4ISS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS4ISS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS4ISS4_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterISS4ISS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS4ISS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS4ISS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS4ISS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS4ISS4_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Superclass_swigregister(itkReconstructionByErosionImageFilterISS4ISS4_Superclass)

def itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_New():
    return itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New()

class itkReconstructionByErosionImageFilterIUC2IUC2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC2IUC2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUC2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC2IUC2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC2IUC2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC2IUC2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUC2IUC2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC2IUC2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC2IUC2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Superclass_swigregister(itkReconstructionByErosionImageFilterIUC2IUC2_Superclass)

def itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_New():
    return itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New()

class itkReconstructionByErosionImageFilterIUC3IUC3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC3IUC3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUC3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC3IUC3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC3IUC3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC3IUC3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUC3IUC3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC3IUC3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC3IUC3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Superclass_swigregister(itkReconstructionByErosionImageFilterIUC3IUC3_Superclass)

def itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_New():
    return itkReconstructionByErosionImageFilterIUC4IUC4_Superclass.New()

class itkReconstructionByErosionImageFilterIUC4IUC4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC4IUC4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUC4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC4IUC4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC4IUC4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC4IUC4_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUC4IUC4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC4IUC4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC4IUC4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC4IUC4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC4IUC4_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Superclass_swigregister(itkReconstructionByErosionImageFilterIUC4IUC4_Superclass)

def itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_New():
    return itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New()

class itkReconstructionByErosionImageFilterIUS2IUS2_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS2IUS2_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUS2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS2IUS2_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS2IUS2_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS2IUS2_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUS2IUS2_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS2IUS2_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS2IUS2_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Superclass_swigregister(itkReconstructionByErosionImageFilterIUS2IUS2_Superclass)

def itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_New():
    return itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New()

class itkReconstructionByErosionImageFilterIUS3IUS3_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS3IUS3_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUS3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS3IUS3_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS3IUS3_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS3IUS3_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUS3IUS3_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS3IUS3_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS3IUS3_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Superclass_swigregister(itkReconstructionByErosionImageFilterIUS3IUS3_Superclass)

def itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_New():
    return itkReconstructionByErosionImageFilterIUS4IUS4_Superclass.New()

class itkReconstructionByErosionImageFilterIUS4IUS4_Superclass(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS4IUS4_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_Clone(self)

    def SetMarkerImage(self, _arg):
        r"""
        SetMarkerImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_SetMarkerImage(self, _arg)

    def GetMarkerImage(self):
        r"""GetMarkerImage(self) -> itkImageUS4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_GetMarkerImage(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_GetMaskImage(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_FullyConnectedOff(self)

    def SetUseInternalCopy(self, _arg):
        r"""
        SetUseInternalCopy(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_SetUseInternalCopy(self, _arg)

    def GetUseInternalCopy(self):
        r"""GetUseInternalCopy(self) -> bool const &"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_GetUseInternalCopy(self)

    def UseInternalCopyOn(self):
        r"""UseInternalCopyOn(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_UseInternalCopyOn(self)

    def UseInternalCopyOff(self):
        r"""UseInternalCopyOff(self)"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_UseInternalCopyOff(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS4IUS4_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS4IUS4_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS4IUS4_Superclass

        Create a new object of the class itkReconstructionByErosionImageFilterIUS4IUS4_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS4IUS4_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS4IUS4_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS4IUS4_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS4IUS4_Superclass in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Superclass_swigregister(itkReconstructionByErosionImageFilterIUS4IUS4_Superclass)

def itkReconstructionByErosionImageFilterID2ID2_New():
    return itkReconstructionByErosionImageFilterID2ID2.New()

class itkReconstructionByErosionImageFilterID2ID2(itkReconstructionByErosionImageFilterID2ID2_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID2ID2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID2ID2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID2ID2

        Create a new object of the class itkReconstructionByErosionImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID2ID2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID2ID2_swigregister(itkReconstructionByErosionImageFilterID2ID2)

def itkReconstructionByErosionImageFilterID3ID3_New():
    return itkReconstructionByErosionImageFilterID3ID3.New()

class itkReconstructionByErosionImageFilterID3ID3(itkReconstructionByErosionImageFilterID3ID3_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID3ID3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID3ID3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID3ID3

        Create a new object of the class itkReconstructionByErosionImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID3ID3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID3ID3_swigregister(itkReconstructionByErosionImageFilterID3ID3)

def itkReconstructionByErosionImageFilterID4ID4_New():
    return itkReconstructionByErosionImageFilterID4ID4.New()

class itkReconstructionByErosionImageFilterID4ID4(itkReconstructionByErosionImageFilterID4ID4_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterID4ID4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterID4ID4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterID4ID4

        Create a new object of the class itkReconstructionByErosionImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterID4ID4 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterID4ID4_swigregister(itkReconstructionByErosionImageFilterID4ID4)

def itkReconstructionByErosionImageFilterIF2IF2_New():
    return itkReconstructionByErosionImageFilterIF2IF2.New()

class itkReconstructionByErosionImageFilterIF2IF2(itkReconstructionByErosionImageFilterIF2IF2_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF2IF2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF2IF2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF2IF2

        Create a new object of the class itkReconstructionByErosionImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF2IF2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF2IF2_swigregister(itkReconstructionByErosionImageFilterIF2IF2)

def itkReconstructionByErosionImageFilterIF3IF3_New():
    return itkReconstructionByErosionImageFilterIF3IF3.New()

class itkReconstructionByErosionImageFilterIF3IF3(itkReconstructionByErosionImageFilterIF3IF3_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF3IF3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF3IF3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF3IF3

        Create a new object of the class itkReconstructionByErosionImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF3IF3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF3IF3_swigregister(itkReconstructionByErosionImageFilterIF3IF3)

def itkReconstructionByErosionImageFilterIF4IF4_New():
    return itkReconstructionByErosionImageFilterIF4IF4.New()

class itkReconstructionByErosionImageFilterIF4IF4(itkReconstructionByErosionImageFilterIF4IF4_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIF4IF4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIF4IF4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIF4IF4

        Create a new object of the class itkReconstructionByErosionImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIF4IF4 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIF4IF4_swigregister(itkReconstructionByErosionImageFilterIF4IF4)

def itkReconstructionByErosionImageFilterISS2ISS2_New():
    return itkReconstructionByErosionImageFilterISS2ISS2.New()

class itkReconstructionByErosionImageFilterISS2ISS2(itkReconstructionByErosionImageFilterISS2ISS2_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS2ISS2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS2ISS2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS2ISS2

        Create a new object of the class itkReconstructionByErosionImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS2ISS2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS2ISS2_swigregister(itkReconstructionByErosionImageFilterISS2ISS2)

def itkReconstructionByErosionImageFilterISS3ISS3_New():
    return itkReconstructionByErosionImageFilterISS3ISS3.New()

class itkReconstructionByErosionImageFilterISS3ISS3(itkReconstructionByErosionImageFilterISS3ISS3_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS3ISS3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS3ISS3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS3ISS3

        Create a new object of the class itkReconstructionByErosionImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS3ISS3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS3ISS3_swigregister(itkReconstructionByErosionImageFilterISS3ISS3)

def itkReconstructionByErosionImageFilterISS4ISS4_New():
    return itkReconstructionByErosionImageFilterISS4ISS4.New()

class itkReconstructionByErosionImageFilterISS4ISS4(itkReconstructionByErosionImageFilterISS4ISS4_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterISS4ISS4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterISS4ISS4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterISS4ISS4

        Create a new object of the class itkReconstructionByErosionImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterISS4ISS4 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterISS4ISS4_swigregister(itkReconstructionByErosionImageFilterISS4ISS4)

def itkReconstructionByErosionImageFilterIUC2IUC2_New():
    return itkReconstructionByErosionImageFilterIUC2IUC2.New()

class itkReconstructionByErosionImageFilterIUC2IUC2(itkReconstructionByErosionImageFilterIUC2IUC2_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC2IUC2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC2IUC2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC2IUC2

        Create a new object of the class itkReconstructionByErosionImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC2IUC2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC2IUC2_swigregister(itkReconstructionByErosionImageFilterIUC2IUC2)

def itkReconstructionByErosionImageFilterIUC3IUC3_New():
    return itkReconstructionByErosionImageFilterIUC3IUC3.New()

class itkReconstructionByErosionImageFilterIUC3IUC3(itkReconstructionByErosionImageFilterIUC3IUC3_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC3IUC3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC3IUC3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC3IUC3

        Create a new object of the class itkReconstructionByErosionImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC3IUC3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC3IUC3_swigregister(itkReconstructionByErosionImageFilterIUC3IUC3)

def itkReconstructionByErosionImageFilterIUC4IUC4_New():
    return itkReconstructionByErosionImageFilterIUC4IUC4.New()

class itkReconstructionByErosionImageFilterIUC4IUC4(itkReconstructionByErosionImageFilterIUC4IUC4_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUC4IUC4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUC4IUC4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUC4IUC4

        Create a new object of the class itkReconstructionByErosionImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUC4IUC4 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUC4IUC4_swigregister(itkReconstructionByErosionImageFilterIUC4IUC4)

def itkReconstructionByErosionImageFilterIUS2IUS2_New():
    return itkReconstructionByErosionImageFilterIUS2IUS2.New()

class itkReconstructionByErosionImageFilterIUS2IUS2(itkReconstructionByErosionImageFilterIUS2IUS2_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS2IUS2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS2IUS2_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS2IUS2

        Create a new object of the class itkReconstructionByErosionImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS2IUS2 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS2IUS2_swigregister(itkReconstructionByErosionImageFilterIUS2IUS2)

def itkReconstructionByErosionImageFilterIUS3IUS3_New():
    return itkReconstructionByErosionImageFilterIUS3IUS3.New()

class itkReconstructionByErosionImageFilterIUS3IUS3(itkReconstructionByErosionImageFilterIUS3IUS3_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS3IUS3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS3IUS3_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS3IUS3

        Create a new object of the class itkReconstructionByErosionImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS3IUS3 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS3IUS3_swigregister(itkReconstructionByErosionImageFilterIUS3IUS3)

def itkReconstructionByErosionImageFilterIUS4IUS4_New():
    return itkReconstructionByErosionImageFilterIUS4IUS4.New()

class itkReconstructionByErosionImageFilterIUS4IUS4(itkReconstructionByErosionImageFilterIUS4IUS4_Superclass):
    r"""Proxy of C++ itkReconstructionByErosionImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReconstructionByErosionImageFilterIUS4IUS4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReconstructionByErosionImageFilterIUS4IUS4_Pointer"""
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_Clone(self)
    __swig_destroy__ = _itkReconstructionByErosionImageFilterPython.delete_itkReconstructionByErosionImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReconstructionByErosionImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReconstructionByErosionImageFilterIUS4IUS4

        Create a new object of the class itkReconstructionByErosionImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReconstructionByErosionImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReconstructionByErosionImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReconstructionByErosionImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReconstructionByErosionImageFilterIUS4IUS4 in _itkReconstructionByErosionImageFilterPython:
_itkReconstructionByErosionImageFilterPython.itkReconstructionByErosionImageFilterIUS4IUS4_swigregister(itkReconstructionByErosionImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def reconstruction_image_filter(*args: itkt.ImageLike,  marker_image: itkt.Image=..., mask_image: itkt.Image=..., fully_connected: bool=..., use_internal_copy: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ReconstructionImageFilter"""
    import itk

    kwarg_typehints = { 'marker_image':marker_image,'mask_image':mask_image,'fully_connected':fully_connected,'use_internal_copy':use_internal_copy }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ReconstructionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def reconstruction_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.ReconstructionImageFilter
    reconstruction_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    reconstruction_image_filter.__doc__ = filter_object.__doc__

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def reconstruction_by_erosion_image_filter(*args: itkt.ImageLike,  marker_image: itkt.Image=..., mask_image: itkt.Image=..., fully_connected: bool=..., use_internal_copy: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ReconstructionByErosionImageFilter"""
    import itk

    kwarg_typehints = { 'marker_image':marker_image,'mask_image':mask_image,'fully_connected':fully_connected,'use_internal_copy':use_internal_copy }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ReconstructionByErosionImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def reconstruction_by_erosion_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.ReconstructionByErosionImageFilter
    reconstruction_by_erosion_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    reconstruction_by_erosion_image_filter.__doc__ = filter_object.__doc__



