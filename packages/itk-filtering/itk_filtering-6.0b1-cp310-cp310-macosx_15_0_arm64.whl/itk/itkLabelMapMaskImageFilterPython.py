# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLabelMapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkLabelMapMaskImageFilterPython
else:
    import _itkLabelMapMaskImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSizePython
import itk.pyBasePython
import itk.itkStatisticsLabelObjectPython
import itk.itkAffineTransformPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkShapeLabelObjectPython
import itk.itkLabelObjectPython
import itk.itkLabelObjectLinePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkImagePython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkLabelMapFilterPython
import itk.ITKLabelMapBasePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourceCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython

def itkLabelMapMaskImageFilterLM2ID2_New():
    return itkLabelMapMaskImageFilterLM2ID2.New()

class itkLabelMapMaskImageFilterLM2ID2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2ID2):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM2ID2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM2ID2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM2ID2

        Create a new object of the class itkLabelMapMaskImageFilterLM2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM2ID2 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ID2_swigregister(itkLabelMapMaskImageFilterLM2ID2)

def itkLabelMapMaskImageFilterLM2IF2_New():
    return itkLabelMapMaskImageFilterLM2IF2.New()

class itkLabelMapMaskImageFilterLM2IF2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2IF2):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM2IF2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM2IF2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM2IF2

        Create a new object of the class itkLabelMapMaskImageFilterLM2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM2IF2 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IF2_swigregister(itkLabelMapMaskImageFilterLM2IF2)

def itkLabelMapMaskImageFilterLM2ISS2_New():
    return itkLabelMapMaskImageFilterLM2ISS2.New()

class itkLabelMapMaskImageFilterLM2ISS2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2ISS2):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM2ISS2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM2ISS2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM2ISS2

        Create a new object of the class itkLabelMapMaskImageFilterLM2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM2ISS2 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2ISS2_swigregister(itkLabelMapMaskImageFilterLM2ISS2)

def itkLabelMapMaskImageFilterLM2IUC2_New():
    return itkLabelMapMaskImageFilterLM2IUC2.New()

class itkLabelMapMaskImageFilterLM2IUC2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2IUC2):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM2IUC2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM2IUC2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM2IUC2

        Create a new object of the class itkLabelMapMaskImageFilterLM2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM2IUC2 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUC2_swigregister(itkLabelMapMaskImageFilterLM2IUC2)

def itkLabelMapMaskImageFilterLM2IUS2_New():
    return itkLabelMapMaskImageFilterLM2IUS2.New()

class itkLabelMapMaskImageFilterLM2IUS2(itk.itkLabelMapFilterPython.itkLabelMapFilterLM2IUS2):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM2IUS2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM2IUS2_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS2 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize2"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM2IUS2

        Create a new object of the class itkLabelMapMaskImageFilterLM2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM2IUS2 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM2IUS2_swigregister(itkLabelMapMaskImageFilterLM2IUS2)

def itkLabelMapMaskImageFilterLM3ID3_New():
    return itkLabelMapMaskImageFilterLM3ID3.New()

class itkLabelMapMaskImageFilterLM3ID3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3ID3):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM3ID3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM3ID3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM3ID3

        Create a new object of the class itkLabelMapMaskImageFilterLM3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM3ID3 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ID3_swigregister(itkLabelMapMaskImageFilterLM3ID3)

def itkLabelMapMaskImageFilterLM3IF3_New():
    return itkLabelMapMaskImageFilterLM3IF3.New()

class itkLabelMapMaskImageFilterLM3IF3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3IF3):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM3IF3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM3IF3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM3IF3

        Create a new object of the class itkLabelMapMaskImageFilterLM3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM3IF3 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IF3_swigregister(itkLabelMapMaskImageFilterLM3IF3)

def itkLabelMapMaskImageFilterLM3ISS3_New():
    return itkLabelMapMaskImageFilterLM3ISS3.New()

class itkLabelMapMaskImageFilterLM3ISS3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3ISS3):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM3ISS3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM3ISS3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM3ISS3

        Create a new object of the class itkLabelMapMaskImageFilterLM3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM3ISS3 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3ISS3_swigregister(itkLabelMapMaskImageFilterLM3ISS3)

def itkLabelMapMaskImageFilterLM3IUC3_New():
    return itkLabelMapMaskImageFilterLM3IUC3.New()

class itkLabelMapMaskImageFilterLM3IUC3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3IUC3):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM3IUC3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM3IUC3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM3IUC3

        Create a new object of the class itkLabelMapMaskImageFilterLM3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM3IUC3 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUC3_swigregister(itkLabelMapMaskImageFilterLM3IUC3)

def itkLabelMapMaskImageFilterLM3IUS3_New():
    return itkLabelMapMaskImageFilterLM3IUS3.New()

class itkLabelMapMaskImageFilterLM3IUS3(itk.itkLabelMapFilterPython.itkLabelMapFilterLM3IUS3):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM3IUS3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM3IUS3_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS3 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize3"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM3IUS3

        Create a new object of the class itkLabelMapMaskImageFilterLM3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM3IUS3 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM3IUS3_swigregister(itkLabelMapMaskImageFilterLM3IUS3)

def itkLabelMapMaskImageFilterLM4ID4_New():
    return itkLabelMapMaskImageFilterLM4ID4.New()

class itkLabelMapMaskImageFilterLM4ID4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4ID4):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM4ID4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM4ID4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageD4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM4ID4

        Create a new object of the class itkLabelMapMaskImageFilterLM4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM4ID4 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ID4_swigregister(itkLabelMapMaskImageFilterLM4ID4)

def itkLabelMapMaskImageFilterLM4IF4_New():
    return itkLabelMapMaskImageFilterLM4IF4.New()

class itkLabelMapMaskImageFilterLM4IF4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4IF4):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM4IF4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM4IF4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageF4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM4IF4

        Create a new object of the class itkLabelMapMaskImageFilterLM4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM4IF4 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IF4_swigregister(itkLabelMapMaskImageFilterLM4IF4)

def itkLabelMapMaskImageFilterLM4ISS4_New():
    return itkLabelMapMaskImageFilterLM4ISS4.New()

class itkLabelMapMaskImageFilterLM4ISS4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4ISS4):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM4ISS4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM4ISS4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageSS4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageSS4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM4ISS4

        Create a new object of the class itkLabelMapMaskImageFilterLM4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM4ISS4 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4ISS4_swigregister(itkLabelMapMaskImageFilterLM4ISS4)

def itkLabelMapMaskImageFilterLM4IUC4_New():
    return itkLabelMapMaskImageFilterLM4IUC4.New()

class itkLabelMapMaskImageFilterLM4IUC4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4IUC4):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM4IUC4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM4IUC4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUC4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUC4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM4IUC4

        Create a new object of the class itkLabelMapMaskImageFilterLM4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM4IUC4 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUC4_swigregister(itkLabelMapMaskImageFilterLM4IUC4)

def itkLabelMapMaskImageFilterLM4IUS4_New():
    return itkLabelMapMaskImageFilterLM4IUS4.New()

class itkLabelMapMaskImageFilterLM4IUS4(itk.itkLabelMapFilterPython.itkLabelMapFilterLM4IUS4):
    r"""Proxy of C++ itkLabelMapMaskImageFilterLM4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkLabelMapMaskImageFilterLM4IUS4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkLabelMapMaskImageFilterLM4IUS4_Pointer"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_Clone(self)

    def SetFeatureImage(self, input):
        r"""
        SetFeatureImage(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetFeatureImage(self, input)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageUS4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetFeatureImage(self)

    def SetInput1(self, input):
        r"""
        SetInput1(self, input)

        Parameters
        ----------
        input: itkLabelMap4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetInput1(self, input)

    def SetInput2(self, input):
        r"""
        SetInput2(self, input)

        Parameters
        ----------
        input: itkImageUS4 const *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetInput2(self, input)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetBackgroundValue(self)

    def SetLabel(self, _arg):
        r"""
        SetLabel(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetLabel(self, _arg)

    def GetLabel(self):
        r"""GetLabel(self) -> unsigned long"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetLabel(self)

    def SetNegated(self, _arg):
        r"""
        SetNegated(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetNegated(self, _arg)

    def GetNegated(self):
        r"""GetNegated(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetNegated(self)

    def NegatedOn(self):
        r"""NegatedOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_NegatedOn(self)

    def NegatedOff(self):
        r"""NegatedOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_NegatedOff(self)

    def SetCrop(self, _arg):
        r"""
        SetCrop(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetCrop(self, _arg)

    def GetCrop(self):
        r"""GetCrop(self) -> bool const &"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetCrop(self)

    def CropOn(self):
        r"""CropOn(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_CropOn(self)

    def CropOff(self):
        r"""CropOff(self)"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_CropOff(self)

    def SetCropBorder(self, _arg):
        r"""
        SetCropBorder(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_SetCropBorder(self, _arg)

    def GetCropBorder(self):
        r"""GetCropBorder(self) -> itkSize4"""
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_GetCropBorder(self)
    __swig_destroy__ = _itkLabelMapMaskImageFilterPython.delete_itkLabelMapMaskImageFilterLM4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkLabelMapMaskImageFilterLM4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkLabelMapMaskImageFilterLM4IUS4

        Create a new object of the class itkLabelMapMaskImageFilterLM4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkLabelMapMaskImageFilterLM4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkLabelMapMaskImageFilterLM4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkLabelMapMaskImageFilterLM4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkLabelMapMaskImageFilterLM4IUS4 in _itkLabelMapMaskImageFilterPython:
_itkLabelMapMaskImageFilterPython.itkLabelMapMaskImageFilterLM4IUS4_swigregister(itkLabelMapMaskImageFilterLM4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def label_map_mask_image_filter(*args: itkt.ImageLike,  feature_image: itkt.Image=..., background_value: float=..., label: int=..., negated: bool=..., crop: bool=..., crop_border: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for LabelMapMaskImageFilter"""
    import itk

    kwarg_typehints = { 'feature_image':feature_image,'background_value':background_value,'label':label,'negated':negated,'crop':crop,'crop_border':crop_border }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.LabelMapMaskImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def label_map_mask_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLabelMap.LabelMapMaskImageFilter
    label_map_mask_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    label_map_mask_image_filter.__doc__ = filter_object.__doc__



