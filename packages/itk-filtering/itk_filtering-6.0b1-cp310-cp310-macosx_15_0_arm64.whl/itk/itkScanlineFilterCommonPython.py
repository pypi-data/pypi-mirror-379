# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageLabelPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScanlineFilterCommonPython
else:
    import _itkScanlineFilterCommonPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython

def itkScanlineFilterCommonICVF22ISS2_New():
    return itkScanlineFilterCommonICVF22ISS2.New()

class itkScanlineFilterCommonICVF22ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF22ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF22ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF22ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF22ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF22ISS2

        Create a new object of the class itkScanlineFilterCommonICVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF22ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22ISS2_swigregister(itkScanlineFilterCommonICVF22ISS2)

def itkScanlineFilterCommonICVF22IUC2_New():
    return itkScanlineFilterCommonICVF22IUC2.New()

class itkScanlineFilterCommonICVF22IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF22IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF22IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF22IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF22IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF22IUC2

        Create a new object of the class itkScanlineFilterCommonICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF22IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUC2_swigregister(itkScanlineFilterCommonICVF22IUC2)

def itkScanlineFilterCommonICVF22IUS2_New():
    return itkScanlineFilterCommonICVF22IUS2.New()

class itkScanlineFilterCommonICVF22IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF22IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF22IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF22IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF22IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF22IUS2

        Create a new object of the class itkScanlineFilterCommonICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF22IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF22IUS2_swigregister(itkScanlineFilterCommonICVF22IUS2)

def itkScanlineFilterCommonICVF23ISS3_New():
    return itkScanlineFilterCommonICVF23ISS3.New()

class itkScanlineFilterCommonICVF23ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF23ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF23ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF23ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF23ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF23ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF23ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF23ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF23ISS3

        Create a new object of the class itkScanlineFilterCommonICVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF23ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF23ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23ISS3_swigregister(itkScanlineFilterCommonICVF23ISS3)

def itkScanlineFilterCommonICVF23IUC3_New():
    return itkScanlineFilterCommonICVF23IUC3.New()

class itkScanlineFilterCommonICVF23IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF23IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF23IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF23IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF23IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF23IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF23IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF23IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF23IUC3

        Create a new object of the class itkScanlineFilterCommonICVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF23IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF23IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUC3_swigregister(itkScanlineFilterCommonICVF23IUC3)

def itkScanlineFilterCommonICVF23IUS3_New():
    return itkScanlineFilterCommonICVF23IUS3.New()

class itkScanlineFilterCommonICVF23IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF23IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF23IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF23IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF23IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF23IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF23IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF23IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF23IUS3

        Create a new object of the class itkScanlineFilterCommonICVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF23IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF23IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF23IUS3_swigregister(itkScanlineFilterCommonICVF23IUS3)

def itkScanlineFilterCommonICVF24ISS4_New():
    return itkScanlineFilterCommonICVF24ISS4.New()

class itkScanlineFilterCommonICVF24ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF24ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF24ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF24ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF24ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF24ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF24ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF24ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF24ISS4

        Create a new object of the class itkScanlineFilterCommonICVF24ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF24ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF24ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF24ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF24ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24ISS4_swigregister(itkScanlineFilterCommonICVF24ISS4)

def itkScanlineFilterCommonICVF24IUC4_New():
    return itkScanlineFilterCommonICVF24IUC4.New()

class itkScanlineFilterCommonICVF24IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF24IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF24IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF24IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF24IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF24IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF24IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF24IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF24IUC4

        Create a new object of the class itkScanlineFilterCommonICVF24IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF24IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF24IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF24IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF24IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUC4_swigregister(itkScanlineFilterCommonICVF24IUC4)

def itkScanlineFilterCommonICVF24IUS4_New():
    return itkScanlineFilterCommonICVF24IUS4.New()

class itkScanlineFilterCommonICVF24IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF24IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF24IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF24IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF24IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF24IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF24IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF24IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF24IUS4

        Create a new object of the class itkScanlineFilterCommonICVF24IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF24IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF24IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF24IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF24IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF24IUS4_swigregister(itkScanlineFilterCommonICVF24IUS4)

def itkScanlineFilterCommonICVF32ISS2_New():
    return itkScanlineFilterCommonICVF32ISS2.New()

class itkScanlineFilterCommonICVF32ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF32ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF32ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF32ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF32ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF32ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF32ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF32ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF32ISS2

        Create a new object of the class itkScanlineFilterCommonICVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF32ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF32ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32ISS2_swigregister(itkScanlineFilterCommonICVF32ISS2)

def itkScanlineFilterCommonICVF32IUC2_New():
    return itkScanlineFilterCommonICVF32IUC2.New()

class itkScanlineFilterCommonICVF32IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF32IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF32IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF32IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF32IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF32IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF32IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF32IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF32IUC2

        Create a new object of the class itkScanlineFilterCommonICVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF32IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF32IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUC2_swigregister(itkScanlineFilterCommonICVF32IUC2)

def itkScanlineFilterCommonICVF32IUS2_New():
    return itkScanlineFilterCommonICVF32IUS2.New()

class itkScanlineFilterCommonICVF32IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF32IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF32IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF32IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF32IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF32IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF32IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF32IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF32IUS2

        Create a new object of the class itkScanlineFilterCommonICVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF32IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF32IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF32IUS2_swigregister(itkScanlineFilterCommonICVF32IUS2)

def itkScanlineFilterCommonICVF33ISS3_New():
    return itkScanlineFilterCommonICVF33ISS3.New()

class itkScanlineFilterCommonICVF33ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF33ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF33ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF33ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF33ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF33ISS3

        Create a new object of the class itkScanlineFilterCommonICVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF33ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33ISS3_swigregister(itkScanlineFilterCommonICVF33ISS3)

def itkScanlineFilterCommonICVF33IUC3_New():
    return itkScanlineFilterCommonICVF33IUC3.New()

class itkScanlineFilterCommonICVF33IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF33IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF33IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF33IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF33IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF33IUC3

        Create a new object of the class itkScanlineFilterCommonICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF33IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUC3_swigregister(itkScanlineFilterCommonICVF33IUC3)

def itkScanlineFilterCommonICVF33IUS3_New():
    return itkScanlineFilterCommonICVF33IUS3.New()

class itkScanlineFilterCommonICVF33IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF33IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF33IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF33IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF33IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF33IUS3

        Create a new object of the class itkScanlineFilterCommonICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF33IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF33IUS3_swigregister(itkScanlineFilterCommonICVF33IUS3)

def itkScanlineFilterCommonICVF34ISS4_New():
    return itkScanlineFilterCommonICVF34ISS4.New()

class itkScanlineFilterCommonICVF34ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF34ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF34ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF34ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF34ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF34ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF34ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF34ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF34ISS4

        Create a new object of the class itkScanlineFilterCommonICVF34ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF34ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF34ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF34ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF34ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34ISS4_swigregister(itkScanlineFilterCommonICVF34ISS4)

def itkScanlineFilterCommonICVF34IUC4_New():
    return itkScanlineFilterCommonICVF34IUC4.New()

class itkScanlineFilterCommonICVF34IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF34IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF34IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF34IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF34IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF34IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF34IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF34IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF34IUC4

        Create a new object of the class itkScanlineFilterCommonICVF34IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF34IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF34IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF34IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF34IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUC4_swigregister(itkScanlineFilterCommonICVF34IUC4)

def itkScanlineFilterCommonICVF34IUS4_New():
    return itkScanlineFilterCommonICVF34IUS4.New()

class itkScanlineFilterCommonICVF34IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF34IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF34IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF34IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF34IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF34IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF34IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF34IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF34IUS4

        Create a new object of the class itkScanlineFilterCommonICVF34IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF34IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF34IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF34IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF34IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF34IUS4_swigregister(itkScanlineFilterCommonICVF34IUS4)

def itkScanlineFilterCommonICVF42ISS2_New():
    return itkScanlineFilterCommonICVF42ISS2.New()

class itkScanlineFilterCommonICVF42ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF42ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF42ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF42ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF42ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF42ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF42ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF42ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF42ISS2

        Create a new object of the class itkScanlineFilterCommonICVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF42ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF42ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42ISS2_swigregister(itkScanlineFilterCommonICVF42ISS2)

def itkScanlineFilterCommonICVF42IUC2_New():
    return itkScanlineFilterCommonICVF42IUC2.New()

class itkScanlineFilterCommonICVF42IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF42IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF42IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF42IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF42IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF42IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF42IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF42IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF42IUC2

        Create a new object of the class itkScanlineFilterCommonICVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF42IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF42IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUC2_swigregister(itkScanlineFilterCommonICVF42IUC2)

def itkScanlineFilterCommonICVF42IUS2_New():
    return itkScanlineFilterCommonICVF42IUS2.New()

class itkScanlineFilterCommonICVF42IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF42IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF42IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF42IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF42IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF42IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF42IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF42IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF42IUS2

        Create a new object of the class itkScanlineFilterCommonICVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF42IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF42IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF42IUS2_swigregister(itkScanlineFilterCommonICVF42IUS2)

def itkScanlineFilterCommonICVF43ISS3_New():
    return itkScanlineFilterCommonICVF43ISS3.New()

class itkScanlineFilterCommonICVF43ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF43ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF43ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF43ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF43ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF43ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF43ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF43ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF43ISS3

        Create a new object of the class itkScanlineFilterCommonICVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF43ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF43ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43ISS3_swigregister(itkScanlineFilterCommonICVF43ISS3)

def itkScanlineFilterCommonICVF43IUC3_New():
    return itkScanlineFilterCommonICVF43IUC3.New()

class itkScanlineFilterCommonICVF43IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF43IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF43IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF43IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF43IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF43IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF43IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF43IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF43IUC3

        Create a new object of the class itkScanlineFilterCommonICVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF43IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF43IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUC3_swigregister(itkScanlineFilterCommonICVF43IUC3)

def itkScanlineFilterCommonICVF43IUS3_New():
    return itkScanlineFilterCommonICVF43IUS3.New()

class itkScanlineFilterCommonICVF43IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF43IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF43IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF43IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF43IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF43IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF43IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF43IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF43IUS3

        Create a new object of the class itkScanlineFilterCommonICVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF43IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF43IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF43IUS3_swigregister(itkScanlineFilterCommonICVF43IUS3)

def itkScanlineFilterCommonICVF44ISS4_New():
    return itkScanlineFilterCommonICVF44ISS4.New()

class itkScanlineFilterCommonICVF44ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF44ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF44ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF44ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF44ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF44ISS4

        Create a new object of the class itkScanlineFilterCommonICVF44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF44ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44ISS4_swigregister(itkScanlineFilterCommonICVF44ISS4)

def itkScanlineFilterCommonICVF44IUC4_New():
    return itkScanlineFilterCommonICVF44IUC4.New()

class itkScanlineFilterCommonICVF44IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF44IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF44IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF44IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF44IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF44IUC4

        Create a new object of the class itkScanlineFilterCommonICVF44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF44IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUC4_swigregister(itkScanlineFilterCommonICVF44IUC4)

def itkScanlineFilterCommonICVF44IUS4_New():
    return itkScanlineFilterCommonICVF44IUS4.New()

class itkScanlineFilterCommonICVF44IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonICVF44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonICVF44IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonICVF44IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterICVF44IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonICVF44IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonICVF44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonICVF44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonICVF44IUS4

        Create a new object of the class itkScanlineFilterCommonICVF44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonICVF44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonICVF44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonICVF44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonICVF44IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonICVF44IUS4_swigregister(itkScanlineFilterCommonICVF44IUS4)

def itkScanlineFilterCommonID2ID2_New():
    return itkScanlineFilterCommonID2ID2.New()

class itkScanlineFilterCommonID2ID2(object):
    r"""Proxy of C++ itkScanlineFilterCommonID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonID2ID2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID2ID2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonID2ID2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonID2ID2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterID2ID2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonID2ID2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonID2ID2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonID2ID2

        Create a new object of the class itkScanlineFilterCommonID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonID2ID2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonID2ID2_swigregister(itkScanlineFilterCommonID2ID2)

def itkScanlineFilterCommonID3ID3_New():
    return itkScanlineFilterCommonID3ID3.New()

class itkScanlineFilterCommonID3ID3(object):
    r"""Proxy of C++ itkScanlineFilterCommonID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonID3ID3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID3ID3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonID3ID3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonID3ID3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterID3ID3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonID3ID3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonID3ID3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonID3ID3

        Create a new object of the class itkScanlineFilterCommonID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonID3ID3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonID3ID3_swigregister(itkScanlineFilterCommonID3ID3)

def itkScanlineFilterCommonID4ID4_New():
    return itkScanlineFilterCommonID4ID4.New()

class itkScanlineFilterCommonID4ID4(object):
    r"""Proxy of C++ itkScanlineFilterCommonID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonID4ID4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID4ID4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonID4ID4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonID4ID4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterID4ID4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonID4ID4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonID4ID4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonID4ID4

        Create a new object of the class itkScanlineFilterCommonID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonID4ID4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonID4ID4_swigregister(itkScanlineFilterCommonID4ID4)

def itkScanlineFilterCommonIF2IF2_New():
    return itkScanlineFilterCommonIF2IF2.New()

class itkScanlineFilterCommonIF2IF2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIF2IF2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF2IF2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF2IF2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIF2IF2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIF2IF2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF2IF2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIF2IF2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIF2IF2

        Create a new object of the class itkScanlineFilterCommonIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIF2IF2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIF2IF2_swigregister(itkScanlineFilterCommonIF2IF2)

def itkScanlineFilterCommonIF3IF3_New():
    return itkScanlineFilterCommonIF3IF3.New()

class itkScanlineFilterCommonIF3IF3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIF3IF3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF3IF3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF3IF3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIF3IF3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIF3IF3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF3IF3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIF3IF3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIF3IF3

        Create a new object of the class itkScanlineFilterCommonIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIF3IF3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIF3IF3_swigregister(itkScanlineFilterCommonIF3IF3)

def itkScanlineFilterCommonIF4IF4_New():
    return itkScanlineFilterCommonIF4IF4.New()

class itkScanlineFilterCommonIF4IF4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIF4IF4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF4IF4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF4IF4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIF4IF4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIF4IF4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF4IF4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIF4IF4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIF4IF4

        Create a new object of the class itkScanlineFilterCommonIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIF4IF4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIF4IF4_swigregister(itkScanlineFilterCommonIF4IF4)

def itkScanlineFilterCommonISS2ISS2_New():
    return itkScanlineFilterCommonISS2ISS2.New()

class itkScanlineFilterCommonISS2ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS2ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS2ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS2ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS2ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS2ISS2

        Create a new object of the class itkScanlineFilterCommonISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS2ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2ISS2_swigregister(itkScanlineFilterCommonISS2ISS2)

def itkScanlineFilterCommonISS2IUC2_New():
    return itkScanlineFilterCommonISS2IUC2.New()

class itkScanlineFilterCommonISS2IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS2IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS2IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS2IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS2IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS2IUC2

        Create a new object of the class itkScanlineFilterCommonISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS2IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUC2_swigregister(itkScanlineFilterCommonISS2IUC2)

def itkScanlineFilterCommonISS2IUL2_New():
    return itkScanlineFilterCommonISS2IUL2.New()

class itkScanlineFilterCommonISS2IUL2(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS2IUL2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUL2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUL2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS2IUL2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS2IUL2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUL2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS2IUL2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS2IUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS2IUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS2IUL2

        Create a new object of the class itkScanlineFilterCommonISS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS2IUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS2IUL2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUL2_swigregister(itkScanlineFilterCommonISS2IUL2)

def itkScanlineFilterCommonISS2IUS2_New():
    return itkScanlineFilterCommonISS2IUS2.New()

class itkScanlineFilterCommonISS2IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS2IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS2IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS2IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS2IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS2IUS2

        Create a new object of the class itkScanlineFilterCommonISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS2IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS2IUS2_swigregister(itkScanlineFilterCommonISS2IUS2)

def itkScanlineFilterCommonISS3ISS3_New():
    return itkScanlineFilterCommonISS3ISS3.New()

class itkScanlineFilterCommonISS3ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS3ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS3ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS3ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS3ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS3ISS3

        Create a new object of the class itkScanlineFilterCommonISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS3ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3ISS3_swigregister(itkScanlineFilterCommonISS3ISS3)

def itkScanlineFilterCommonISS3IUC3_New():
    return itkScanlineFilterCommonISS3IUC3.New()

class itkScanlineFilterCommonISS3IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS3IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS3IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS3IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS3IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS3IUC3

        Create a new object of the class itkScanlineFilterCommonISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS3IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUC3_swigregister(itkScanlineFilterCommonISS3IUC3)

def itkScanlineFilterCommonISS3IUL3_New():
    return itkScanlineFilterCommonISS3IUL3.New()

class itkScanlineFilterCommonISS3IUL3(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS3IUL3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUL3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUL3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS3IUL3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS3IUL3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUL3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS3IUL3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS3IUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS3IUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS3IUL3

        Create a new object of the class itkScanlineFilterCommonISS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS3IUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS3IUL3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUL3_swigregister(itkScanlineFilterCommonISS3IUL3)

def itkScanlineFilterCommonISS3IUS3_New():
    return itkScanlineFilterCommonISS3IUS3.New()

class itkScanlineFilterCommonISS3IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS3IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS3IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS3IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS3IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS3IUS3

        Create a new object of the class itkScanlineFilterCommonISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS3IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS3IUS3_swigregister(itkScanlineFilterCommonISS3IUS3)

def itkScanlineFilterCommonISS4ISS4_New():
    return itkScanlineFilterCommonISS4ISS4.New()

class itkScanlineFilterCommonISS4ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS4ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS4ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS4ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS4ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS4ISS4

        Create a new object of the class itkScanlineFilterCommonISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS4ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4ISS4_swigregister(itkScanlineFilterCommonISS4ISS4)

def itkScanlineFilterCommonISS4IUC4_New():
    return itkScanlineFilterCommonISS4IUC4.New()

class itkScanlineFilterCommonISS4IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS4IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS4IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS4IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS4IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS4IUC4

        Create a new object of the class itkScanlineFilterCommonISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS4IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUC4_swigregister(itkScanlineFilterCommonISS4IUC4)

def itkScanlineFilterCommonISS4IUL4_New():
    return itkScanlineFilterCommonISS4IUL4.New()

class itkScanlineFilterCommonISS4IUL4(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS4IUL4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUL4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUL4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS4IUL4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS4IUL4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUL4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS4IUL4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS4IUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS4IUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS4IUL4

        Create a new object of the class itkScanlineFilterCommonISS4IUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS4IUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS4IUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS4IUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS4IUL4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUL4_swigregister(itkScanlineFilterCommonISS4IUL4)

def itkScanlineFilterCommonISS4IUS4_New():
    return itkScanlineFilterCommonISS4IUS4.New()

class itkScanlineFilterCommonISS4IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonISS4IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonISS4IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterISS4IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonISS4IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonISS4IUS4

        Create a new object of the class itkScanlineFilterCommonISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonISS4IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonISS4IUS4_swigregister(itkScanlineFilterCommonISS4IUS4)

def itkScanlineFilterCommonIUC2ISS2_New():
    return itkScanlineFilterCommonIUC2ISS2.New()

class itkScanlineFilterCommonIUC2ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC2ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC2ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC2ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC2ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2ISS2

        Create a new object of the class itkScanlineFilterCommonIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC2ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2ISS2_swigregister(itkScanlineFilterCommonIUC2ISS2)

def itkScanlineFilterCommonIUC2IUC2_New():
    return itkScanlineFilterCommonIUC2IUC2.New()

class itkScanlineFilterCommonIUC2IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC2IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC2IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC2IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC2IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2IUC2

        Create a new object of the class itkScanlineFilterCommonIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC2IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUC2_swigregister(itkScanlineFilterCommonIUC2IUC2)

def itkScanlineFilterCommonIUC2IUL2_New():
    return itkScanlineFilterCommonIUC2IUL2.New()

class itkScanlineFilterCommonIUC2IUL2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC2IUL2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUL2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUL2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC2IUL2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC2IUL2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUL2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC2IUL2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC2IUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC2IUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2IUL2

        Create a new object of the class itkScanlineFilterCommonIUC2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC2IUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC2IUL2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUL2_swigregister(itkScanlineFilterCommonIUC2IUL2)

def itkScanlineFilterCommonIUC2IUS2_New():
    return itkScanlineFilterCommonIUC2IUS2.New()

class itkScanlineFilterCommonIUC2IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC2IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC2IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC2IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC2IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC2IUS2

        Create a new object of the class itkScanlineFilterCommonIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC2IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC2IUS2_swigregister(itkScanlineFilterCommonIUC2IUS2)

def itkScanlineFilterCommonIUC3ISS3_New():
    return itkScanlineFilterCommonIUC3ISS3.New()

class itkScanlineFilterCommonIUC3ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC3ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC3ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC3ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC3ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3ISS3

        Create a new object of the class itkScanlineFilterCommonIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC3ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3ISS3_swigregister(itkScanlineFilterCommonIUC3ISS3)

def itkScanlineFilterCommonIUC3IUC3_New():
    return itkScanlineFilterCommonIUC3IUC3.New()

class itkScanlineFilterCommonIUC3IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC3IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC3IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC3IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC3IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3IUC3

        Create a new object of the class itkScanlineFilterCommonIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC3IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUC3_swigregister(itkScanlineFilterCommonIUC3IUC3)

def itkScanlineFilterCommonIUC3IUL3_New():
    return itkScanlineFilterCommonIUC3IUL3.New()

class itkScanlineFilterCommonIUC3IUL3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC3IUL3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUL3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUL3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC3IUL3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC3IUL3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUL3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC3IUL3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC3IUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC3IUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3IUL3

        Create a new object of the class itkScanlineFilterCommonIUC3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC3IUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC3IUL3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUL3_swigregister(itkScanlineFilterCommonIUC3IUL3)

def itkScanlineFilterCommonIUC3IUS3_New():
    return itkScanlineFilterCommonIUC3IUS3.New()

class itkScanlineFilterCommonIUC3IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC3IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC3IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC3IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC3IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC3IUS3

        Create a new object of the class itkScanlineFilterCommonIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC3IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC3IUS3_swigregister(itkScanlineFilterCommonIUC3IUS3)

def itkScanlineFilterCommonIUC4ISS4_New():
    return itkScanlineFilterCommonIUC4ISS4.New()

class itkScanlineFilterCommonIUC4ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC4ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC4ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC4ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC4ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC4ISS4

        Create a new object of the class itkScanlineFilterCommonIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC4ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4ISS4_swigregister(itkScanlineFilterCommonIUC4ISS4)

def itkScanlineFilterCommonIUC4IUC4_New():
    return itkScanlineFilterCommonIUC4IUC4.New()

class itkScanlineFilterCommonIUC4IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC4IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC4IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC4IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC4IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC4IUC4

        Create a new object of the class itkScanlineFilterCommonIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC4IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUC4_swigregister(itkScanlineFilterCommonIUC4IUC4)

def itkScanlineFilterCommonIUC4IUL4_New():
    return itkScanlineFilterCommonIUC4IUL4.New()

class itkScanlineFilterCommonIUC4IUL4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC4IUL4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUL4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUL4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC4IUL4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC4IUL4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUL4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC4IUL4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC4IUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC4IUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC4IUL4

        Create a new object of the class itkScanlineFilterCommonIUC4IUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC4IUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC4IUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC4IUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC4IUL4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUL4_swigregister(itkScanlineFilterCommonIUC4IUL4)

def itkScanlineFilterCommonIUC4IUS4_New():
    return itkScanlineFilterCommonIUC4IUS4.New()

class itkScanlineFilterCommonIUC4IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUC4IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUC4IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUC4IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUC4IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUC4IUS4

        Create a new object of the class itkScanlineFilterCommonIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUC4IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUC4IUS4_swigregister(itkScanlineFilterCommonIUC4IUS4)

def itkScanlineFilterCommonIUS2ISS2_New():
    return itkScanlineFilterCommonIUS2ISS2.New()

class itkScanlineFilterCommonIUS2ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS2ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS2ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS2ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS2ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2ISS2

        Create a new object of the class itkScanlineFilterCommonIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS2ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2ISS2_swigregister(itkScanlineFilterCommonIUS2ISS2)

def itkScanlineFilterCommonIUS2IUC2_New():
    return itkScanlineFilterCommonIUS2IUC2.New()

class itkScanlineFilterCommonIUS2IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS2IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS2IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS2IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS2IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2IUC2

        Create a new object of the class itkScanlineFilterCommonIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS2IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUC2_swigregister(itkScanlineFilterCommonIUS2IUC2)

def itkScanlineFilterCommonIUS2IUL2_New():
    return itkScanlineFilterCommonIUS2IUL2.New()

class itkScanlineFilterCommonIUS2IUL2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS2IUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS2IUL2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUL2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUL2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS2IUL2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS2IUL2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUL2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS2IUL2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS2IUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS2IUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2IUL2

        Create a new object of the class itkScanlineFilterCommonIUS2IUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2IUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2IUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS2IUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS2IUL2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUL2_swigregister(itkScanlineFilterCommonIUS2IUL2)

def itkScanlineFilterCommonIUS2IUS2_New():
    return itkScanlineFilterCommonIUS2IUS2.New()

class itkScanlineFilterCommonIUS2IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS2IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS2IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS2IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS2IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS2IUS2

        Create a new object of the class itkScanlineFilterCommonIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS2IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS2IUS2_swigregister(itkScanlineFilterCommonIUS2IUS2)

def itkScanlineFilterCommonIUS3ISS3_New():
    return itkScanlineFilterCommonIUS3ISS3.New()

class itkScanlineFilterCommonIUS3ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS3ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS3ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS3ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS3ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3ISS3

        Create a new object of the class itkScanlineFilterCommonIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS3ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3ISS3_swigregister(itkScanlineFilterCommonIUS3ISS3)

def itkScanlineFilterCommonIUS3IUC3_New():
    return itkScanlineFilterCommonIUS3IUC3.New()

class itkScanlineFilterCommonIUS3IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS3IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS3IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS3IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS3IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3IUC3

        Create a new object of the class itkScanlineFilterCommonIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS3IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUC3_swigregister(itkScanlineFilterCommonIUS3IUC3)

def itkScanlineFilterCommonIUS3IUL3_New():
    return itkScanlineFilterCommonIUS3IUL3.New()

class itkScanlineFilterCommonIUS3IUL3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS3IUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS3IUL3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUL3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUL3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS3IUL3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS3IUL3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUL3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS3IUL3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS3IUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS3IUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3IUL3

        Create a new object of the class itkScanlineFilterCommonIUS3IUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3IUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3IUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS3IUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS3IUL3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUL3_swigregister(itkScanlineFilterCommonIUS3IUL3)

def itkScanlineFilterCommonIUS3IUS3_New():
    return itkScanlineFilterCommonIUS3IUS3.New()

class itkScanlineFilterCommonIUS3IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS3IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS3IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS3IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS3IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS3IUS3

        Create a new object of the class itkScanlineFilterCommonIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS3IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS3IUS3_swigregister(itkScanlineFilterCommonIUS3IUS3)

def itkScanlineFilterCommonIUS4ISS4_New():
    return itkScanlineFilterCommonIUS4ISS4.New()

class itkScanlineFilterCommonIUS4ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS4ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS4ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS4ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS4ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS4ISS4

        Create a new object of the class itkScanlineFilterCommonIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS4ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4ISS4_swigregister(itkScanlineFilterCommonIUS4ISS4)

def itkScanlineFilterCommonIUS4IUC4_New():
    return itkScanlineFilterCommonIUS4IUC4.New()

class itkScanlineFilterCommonIUS4IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS4IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS4IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS4IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS4IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS4IUC4

        Create a new object of the class itkScanlineFilterCommonIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS4IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUC4_swigregister(itkScanlineFilterCommonIUS4IUC4)

def itkScanlineFilterCommonIUS4IUL4_New():
    return itkScanlineFilterCommonIUS4IUL4.New()

class itkScanlineFilterCommonIUS4IUL4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS4IUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS4IUL4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUL4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUL4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS4IUL4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS4IUL4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUL4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS4IUL4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS4IUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS4IUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS4IUL4

        Create a new object of the class itkScanlineFilterCommonIUS4IUL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS4IUL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS4IUL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS4IUL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS4IUL4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUL4_swigregister(itkScanlineFilterCommonIUS4IUL4)

def itkScanlineFilterCommonIUS4IUS4_New():
    return itkScanlineFilterCommonIUS4IUS4.New()

class itkScanlineFilterCommonIUS4IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIUS4IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIUS4IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIUS4IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIUS4IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIUS4IUS4

        Create a new object of the class itkScanlineFilterCommonIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIUS4IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIUS4IUS4_swigregister(itkScanlineFilterCommonIUS4IUS4)

def itkScanlineFilterCommonIVF22ISS2_New():
    return itkScanlineFilterCommonIVF22ISS2.New()

class itkScanlineFilterCommonIVF22ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF22ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF22ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF22ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF22ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF22ISS2

        Create a new object of the class itkScanlineFilterCommonIVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF22ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22ISS2_swigregister(itkScanlineFilterCommonIVF22ISS2)

def itkScanlineFilterCommonIVF22IUC2_New():
    return itkScanlineFilterCommonIVF22IUC2.New()

class itkScanlineFilterCommonIVF22IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF22IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF22IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF22IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF22IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF22IUC2

        Create a new object of the class itkScanlineFilterCommonIVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF22IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUC2_swigregister(itkScanlineFilterCommonIVF22IUC2)

def itkScanlineFilterCommonIVF22IUS2_New():
    return itkScanlineFilterCommonIVF22IUS2.New()

class itkScanlineFilterCommonIVF22IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF22IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF22IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF22IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF22IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF22IUS2

        Create a new object of the class itkScanlineFilterCommonIVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF22IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF22IUS2_swigregister(itkScanlineFilterCommonIVF22IUS2)

def itkScanlineFilterCommonIVF23ISS3_New():
    return itkScanlineFilterCommonIVF23ISS3.New()

class itkScanlineFilterCommonIVF23ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF23ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF23ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF23ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF23ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF23ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF23ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF23ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF23ISS3

        Create a new object of the class itkScanlineFilterCommonIVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF23ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF23ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23ISS3_swigregister(itkScanlineFilterCommonIVF23ISS3)

def itkScanlineFilterCommonIVF23IUC3_New():
    return itkScanlineFilterCommonIVF23IUC3.New()

class itkScanlineFilterCommonIVF23IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF23IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF23IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF23IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF23IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF23IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF23IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF23IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF23IUC3

        Create a new object of the class itkScanlineFilterCommonIVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF23IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF23IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUC3_swigregister(itkScanlineFilterCommonIVF23IUC3)

def itkScanlineFilterCommonIVF23IUS3_New():
    return itkScanlineFilterCommonIVF23IUS3.New()

class itkScanlineFilterCommonIVF23IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF23IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF23IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF23IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF23IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF23IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF23IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF23IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF23IUS3

        Create a new object of the class itkScanlineFilterCommonIVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF23IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF23IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF23IUS3_swigregister(itkScanlineFilterCommonIVF23IUS3)

def itkScanlineFilterCommonIVF24ISS4_New():
    return itkScanlineFilterCommonIVF24ISS4.New()

class itkScanlineFilterCommonIVF24ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF24ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF24ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF24ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF24ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF24ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF24ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF24ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF24ISS4

        Create a new object of the class itkScanlineFilterCommonIVF24ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF24ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF24ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF24ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF24ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24ISS4_swigregister(itkScanlineFilterCommonIVF24ISS4)

def itkScanlineFilterCommonIVF24IUC4_New():
    return itkScanlineFilterCommonIVF24IUC4.New()

class itkScanlineFilterCommonIVF24IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF24IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF24IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF24IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF24IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF24IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF24IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF24IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF24IUC4

        Create a new object of the class itkScanlineFilterCommonIVF24IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF24IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF24IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF24IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF24IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUC4_swigregister(itkScanlineFilterCommonIVF24IUC4)

def itkScanlineFilterCommonIVF24IUS4_New():
    return itkScanlineFilterCommonIVF24IUS4.New()

class itkScanlineFilterCommonIVF24IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF24IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF24IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF24IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF24IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF24IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF24IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF24IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF24IUS4

        Create a new object of the class itkScanlineFilterCommonIVF24IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF24IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF24IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF24IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF24IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF24IUS4_swigregister(itkScanlineFilterCommonIVF24IUS4)

def itkScanlineFilterCommonIVF32ISS2_New():
    return itkScanlineFilterCommonIVF32ISS2.New()

class itkScanlineFilterCommonIVF32ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF32ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF32ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF32ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF32ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF32ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF32ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF32ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF32ISS2

        Create a new object of the class itkScanlineFilterCommonIVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF32ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF32ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32ISS2_swigregister(itkScanlineFilterCommonIVF32ISS2)

def itkScanlineFilterCommonIVF32IUC2_New():
    return itkScanlineFilterCommonIVF32IUC2.New()

class itkScanlineFilterCommonIVF32IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF32IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF32IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF32IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF32IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF32IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF32IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF32IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF32IUC2

        Create a new object of the class itkScanlineFilterCommonIVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF32IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF32IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUC2_swigregister(itkScanlineFilterCommonIVF32IUC2)

def itkScanlineFilterCommonIVF32IUS2_New():
    return itkScanlineFilterCommonIVF32IUS2.New()

class itkScanlineFilterCommonIVF32IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF32IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF32IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF32IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF32IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF32IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF32IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF32IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF32IUS2

        Create a new object of the class itkScanlineFilterCommonIVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF32IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF32IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF32IUS2_swigregister(itkScanlineFilterCommonIVF32IUS2)

def itkScanlineFilterCommonIVF33ISS3_New():
    return itkScanlineFilterCommonIVF33ISS3.New()

class itkScanlineFilterCommonIVF33ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF33ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF33ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF33ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF33ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF33ISS3

        Create a new object of the class itkScanlineFilterCommonIVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF33ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33ISS3_swigregister(itkScanlineFilterCommonIVF33ISS3)

def itkScanlineFilterCommonIVF33IUC3_New():
    return itkScanlineFilterCommonIVF33IUC3.New()

class itkScanlineFilterCommonIVF33IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF33IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF33IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF33IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF33IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF33IUC3

        Create a new object of the class itkScanlineFilterCommonIVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF33IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUC3_swigregister(itkScanlineFilterCommonIVF33IUC3)

def itkScanlineFilterCommonIVF33IUS3_New():
    return itkScanlineFilterCommonIVF33IUS3.New()

class itkScanlineFilterCommonIVF33IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF33IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF33IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF33IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF33IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF33IUS3

        Create a new object of the class itkScanlineFilterCommonIVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF33IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF33IUS3_swigregister(itkScanlineFilterCommonIVF33IUS3)

def itkScanlineFilterCommonIVF34ISS4_New():
    return itkScanlineFilterCommonIVF34ISS4.New()

class itkScanlineFilterCommonIVF34ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF34ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF34ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF34ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF34ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF34ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF34ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF34ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF34ISS4

        Create a new object of the class itkScanlineFilterCommonIVF34ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF34ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF34ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF34ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF34ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34ISS4_swigregister(itkScanlineFilterCommonIVF34ISS4)

def itkScanlineFilterCommonIVF34IUC4_New():
    return itkScanlineFilterCommonIVF34IUC4.New()

class itkScanlineFilterCommonIVF34IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF34IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF34IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF34IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF34IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF34IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF34IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF34IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF34IUC4

        Create a new object of the class itkScanlineFilterCommonIVF34IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF34IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF34IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF34IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF34IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUC4_swigregister(itkScanlineFilterCommonIVF34IUC4)

def itkScanlineFilterCommonIVF34IUS4_New():
    return itkScanlineFilterCommonIVF34IUS4.New()

class itkScanlineFilterCommonIVF34IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF34IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF34IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF34IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF34IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF34IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF34IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF34IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF34IUS4

        Create a new object of the class itkScanlineFilterCommonIVF34IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF34IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF34IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF34IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF34IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF34IUS4_swigregister(itkScanlineFilterCommonIVF34IUS4)

def itkScanlineFilterCommonIVF42ISS2_New():
    return itkScanlineFilterCommonIVF42ISS2.New()

class itkScanlineFilterCommonIVF42ISS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF42ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF42ISS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42ISS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42ISS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF42ISS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF42ISS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42ISS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF42ISS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF42ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF42ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF42ISS2

        Create a new object of the class itkScanlineFilterCommonIVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF42ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF42ISS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42ISS2_swigregister(itkScanlineFilterCommonIVF42ISS2)

def itkScanlineFilterCommonIVF42IUC2_New():
    return itkScanlineFilterCommonIVF42IUC2.New()

class itkScanlineFilterCommonIVF42IUC2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF42IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF42IUC2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUC2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUC2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF42IUC2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF42IUC2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUC2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF42IUC2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF42IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF42IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF42IUC2

        Create a new object of the class itkScanlineFilterCommonIVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF42IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF42IUC2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUC2_swigregister(itkScanlineFilterCommonIVF42IUC2)

def itkScanlineFilterCommonIVF42IUS2_New():
    return itkScanlineFilterCommonIVF42IUS2.New()

class itkScanlineFilterCommonIVF42IUS2(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF42IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF42IUS2_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUS2___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUS2_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF42IUS2

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF42IUS2 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUS2_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF42IUS2(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF42IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF42IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF42IUS2

        Create a new object of the class itkScanlineFilterCommonIVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF42IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF42IUS2 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF42IUS2_swigregister(itkScanlineFilterCommonIVF42IUS2)

def itkScanlineFilterCommonIVF43ISS3_New():
    return itkScanlineFilterCommonIVF43ISS3.New()

class itkScanlineFilterCommonIVF43ISS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF43ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF43ISS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43ISS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43ISS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF43ISS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF43ISS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43ISS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF43ISS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF43ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF43ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF43ISS3

        Create a new object of the class itkScanlineFilterCommonIVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF43ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF43ISS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43ISS3_swigregister(itkScanlineFilterCommonIVF43ISS3)

def itkScanlineFilterCommonIVF43IUC3_New():
    return itkScanlineFilterCommonIVF43IUC3.New()

class itkScanlineFilterCommonIVF43IUC3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF43IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF43IUC3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUC3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUC3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF43IUC3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF43IUC3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUC3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF43IUC3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF43IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF43IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF43IUC3

        Create a new object of the class itkScanlineFilterCommonIVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF43IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF43IUC3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUC3_swigregister(itkScanlineFilterCommonIVF43IUC3)

def itkScanlineFilterCommonIVF43IUS3_New():
    return itkScanlineFilterCommonIVF43IUS3.New()

class itkScanlineFilterCommonIVF43IUS3(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF43IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF43IUS3_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUS3___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUS3_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF43IUS3

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF43IUS3 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUS3_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF43IUS3(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF43IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF43IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF43IUS3

        Create a new object of the class itkScanlineFilterCommonIVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF43IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF43IUS3 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF43IUS3_swigregister(itkScanlineFilterCommonIVF43IUS3)

def itkScanlineFilterCommonIVF44ISS4_New():
    return itkScanlineFilterCommonIVF44ISS4.New()

class itkScanlineFilterCommonIVF44ISS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF44ISS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44ISS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44ISS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF44ISS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF44ISS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44ISS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF44ISS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF44ISS4

        Create a new object of the class itkScanlineFilterCommonIVF44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF44ISS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44ISS4_swigregister(itkScanlineFilterCommonIVF44ISS4)

def itkScanlineFilterCommonIVF44IUC4_New():
    return itkScanlineFilterCommonIVF44IUC4.New()

class itkScanlineFilterCommonIVF44IUC4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF44IUC4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUC4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUC4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF44IUC4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF44IUC4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUC4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF44IUC4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF44IUC4

        Create a new object of the class itkScanlineFilterCommonIVF44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF44IUC4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUC4_swigregister(itkScanlineFilterCommonIVF44IUC4)

def itkScanlineFilterCommonIVF44IUS4_New():
    return itkScanlineFilterCommonIVF44IUS4.New()

class itkScanlineFilterCommonIVF44IUS4(object):
    r"""Proxy of C++ itkScanlineFilterCommonIVF44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScanlineFilterCommonIVF44IUS4_Pointer"""
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUS4___New_orig__()
    SameDimension = _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUS4_SameDimension
    

    def __init__(self, enclosingFilter):
        r"""
        __init__(self, enclosingFilter) -> itkScanlineFilterCommonIVF44IUS4

        Parameters
        ----------
        enclosingFilter: itkImageToImageFilterIVF44IUS4 *

        """
        _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUS4_swiginit(self, _itkScanlineFilterCommonPython.new_itkScanlineFilterCommonIVF44IUS4(enclosingFilter))
    __swig_destroy__ = _itkScanlineFilterCommonPython.delete_itkScanlineFilterCommonIVF44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScanlineFilterCommonIVF44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScanlineFilterCommonIVF44IUS4

        Create a new object of the class itkScanlineFilterCommonIVF44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScanlineFilterCommonIVF44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScanlineFilterCommonIVF44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScanlineFilterCommonIVF44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScanlineFilterCommonIVF44IUS4 in _itkScanlineFilterCommonPython:
_itkScanlineFilterCommonPython.itkScanlineFilterCommonIVF44IUS4_swigregister(itkScanlineFilterCommonIVF44IUS4)

