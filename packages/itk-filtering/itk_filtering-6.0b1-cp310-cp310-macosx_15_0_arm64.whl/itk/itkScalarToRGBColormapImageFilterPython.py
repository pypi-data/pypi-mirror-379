# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKColormapPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarToRGBColormapImageFilterPython
else:
    import _itkScalarToRGBColormapImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkColormapFunctionPython
class itkScalarToRGBColormapImageFilterEnums(object):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterEnums class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    RGBColormapFilter_Red = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Red
    
    RGBColormapFilter_Green = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Green
    
    RGBColormapFilter_Blue = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Blue
    
    RGBColormapFilter_Grey = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Grey
    
    RGBColormapFilter_Hot = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Hot
    
    RGBColormapFilter_Cool = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Cool
    
    RGBColormapFilter_Spring = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Spring
    
    RGBColormapFilter_Summer = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Summer
    
    RGBColormapFilter_Autumn = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Autumn
    
    RGBColormapFilter_Winter = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Winter
    
    RGBColormapFilter_Copper = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Copper
    
    RGBColormapFilter_Jet = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_Jet
    
    RGBColormapFilter_HSV = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_HSV
    
    RGBColormapFilter_OverUnder = _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_RGBColormapFilter_OverUnder
    

    def __init__(self, *args):
        r"""
        __init__(self) -> itkScalarToRGBColormapImageFilterEnums
        __init__(self, arg0) -> itkScalarToRGBColormapImageFilterEnums

        Parameters
        ----------
        arg0: itkScalarToRGBColormapImageFilterEnums const &

        """
        _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_swiginit(self, _itkScalarToRGBColormapImageFilterPython.new_itkScalarToRGBColormapImageFilterEnums(*args))
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterEnums

# Register itkScalarToRGBColormapImageFilterEnums in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterEnums_swigregister(itkScalarToRGBColormapImageFilterEnums)

def itkScalarToRGBColormapImageFilterID2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterID2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterID2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterID2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterID2IRGBAUC2)

def itkScalarToRGBColormapImageFilterID2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterID2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterID2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterID2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterID2IRGBUC2)

def itkScalarToRGBColormapImageFilterID3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterID3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterID3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterID3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterID3IRGBAUC3)

def itkScalarToRGBColormapImageFilterID3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterID3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterID3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterID3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterID3IRGBUC3)

def itkScalarToRGBColormapImageFilterID4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterID4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterID4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterID4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterID4IRGBAUC4)

def itkScalarToRGBColormapImageFilterID4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterID4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterID4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterID4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterID4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterID4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< double,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterID4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterID4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterID4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterID4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterID4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterID4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterID4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterID4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterID4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterID4IRGBUC4)

def itkScalarToRGBColormapImageFilterIF2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIF2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIF2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIF2IRGBAUC2)

def itkScalarToRGBColormapImageFilterIF2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIF2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIF2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIF2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIF2IRGBUC2)

def itkScalarToRGBColormapImageFilterIF3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIF3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIF3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIF3IRGBAUC3)

def itkScalarToRGBColormapImageFilterIF3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIF3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIF3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIF3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIF3IRGBUC3)

def itkScalarToRGBColormapImageFilterIF4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterIF4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterIF4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIF4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterIF4IRGBAUC4)

def itkScalarToRGBColormapImageFilterIF4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterIF4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterIF4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIF4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIF4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIF4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< float,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIF4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIF4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIF4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIF4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIF4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIF4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIF4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIF4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIF4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterIF4IRGBUC4)

def itkScalarToRGBColormapImageFilterISS2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterISS2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterISS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterISS2IRGBAUC2)

def itkScalarToRGBColormapImageFilterISS2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterISS2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterISS2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterISS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterISS2IRGBUC2)

def itkScalarToRGBColormapImageFilterISS3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterISS3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterISS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterISS3IRGBAUC3)

def itkScalarToRGBColormapImageFilterISS3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterISS3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterISS3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterISS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterISS3IRGBUC3)

def itkScalarToRGBColormapImageFilterISS4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterISS4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterISS4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterISS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterISS4IRGBAUC4)

def itkScalarToRGBColormapImageFilterISS4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterISS4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterISS4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterISS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterISS4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterISS4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterISS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterISS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterISS4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterISS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterISS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterISS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterISS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterISS4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterISS4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterISS4IRGBUC4)

def itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUC2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBAPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBAPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUC2IRGBAUC2)

def itkScalarToRGBColormapImageFilterIUC2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUC2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUC2IRGBUC2)

def itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUC3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBAPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBAPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUC3IRGBAUC3)

def itkScalarToRGBColormapImageFilterIUC3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUC3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUC3IRGBUC3)

def itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterIUC4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterIUC4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBAPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        GetColormap(self) -> itkColormapFunctionUCRGBAPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBAPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterIUC4IRGBAUC4)

def itkScalarToRGBColormapImageFilterIUC4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterIUC4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterIUC4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUC4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUC4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itkColormapFunctionUCRGBPUC"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        GetColormap(self) -> itkColormapFunctionUCRGBPUC
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itkColormapFunctionUCRGBPUC *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUC4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUC4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUC4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterIUC4IRGBUC4)

def itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUL2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUL2IRGBAUC2)

def itkScalarToRGBColormapImageFilterIUL2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUL2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUL2IRGBUC2)

def itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUL3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUL3IRGBAUC3)

def itkScalarToRGBColormapImageFilterIUL3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUL3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUL3IRGBUC3)

def itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterIUL4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterIUL4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterIUL4IRGBAUC4)

def itkScalarToRGBColormapImageFilterIUL4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterIUL4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterIUL4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUL4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUL4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUL4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUL4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned long,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUL4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUL4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUL4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUL4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUL4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUL4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUL4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUL4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUL4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterIUL4IRGBUC4)

def itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_New():
    return itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New()

class itkScalarToRGBColormapImageFilterIUS2IRGBAUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBAUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS2IRGBAUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS2IRGBAUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBAUC2_swigregister(itkScalarToRGBColormapImageFilterIUS2IRGBAUC2)

def itkScalarToRGBColormapImageFilterIUS2IRGBUC2_New():
    return itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New()

class itkScalarToRGBColormapImageFilterIUS2IRGBUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IRGBUC2):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS2IRGBUC2_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS2IRGBUC2

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS2IRGBUC2 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS2IRGBUC2_swigregister(itkScalarToRGBColormapImageFilterIUS2IRGBUC2)

def itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_New():
    return itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New()

class itkScalarToRGBColormapImageFilterIUS3IRGBAUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBAUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS3IRGBAUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS3IRGBAUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBAUC3_swigregister(itkScalarToRGBColormapImageFilterIUS3IRGBAUC3)

def itkScalarToRGBColormapImageFilterIUS3IRGBUC3_New():
    return itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New()

class itkScalarToRGBColormapImageFilterIUS3IRGBUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IRGBUC3):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS3IRGBUC3_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS3IRGBUC3

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS3IRGBUC3 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS3IRGBUC3_swigregister(itkScalarToRGBColormapImageFilterIUS3IRGBUC3)

def itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_New():
    return itkScalarToRGBColormapImageFilterIUS4IRGBAUC4.New()

class itkScalarToRGBColormapImageFilterIUS4IRGBAUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IRGBAUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBAPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS4IRGBAUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS4IRGBAUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBAUC4_swigregister(itkScalarToRGBColormapImageFilterIUS4IRGBAUC4)

def itkScalarToRGBColormapImageFilterIUS4IRGBUC4_New():
    return itkScalarToRGBColormapImageFilterIUS4IRGBUC4.New()

class itkScalarToRGBColormapImageFilterIUS4IRGBUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS4IRGBUC4):
    r"""Proxy of C++ itkScalarToRGBColormapImageFilterIUS4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarToRGBColormapImageFilterIUS4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarToRGBColormapImageFilterIUS4IRGBUC4_Pointer"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_Clone(self)

    def GetModifiableColormap(self):
        r"""GetModifiableColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_GetModifiableColormap(self)

    def GetColormap(self, *args):
        r"""
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > const
        GetColormap(self) -> itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *
        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_GetColormap(self, *args)

    def SetColormap(self, *args):
        r"""
        SetColormap(self, _arg)

        Parameters
        ----------
        _arg: itk::Function::ColormapFunction< unsigned short,itk::RGBPixel< unsigned char > > *

        SetColormap(self, arg0)

        Parameters
        ----------
        arg0: enum itkScalarToRGBColormapImageFilterEnums::RGBColormapFilter

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_SetColormap(self, *args)

    def SetUseInputImageExtremaForScaling(self, _arg):
        r"""
        SetUseInputImageExtremaForScaling(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_SetUseInputImageExtremaForScaling(self, _arg)

    def GetUseInputImageExtremaForScaling(self):
        r"""GetUseInputImageExtremaForScaling(self) -> bool"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_GetUseInputImageExtremaForScaling(self)

    def UseInputImageExtremaForScalingOn(self):
        r"""UseInputImageExtremaForScalingOn(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_UseInputImageExtremaForScalingOn(self)

    def UseInputImageExtremaForScalingOff(self):
        r"""UseInputImageExtremaForScalingOff(self)"""
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_UseInputImageExtremaForScalingOff(self)
    __swig_destroy__ = _itkScalarToRGBColormapImageFilterPython.delete_itkScalarToRGBColormapImageFilterIUS4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarToRGBColormapImageFilterIUS4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarToRGBColormapImageFilterIUS4IRGBUC4

        Create a new object of the class itkScalarToRGBColormapImageFilterIUS4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarToRGBColormapImageFilterIUS4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarToRGBColormapImageFilterIUS4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarToRGBColormapImageFilterIUS4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarToRGBColormapImageFilterIUS4IRGBUC4 in _itkScalarToRGBColormapImageFilterPython:
_itkScalarToRGBColormapImageFilterPython.itkScalarToRGBColormapImageFilterIUS4IRGBUC4_swigregister(itkScalarToRGBColormapImageFilterIUS4IRGBUC4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def scalar_to_rgb_colormap_image_filter(*args: itkt.ImageLike,  colormap=..., use_input_image_extrema_for_scaling: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ScalarToRGBColormapImageFilter"""
    import itk

    kwarg_typehints = { 'colormap':colormap,'use_input_image_extrema_for_scaling':use_input_image_extrema_for_scaling }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ScalarToRGBColormapImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def scalar_to_rgb_colormap_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKColormap.ScalarToRGBColormapImageFilter
    scalar_to_rgb_colormap_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    scalar_to_rgb_colormap_image_filter.__doc__ = filter_object.__doc__



