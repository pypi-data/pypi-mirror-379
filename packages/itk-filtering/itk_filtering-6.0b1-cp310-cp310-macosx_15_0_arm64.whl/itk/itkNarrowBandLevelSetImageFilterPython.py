# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNarrowBandLevelSetImageFilterPython
else:
    import _itkNarrowBandLevelSetImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkSegmentationLevelSetFunctionPython
import itk.itkLevelSetFunctionPython
import itk.itkFiniteDifferenceFunctionPython
import itk.itkNarrowBandImageFilterBasePython
import itk.itkFiniteDifferenceImageFilterPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython
import itk.ITKNarrowBandBasePython
class itkNarrowBandLevelSetImageFilterID2ID2DID2(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID2ID2):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterID2ID2DID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageD2 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageD2 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageD2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAD22"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionID2ID2 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionID2ID2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterID2ID2DID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterID2ID2DID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_cast(obj)

# Register itkNarrowBandLevelSetImageFilterID2ID2DID2 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID2ID2DID2_swigregister(itkNarrowBandLevelSetImageFilterID2ID2DID2)
class itkNarrowBandLevelSetImageFilterID3ID3DID3(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID3ID3):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterID3ID3DID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageD3 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageD3 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageD3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAD33"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionID3ID3 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionID3ID3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterID3ID3DID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterID3ID3DID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_cast(obj)

# Register itkNarrowBandLevelSetImageFilterID3ID3DID3 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID3ID3DID3_swigregister(itkNarrowBandLevelSetImageFilterID3ID3DID3)
class itkNarrowBandLevelSetImageFilterID4ID4DID4(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseID4ID4):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterID4ID4DID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageD4 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageD4 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageD4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAD44"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> double"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionID4ID4 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionID4ID4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterID4ID4DID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterID4ID4DID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_cast(obj)

# Register itkNarrowBandLevelSetImageFilterID4ID4DID4 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterID4ID4DID4_swigregister(itkNarrowBandLevelSetImageFilterID4ID4DID4)
class itkNarrowBandLevelSetImageFilterIF2IF2FIF2(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF2IF2):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterIF2IF2FIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageF2 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageF2 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageF2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAF22"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionIF2IF2 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionIF2IF2"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterIF2IF2FIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterIF2IF2FIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_cast(obj)

# Register itkNarrowBandLevelSetImageFilterIF2IF2FIF2 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF2IF2FIF2_swigregister(itkNarrowBandLevelSetImageFilterIF2IF2FIF2)
class itkNarrowBandLevelSetImageFilterIF3IF3FIF3(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF3IF3):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterIF3IF3FIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageF3 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageF3 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageF3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAF33"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionIF3IF3 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionIF3IF3"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterIF3IF3FIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterIF3IF3FIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_cast(obj)

# Register itkNarrowBandLevelSetImageFilterIF3IF3FIF3 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF3IF3FIF3_swigregister(itkNarrowBandLevelSetImageFilterIF3IF3FIF3)
class itkNarrowBandLevelSetImageFilterIF4IF4FIF4(itk.itkNarrowBandImageFilterBasePython.itkNarrowBandImageFilterBaseIF4IF4):
    r"""Proxy of C++ itkNarrowBandLevelSetImageFilterIF4IF4FIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    def SetFeatureImage(self, f):
        r"""
        SetFeatureImage(self, f)

        Parameters
        ----------
        f: itkImageF4 const *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetFeatureImage(self, f)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetFeatureImage(self)

    def SetInitialImage(self, f):
        r"""
        SetInitialImage(self, f)

        Parameters
        ----------
        f: itkImageF4 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetInitialImage(self, f)

    def GetSpeedImage(self):
        r"""GetSpeedImage(self) -> itkImageF4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetSpeedImage(self)

    def GetAdvectionImage(self):
        r"""GetAdvectionImage(self) -> itkImageFAF44"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetAdvectionImage(self)

    def SetUseNegativeFeaturesOn(self):
        r"""SetUseNegativeFeaturesOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetUseNegativeFeaturesOn(self)

    def SetUseNegativeFeaturesOff(self):
        r"""SetUseNegativeFeaturesOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetUseNegativeFeaturesOff(self)

    def SetUseNegativeFeatures(self, u):
        r"""
        SetUseNegativeFeatures(self, u)

        Parameters
        ----------
        u: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetUseNegativeFeatures(self, u)

    def GetUseNegativeFeatures(self):
        r"""GetUseNegativeFeatures(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetUseNegativeFeatures(self)

    def SetReverseExpansionDirection(self, _arg):
        r"""
        SetReverseExpansionDirection(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetReverseExpansionDirection(self, _arg)

    def GetReverseExpansionDirection(self):
        r"""GetReverseExpansionDirection(self) -> bool"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetReverseExpansionDirection(self)

    def ReverseExpansionDirectionOn(self):
        r"""ReverseExpansionDirectionOn(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_ReverseExpansionDirectionOn(self)

    def ReverseExpansionDirectionOff(self):
        r"""ReverseExpansionDirectionOff(self)"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_ReverseExpansionDirectionOff(self)

    def SetFeatureScaling(self, v):
        r"""
        SetFeatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetFeatureScaling(self, v)

    def SetPropagationScaling(self, v):
        r"""
        SetPropagationScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetPropagationScaling(self, v)

    def GetPropagationScaling(self):
        r"""GetPropagationScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetPropagationScaling(self)

    def SetAdvectionScaling(self, v):
        r"""
        SetAdvectionScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetAdvectionScaling(self, v)

    def GetAdvectionScaling(self):
        r"""GetAdvectionScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetAdvectionScaling(self)

    def SetCurvatureScaling(self, v):
        r"""
        SetCurvatureScaling(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetCurvatureScaling(self, v)

    def GetCurvatureScaling(self):
        r"""GetCurvatureScaling(self) -> float"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetCurvatureScaling(self)

    def SetSegmentationFunction(self, s):
        r"""
        SetSegmentationFunction(self, s)

        Parameters
        ----------
        s: itkSegmentationLevelSetFunctionIF4IF4 *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetSegmentationFunction(self, s)

    def GetSegmentationFunction(self):
        r"""GetSegmentationFunction(self) -> itkSegmentationLevelSetFunctionIF4IF4"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetSegmentationFunction(self)

    def SetMaximumIterations(self, i):
        r"""
        SetMaximumIterations(self, i)

        Parameters
        ----------
        i: unsigned int

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetMaximumIterations(self, i)

    def GetMaximumIterations(self):
        r"""GetMaximumIterations(self) -> unsigned int"""
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_GetMaximumIterations(self)

    def SetMaximumRMSError(self, arg0):
        r"""
        SetMaximumRMSError(self, arg0)

        Parameters
        ----------
        arg0: double const

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_SetMaximumRMSError(self, arg0)
    OutputHasNumericTraitsCheck = _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_OutputHasNumericTraitsCheck
    
    __swig_destroy__ = _itkNarrowBandLevelSetImageFilterPython.delete_itkNarrowBandLevelSetImageFilterIF4IF4FIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkNarrowBandLevelSetImageFilterIF4IF4FIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_cast(obj)

# Register itkNarrowBandLevelSetImageFilterIF4IF4FIF4 in _itkNarrowBandLevelSetImageFilterPython:
_itkNarrowBandLevelSetImageFilterPython.itkNarrowBandLevelSetImageFilterIF4IF4FIF4_swigregister(itkNarrowBandLevelSetImageFilterIF4IF4FIF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def narrow_band_level_set_image_filter(*args: itkt.ImageLike,  feature_image: itkt.Image=..., initial_image: itkt.Image=..., use_negative_features: bool=..., reverse_expansion_direction: bool=..., feature_scaling: float=..., propagation_scaling: float=..., advection_scaling: float=..., curvature_scaling: float=..., segmentation_function=..., maximum_iterations: int=..., maximum_rms_error: Union[float, float]=..., iso_surface_value: float=..., narrow_band_total_radius: float=..., narrow_band_inner_radius: float=..., narrow_band=..., difference_function=..., number_of_iterations: int=..., use_image_spacing: bool=..., rms_change: float=..., manual_reinitialization: bool=..., is_initialized: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for NarrowBandLevelSetImageFilter"""
    import itk

    kwarg_typehints = { 'feature_image':feature_image,'initial_image':initial_image,'use_negative_features':use_negative_features,'reverse_expansion_direction':reverse_expansion_direction,'feature_scaling':feature_scaling,'propagation_scaling':propagation_scaling,'advection_scaling':advection_scaling,'curvature_scaling':curvature_scaling,'segmentation_function':segmentation_function,'maximum_iterations':maximum_iterations,'maximum_rms_error':maximum_rms_error,'iso_surface_value':iso_surface_value,'narrow_band_total_radius':narrow_band_total_radius,'narrow_band_inner_radius':narrow_band_inner_radius,'narrow_band':narrow_band,'difference_function':difference_function,'number_of_iterations':number_of_iterations,'use_image_spacing':use_image_spacing,'rms_change':rms_change,'manual_reinitialization':manual_reinitialization,'is_initialized':is_initialized }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.NarrowBandLevelSetImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def narrow_band_level_set_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.NarrowBandLevelSetImageFilter
    narrow_band_level_set_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    narrow_band_level_set_image_filter.__doc__ = filter_object.__doc__



