# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleConnectedOpeningImageFilterPython
else:
    import _itkGrayscaleConnectedOpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterAPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkGrayscaleConnectedOpeningImageFilterID2ID2_New():
    return itkGrayscaleConnectedOpeningImageFilterID2ID2.New()

class itkGrayscaleConnectedOpeningImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterID2ID2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex2"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterID2ID2

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterID2ID2 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID2ID2_swigregister(itkGrayscaleConnectedOpeningImageFilterID2ID2)

def itkGrayscaleConnectedOpeningImageFilterID3ID3_New():
    return itkGrayscaleConnectedOpeningImageFilterID3ID3.New()

class itkGrayscaleConnectedOpeningImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterID3ID3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex3"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterID3ID3

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterID3ID3 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID3ID3_swigregister(itkGrayscaleConnectedOpeningImageFilterID3ID3)

def itkGrayscaleConnectedOpeningImageFilterID4ID4_New():
    return itkGrayscaleConnectedOpeningImageFilterID4ID4.New()

class itkGrayscaleConnectedOpeningImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterID4ID4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterID4ID4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex4"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterID4ID4

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterID4ID4 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterID4ID4_swigregister(itkGrayscaleConnectedOpeningImageFilterID4ID4)

def itkGrayscaleConnectedOpeningImageFilterIF2IF2_New():
    return itkGrayscaleConnectedOpeningImageFilterIF2IF2.New()

class itkGrayscaleConnectedOpeningImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex2"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIF2IF2

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIF2IF2 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF2IF2_swigregister(itkGrayscaleConnectedOpeningImageFilterIF2IF2)

def itkGrayscaleConnectedOpeningImageFilterIF3IF3_New():
    return itkGrayscaleConnectedOpeningImageFilterIF3IF3.New()

class itkGrayscaleConnectedOpeningImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex3"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIF3IF3

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIF3IF3 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF3IF3_swigregister(itkGrayscaleConnectedOpeningImageFilterIF3IF3)

def itkGrayscaleConnectedOpeningImageFilterIF4IF4_New():
    return itkGrayscaleConnectedOpeningImageFilterIF4IF4.New()

class itkGrayscaleConnectedOpeningImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIF4IF4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIF4IF4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex4"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIF4IF4

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIF4IF4 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIF4IF4_swigregister(itkGrayscaleConnectedOpeningImageFilterIF4IF4)

def itkGrayscaleConnectedOpeningImageFilterISS2ISS2_New():
    return itkGrayscaleConnectedOpeningImageFilterISS2ISS2.New()

class itkGrayscaleConnectedOpeningImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex2"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterISS2ISS2

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterISS2ISS2 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS2ISS2_swigregister(itkGrayscaleConnectedOpeningImageFilterISS2ISS2)

def itkGrayscaleConnectedOpeningImageFilterISS3ISS3_New():
    return itkGrayscaleConnectedOpeningImageFilterISS3ISS3.New()

class itkGrayscaleConnectedOpeningImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex3"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterISS3ISS3

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterISS3ISS3 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS3ISS3_swigregister(itkGrayscaleConnectedOpeningImageFilterISS3ISS3)

def itkGrayscaleConnectedOpeningImageFilterISS4ISS4_New():
    return itkGrayscaleConnectedOpeningImageFilterISS4ISS4.New()

class itkGrayscaleConnectedOpeningImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterISS4ISS4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterISS4ISS4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex4"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterISS4ISS4

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterISS4ISS4 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterISS4ISS4_swigregister(itkGrayscaleConnectedOpeningImageFilterISS4ISS4)

def itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_New():
    return itkGrayscaleConnectedOpeningImageFilterIUC2IUC2.New()

class itkGrayscaleConnectedOpeningImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex2"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUC2IUC2

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUC2IUC2 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC2IUC2_swigregister(itkGrayscaleConnectedOpeningImageFilterIUC2IUC2)

def itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_New():
    return itkGrayscaleConnectedOpeningImageFilterIUC3IUC3.New()

class itkGrayscaleConnectedOpeningImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex3"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUC3IUC3

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUC3IUC3 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC3IUC3_swigregister(itkGrayscaleConnectedOpeningImageFilterIUC3IUC3)

def itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_New():
    return itkGrayscaleConnectedOpeningImageFilterIUC4IUC4.New()

class itkGrayscaleConnectedOpeningImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex4"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUC4IUC4

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUC4IUC4 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUC4IUC4_swigregister(itkGrayscaleConnectedOpeningImageFilterIUC4IUC4)

def itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_New():
    return itkGrayscaleConnectedOpeningImageFilterIUS2IUS2.New()

class itkGrayscaleConnectedOpeningImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex2

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex2"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUS2IUS2

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUS2IUS2 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS2IUS2_swigregister(itkGrayscaleConnectedOpeningImageFilterIUS2IUS2)

def itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_New():
    return itkGrayscaleConnectedOpeningImageFilterIUS3IUS3.New()

class itkGrayscaleConnectedOpeningImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex3

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex3"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUS3IUS3

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUS3IUS3 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS3IUS3_swigregister(itkGrayscaleConnectedOpeningImageFilterIUS3IUS3)

def itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_New():
    return itkGrayscaleConnectedOpeningImageFilterIUS4IUS4.New()

class itkGrayscaleConnectedOpeningImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkGrayscaleConnectedOpeningImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_Pointer"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_Clone(self)

    def SetSeed(self, _arg):
        r"""
        SetSeed(self, _arg)

        Parameters
        ----------
        _arg: itkIndex4

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_SetSeed(self, _arg)

    def GetSeed(self):
        r"""GetSeed(self) -> itkIndex4"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_GetSeed(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_FullyConnectedOff(self)
    InputEqualityComparableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_InputEqualityComparableCheck
    
    InputConvertibleToOutputCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    InputOStreamWritableCheck = _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleConnectedOpeningImageFilterPython.delete_itkGrayscaleConnectedOpeningImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleConnectedOpeningImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleConnectedOpeningImageFilterIUS4IUS4

        Create a new object of the class itkGrayscaleConnectedOpeningImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleConnectedOpeningImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleConnectedOpeningImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleConnectedOpeningImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleConnectedOpeningImageFilterIUS4IUS4 in _itkGrayscaleConnectedOpeningImageFilterPython:
_itkGrayscaleConnectedOpeningImageFilterPython.itkGrayscaleConnectedOpeningImageFilterIUS4IUS4_swigregister(itkGrayscaleConnectedOpeningImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def grayscale_connected_opening_image_filter(*args: itkt.ImageLike,  seed: Sequence[int]=..., fully_connected: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for GrayscaleConnectedOpeningImageFilter"""
    import itk

    kwarg_typehints = { 'seed':seed,'fully_connected':fully_connected }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.GrayscaleConnectedOpeningImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def grayscale_connected_opening_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.GrayscaleConnectedOpeningImageFilter
    grayscale_connected_opening_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    grayscale_connected_opening_image_filter.__doc__ = filter_object.__doc__



