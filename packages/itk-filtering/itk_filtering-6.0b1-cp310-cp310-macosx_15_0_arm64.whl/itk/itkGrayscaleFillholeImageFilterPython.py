# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkGrayscaleFillholeImageFilterPython
else:
    import _itkGrayscaleFillholeImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkGrayscaleFillholeImageFilterID2ID2_New():
    return itkGrayscaleFillholeImageFilterID2ID2.New()

class itkGrayscaleFillholeImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterID2ID2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterID2ID2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterID2ID2

        Create a new object of the class itkGrayscaleFillholeImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterID2ID2 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID2ID2_swigregister(itkGrayscaleFillholeImageFilterID2ID2)

def itkGrayscaleFillholeImageFilterID3ID3_New():
    return itkGrayscaleFillholeImageFilterID3ID3.New()

class itkGrayscaleFillholeImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterID3ID3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterID3ID3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterID3ID3

        Create a new object of the class itkGrayscaleFillholeImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterID3ID3 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID3ID3_swigregister(itkGrayscaleFillholeImageFilterID3ID3)

def itkGrayscaleFillholeImageFilterID4ID4_New():
    return itkGrayscaleFillholeImageFilterID4ID4.New()

class itkGrayscaleFillholeImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterID4ID4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterID4ID4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterID4ID4

        Create a new object of the class itkGrayscaleFillholeImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterID4ID4 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterID4ID4_swigregister(itkGrayscaleFillholeImageFilterID4ID4)

def itkGrayscaleFillholeImageFilterIF2IF2_New():
    return itkGrayscaleFillholeImageFilterIF2IF2.New()

class itkGrayscaleFillholeImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIF2IF2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIF2IF2

        Create a new object of the class itkGrayscaleFillholeImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIF2IF2 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF2IF2_swigregister(itkGrayscaleFillholeImageFilterIF2IF2)

def itkGrayscaleFillholeImageFilterIF3IF3_New():
    return itkGrayscaleFillholeImageFilterIF3IF3.New()

class itkGrayscaleFillholeImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIF3IF3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIF3IF3

        Create a new object of the class itkGrayscaleFillholeImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIF3IF3 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF3IF3_swigregister(itkGrayscaleFillholeImageFilterIF3IF3)

def itkGrayscaleFillholeImageFilterIF4IF4_New():
    return itkGrayscaleFillholeImageFilterIF4IF4.New()

class itkGrayscaleFillholeImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIF4IF4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIF4IF4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIF4IF4

        Create a new object of the class itkGrayscaleFillholeImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIF4IF4 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIF4IF4_swigregister(itkGrayscaleFillholeImageFilterIF4IF4)

def itkGrayscaleFillholeImageFilterISS2ISS2_New():
    return itkGrayscaleFillholeImageFilterISS2ISS2.New()

class itkGrayscaleFillholeImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterISS2ISS2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterISS2ISS2

        Create a new object of the class itkGrayscaleFillholeImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterISS2ISS2 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS2ISS2_swigregister(itkGrayscaleFillholeImageFilterISS2ISS2)

def itkGrayscaleFillholeImageFilterISS3ISS3_New():
    return itkGrayscaleFillholeImageFilterISS3ISS3.New()

class itkGrayscaleFillholeImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterISS3ISS3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterISS3ISS3

        Create a new object of the class itkGrayscaleFillholeImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterISS3ISS3 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS3ISS3_swigregister(itkGrayscaleFillholeImageFilterISS3ISS3)

def itkGrayscaleFillholeImageFilterISS4ISS4_New():
    return itkGrayscaleFillholeImageFilterISS4ISS4.New()

class itkGrayscaleFillholeImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterISS4ISS4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterISS4ISS4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterISS4ISS4

        Create a new object of the class itkGrayscaleFillholeImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterISS4ISS4 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterISS4ISS4_swigregister(itkGrayscaleFillholeImageFilterISS4ISS4)

def itkGrayscaleFillholeImageFilterIUC2IUC2_New():
    return itkGrayscaleFillholeImageFilterIUC2IUC2.New()

class itkGrayscaleFillholeImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUC2IUC2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUC2IUC2

        Create a new object of the class itkGrayscaleFillholeImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUC2IUC2 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC2IUC2_swigregister(itkGrayscaleFillholeImageFilterIUC2IUC2)

def itkGrayscaleFillholeImageFilterIUC3IUC3_New():
    return itkGrayscaleFillholeImageFilterIUC3IUC3.New()

class itkGrayscaleFillholeImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUC3IUC3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUC3IUC3

        Create a new object of the class itkGrayscaleFillholeImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUC3IUC3 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC3IUC3_swigregister(itkGrayscaleFillholeImageFilterIUC3IUC3)

def itkGrayscaleFillholeImageFilterIUC4IUC4_New():
    return itkGrayscaleFillholeImageFilterIUC4IUC4.New()

class itkGrayscaleFillholeImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUC4IUC4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUC4IUC4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUC4IUC4

        Create a new object of the class itkGrayscaleFillholeImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUC4IUC4 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUC4IUC4_swigregister(itkGrayscaleFillholeImageFilterIUC4IUC4)

def itkGrayscaleFillholeImageFilterIUS2IUS2_New():
    return itkGrayscaleFillholeImageFilterIUS2IUS2.New()

class itkGrayscaleFillholeImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUS2IUS2_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUS2IUS2

        Create a new object of the class itkGrayscaleFillholeImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUS2IUS2 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS2IUS2_swigregister(itkGrayscaleFillholeImageFilterIUS2IUS2)

def itkGrayscaleFillholeImageFilterIUS3IUS3_New():
    return itkGrayscaleFillholeImageFilterIUS3IUS3.New()

class itkGrayscaleFillholeImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUS3IUS3_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUS3IUS3

        Create a new object of the class itkGrayscaleFillholeImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUS3IUS3 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS3IUS3_swigregister(itkGrayscaleFillholeImageFilterIUS3IUS3)

def itkGrayscaleFillholeImageFilterIUS4IUS4_New():
    return itkGrayscaleFillholeImageFilterIUS4IUS4.New()

class itkGrayscaleFillholeImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkGrayscaleFillholeImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkGrayscaleFillholeImageFilterIUS4IUS4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkGrayscaleFillholeImageFilterIUS4IUS4_Pointer"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_Clone(self)

    def SetFullyConnected(self, _arg):
        r"""
        SetFullyConnected(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_SetFullyConnected(self, _arg)

    def GetFullyConnected(self):
        r"""GetFullyConnected(self) -> bool const &"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_GetFullyConnected(self)

    def FullyConnectedOn(self):
        r"""FullyConnectedOn(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_FullyConnectedOn(self)

    def FullyConnectedOff(self):
        r"""FullyConnectedOff(self)"""
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_FullyConnectedOff(self)
    InputOStreamWritableCheck = _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_InputOStreamWritableCheck
    
    __swig_destroy__ = _itkGrayscaleFillholeImageFilterPython.delete_itkGrayscaleFillholeImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkGrayscaleFillholeImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkGrayscaleFillholeImageFilterIUS4IUS4

        Create a new object of the class itkGrayscaleFillholeImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkGrayscaleFillholeImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkGrayscaleFillholeImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkGrayscaleFillholeImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkGrayscaleFillholeImageFilterIUS4IUS4 in _itkGrayscaleFillholeImageFilterPython:
_itkGrayscaleFillholeImageFilterPython.itkGrayscaleFillholeImageFilterIUS4IUS4_swigregister(itkGrayscaleFillholeImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def grayscale_fillhole_image_filter(*args: itkt.ImageLike,  fully_connected: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for GrayscaleFillholeImageFilter"""
    import itk

    kwarg_typehints = { 'fully_connected':fully_connected }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.GrayscaleFillholeImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def grayscale_fillhole_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMathematicalMorphology.GrayscaleFillholeImageFilter
    grayscale_fillhole_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    grayscale_fillhole_image_filter.__doc__ = filter_object.__doc__



