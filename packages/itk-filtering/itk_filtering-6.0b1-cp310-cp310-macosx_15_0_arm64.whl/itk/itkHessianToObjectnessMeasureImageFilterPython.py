# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFeaturePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkHessianToObjectnessMeasureImageFilterPython
else:
    import _itkHessianToObjectnessMeasureImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.pyBasePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD22ID2.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD22ID2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ID2):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD22ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD22ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD22ID2

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD22ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD22ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD22ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD22ID2 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ID2_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD22ID2)

def itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD22IF2.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD22IF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IF2):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD22IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IF2

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD22IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD22IF2 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IF2_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD22IF2)

def itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22ISS2):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD22ISS2)

def itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUC2):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD22IUC2)

def itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD22IUS2):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD22IUS2)

def itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD33ID3.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD33ID3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ID3):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD33ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD33ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD33ID3

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD33ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD33ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD33ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD33ID3 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ID3_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD33ID3)

def itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD33IF3.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD33IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IF3):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD33IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IF3

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD33IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD33IF3 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IF3_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD33IF3)

def itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33ISS3):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD33ISS3)

def itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUC3):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD33IUC3)

def itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD33IUS3):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD33IUS3)

def itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD44ID4.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD44ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD44ID4):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD44ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD44ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD44ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD44ID4

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD44ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD44ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD44ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD44ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD44ID4 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ID4_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD44ID4)

def itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD44IF4.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD44IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD44IF4):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD44IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD44IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IF4

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD44IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD44IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD44IF4 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IF4_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD44IF4)

def itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD44ISS4):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD44ISS4)

def itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD44IUC4):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD44IUC4)

def itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_New():
    return itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4.New()

class itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISSRTD44IUS4):
    r"""Proxy of C++ itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_Pointer"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_Clone(self)

    def SetAlpha(self, _arg):
        r"""
        SetAlpha(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetAlpha(self, _arg)

    def GetAlpha(self):
        r"""GetAlpha(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetAlpha(self)

    def SetBeta(self, _arg):
        r"""
        SetBeta(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetBeta(self, _arg)

    def GetBeta(self):
        r"""GetBeta(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetBeta(self)

    def SetGamma(self, _arg):
        r"""
        SetGamma(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetGamma(self, _arg)

    def GetGamma(self):
        r"""GetGamma(self) -> double"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetGamma(self)

    def SetScaleObjectnessMeasure(self, _arg):
        r"""
        SetScaleObjectnessMeasure(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetScaleObjectnessMeasure(self, _arg)

    def GetScaleObjectnessMeasure(self):
        r"""GetScaleObjectnessMeasure(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetScaleObjectnessMeasure(self)

    def ScaleObjectnessMeasureOn(self):
        r"""ScaleObjectnessMeasureOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_ScaleObjectnessMeasureOn(self)

    def ScaleObjectnessMeasureOff(self):
        r"""ScaleObjectnessMeasureOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_ScaleObjectnessMeasureOff(self)

    def SetObjectDimension(self, _arg):
        r"""
        SetObjectDimension(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetObjectDimension(self, _arg)

    def GetObjectDimension(self):
        r"""GetObjectDimension(self) -> unsigned int"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetObjectDimension(self)

    def SetBrightObject(self, _arg):
        r"""
        SetBrightObject(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_SetBrightObject(self, _arg)

    def GetBrightObject(self):
        r"""GetBrightObject(self) -> bool"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_GetBrightObject(self)

    def BrightObjectOn(self):
        r"""BrightObjectOn(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_BrightObjectOn(self)

    def BrightObjectOff(self):
        r"""BrightObjectOff(self)"""
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_BrightObjectOff(self)
    DoubleConvertibleToOutputCheck = _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_DoubleConvertibleToOutputCheck
    
    __swig_destroy__ = _itkHessianToObjectnessMeasureImageFilterPython.delete_itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4

        Create a new object of the class itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4 in _itkHessianToObjectnessMeasureImageFilterPython:
_itkHessianToObjectnessMeasureImageFilterPython.itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4_swigregister(itkHessianToObjectnessMeasureImageFilterISSRTD44IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def hessian_to_objectness_measure_image_filter(*args: itkt.ImageLike,  alpha: float=..., beta: float=..., gamma: float=..., scale_objectness_measure: bool=..., object_dimension: int=..., bright_object: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for HessianToObjectnessMeasureImageFilter"""
    import itk

    kwarg_typehints = { 'alpha':alpha,'beta':beta,'gamma':gamma,'scale_objectness_measure':scale_objectness_measure,'object_dimension':object_dimension,'bright_object':bright_object }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.HessianToObjectnessMeasureImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def hessian_to_objectness_measure_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageFeature.HessianToObjectnessMeasureImageFilter
    hessian_to_objectness_measure_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    hessian_to_objectness_measure_image_filter.__doc__ = filter_object.__doc__



