# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFastMarchingPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFastMarchingImageToNodePairContainerAdaptorPython
else:
    import _itkFastMarchingImageToNodePairContainerAdaptorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.ITKFastMarchingBasePython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkLevelSetNodePython

def itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_New():
    return itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2.New()

class itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageD2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageD2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageD2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI2D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI2D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI2D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2_swigregister(itkFastMarchingImageToNodePairContainerAdaptorID2ID2ID2)

def itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_New():
    return itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3.New()

class itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageD3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageD3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageD3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI3D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI3D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI3D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3_swigregister(itkFastMarchingImageToNodePairContainerAdaptorID3ID3ID3)

def itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_New():
    return itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4.New()

class itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageD4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageD4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageD4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageD4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI4D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI4D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI4D"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> double"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4_swigregister(itkFastMarchingImageToNodePairContainerAdaptorID4ID4ID4)

def itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_New():
    return itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2.New()

class itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageF2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageF2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF2 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageF2"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI2F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI2F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI2F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2_swigregister(itkFastMarchingImageToNodePairContainerAdaptorIF2IF2IF2)

def itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_New():
    return itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3.New()

class itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageF3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageF3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF3 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageF3"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI3F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI3F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI3F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3_swigregister(itkFastMarchingImageToNodePairContainerAdaptorIF3IF3IF3)

def itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_New():
    return itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4.New()

class itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_Pointer"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_Clone(self)

    def SetAliveImage(self, iImage):
        r"""
        SetAliveImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetAliveImage(self, iImage)

    def GetAliveImage(self):
        r"""GetAliveImage(self) -> itkImageF4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetAliveImage(self)

    def SetTrialImage(self, iImage):
        r"""
        SetTrialImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetTrialImage(self, iImage)

    def GetTrialImage(self):
        r"""GetTrialImage(self) -> itkImageF4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetTrialImage(self)

    def SetForbiddenImage(self, iImage):
        r"""
        SetForbiddenImage(self, iImage)

        Parameters
        ----------
        iImage: itkImageF4 const *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetForbiddenImage(self, iImage)

    def GetForbiddenImage(self):
        r"""GetForbiddenImage(self) -> itkImageF4"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetForbiddenImage(self)

    def SetIsForbiddenImageBinaryMask(self, _arg):
        r"""
        SetIsForbiddenImageBinaryMask(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetIsForbiddenImageBinaryMask(self, _arg)

    def GetIsForbiddenImageBinaryMask(self):
        r"""GetIsForbiddenImageBinaryMask(self) -> bool"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetIsForbiddenImageBinaryMask(self)

    def IsForbiddenImageBinaryMaskOn(self):
        r"""IsForbiddenImageBinaryMaskOn(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_IsForbiddenImageBinaryMaskOn(self)

    def IsForbiddenImageBinaryMaskOff(self):
        r"""IsForbiddenImageBinaryMaskOff(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_IsForbiddenImageBinaryMaskOff(self)

    def GetAlivePoints(self):
        r"""GetAlivePoints(self) -> itkVectorContainerULLNPI4F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetAlivePoints(self)

    def GetTrialPoints(self):
        r"""GetTrialPoints(self) -> itkVectorContainerULLNPI4F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetTrialPoints(self)

    def GetForbiddenPoints(self):
        r"""GetForbiddenPoints(self) -> itkVectorContainerULLNPI4F"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetForbiddenPoints(self)

    def SetAliveValue(self, _arg):
        r"""
        SetAliveValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetAliveValue(self, _arg)

    def GetAliveValue(self):
        r"""GetAliveValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetAliveValue(self)

    def SetTrialValue(self, _arg):
        r"""
        SetTrialValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_SetTrialValue(self, _arg)

    def GetTrialValue(self):
        r"""GetTrialValue(self) -> float"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_GetTrialValue(self)

    def Update(self):
        r"""Update(self)"""
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_Update(self)
    __swig_destroy__ = _itkFastMarchingImageToNodePairContainerAdaptorPython.delete_itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4

        Create a new object of the class itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4 in _itkFastMarchingImageToNodePairContainerAdaptorPython:
_itkFastMarchingImageToNodePairContainerAdaptorPython.itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4_swigregister(itkFastMarchingImageToNodePairContainerAdaptorIF4IF4IF4)

