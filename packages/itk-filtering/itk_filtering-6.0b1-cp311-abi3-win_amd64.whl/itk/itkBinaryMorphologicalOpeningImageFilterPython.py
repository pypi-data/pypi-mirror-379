# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKBinaryMathematicalMorphologyPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMorphologicalOpeningImageFilterPython
else:
    import _itkBinaryMorphologicalOpeningImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFlatStructuringElementPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkNeighborhoodPython
import itk.itkRGBPixelPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkBoxImageFilterPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython

def itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterID2ID2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterID2ID2SE2):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterID2ID2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterID2ID2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterID2ID2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterID2ID2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterID2ID2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterID2ID2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterID2ID2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID2ID2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterID2ID2SE2)

def itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterID3ID3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterID3ID3SE3):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterID3ID3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterID3ID3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterID3ID3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterID3ID3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterID3ID3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterID3ID3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterID3ID3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID3ID3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterID3ID3SE3)

def itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_New():
    return itkBinaryMorphologicalOpeningImageFilterID4ID4SE4.New()

class itkBinaryMorphologicalOpeningImageFilterID4ID4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterID4ID4SE4):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterID4ID4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> double"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterID4ID4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterID4ID4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterID4ID4SE4

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterID4ID4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterID4ID4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterID4ID4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterID4ID4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterID4ID4SE4 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterID4ID4SE4_swigregister(itkBinaryMorphologicalOpeningImageFilterID4ID4SE4)

def itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF2IF2SE2):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIF2IF2SE2)

def itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF3IF3SE3):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIF3IF3SE3)

def itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_New():
    return itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4.New()

class itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIF4IF4SE4):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> float"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4_swigregister(itkBinaryMorphologicalOpeningImageFilterIF4IF4SE4)

def itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS2ISS2SE2):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterISS2ISS2SE2)

def itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS3ISS3SE3):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterISS3ISS3SE3)

def itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_New():
    return itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4.New()

class itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterISS4ISS4SE4):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4_swigregister(itkBinaryMorphologicalOpeningImageFilterISS4ISS4SE4)

def itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC2IUC2SE2):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIUC2IUC2SE2)

def itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC3IUC3SE3):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIUC3IUC3SE3)

def itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_New():
    return itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4.New()

class itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUC4IUC4SE4):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned char"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4_swigregister(itkBinaryMorphologicalOpeningImageFilterIUC4IUC4SE4)

def itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_New():
    return itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New()

class itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS2IUS2SE2):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2_swigregister(itkBinaryMorphologicalOpeningImageFilterIUS2IUS2SE2)

def itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_New():
    return itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New()

class itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS3IUS3SE3):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3_swigregister(itkBinaryMorphologicalOpeningImageFilterIUS3IUS3SE3)

def itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_New():
    return itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4.New()

class itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4(itk.itkFlatStructuringElementPython.itkKernelImageFilterIUS4IUS4SE4):
    r"""Proxy of C++ itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_Pointer"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_Clone(self)

    def SetForegroundValue(self, _arg):
        r"""
        SetForegroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_SetForegroundValue(self, _arg)

    def GetForegroundValue(self):
        r"""GetForegroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_GetForegroundValue(self)

    def SetBackgroundValue(self, _arg):
        r"""
        SetBackgroundValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_SetBackgroundValue(self, _arg)

    def GetBackgroundValue(self):
        r"""GetBackgroundValue(self) -> unsigned short"""
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_GetBackgroundValue(self)
    __swig_destroy__ = _itkBinaryMorphologicalOpeningImageFilterPython.delete_itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4

        Create a new object of the class itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4 in _itkBinaryMorphologicalOpeningImageFilterPython:
_itkBinaryMorphologicalOpeningImageFilterPython.itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4_swigregister(itkBinaryMorphologicalOpeningImageFilterIUS4IUS4SE4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_morphological_opening_image_filter(*args: itkt.ImageLike,  foreground_value: int=..., background_value: int=..., kernel: itkt.FlatStructuringElement=..., radius: Union[int, Sequence[int], Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for BinaryMorphologicalOpeningImageFilter"""
    import itk

    kwarg_typehints = { 'foreground_value':foreground_value,'background_value':background_value,'kernel':kernel,'radius':radius }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryMorphologicalOpeningImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_morphological_opening_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKBinaryMathematicalMorphology.BinaryMorphologicalOpeningImageFilter
    binary_morphological_opening_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_morphological_opening_image_filter.__doc__ = filter_object.__doc__



