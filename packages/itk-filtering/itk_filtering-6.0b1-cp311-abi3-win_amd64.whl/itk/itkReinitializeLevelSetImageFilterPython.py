# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkReinitializeLevelSetImageFilterPython
else:
    import _itkReinitializeLevelSetImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKFastMarchingBasePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkLevelSetNodePython

def itkReinitializeLevelSetImageFilterID2_New():
    return itkReinitializeLevelSetImageFilterID2.New()

class itkReinitializeLevelSetImageFilterID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterID2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterID2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSND2 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSND2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSND2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterID2

        Create a new object of the class itkReinitializeLevelSetImageFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterID2 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID2_swigregister(itkReinitializeLevelSetImageFilterID2)

def itkReinitializeLevelSetImageFilterID3_New():
    return itkReinitializeLevelSetImageFilterID3.New()

class itkReinitializeLevelSetImageFilterID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterID3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterID3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSND3 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSND3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSND3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterID3

        Create a new object of the class itkReinitializeLevelSetImageFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterID3 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID3_swigregister(itkReinitializeLevelSetImageFilterID3)

def itkReinitializeLevelSetImageFilterID4_New():
    return itkReinitializeLevelSetImageFilterID4.New()

class itkReinitializeLevelSetImageFilterID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterID4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterID4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSND4 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSND4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSND4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterID4

        Create a new object of the class itkReinitializeLevelSetImageFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterID4 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterID4_swigregister(itkReinitializeLevelSetImageFilterID4)

def itkReinitializeLevelSetImageFilterIF2_New():
    return itkReinitializeLevelSetImageFilterIF2.New()

class itkReinitializeLevelSetImageFilterIF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterIF2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterIF2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSNF2 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSNF2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSNF2_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterIF2

        Create a new object of the class itkReinitializeLevelSetImageFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterIF2 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF2_swigregister(itkReinitializeLevelSetImageFilterIF2)

def itkReinitializeLevelSetImageFilterIF3_New():
    return itkReinitializeLevelSetImageFilterIF3.New()

class itkReinitializeLevelSetImageFilterIF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterIF3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterIF3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSNF3 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSNF3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSNF3_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterIF3

        Create a new object of the class itkReinitializeLevelSetImageFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterIF3 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF3_swigregister(itkReinitializeLevelSetImageFilterIF3)

def itkReinitializeLevelSetImageFilterIF4_New():
    return itkReinitializeLevelSetImageFilterIF4.New()

class itkReinitializeLevelSetImageFilterIF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkReinitializeLevelSetImageFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkReinitializeLevelSetImageFilterIF4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkReinitializeLevelSetImageFilterIF4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_Clone(self)

    def SetLevelSetValue(self, _arg):
        r"""
        SetLevelSetValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetLevelSetValue(self, _arg)

    def GetLevelSetValue(self):
        r"""GetLevelSetValue(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetLevelSetValue(self)

    def SetNarrowBanding(self, _arg):
        r"""
        SetNarrowBanding(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetNarrowBanding(self, _arg)

    def GetNarrowBanding(self):
        r"""GetNarrowBanding(self) -> bool"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetNarrowBanding(self)

    def NarrowBandingOn(self):
        r"""NarrowBandingOn(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_NarrowBandingOn(self)

    def NarrowBandingOff(self):
        r"""NarrowBandingOff(self)"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_NarrowBandingOff(self)

    def SetInputNarrowBandwidth(self, _arg):
        r"""
        SetInputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetInputNarrowBandwidth(self, _arg)

    def GetInputNarrowBandwidth(self):
        r"""GetInputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetInputNarrowBandwidth(self)

    def SetOutputNarrowBandwidth(self, _arg):
        r"""
        SetOutputNarrowBandwidth(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetOutputNarrowBandwidth(self, _arg)

    def GetOutputNarrowBandwidth(self):
        r"""GetOutputNarrowBandwidth(self) -> double"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetOutputNarrowBandwidth(self)

    def SetNarrowBandwidth(self, value):
        r"""
        SetNarrowBandwidth(self, value)

        Parameters
        ----------
        value: double

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetNarrowBandwidth(self, value)

    def SetInputNarrowBand(self, ptr):
        r"""
        SetInputNarrowBand(self, ptr)

        Parameters
        ----------
        ptr: itkVectorContainerUILSNF4 *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_SetInputNarrowBand(self, ptr)

    def GetInputNarrowBand(self):
        r"""GetInputNarrowBand(self) -> itkVectorContainerUILSNF4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetInputNarrowBand(self)

    def GetOutputNarrowBand(self):
        r"""GetOutputNarrowBand(self) -> itkVectorContainerUILSNF4_Pointer"""
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_GetOutputNarrowBand(self)
    LevelSetDoubleAdditiveOperatorsCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_LevelSetDoubleAdditiveOperatorsCheck
    
    LevelSetOStreamWritableCheck = _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_LevelSetOStreamWritableCheck
    
    __swig_destroy__ = _itkReinitializeLevelSetImageFilterPython.delete_itkReinitializeLevelSetImageFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkReinitializeLevelSetImageFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkReinitializeLevelSetImageFilterIF4

        Create a new object of the class itkReinitializeLevelSetImageFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkReinitializeLevelSetImageFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkReinitializeLevelSetImageFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkReinitializeLevelSetImageFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkReinitializeLevelSetImageFilterIF4 in _itkReinitializeLevelSetImageFilterPython:
_itkReinitializeLevelSetImageFilterPython.itkReinitializeLevelSetImageFilterIF4_swigregister(itkReinitializeLevelSetImageFilterIF4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def reinitialize_level_set_image_filter(*args: itkt.ImageLike,  level_set_value: float=..., narrow_banding: bool=..., input_narrow_bandwidth: float=..., output_narrow_bandwidth: float=..., narrow_bandwidth: float=..., input_narrow_band=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ReinitializeLevelSetImageFilter"""
    import itk

    kwarg_typehints = { 'level_set_value':level_set_value,'narrow_banding':narrow_banding,'input_narrow_bandwidth':input_narrow_bandwidth,'output_narrow_bandwidth':output_narrow_bandwidth,'narrow_bandwidth':narrow_bandwidth,'input_narrow_band':input_narrow_band }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ReinitializeLevelSetImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def reinitialize_level_set_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKLevelSets.ReinitializeLevelSetImageFilter
    reinitialize_level_set_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    reinitialize_level_set_image_filter.__doc__ = filter_object.__doc__



