# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKLevelSetsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShapePriorMAPCostFunctionBasePython
else:
    import _itkShapePriorMAPCostFunctionBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkArrayPython
import itk.itkOptimizerParametersPython
import itk.itkShapeSignedDistanceFunctionPython
import itk.itkSpatialFunctionPython
import itk.itkFunctionBasePython
import itk.itkContinuousIndexPython
import itk.ITKCostFunctionsPython
import itk.itkArray2DPython
import itk.vnl_least_squares_functionPython
import itk.itkCostFunctionPython
import itk.vnl_cost_functionPython
import itk.vnl_unary_functionPython
import itk.ITKFastMarchingBasePython
import itk.itkNodePairPython
import itk.itkFastMarchingStoppingCriterionBasePython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkLevelSetNodePython
class itkShapePriorMAPCostFunctionBaseID2D(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD2 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD2
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD2
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSND2 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSND2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseID2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseID2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseID2D in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID2D_swigregister(itkShapePriorMAPCostFunctionBaseID2D)
class itkShapePriorMAPCostFunctionBaseID3D(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD3 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD3
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD3
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSND3 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSND3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseID3D in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID3D_swigregister(itkShapePriorMAPCostFunctionBaseID3D)
class itkShapePriorMAPCostFunctionBaseID4D(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD4 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD4
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD4
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSND4 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSND4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageD4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseID4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseID4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseID4D in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseID4D_swigregister(itkShapePriorMAPCostFunctionBaseID4D)
class itkShapePriorMAPCostFunctionBaseIF2F(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseIF2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD2 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD2
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD2
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSNF2 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSNF2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF2"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseIF2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseIF2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseIF2F in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF2F_swigregister(itkShapePriorMAPCostFunctionBaseIF2F)
class itkShapePriorMAPCostFunctionBaseIF3F(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD3 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD3
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD3
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSNF3 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSNF3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF3"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseIF3F in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF3F_swigregister(itkShapePriorMAPCostFunctionBaseIF3F)
class itkShapePriorMAPCostFunctionBaseIF4F(itk.ITKCostFunctionsPython.itkSingleValuedCostFunction):
    r"""Proxy of C++ itkShapePriorMAPCostFunctionBaseIF4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetShapeFunction(self, _arg):
        r"""
        SetShapeFunction(self, _arg)

        Parameters
        ----------
        _arg: itkShapeSignedDistanceFunctionD4 *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_SetShapeFunction(self, _arg)

    def GetModifiableShapeFunction(self):
        r"""GetModifiableShapeFunction(self) -> itkShapeSignedDistanceFunctionD4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_GetModifiableShapeFunction(self)

    def GetShapeFunction(self, *args):
        r"""
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD4
        GetShapeFunction(self) -> itkShapeSignedDistanceFunctionD4
        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_GetShapeFunction(self, *args)

    def SetActiveRegion(self, _arg):
        r"""
        SetActiveRegion(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUILSNF4 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_SetActiveRegion(self, _arg)

    def GetActiveRegion(self):
        r"""GetActiveRegion(self) -> itkVectorContainerUILSNF4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_GetActiveRegion(self)

    def SetFeatureImage(self, _arg):
        r"""
        SetFeatureImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_SetFeatureImage(self, _arg)

    def GetFeatureImage(self):
        r"""GetFeatureImage(self) -> itkImageF4"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_GetFeatureImage(self)

    def ComputeLogInsideTerm(self, arg0):
        r"""
        ComputeLogInsideTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_ComputeLogInsideTerm(self, arg0)

    def ComputeLogGradientTerm(self, arg0):
        r"""
        ComputeLogGradientTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_ComputeLogGradientTerm(self, arg0)

    def ComputeLogShapePriorTerm(self, arg0):
        r"""
        ComputeLogShapePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_ComputeLogShapePriorTerm(self, arg0)

    def ComputeLogPosePriorTerm(self, arg0):
        r"""
        ComputeLogPosePriorTerm(self, arg0) -> double

        Parameters
        ----------
        arg0: itkOptimizerParametersD const &

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_ComputeLogPosePriorTerm(self, arg0)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_Initialize(self)
    __swig_destroy__ = _itkShapePriorMAPCostFunctionBasePython.delete_itkShapePriorMAPCostFunctionBaseIF4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShapePriorMAPCostFunctionBaseIF4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_cast(obj)

# Register itkShapePriorMAPCostFunctionBaseIF4F in _itkShapePriorMAPCostFunctionBasePython:
_itkShapePriorMAPCostFunctionBasePython.itkShapePriorMAPCostFunctionBaseIF4F_swigregister(itkShapePriorMAPCostFunctionBaseIF4F)

