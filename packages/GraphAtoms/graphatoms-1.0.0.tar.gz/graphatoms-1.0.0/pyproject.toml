[build-system]
requires = ["setuptools>=61"]
build-backend = "setuptools.build_meta"

[project]
name = "GraphAtoms"
version = "1.0.0"
description = "The Chemical Core Class for Graph Theory Analysis & Graph Neural Network."
readme = "README.md"
authors = [{ name = "LiuGaoyong", email = "liugaoyong_88@163.com" }]
requires-python = ">=3.10"
dependencies = [
    # Chemoinformatics
    "ase",
    "pymatgen>2023.6",
    "rdkit>=2025",
    "dscribe>=2.1",    # transforming atomic structures into fixed-size numerical fingerprints
    "vesin",           # fast neighbor lists for atomistic systems (C++ & TorchScript)
    # "ase-extension>=0.5; sys_platform != 'win32'", # fast neighborlist(Rust)
    # Scientific Computing
    "numba>=0.61",
    "numpy>=2.0",
    "pandas",
    "scipy",
    "torch",
    "scikit-learn>=1.5",
    "sparse",
    # Graph Theory
    "torch_geometric", # PyTorch Based Graph Neural Network Library
    "igraph>=0.11",    # high performance graph library based on C
    "networkx>=3.3",   # General-purpose graph library by pure Python
    "rustworkx>=0.16", # NetworkX-like graph library based on Rust
    # Data Model
    "numpydantic",
    "pydantic>=2.11",
    "pydantic-to-pyarrow>=0.1.6",
    "python-snappy>=0.7.3",           # More Fase Data Compression
    "pyyaml",                         # YAML parser & writer
    "sqlmodel",                       # SQL + pydantic
    "tomli-w",                        # TOML writer
    "tomli; python_version < '3.11'", # use tomllib in python>=3.11
    "typing-extensions",
    "chardet>=5.2.0",
]
[dependency-groups]
dev = ["ruff>=0.11", "pytest>=8.3", "pytest-xdist", "jupyter"]

# uv config
[tool.uv]
package = true
[[tool.uv.index]]
url = "https://mirrors.cernet.edu.cn/pypi/web/simple" # CERNET
default = true
[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://mirrors.nju.edu.cn/pytorch/whl/cpu/"
explicit = true
format = "flat"
[tool.uv.sources]
torch = [{ index = "pytorch-cpu" }]

# pytest config
[tool.pytest.ini_options]
addopts = '--maxfail=1 -rf' # exit after 1 failures, report fail info
testpaths = ["tests"]
filterwarnings = [
    "error", # All other warnings are transformed into errors.
    # ignore the following warnings that matching a regex
]

# ruff config
[tool.ruff]
line-length = 80
indent-width = 4
select = ["F", "E", "W", "UP", "D"]
ignore = ["F722", "D100"]
[tool.ruff.lint.pydocstyle]
convention = "google"
