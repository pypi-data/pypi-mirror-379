[build-system]
requires = ["setuptools>=64.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "openplaces"
version = "0.1.0"
authors = [
    {name = "Christoph Nolte", email = "nolte.christoph@gmail.com"},
    {name = "OpenPlaces Consortium", email = "contact@openplaces.io"},
]
maintainers = [
    {name = "Christoph Nolte", email = "nolte.christoph@gmail.com"},
    {name = "OpenPlaces Consortium", email = "contact@openplaces.io"},
]
description = "A Python package for place-based geospatial analysis"
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.9"
keywords = [
    "geospatial",
    "gis",
    "places",
    "property",
    "parcels",
    "sales",
    "geography",
    "spatial-analysis"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: GIS",
    "Topic :: Scientific/Engineering :: Information Analysis",
]

# Core dependencies - essential for basic functionality
dependencies = [
    "geopandas>=0.13.0",
    "rasterio>=1.3.0", 
    "pyproj>=3.4.0",
    "shapely>=2.0.0",
    "pyogrio>=0.7.0",
    "numpy>=1.21.0",
    "pandas>=1.5.0",
    "pyarrow>=10.0.0",
    "openpyxl>=3.0.0",
]

[project.optional-dependencies]
# Statistical analysis and basic ML
analysis = [
    "statsmodels>=0.14.0", 
    "scikit-learn>=1.3.0", 
    "rasterstats>=0.19.0"
]

# Advanced machine learning
ml = [
    "xgboost>=1.7.0", 
    "lightgbm>=4.0.0", 
    "catboost>=1.2.0"
]

# Visualization tools
viz = [
    "matplotlib>=3.7.0", 
    "plotly>=5.15.0", 
    "folium>=0.15.0", 
    "altair>=5.0.0",
    "seaborn>=0.12.0"
]

# Advanced raster processing
raster = [
    "rioxarray>=0.15.0", 
    "rio-cogeo>=4.0.0", 
    "scikit-image>=0.21.0", 
    "numba>=0.58.0"
]

# Development and testing tools
dev = [
    "jupyter>=1.0.0",
    "jupyterlab>=4.0.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "sphinx>=7.0.0",
    "sphinx-rtd-theme>=1.3.0"
]

# All optional dependencies
all = [
    "openplaces[analysis,ml,viz,raster]"
]

# For academic/research workflows - common combination
academic = [
    "openplaces[analysis,viz]",
    "jupyter>=1.0.0",
    "matplotlib-scalebar>=0.8.0"
]

[project.urls]
Homepage = "https://github.com/chrnolte/openplaces"
Documentation = "https://openplaces.readthedocs.io/"
Repository = "https://github.com/chrnolte/openplaces.git"
"Bug Tracker" = "https://github.com/chrnolte/openplaces/issues"
Changelog = "https://github.com/chrnolte/openplaces/blob/main/CHANGELOG.md"
Funding = "https://openplaces.io/funding"

[tool.setuptools.packages.find]
# Automatically find packages (replaces find_packages())
where = ["."]
include = ["openplaces*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
# Include non-Python files in package
openplaces = [
    "data/*.geojson",
    "data/*.csv", 
    "templates/*.html",
    "*.txt",
    "*.md"
]

# Development tool configurations
[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
skip-string-normalization = true
extend-exclude = '''
/(
    \.git
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.format]
quote-style = "single"

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]  # Allow unused imports in __init__.py

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
python_files = [
    "test_*.py",
    "*_test.py"
]

[tool.coverage.run]
source = ["openplaces"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]