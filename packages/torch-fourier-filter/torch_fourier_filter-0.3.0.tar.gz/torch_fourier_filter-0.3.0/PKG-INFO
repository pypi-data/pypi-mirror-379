Metadata-Version: 2.4
Name: torch-fourier-filter
Version: 0.3.0
Summary: Filters for image and volumes in pyTorch
Project-URL: homepage, https://github.com/jdickerson95/torch-fourier-filter
Project-URL: repository, https://github.com/jdickerson95/torch-fourier-filter
Author-email: Josh Dickerson <jdickerson@berkeley.edu>
License: BSD-3-Clause
License-File: LICENSE
Classifier: Development Status :: 3 - Alpha
Classifier: License :: OSI Approved :: BSD License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Typing :: Typed
Requires-Python: >=3.10
Requires-Dist: einops
Requires-Dist: scipy
Requires-Dist: starfile
Requires-Dist: torch
Requires-Dist: torch-grid-utils
Provides-Extra: dev
Requires-Dist: ipython; extra == 'dev'
Requires-Dist: mypy; extra == 'dev'
Requires-Dist: pdbpp; extra == 'dev'
Requires-Dist: pre-commit; extra == 'dev'
Requires-Dist: rich; extra == 'dev'
Requires-Dist: ruff; extra == 'dev'
Provides-Extra: test
Requires-Dist: pytest; extra == 'test'
Requires-Dist: pytest-cov; extra == 'test'
Description-Content-Type: text/markdown

# torch-fourier-filter

[![License](https://img.shields.io/pypi/l/torch-fourier-filter.svg?color=green)](https://github.com/jdickerson95/torch-fourier-filter/raw/main/LICENSE)
[![PyPI](https://img.shields.io/pypi/v/torch-fourier-filter.svg?color=green)](https://pypi.org/project/torch-fourier-filter)
[![Python Version](https://img.shields.io/pypi/pyversions/torch-fourier-filter.svg?color=green)](https://python.org)
[![CI](https://github.com/jdickerson95/torch-fourier-filter/actions/workflows/ci.yml/badge.svg)](https://github.com/jdickerson95/torch-fourier-filter/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/jdickerson95/torch-fourier-filter/branch/main/graph/badge.svg)](https://codecov.io/gh/jdickerson95/torch-fourier-filter)

Fourier space filters for image and volumes in pyTorch

Install via source using
```zsh
pip install -e .
```
And for development and testing use
```zsh
pip install -e ".[dev,test]"
```

Make sure to run tests before any commits:
```zsh
python -m pytest
```

