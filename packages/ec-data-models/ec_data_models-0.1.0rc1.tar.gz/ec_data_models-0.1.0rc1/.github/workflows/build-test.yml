name: Build & Test

on:
  push:
    branches:
      - "main"
      - "dev/**"
  pull_request:
    branches: ["main"]
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install uv
        run: curl -LsSf https://astral.sh/uv/install.sh | sh

      - name: Cache uv dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/uv
          key: ${{ runner.os }}-uv-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-uv-

      - name: Create uv virtual environment
        # Ensure uv has a virtual environment to install into
        run: uv venv --python 3.12

      - name: Install dependencies
        # Activate the venv and then run the install command.
        # The 'source' command makes the environment active for this step.
        run: |
          source .venv/bin/activate
          uv pip install -e ".[dev]"

      - name: Lint and Format Check
        # Activate the venv to ensure we use the 'ruff' installed there.
        run: |
          source .venv/bin/activate
          ruff format --check .
          ruff check .

      - name: Run Type Checking
        # Activate the venv to ensure we use the 'mypy' installed there.
        run: |
          source .venv/bin/activate
          mypy src

      - name: Run Tests
        # Activate the venv to ensure we use the 'pytest' installed there.
        run: |
          source .venv/bin/activate
          pytest

      - name: Check if package builds
        # Activate the venv, install 'build', and then run it.
        run: |
          source .venv/bin/activate
          uv pip install build
          python -m build
