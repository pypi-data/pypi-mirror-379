# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.function_threat_score import FunctionThreatScore

class TestFunctionThreatScore(unittest.TestCase):
    """FunctionThreatScore unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FunctionThreatScore:
        """Test FunctionThreatScore
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FunctionThreatScore`
        """
        model = FunctionThreatScore()
        if include_optional:
            return FunctionThreatScore(
                results = {
                    'key' : revengai.models.function_analysis_threat_score_data.FunctionAnalysisThreatScoreData(
                        min = 1.337, 
                        max = 1.337, 
                        average = 1.337, 
                        upper = 1.337, 
                        lower = 1.337, 
                        malware_count = 56, 
                        benign_count = 56, )
                    }
            )
        else:
            return FunctionThreatScore(
                results = {
                    'key' : revengai.models.function_analysis_threat_score_data.FunctionAnalysisThreatScoreData(
                        min = 1.337, 
                        max = 1.337, 
                        average = 1.337, 
                        upper = 1.337, 
                        lower = 1.337, 
                        malware_count = 56, 
                        benign_count = 56, )
                    },
        )
        """

    def testFunctionThreatScore(self):
        """Test FunctionThreatScore"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
