# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.base_response_analysis_threat_score_data import BaseResponseAnalysisThreatScoreData

class TestBaseResponseAnalysisThreatScoreData(unittest.TestCase):
    """BaseResponseAnalysisThreatScoreData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BaseResponseAnalysisThreatScoreData:
        """Test BaseResponseAnalysisThreatScoreData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BaseResponseAnalysisThreatScoreData`
        """
        model = BaseResponseAnalysisThreatScoreData()
        if include_optional:
            return BaseResponseAnalysisThreatScoreData(
                status = True,
                data = revengai.models.analysis_threat_score_data.AnalysisThreatScoreData(
                    min = 1.337, 
                    max = 1.337, 
                    average = 1.337, 
                    upper = 1.337, 
                    lower = 1.337, 
                    malware_count = 56, 
                    benign_count = 56, ),
                message = '',
                errors = [
                    revengai.models.error_model.ErrorModel(
                        code = '', 
                        message = '', )
                    ],
                meta = revengai.models.meta_model.MetaModel(
                    pagination = revengai.models.pagination_model.PaginationModel(
                        page_size = 56, 
                        page_number = 56, 
                        has_next_page = True, ), )
            )
        else:
            return BaseResponseAnalysisThreatScoreData(
        )
        """

    def testBaseResponseAnalysisThreatScoreData(self):
        """Test BaseResponseAnalysisThreatScoreData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
