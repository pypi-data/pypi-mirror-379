SIGSTKSZ has been removed from `glibc >= 2.34`.
It's replacement of `sysconf(_SC_SIGSTKSZ)` can only be evaluated at runtime
https://sourceware.org/git/?p=glibc.git;a=blob;f=NEWS;h=85e84fe53699fe9e392edffa993612ce08b2954a;hb=HEAD 

Causing compile failures:
> symengine-0.7.0/symengine/utilities/catch/catch.hpp:6546:41: error: array bound is not an integer constant before ‘]’ token
> 6546 |         static char altStackMem[SIGSTKSZ];

Author: Alexander Grund (TU Dresden)

diff -ur symengine-0.7.0-orig/symengine/utilities/catch/catch.hpp symengine-0.7.0/symengine/utilities/catch/catch.hpp
--- symengine-0.7.0-orig/symengine/utilities/catch/catch.hpp	2025-09-08 12:18:05.120053004 +0200
+++ symengine-0.7.0/symengine/utilities/catch/catch.hpp	2025-09-08 12:21:56.501356172 +0200
@@ -6543,7 +6543,7 @@
         static bool isSet;
         static struct sigaction oldSigActions [sizeof(signalDefs)/sizeof(SignalDefs)];
         static stack_t oldSigStack;
-        static char altStackMem[SIGSTKSZ];
+        static char* altStackMem;
 
         static void handleSignal( int sig ) {
             std::string name = "<unknown signal>";
@@ -6594,7 +6594,7 @@
     bool FatalConditionHandler::isSet = false;
     struct sigaction FatalConditionHandler::oldSigActions[sizeof(signalDefs)/sizeof(SignalDefs)] = {};
     stack_t FatalConditionHandler::oldSigStack = {};
-    char FatalConditionHandler::altStackMem[SIGSTKSZ] = {};
+    char* FatalConditionHandler::altStackMem = new char[std::max<size_t>(SIGSTKSZ, 32*1024)];
 
 } // namespace Catch
 
