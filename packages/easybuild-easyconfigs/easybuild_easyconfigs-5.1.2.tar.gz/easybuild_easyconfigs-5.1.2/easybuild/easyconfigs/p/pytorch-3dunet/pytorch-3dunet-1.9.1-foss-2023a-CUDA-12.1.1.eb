# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2023/11
# Update: Petr Kr√°l (INUITS)
easyblock = 'PythonPackage'

name = 'pytorch-3dunet'
version = '1.9.1'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/wolny/pytorch-3dunet'
description = """
PyTorch implementation of 3D U-Net and its variants:
 - UNet3D: Standard 3D U-Net based on 3D U-Net: Learning Dense Volumetric          Segmentation from Sparse Annotation
 - ResidualUNet3D: Residual 3D U-Net based on Superhuman Accuracy on the SNEMI3D
   Connectomics Challenge
 - ResidualUNetSE3D: Similar to ResidualUNet3D with the addition of Squeeze and
   Excitation blocks based on Deep Learning Semantic Segmentation for High-
   Resolution Medical Volumes. Original squeeze and excite paper: Squeeze-and-
   Excitation Networks
The code allows for training the U-Net for both: semantic segmentation (binary
and multi-class) and regression problems (e.g. de-noising, learning
deconvolutions).
"""
toolchain = {'name': 'foss', 'version': '2023a'}

source_urls = ['https://github.com/wolny/pytorch-3dunet/archive/']
sources = ['%(version)s.tar.gz']
checksums = ['deca7893e7bdbfff7a3330b05816bdf6e8c265df9a3ea8a5561e9247647e0273']

builddependencies = [
    ('pkgconf', '1.9.5'),
    ('cppy', '1.2.1'),
]

dependencies = [
    ('Python', '3.11.3'),
    ('SciPy-bundle', '2023.07'),
    ('CUDA', '12.1.1', '', SYSTEM),
    ('PyTorch', '2.1.2', versionsuffix),
    ('h5py', '3.9.0'),
    ('tensorboard', '2.15.1'),
    ('scikit-image', '0.22.0'),
    ('tqdm', '4.66.1'),
]

options = {'modulename': 'pytorch3dunet'}

sanity_check_commands = [
    "train3dunet --help",
    "predict3dunet --help"
]

moduleclass = 'ai'
