easyblock = 'Binary'

name = 'hpc-container-wrapper'
version = '0.4.2'

homepage = 'https://github.com/CSCfi/hpc-container-wrapper'

description = """hpc-container-wrapper (formerly known as Tykky) is a tool
for wrapping a software environment in an Apptainer container."""

docurls = ['https://docs.csc.fi/computing/containers/tykky/']

toolchain = SYSTEM

source_urls = [GITHUB_SOURCE]
github_account = 'CSCfi'
sources = ['v%(version)s.tar.gz']
unpack_options = '--strip-components=1 '

checksums = ['72a51c2a678cc88c62e415418dab122fa155140014896dc7622cb5c3450d9a44']

osdependencies = ['python3', 'python3-pip']

build_info_msg = """This easyconfig uses the 'local.yaml' file as default configuration.

Please consider either modifying the configuration file (configs/local.yaml) or
linking the default configuration file (default_config/config.yaml) to your own."""


usage = """
Initialize new conda environment:

  conda-containerize new --prefix /path/to_install conda_env.yaml

Update already existing environment:

  conda-containerize update --post-install post.sh /path/to_install

Initialize new python environment with pip requirements to install:

  pip-containerize new --prefix /path/to_install req.txt

To start your environment simply run the program from bin/ subdirectory of the installation directory.
"""

extract_sources = 'True'

buildininstalldir = 'True'

install_cmd = 'bash install.sh local'

sanity_check_paths = {
    'files': ['bin/conda-containerize', 'bin/pip-containerize'],
    'dirs':  ['bin', 'frontends'],
}

sanity_check_commands = ['conda-containerize --help', 'pip-containerize --help']

moduleclass = 'tools'
