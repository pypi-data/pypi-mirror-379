{"version":3,"names":["lwcGetacceptRootCss","LwcGetacceptRootStyle0","Root","constructor","hostRef","EnumViews","login","this","openDialog","bind","handleLogoClick","renderLayout","loadInitialData","loadSentDocuments","showWorkflow","componentWillLoad","externalId","context","limetype","id","activeView","checkIfSessionExists","home","session","setDefaultDocumentData","user","entities","fetchMe","platform","e","errorHandler","emit","loadEntityDetails","entity","fetchEntity","entity_id","documentData","email_send_message","default_email_send_message","email_send_subject","default_email_send_subject","render","h","key","class","onClick","src","renderDocumentCount","open","isOpen","closingActions","escapeKey","scrimClick","onClose","aside","checkIsAside","renderLogo","name","size","isSending","isVisible","slot","label","error","errorMessage","_m","_l","_k","_j","_h","_g","_f","_e","_d","_c","_b","_a","element","parentNode","host","tagName","hasSession","documents","length","compact","classes","isSealed","workflowSteps","some","view","currentView","isAside","selectFile","selectedLimeDocument","limeDocument","selectedTemplate","template","customFields","templateFields","templateRoles","document","recipient","settings","help","sendDocument","videoLibrary","documentDetail","documentId","documentValidation","fields","logout","localStorage","removeItem","checkIsPreviewView","shadowRoot","lastElementChild","classList","add","isLoadingDocuments","fetchSentDocuments","changeViewHandler","detail","loadRealtedDocumentsHandler","setTemplate","event","text","setLimeDocument","setCustomFields","setTemplateRoles","Object","assign","recipients","map","role_id","updateDocumentRecipientHandler","documentTypeHandler","isSigning","is_signing","setSessionHandler","sessionData","setSessionData","setDocumentName","documentName","setDocumentValue","value","setDocumentSmartReminder","smartReminder","is_reminder_sending","setDocumentIsSmsSending","isSmsSending","is_sms_sending","setDocumentEmailSubject","emailSendSubject","setDocumentEmailMessage","emailSendMessage","validateDocumentHandler","openDocumentDetails","updateRecipientRole","newRecipients","recipientIndex","findIndex","email","lime_id","role","setDocumentVideo","videoId","video_id","is_video","removeDocumentVideo","setIsSending","documentCompleted","onError","setTimeout","storedSession","window","getItem","sessionObj","JSON","parse","validateToken","querySelector","activeElement","contains","data","success","refreshToken","expires_in","access_token","setItem","stringify","template_id","custom_fields","external_id"],"sources":["src/components/lwc-getaccept-root/lwc-getaccept-root.scss?tag=lwc-getaccept-root&encapsulation=shadow","src/components/lwc-getaccept-root/lwc-getaccept-root.tsx"],"sourcesContent":["@import '../../gacolors.scss';\n\nlimel-dialog {\n    &.preview-view {\n        --dialog-width: 35rem;\n        --dialog-height: 45rem;\n    }\n\n    &.aside {\n        --dialog-width: 34rem;\n    }\n\n    .ga-version {\n        position: absolute;\n        top: 0;\n        right: 50px;\n    }\n\n    .ga-body {\n        overflow: auto;\n        min-height: 100%;\n        margin-top: 1rem;\n    }\n\n    .ga-top-bar {\n        position: sticky;\n        top: 0;\n        height: 5rem;\n        background-color: rgb(var(--contrast-100));\n        z-index: 4;\n        display: flex;\n        align-items: center;\n        z-index: 9;\n    }\n\n    @media (min-width: 1074px) {\n        --dialog-width: 65rem;\n        --dialog-height: 40rem;\n    }\n\n    @media (max-width: 1075px) {\n        --dialog-width: 55rem;\n        --dialog-height: 40rem;\n    }\n\n    @media (min-width: 1800px) {\n        --dialog-width: 70rem;\n        --dialog-height: 60rem;\n    }\n\n    --dialog-heading-icon-background-color: #f49132;\n}\n\nlimel-button {\n    --lime-primary-color: #f49132;\n}\n\n.logo-container {\n    height: 2.2rem;\n    width: 15rem;\n    margin-bottom: 1rem;\n    cursor: pointer;\n    transition: width 0.5s;\n    overflow: hidden;\n\n    &.compact {\n        width: 2.5rem;\n    }\n\n    &:hover {\n        opacity: 0.8;\n    }\n\n    .logo {\n        height: 2.2rem;\n    }\n}\n\n.close {\n    display: block;\n    position: absolute;\n    right: -1rem;\n    top: 0rem;\n    cursor: pointer;\n\n    &:hover {\n        color: #eee;\n    }\n}\n\n@mixin button-type($color, $background-color, $highlight-color) {\n    $ripple-color: lighten($highlight-color, 10%);\n\n    color: $color;\n    background: $background-color;\n\n    &:hover {\n        background: $highlight-color\n            radial-gradient(circle, transparent 1%, $highlight-color 1%)\n            center/15000%;\n    }\n\n    &:active {\n        background-color: $ripple-color;\n        background-size: 100%;\n        transition: background 0s;\n    }\n}\n\n.actionpad-container {\n    width: 100%;\n}\n\n.getaccept-button {\n    width: 100%;\n    display: flex;\n    justify-content: start;\n    align-items: center;\n    padding: 0.425rem 0.875rem 0.425rem 0.875rem;\n\n    border: none;\n    border-radius: 2rem;\n    cursor: pointer;\n\n    transition: background 0.8s;\n    background-position: center;\n    font-size: 0.8rem;\n    font-weight: bold;\n\n    &:focus {\n        outline: 0;\n    }\n\n    @include button-type($ga-light-black, #eee, #f5f5f5);\n\n    img {\n        height: 2rem;\n        flex: 0;\n    }\n\n    .button-text {\n        margin-left: 0.5rem;\n        flex: 2;\n        text-align: left;\n    }\n\n    .document-count {\n        margin-left: auto;\n        display: flex;\n        align-items: center;\n\n        limel-icon {\n            margin-right: 0.3rem;\n        }\n    }\n}\n\nworkflow-progress-bar {\n    position: absolute;\n    top: 1.5rem;\n    left: 4rem;\n    right: 4rem;\n}\n","import {\n    Component,\n    h,\n    Element,\n    Prop,\n    State,\n    Listen,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport {\n    LimeWebComponent,\n    LimeWebComponentContext,\n    LimeWebComponentPlatform,\n} from '@limetech/lime-web-components';\nimport { EnumViews } from '../../models/EnumViews';\nimport { IDocument } from '../../types/Document';\nimport { IRecipient } from '../../types/Recipient';\nimport { ISession } from '../../types/Session';\nimport {\n    fetchMe,\n    fetchEntity,\n    refreshToken,\n    fetchSentDocuments,\n} from '../../services';\nimport { IEntity } from '../../types/Entity';\nimport { ICustomField } from '../../types/CustomField';\nimport { IListItem } from '../../types/ListItem';\nimport { workflowSteps } from '../workflow-progress-bar/workflow-steps';\nimport { ITemplateRole } from 'src/types/TemplateRole';\n\n@Component({\n    tag: 'lwc-getaccept-root',\n    shadow: true,\n    styleUrl: 'lwc-getaccept-root.scss',\n})\nexport class Root implements LimeWebComponent {\n    @Element() public element: HTMLLwcGetacceptRootElement;\n    @Prop() public platform: LimeWebComponentPlatform;\n    @Prop() public context: LimeWebComponentContext;\n    @Prop() public company: any;\n\n    @State() private externalId: string;\n    @State() private isOpen: boolean = false;\n    @State() private session: ISession;\n    @State() private user;\n    @State() public entities: IEntity[] = [];\n    @State() public documentId: string;\n    @State() public activeView = EnumViews.login;\n\n    @State() public documentData: IDocument;\n    @State() public isSealed: boolean;\n\n    @State() public template: IListItem;\n    @State() public limeDocument: IListItem;\n    @State() public templateFields: ICustomField[];\n    @State() public templateRoles: ITemplateRole[];\n    @State() public errorMessage: string = '';\n\n    @State() public documents: IDocument[] = [];\n    @State() public isLoadingDocuments: boolean;\n    @State() public isSending: boolean = false;\n\n    @Event() public errorHandler: EventEmitter<string>;\n\n    constructor() {\n        this.openDialog = this.openDialog.bind(this);\n        this.handleLogoClick = this.handleLogoClick.bind(this);\n        this.renderLayout = this.renderLayout.bind(this);\n        this.loadInitialData = this.loadInitialData.bind(this);\n        this.loadSentDocuments = this.loadSentDocuments.bind(this);\n        this.showWorkflow = this.showWorkflow.bind(this);\n    }\n\n    public componentWillLoad() {\n        this.externalId = `${this.context.limetype}_${this.context.id}`;\n        this.activeView = this.checkIfSessionExists\n            ? EnumViews.home\n            : EnumViews.login;\n\n        if (this.session) {\n            this.loadInitialData();\n        }\n\n        this.setDefaultDocumentData();\n    }\n\n    private async loadInitialData() {\n        this.loadSentDocuments();\n\n        try {\n            const { user, entities } = await fetchMe(\n                this.platform,\n                this.session\n            );\n            this.user = user;\n            this.entities = entities;\n        } catch (e) {\n            this.errorHandler.emit(\n                'Could not load user session. Try relogging'\n            );\n        }\n\n        this.loadEntityDetails();\n    }\n\n    private async loadEntityDetails() {\n        try {\n            const { entity } = await fetchEntity(this.platform, this.session);\n\n            this.session.entity_id = entity.id;\n\n            this.documentData.email_send_message =\n                entity.email_send_message !== ''\n                    ? entity.email_send_message\n                    : entity.default_email_send_message;\n            this.documentData.email_send_subject =\n                entity.email_send_subject !== ''\n                    ? entity.email_send_subject\n                    : entity.default_email_send_subject;\n        } catch (e) {\n            this.errorHandler.emit(\n                'Could not load user session. Try relogging'\n            );\n        }\n    }\n\n    public render() {\n        return [\n            <limel-flex-container class=\"actionpad-container\">\n                <button class=\"getaccept-button\" onClick={this.openDialog}>\n                    <img src=\"https://static-vue-rc.getaccept.com/img/integrations/logo_only.png\" />\n                    <span class=\"button-text\">Send document</span>\n\n                    {this.renderDocumentCount(!!this.session)}\n                </button>\n            </limel-flex-container>,\n            <limel-dialog\n                open={this.isOpen}\n                closingActions={{ escapeKey: true, scrimClick: false }}\n                onClose={() => {\n                    this.isOpen = false;\n                }}\n                class={{ aside: this.checkIsAside() }}\n            >\n                <div class=\"ga-top-bar\">\n                    {this.renderLogo(this.showWorkflow())}\n                    <limel-icon\n                        class=\"close\"\n                        name=\"cancel\"\n                        size=\"small\"\n                        onClick={() => {\n                            this.isOpen = false;\n                        }}\n                    />\n                    {(() => {\n                        if (this.activeView !== EnumViews.login) {\n                            return [\n                                <layout-menu\n                                    activeView={this.activeView}\n                                    isSending={this.isSending}\n                                />,\n                                <workflow-progress-bar\n                                    isVisible={this.showWorkflow()}\n                                    activeView={this.activeView}\n                                />,\n                            ];\n                        }\n                    })()}\n                </div>\n\n                <div class=\"ga-body\">{this.renderLayout()}</div>\n                <div class=\"ga-version\">\n                    <span>Version: 1.3.13</span>\n                </div>\n                <limel-button-group slot=\"button\">\n                    <limel-button\n                        label=\"Cancel\"\n                        onClick={() => {\n                            this.isOpen = false;\n                        }}\n                    />\n                </limel-button-group>\n                <error-message error={this.errorMessage} />\n            </limel-dialog>,\n        ];\n    }\n\n    private checkIsAside() {\n        return (\n            (this.element as any).parentNode?.parentNode?.parentNode?.parentNode\n                ?.host?.parentNode?.parentNode?.host?.parentNode?.parentNode\n                ?.host?.parentNode?.tagName === 'ASIDE'\n        );\n    }\n\n    private renderDocumentCount(hasSession: boolean) {\n        if (hasSession) {\n            return (\n                <span class=\"document-count\">\n                    <limel-icon name=\"file\" size=\"small\" />\n                    <span>{this.documents.length}</span>\n                </span>\n            );\n        }\n\n        return [];\n    }\n\n    private renderLogo(compact) {\n        const classes: string = `logo-container ${compact ? 'compact' : ''}`;\n\n        return (\n            <div class={classes}>\n                <img\n                    onClick={this.handleLogoClick}\n                    src=\"https://static-vue-rc.getaccept.com/img/integrations/logo-inverted.png\"\n                    class=\"logo\"\n                />\n            </div>\n        );\n    }\n\n    private showWorkflow(): boolean {\n        if (this.isSending || this.isSealed) {\n            return false;\n        }\n\n        return workflowSteps.some(view => view.currentView === this.activeView);\n    }\n\n    private renderLayout() {\n        switch (this.activeView) {\n            case EnumViews.home:\n                return (\n                    <layout-overview\n                        platform={this.platform}\n                        session={this.session}\n                        externalId={this.externalId}\n                        documents={this.documents}\n                        isAside={this.checkIsAside()}\n                    />\n                );\n            case EnumViews.login:\n                return <layout-login platform={this.platform} />;\n            case EnumViews.selectFile:\n                return (\n                    <layout-select-file\n                        platform={this.platform}\n                        session={this.session}\n                        context={this.context}\n                        selectedLimeDocument={this.limeDocument}\n                        selectedTemplate={this.template}\n                        customFields={this.templateFields}\n                        templateRoles={this.templateRoles}\n                    />\n                );\n            case EnumViews.templateRoles:\n                return (\n                    <layout-template-roles\n                        platform={this.platform}\n                        session={this.session}\n                        context={this.context}\n                        document={this.documentData}\n                        limeDocument={this.limeDocument}\n                        template={this.template}\n                        templateRoles={this.templateRoles}\n                    />\n                );\n            case EnumViews.recipient:\n                return (\n                    <layout-select-recipient\n                        platform={this.platform}\n                        document={this.documentData}\n                        context={this.context}\n                        isAside={this.checkIsAside()}\n                    />\n                );\n            case EnumViews.settings:\n                return (\n                    <layout-settings\n                        user={this.user}\n                        entities={this.entities}\n                        session={this.session}\n                        platform={this.platform}\n                    />\n                );\n            case EnumViews.help:\n                return <layout-help />;\n            case EnumViews.sendDocument:\n                return (\n                    <layout-send-document\n                        context={this.context}\n                        document={this.documentData}\n                        limeDocument={this.limeDocument}\n                        template={this.template}\n                        session={this.session}\n                        platform={this.platform}\n                    />\n                );\n            case EnumViews.videoLibrary:\n                return (\n                    <layout-video-library\n                        platform={this.platform}\n                        session={this.session}\n                    />\n                );\n            case EnumViews.documentDetail:\n                return (\n                    <layout-document-details\n                        platform={this.platform}\n                        session={this.session}\n                        documentId={this.documentId}\n                    />\n                );\n            case EnumViews.documentValidation:\n                return (\n                    <layout-validate-document\n                        platform={this.platform}\n                        session={this.session}\n                        document={this.documentData}\n                        limeDocument={this.limeDocument}\n                        template={this.template}\n                        fields={this.templateFields}\n                        isSealed={this.isSealed}\n                        isSending={this.isSending}\n                        templateRoles={this.templateRoles}\n                    />\n                );\n            default:\n                return <layout-overview />;\n        }\n    }\n\n    private logout() {\n        localStorage.removeItem('getaccept_session');\n        this.documents = [];\n        this.activeView = EnumViews.login;\n    }\n\n    private openDialog(): void {\n        this.isOpen = true;\n        if (this.checkIsPreviewView) {\n            this.element.shadowRoot.lastElementChild.classList.add(\n                'preview-view'\n            );\n        }\n    }\n\n    private handleLogoClick(): void {\n        this.activeView = this.checkIfSessionExists\n            ? EnumViews.home\n            : EnumViews.login;\n    }\n\n    private async loadSentDocuments() {\n        this.isLoadingDocuments = true;\n        try {\n            this.documents = await fetchSentDocuments(\n                this.platform,\n                this.externalId,\n                this.session\n            );\n        } catch (e) {\n            this.errorHandler.emit(\n                'Something went wrong while documents from GetAccept...'\n            );\n        }\n\n        this.isLoadingDocuments = false;\n    }\n\n    @Listen('changeView')\n    changeViewHandler(view: CustomEvent) {\n        if (view.detail === EnumViews.logout) {\n            this.logout();\n        } else if (this.isSealed) {\n            this.activeView = EnumViews.home;\n            this.setDefaultDocumentData();\n        } else {\n            this.activeView = view.detail;\n        }\n    }\n\n    @Listen('loadRelatedDocuments')\n    loadRealtedDocumentsHandler() {\n        this.loadSentDocuments();\n    }\n\n    @Listen('setTemplate')\n    setTemplate(event) {\n        this.template = event.detail;\n        this.documentData.name = event.detail.text;\n        this.limeDocument = null;\n        this.templateFields = [];\n    }\n\n    @Listen('setLimeDocument')\n    setLimeDocument(event) {\n        this.limeDocument = event.detail;\n        this.documentData.name = event.detail.text;\n        this.template = null;\n        this.templateRoles = null;\n        this.templateFields = [];\n    }\n\n    @Listen('setCustomFields')\n    setCustomFields(event) {\n        this.templateFields = event.detail;\n    }\n\n    @Listen('setTemplateRoles')\n    setTemplateRoles(event) {\n        this.templateRoles = event.detail;\n        this.documentData = {\n            ...this.documentData,\n            recipients: this.documentData.recipients.map(recipient => ({\n                ...recipient,\n                role_id: '',\n            })),\n        };\n    }\n\n    @Listen('updateDocumentRecipient')\n    updateDocumentRecipientHandler(recipients: CustomEvent<IRecipient[]>) {\n        this.documentData.recipients = recipients.detail;\n    }\n\n    @Listen('setDocumentType')\n    documentTypeHandler(isSigning: CustomEvent<boolean>) {\n        this.documentData.is_signing = isSigning.detail;\n    }\n\n    @Listen('setSession')\n    setSessionHandler(sessionData: CustomEvent<ISession>) {\n        this.setSessionData(sessionData.detail);\n        this.activeView = EnumViews.home;\n        this.loadInitialData();\n    }\n\n    @Listen('setNewDocumentName')\n    setDocumentName(documentName: CustomEvent<string>) {\n        this.documentData = {\n            ...this.documentData,\n            name: documentName.detail,\n        };\n    }\n\n    @Listen('setDocumentValue')\n    setDocumentValue(value: CustomEvent<number>) {\n        this.documentData = {\n            ...this.documentData,\n            value: value.detail,\n        };\n    }\n\n    @Listen('setSmartReminder')\n    setDocumentSmartReminder(smartReminder: CustomEvent<boolean>) {\n        this.documentData.is_reminder_sending = smartReminder.detail;\n    }\n\n    @Listen('setIsSmsSending')\n    setDocumentIsSmsSending(isSmsSending: CustomEvent<boolean>) {\n        this.documentData.is_sms_sending = isSmsSending.detail;\n    }\n\n    @Listen('setEmailSubject')\n    setDocumentEmailSubject(emailSendSubject: CustomEvent<string>) {\n        this.documentData.email_send_subject = emailSendSubject.detail;\n    }\n\n    @Listen('setEmailMessage')\n    setDocumentEmailMessage(emailSendMessage: CustomEvent<string>) {\n        this.documentData.email_send_message = emailSendMessage.detail;\n    }\n\n    @Listen('validateDocument')\n    validateDocumentHandler() {\n        this.activeView = EnumViews.documentValidation;\n    }\n\n    @Listen('openDocument')\n    openDocumentDetails(document: CustomEvent<IDocument>) {\n        this.activeView = EnumViews.documentDetail;\n        this.documentId = document.detail.id;\n    }\n\n    @Listen('recipientRoleUpdated')\n    updateRecipientRole(\n        event: CustomEvent<{ recipient: IRecipient; role: ITemplateRole }>\n    ) {\n        const newRecipients = [...this.documentData.recipients];\n        const recipientIndex = newRecipients.findIndex(\n            recipient =>\n                recipient.email === event.detail.recipient.email &&\n                recipient.lime_id === event.detail.recipient.lime_id\n        );\n        newRecipients[recipientIndex].role_id = event.detail.role.role_id;\n        this.documentData = {\n            ...this.documentData,\n            recipients: [...newRecipients],\n        };\n    }\n\n    @Listen('setVideo')\n    setDocumentVideo(videoId: CustomEvent<string>) {\n        this.documentData.video_id = videoId.detail;\n        this.documentData.is_video = true;\n    }\n\n    @Listen('removeVideo')\n    removeDocumentVideo() {\n        this.documentData.video_id = '';\n        this.documentData.is_video = false;\n    }\n\n    @Listen('isSendingDocument')\n    setIsSending(isSending: CustomEvent<boolean>) {\n        this.isSending = isSending.detail;\n    }\n\n    @Listen('documentCompleted')\n    documentCompleted(isSealed: CustomEvent<boolean>) {\n        this.setDefaultDocumentData();\n        this.loadEntityDetails();\n        this.isSealed = isSealed.detail;\n        if (!this.isSealed) {\n            this.activeView = EnumViews.home;\n        }\n\n        this.loadSentDocuments();\n    }\n\n    @Listen('errorHandler')\n    onError(event: CustomEvent<string>) {\n        this.errorMessage = event.detail;\n        // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n        setTimeout(() => (this.errorMessage = ''), 100); // Needed for same consecutive error message\n    }\n\n    get checkIfSessionExists(): boolean {\n        const storedSession = window.localStorage.getItem('getaccept_session');\n        if (storedSession) {\n            const sessionObj: ISession = JSON.parse(storedSession);\n\n            // used to check if token should be refreshed or not.\n            this.validateToken(sessionObj);\n            this.session = sessionObj;\n        }\n\n        return !!storedSession;\n    }\n\n    get checkIsPreviewView(): boolean {\n        return document\n            .querySelector('lime-webclient')\n            .shadowRoot.activeElement.classList.contains('has-side-panel-open');\n    }\n\n    async validateToken(session: ISession) {\n        try {\n            const { data, success } = await refreshToken(\n                this.platform,\n                session\n            );\n            if (success) {\n                const storedSession =\n                    window.localStorage.getItem('getaccept_session');\n                if (storedSession) {\n                    const sessionObj: ISession = JSON.parse(storedSession);\n                    sessionObj.expires_in = data.expires_in;\n                    sessionObj.access_token = data.access_token;\n                    this.setSessionData(sessionObj);\n                }\n            } else {\n                this.errorMessage = 'Could not refresh token.';\n                setTimeout(() => (this.errorMessage = ''));\n            }\n        } catch (error) {\n            this.errorMessage = 'Could not refresh token.';\n            setTimeout(() => (this.errorMessage = ''));\n            this.logout();\n        }\n\n        return true;\n    }\n\n    private setSessionData(session: ISession) {\n        window.localStorage.setItem(\n            'getaccept_session',\n            JSON.stringify(session)\n        );\n        this.session = session;\n    }\n\n    setDefaultDocumentData() {\n        this.documentData = {\n            is_signing: false,\n            name: '',\n            recipients: [],\n            template_id: '',\n            custom_fields: [],\n            is_reminder_sending: false,\n            is_sms_sending: false,\n            email_send_subject: '',\n            email_send_message: '',\n            video_id: '',\n            is_video: false,\n            external_id: this.externalId,\n            value: 0,\n        };\n        this.templateFields = [];\n        this.isSealed = false;\n        this.template = null;\n        this.limeDocument = null;\n    }\n}\n"],"mappings":"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"}