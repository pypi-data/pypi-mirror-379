{"file":"recipient-item.entry.cjs.js","mappings":";;;;;;AAAA,MAAM,gBAAgB,GAAG,qiCAAqiC,CAAC;AAC/jC,4BAAe,gBAAgB;;MCOlB,aAAa;;;;uBAEK,IAAI;;IAExB,MAAM;QACT,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC;QACtE,MAAM,IAAI,GAAW,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC5C,MAAM,aAAa,GAAW,uBAAuB,IAAI,CAAC,UAAU,EAAE,EAAE,CAAC;QACzE,MAAM,kBAAkB,GAAW,8BAC/B,KAAK,GAAG,iBAAiB,GAAG,EAChC,GAAG,MAAM,GAAG,iBAAiB,GAAG,EAAE,EAAE,CAAC;QAErC,QACIA,iEAAI,KAAK,EAAE,aAAa,IACpBA,kEAAK,KAAK,EAAE,kBAAkB,QAAQ,EAAE,IACpCA,yEAAY,IAAI,EAAE,IAAI,EAAE,IAAI,EAAC,OAAO,GAAG,CACrC,EACNA,kEAAK,KAAK,EAAC,0BAA0B,IACjCA,qEAAO,QAAQ,CAAQ,EACvBA,oEACIA,qEAAO,OAAO,CAAQ,CACpB,EACNA,kEAAK,KAAK,EAAE,kBAAkB,IAC1BA,mEAAM,KAAK,EAAC,iBAAiB,IAAE,KAAK,CAAQ,EAC5CA,mEAAM,KAAK,EAAC,iBAAiB,IAAE,MAAM,CAAQ,CAC3C,CACJ,EACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAChC,EACP;KACL;IAEO,aAAa,CAAC,IAAa;QAC/B,OAAO,IAAI,IACPA,iBAAK,KAAK,EAAC,sBAAsB,IAC7BA,wBAAY,IAAI,EAAC,KAAK,EAAC,IAAI,EAAC,QAAQ,GAAG,CACrC,KAEN,EAAE,CACL,CAAC;KACL;IAEO,OAAO,CAAC,QAAgB;QAC5B,OAAO,QAAQ,KAAK,UAAU,GAAG,iBAAiB,GAAG,YAAY,CAAC;KACrE;IAEO,UAAU;QACd,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM;cAChD,UAAU;cACV,EAAE,CAAC;KACZ;;;;;;","names":["h"],"sources":["src/components/recipient-item/recipient-item.scss?tag=recipient-item&encapsulation=shadow","src/components/recipient-item/recipient-item.tsx"],"sourcesContent":["@import '../../gacolors.scss';\n\n.recipient-list-item {\n    display: flex;\n    align-items: center;\n    padding: 0.5rem;\n    cursor: pointer;\n    overflow: hidden;\n    border-bottom: 1px solid $ga-light-gray;\n\n    &:hover {\n        background-color: rgb(var(--contrast-300));\n    }\n\n    &.disabled {\n        opacity: 0.7;\n        filter: grayscale(1);\n        -webkit-filter: grayscale(1);\n    }\n\n    .recipient-icon {\n        display: flex;\n        align-items: center;\n        margin-right: 1rem;\n        padding: 0.5em;\n        border-radius: 50%;\n        background-color: $ga-blue;\n        color: $ga-white;\n\n        &.coworker {\n            background-color: $ga-orange;\n        }\n    }\n\n    .recipient-info-container {\n        display: flex;\n        flex-direction: column;\n        font-size: 0.7rem;\n        flex-grow: 2;\n\n        .recipient-info-contact-data {\n            display: flex;\n            flex-wrap: wrap;\n            overflow: hidden;\n\n            .recipient-phone {\n                &:empty {\n                    display: none;\n                }\n            }\n\n            &.contact--email {\n                .recipient-phone {\n                    &::before {\n                        content: '|';\n                        margin: 0 0.5rem;\n                    }\n                }\n            }\n        }\n    }\n\n    .recipient-add-button {\n        color: $ga-orange;\n    }\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { IRecipient } from '../../types/Recipient';\n\n@Component({\n    tag: 'recipient-item',\n    shadow: true,\n    styleUrl: 'recipient-item.scss',\n})\nexport class RecipientItem {\n    @Prop() recipient: IRecipient;\n    @Prop() showAdd: boolean = true;\n\n    public render() {\n        const { fullname, email, mobile, limetype, company } = this.recipient;\n        const icon: string = this.getIcon(limetype);\n        const recipientList: string = `recipient-list-item ${this.isDisabled()}`;\n        const contactInfoClasses: string = `recipient-info-contact-data${\n            email ? ' contact--email' : ''\n        }${mobile ? ' contact--phone' : ''}`;\n\n        return (\n            <li class={recipientList}>\n                <div class={`recipient-icon ${limetype}`}>\n                    <limel-icon name={icon} size=\"small\" />\n                </div>\n                <div class=\"recipient-info-container\">\n                    <span>{fullname}</span>\n                    <div>\n                        <span>{company}</span>\n                    </div>\n                    <div class={contactInfoClasses}>\n                        <span class=\"recipient-email\">{email}</span>\n                        <span class=\"recipient-phone\">{mobile}</span>\n                    </div>\n                </div>\n                {this.renderAddIcon(this.showAdd)}\n            </li>\n        );\n    }\n\n    private renderAddIcon(show: boolean) {\n        return show ? (\n            <div class=\"recipient-add-button\">\n                <limel-icon name=\"add\" size=\"medium\" />\n            </div>\n        ) : (\n            []\n        );\n    }\n\n    private getIcon(limetype: string): string {\n        return limetype === 'coworker' ? 'school_director' : 'guest_male';\n    }\n\n    private isDisabled(): string {\n        return !this.recipient.email && !this.recipient.mobile\n            ? 'disabled'\n            : '';\n    }\n}\n"],"version":3}