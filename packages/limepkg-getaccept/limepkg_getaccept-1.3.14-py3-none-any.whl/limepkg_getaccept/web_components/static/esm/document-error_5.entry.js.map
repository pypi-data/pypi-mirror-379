{"file":"document-error.document-error-feedback.document-validate-info.ga-loader-with-text.share-document-link.entry.js","mappings":"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","names":[],"sources":["src/components/document-error/document-error.scss?tag=document-error&encapsulation=shadow","src/components/document-error/document-error.tsx","src/components/document-error-view/document-error-feedback.scss?tag=document-error-feedback&encapsulation=shadow","src/components/document-error-view/document-error-feedback.tsx","src/components/document-validate-info/document-validate-info.scss?tag=document-validate-info&encapsulation=shadow","src/components/document-validate-info/document-validate-info.tsx","src/components/ga-loader-with-text/ga-loader-with-text.scss?tag=ga-loader-with-text&encapsulation=shadow","src/components/ga-loader-with-text/ga-loader-with-text.tsx","src/components/share-document-link/share-document-link.scss?tag=share-document-link&encapsulation=shadow","src/components/share-document-link/share-document-link.tsx"],"sourcesContent":["@import '../../gacolors.scss';\n\n.document-error {\n    display: flex;\n    align-items: center;\n    padding: 1rem 1rem;\n    cursor: pointer;\n\n    .document-error-icon {\n        display: inherit;\n        padding: 0.5rem;\n        margin-right: 1.5rem;\n        border-radius: 50%;\n        background-color: $ga-red;\n        color: $ga-white;\n    }\n\n    .document-error-info {\n        display: flex;\n        flex-direction: column;\n\n        .document-error-header {\n            margin-block-end: 0;\n            margin-block-start: 0;\n        }\n    }\n\n    &:hover {\n        background-color: $ga-lighter-gray;\n    }\n\n    @media (min-width: 1074px) {\n        width: 50%;\n    }\n\n    @media (max-width: 1075px) {\n        width: 100%;\n    }\n}\n","import { Component, h, Prop, EventEmitter, Event } from '@stencil/core';\nimport { IError } from '../../types/Error';\nimport { EnumViews } from '../../models/EnumViews';\n\n@Component({\n    tag: 'document-error',\n    shadow: true,\n    styleUrl: 'document-error.scss',\n})\nexport class DocumentError {\n    @Prop() error: IError;\n\n    @Event() changeView: EventEmitter<EnumViews>;\n\n    constructor() {\n        this.onClick = this.onClick.bind(this);\n    }\n\n    public render() {\n        return [\n            <li class=\"document-error\" onClick={this.onClick}>\n                <div class=\"document-error-icon\">\n                    <limel-icon name={this.error.icon} size=\"small\" />\n                </div>\n                <div class=\"document-error-info\">\n                    <h4 class=\"document-error-header\">{this.error.header}</h4>\n                    <span>{this.error.title}</span>\n                </div>\n            </li>,\n        ];\n    }\n\n    private onClick() {\n        this.changeView.emit(this.error.view);\n    }\n}\n","@import '../../gacolors.scss';\n\n.document-error-list {\n    padding: 0;\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { IError } from '../../types/Error';\nimport { IDocument } from '../../types/Document';\n\n@Component({\n    tag: 'document-error-feedback',\n    shadow: true,\n    styleUrl: 'document-error-feedback.scss',\n})\nexport class DocumentErrorFeedback {\n    @Prop() document: IDocument;\n    @Prop() errorList: IError[] = [];\n\n    public render() {\n        return [\n            <div>\n                <h3>You need to fix following tasks to send:</h3>\n                <ul class=\"document-error-list\">\n                    {this.errorList.map(error => {\n                        return <document-error error={error} />;\n                    })}\n                </ul>\n            </div>,\n        ];\n    }\n}\n","@import '../../gacolors.scss';\n\n.validate-document-success {\n    display: flex;\n    flex-wrap: wrap;\n\n    @media (min-width: 768px) {\n        .validate-document-summary {\n            width: 50%;\n        }\n\n        .validate-document-recipients {\n            width: 50%;\n        }\n    }\n\n    @media (max-width: 769px) {\n        .validate-document-summary {\n            width: 100%;\n        }\n\n        .validate-document-recipients {\n            width: 100%;\n        }\n    }\n\n    .validate-document-property-list {\n        list-style-type: none;\n        margin: 0;\n        padding: 0rem;\n        width: 100%;\n\n        .document-property {\n            font-weight: bold;\n        }\n    }\n\n    .document-recipient-list {\n        margin: 0 0 1rem 0;\n        width: 100%;\n        padding: 0rem;\n    }\n}\n\nlimel-button {\n    --lime-primary-color: #f49132;\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { IDocument } from '../../types/Document';\n\n@Component({\n    tag: 'document-validate-info',\n    shadow: true,\n    styleUrl: 'document-validate-info.scss',\n})\nexport class DocumentValidateInfo {\n    @Prop() document: IDocument;\n\n    constructor() {\n        this.hasProperty = this.hasProperty.bind(this);\n    }\n\n    public render() {\n        return [\n            <div class=\"validate-document-success\">\n                <div class=\"validate-document-summary\">\n                    <h3>Summary</h3>\n                    <ul class=\"validate-document-property-list\">\n                        <li>\n                            <span class=\"document-property\">Name: </span>\n                            <span>{this.document.name}</span>\n                        </li>\n                        <li>\n                            <span class=\"document-property\">Value: </span>\n                            <span>{this.document.value}</span>\n                        </li>\n                        <li>\n                            <span class=\"document-property\">\n                                Document is for signing:{' '}\n                            </span>\n                            <span>\n                                {this.hasProperty(this.document.is_signing)}\n                            </span>\n                        </li>\n                        <li>\n                            <span class=\"document-property\">\n                                Video is added:{' '}\n                            </span>\n                            <span>\n                                {this.hasProperty(this.document.is_video)}\n                            </span>\n                        </li>\n                        <li>\n                            <span class=\"document-property\">\n                                Send smart reminders:{' '}\n                            </span>\n                            <span>\n                                {this.hasProperty(\n                                    this.document.is_reminder_sending\n                                )}\n                            </span>\n                        </li>\n                        <li>\n                            <span class=\"document-property\">\n                                Send link by SMS:{' '}\n                            </span>\n                            <span>\n                                {this.hasProperty(this.document.is_sms_sending)}\n                            </span>\n                        </li>\n                    </ul>\n                </div>\n\n                <div class=\"validate-document-recipients\">\n                    <h3>Recipients</h3>\n                    <ul class=\"document-recipient-list\">\n                        {this.document.recipients.map(recipient => {\n                            return (\n                                <recipient-item\n                                    recipient={recipient}\n                                    showAdd={false}\n                                />\n                            );\n                        })}\n                    </ul>\n                </div>\n            </div>,\n        ];\n    }\n\n    hasProperty(value): string {\n        return value ? 'Yes' : 'No';\n    }\n}\n","@import '../../gacolors.scss';\n\nlimel-spinner {\n    margin: 2rem 0;\n    color: $ga-orange;\n}\n\n.share-document-loading-container {\n    text-align: center;\n    margin-top: 3rem;\n}\n","import { Component, h, Prop } from '@stencil/core';\n\n@Component({\n    tag: 'ga-loader-with-text',\n    shadow: true,\n    styleUrl: 'ga-loader-with-text.scss',\n})\nexport class GALoaderWithText {\n    @Prop() public showText: boolean = false;\n    @Prop() public text: string;\n\n    public render() {\n        return (\n            <div class=\"share-document-loading-container\">\n                {(() => {\n                    if (this.showText) {\n                        return (\n                            <div>\n                                <h3>{this.text}</h3>\n                            </div>\n                        );\n                    }\n                })()}\n                <ga-loader />\n            </div>\n        );\n    }\n}\n","@import '../../gacolors.scss';\n\n.share-document-list-item {\n    margin: 0.5rem 0;\n    padding: 0.5rem 1rem;\n\n    .recipient-info-container {\n        display: flex;\n        align-items: center;\n        padding-left: 1rem;\n\n        .recipient-icon {\n            display: flex;\n            align-items: center;\n            margin-right: 1rem;\n            padding: 0.5em;\n            border-radius: 50%;\n            background-color: $ga-blue;\n            color: $ga-white;\n        }\n\n        .recipient-info {\n            display: flex;\n            flex-direction: column;\n\n            .recipient-info-name {\n                text-transform: capitalize;\n                font-weight: bold;\n            }\n\n            .recipient-info {\n                text-transform: capitalize;\n            }\n        }\n    }\n\n}\n","import { Component, h, Prop } from '@stencil/core';\nimport { IRecipient } from '../../types/Recipient';\n\n@Component({\n    tag: 'share-document-link',\n    shadow: true,\n    styleUrl: 'share-document-link.scss',\n})\nexport class ShareDocumentLink {\n    @Prop() public recipient: IRecipient;\n\n    constructor() {\n        this.handleCopyLink = this.handleCopyLink.bind(this);\n    }\n\n    public render() {\n        return (\n            <li class=\"share-document-list-item\">\n                <div class=\"recipient-info-container\">\n                    <div class=\"recipient-icon\">\n                        <limel-icon name=\"user\" size=\"small\" />\n                    </div>\n                    <div class=\"recipient-info\">\n                        <span class=\"recipient-info-name\">\n                            {this.recipient.fullname}\n                        </span>\n                        <span class=\"recipient-info-role\">\n                            {this.recipient.role}\n                        </span>\n                    </div>\n                </div>\n                <div>\n                    <limel-input-field\n                        label=\"Signing link\"\n                        type=\"email\"\n                        value={this.recipient.document_url}\n                        trailingIcon=\"copy_link\"\n                        onAction={this.handleCopyLink}\n                    />\n                </div>\n            </li>\n        );\n    }\n\n    handleCopyLink() {\n        const copyText = document.createElement('textarea');\n        copyText.value = this.recipient.document_url;\n        document.body.appendChild(copyText);\n        copyText.select();\n        document.execCommand('copy');\n        document.body.removeChild(copyText);\n    }\n}\n"],"version":3}