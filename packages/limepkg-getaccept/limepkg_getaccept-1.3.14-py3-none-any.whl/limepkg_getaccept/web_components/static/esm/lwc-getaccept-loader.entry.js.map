{"file":"lwc-getaccept-loader.entry.js","mappings":";;MAgBa,MAAM;;;;;;IACR,iBAAiB;;KAEvB;IAOM,iBAAiB;;KAEvB;IAEM,oBAAoB;;KAE1B;IAEM,mBAAmB;;KAEzB;;;;;","names":[],"sources":["src/components/lwc-getaccept-loader/lwc-getaccept-loader.tsx"],"sourcesContent":["import { Component, Prop } from '@stencil/core';\nimport {\n    LimePluginLoader,\n    LimeWebComponentContext,\n    LimeWebComponentPlatform,\n} from '@limetech/lime-web-components';\n\n// NOTE: Do NOT remove this component, it is required to run the plugin correctly.\n// However, if your plugin has any code that should run only once when the application\n// starts, you are free to use the component lifecycle methods below to do so.\n// The component should never render anything, so do NOT implement a render method.\n\n@Component({\n    tag: 'lwc-getaccept-loader',\n    shadow: true,\n})\nexport class Loader implements LimePluginLoader {\n    public connectedCallback() {\n        // tslint:disable-line:no-empty\n    }\n    @Prop()\n    public platform: LimeWebComponentPlatform;\n\n    @Prop()\n    public context: LimeWebComponentContext;\n\n    public componentWillLoad() {\n        // tslint:disable-line:no-empty\n    }\n\n    public disconnectedCallback() {\n        // tslint:disable-line:no-empty\n    }\n\n    public componentWillUpdate() {\n        // tslint:disable-line:no-empty\n    }\n}\n"],"version":3}