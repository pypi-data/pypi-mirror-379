{"version":3,"file":"layout-select-recipient.js","sourceRoot":"","sources":["../../../src/components/layout-select-recipient/layout-select-recipient.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport {\n    Component,\n    h,\n    Prop,\n    State,\n    Listen,\n    Event,\n    EventEmitter,\n} from '@stencil/core';\nimport { IRecipient } from '../../types/Recipient';\nimport {\n    LimeWebComponentPlatform,\n    HttpOptions,\n    PlatformServiceName,\n    LimeWebComponentContext,\n} from '@limetech/lime-web-components';\nimport { IDocument } from '../../types/Document';\n\n@Component({\n    tag: 'layout-select-recipient',\n    shadow: true,\n    styleUrl: 'layout-select-recipient.scss',\n})\nexport class LayoutSelectRecipient {\n    @Prop() public platform: LimeWebComponentPlatform;\n    @Prop() public document: IDocument;\n    @Prop() public context: LimeWebComponentContext;\n    @Prop() public isAside: boolean = false;\n\n    @Event() updateDocumentRecipient: EventEmitter<IRecipient[]>;\n    @Event() private errorHandler: EventEmitter<string>;\n\n    @State() public searchTerm: string;\n    @State() private selectedRecipientList: IRecipient[] = [];\n    @State() private includeCoworkers: boolean = false;\n    @State() private recipientList: IRecipient[] = [];\n\n    public async componentWillLoad() {\n        this.selectedRecipientList = this.document.recipients;\n\n        if (this.selectedRecipientList.length < 1) {\n            const currentPersons: IRecipient[] =\n                await this.fetchCurrentPersons();\n            currentPersons.forEach(recipient => {\n                this.selectRecipientHandler(recipient);\n            });\n        }\n    }\n\n    constructor() {\n        this.selectRecipientHandler = this.selectRecipientHandler.bind(this);\n        this.isAdded = this.isAdded.bind(this);\n        this.onSearch = this.onSearch.bind(this);\n        this.toggleIncludeCoworkers = this.toggleIncludeCoworkers.bind(this);\n        this.fetchRecipients = this.fetchRecipients.bind(this);\n        this.fetchCurrentPersons = this.fetchCurrentPersons.bind(this);\n    }\n\n    public render() {\n        return [\n            <div\n                class={{\n                    'select-recipient-container': true,\n                    aside: this.isAside,\n                }}\n            >\n                <div class=\"recipient-container\">\n                    <h3>Search Recipient</h3>\n                    <div class=\"recipient-toolbar\">\n                        <limel-input-field\n                            label=\"Search recipient\"\n                            value={this.searchTerm}\n                            onChange={this.onSearch}\n                        />\n                        <limel-switch\n                            label=\"Include coworkers\"\n                            value={this.includeCoworkers}\n                            onChange={this.toggleIncludeCoworkers}\n                        />\n                    </div>\n                    <ul class=\"recipient-list\">\n                        {this.recipientList.map(recipient => {\n                            if (!this.isAdded(recipient.lime_id)) {\n                                return (\n                                    <recipient-item\n                                        recipient={recipient}\n                                        showAdd={true}\n                                        onClick={() => {\n                                            this.selectRecipientHandler(\n                                                recipient\n                                            );\n                                        }}\n                                    />\n                                );\n                            }\n                        })}\n                    </ul>\n                </div>\n                <div class=\"selected-recipient-container\">\n                    <h3>Added recipients</h3>\n                    <selected-recipient-list\n                        recipients={this.selectedRecipientList}\n                        document={this.document}\n                    />\n                </div>\n            </div>,\n        ];\n    }\n\n    private selectRecipientHandler(recipient) {\n        if (!!recipient.mobile || !!recipient.email) {\n            this.selectedRecipientList = [\n                ...this.selectedRecipientList,\n                recipient,\n            ];\n            this.updateDocumentRecipient.emit(\n                this.selectedRecipientList as IRecipient[]\n            );\n        } else {\n            this.errorHandler.emit(\n                'A recipient needs to have a mobile number or an email address'\n            );\n        }\n    }\n\n    @Listen('removeRecipient')\n    removeRecipientHandler(recipient: CustomEvent<IRecipient>) {\n        const rec = recipient.detail;\n        this.selectedRecipientList = this.selectedRecipientList.filter(\n            recipientData => {\n                return recipientData.lime_id !== rec.lime_id;\n            }\n        );\n        this.updateDocumentRecipient.emit(\n            this.selectedRecipientList as IRecipient[]\n        );\n        this.onSearch({ detail: '' });\n    }\n\n    @Listen('changeRecipientRole')\n    changeRecipientRoleHandler(recipient: CustomEvent<IRecipient>) {\n        const recipientData = recipient.detail;\n        const index = this.selectedRecipientList.findIndex(\n            rec => rec.lime_id === recipientData.lime_id\n        );\n\n        this.selectedRecipientList[index] = recipientData;\n        this.updateDocumentRecipient.emit(\n            this.selectedRecipientList as IRecipient[]\n        );\n    }\n\n    private isAdded(recipientId): boolean {\n        return !!this.selectedRecipientList.find(\n            recipient => recipient.lime_id === recipientId\n        );\n    }\n\n    private toggleIncludeCoworkers() {\n        this.includeCoworkers = !this.includeCoworkers;\n        this.fetchRecipients();\n    }\n\n    private async onSearch(event) {\n        this.searchTerm = event.detail;\n        this.fetchRecipients();\n    }\n\n    private async fetchRecipients() {\n        const options: HttpOptions = {\n            params: {\n                search: this.searchTerm,\n                limit: '10',\n                offset: '0',\n            },\n        };\n        try {\n            const persons = await this.fetchPersons(options);\n            const coworkers = await this.fetchCoworkers(\n                options,\n                this.includeCoworkers\n            );\n            this.recipientList = [...persons, ...coworkers];\n        } catch (e) {\n            this.errorHandler.emit(\n                'Something went wrong while communicating with the server...'\n            );\n        }\n    }\n\n    private async fetchPersons(options: HttpOptions): Promise<IRecipient[]> {\n        const persons = await this.platform\n            .get(PlatformServiceName.Http)\n            .get('getaccept/persons', options);\n\n        return persons.map(person => ({\n            ...person,\n            fullname: `${person.first_name} ${person.last_name}`,\n        }));\n    }\n\n    private async fetchCurrentPersons(): Promise<IRecipient[]> {\n        const { id: record_id, limetype } = this.context;\n\n        const options: HttpOptions = {\n            params: {\n                limetype: limetype,\n                record_id: record_id.toString(),\n            },\n        };\n        const currentPersons = await this.platform\n            .get(PlatformServiceName.Http)\n            .get('getaccept/current-persons', options);\n\n        // eslint-disable-next-line sonarjs/no-identical-functions\n        return currentPersons.map(person => ({\n            ...person,\n            fullname: `${person.first_name} ${person.last_name}`,\n        }));\n    }\n\n    private async fetchCoworkers(\n        options: HttpOptions,\n        includeCoworkers: boolean\n    ): Promise<IRecipient[]> {\n        if (!includeCoworkers) {\n            return [];\n        }\n\n        const coworkers = await this.platform\n            .get(PlatformServiceName.Http)\n            .get('getaccept/coworkers', options);\n\n        return coworkers.map(coworker => ({\n            ...coworker,\n            fullname: `${coworker.first_name} ${coworker.last_name}`,\n        }));\n    }\n}\n"]}