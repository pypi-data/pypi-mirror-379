{"version":3,"file":"video-thumb.js","sourceRoot":"","sources":["../../../src/components/video-thumb/video-thumb.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,KAAK,EAAE,IAAI,EAAgB,MAAM,eAAe,CAAC;AAExE,OAAO,EAAE,SAAS,EAAE,MAAM,wBAAwB,CAAC;AAOnD,MAAM,OAAO,UAAU;IAKnB;;QACI,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3D,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAClD;IAEO,WAAW,CAAC,WAAW,GAAG,EAAE;QAChC,MAAM,IAAI,GAAW,WAAW,CAAC,OAAO,CACpC,8BAA8B,EAC9B,EAAE,CACL,CAAC;QAEF,OAAO,+BAA+B,IAAI,EAAE,CAAC;IACjD,CAAC;IAEM,MAAM;QACT,OAAO;YACH,2DAAI,KAAK,EAAC,uBAAuB,EAAC,OAAO,EAAE,IAAI,CAAC,iBAAiB;gBAC5D,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC;gBACvC,4DAAK,KAAK,EAAC,aAAa,IAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAO,CACtD;SACR,CAAC;IACN,CAAC;IAEO,WAAW,CAAC,cAAsB,EAAE;QACxC,IAAI,WAAW,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE,CAAC;YACnC,OAAO,CACH,WAAK,KAAK,EAAC,WAAW;gBAClB,kBAAY,IAAI,EAAC,OAAO,GAAG,CACzB,CACT,CAAC;QACN,CAAC;QAED,IAAI,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAChC,OAAO,CACH,WAAK,KAAK,EAAC,mBAAmB;gBAC1B,kBAAY,IAAI,EAAC,cAAc,GAAG,CAChC,CACT,CAAC;QACN,CAAC;QAED,OAAO,WAAK,KAAK,EAAC,WAAW,EAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,WAAW,CAAC,GAAI,CAAC;IACzE,CAAC;IAEO,iBAAiB;QACrB,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACxC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;IACjD,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Event, Prop, EventEmitter } from '@stencil/core';\nimport { IVideo } from '../../types/Video';\nimport { EnumViews } from '../../models/EnumViews';\n\n@Component({\n    tag: 'video-thumb',\n    shadow: true,\n    styleUrl: 'video-thumb.scss',\n})\nexport class VideoThumb {\n    @Prop() public video: IVideo;\n    @Event() setVideo: EventEmitter;\n    @Event() changeView: EventEmitter;\n\n    constructor() {\n        this.handleSelectVideo = this.handleSelectVideo.bind(this);\n        this.renderThumb = this.renderThumb.bind(this);\n    }\n\n    private getThumbUrl(originalUrl = '') {\n        const path: string = originalUrl.replace(\n            'https://video.getaccept.com/',\n            ''\n        );\n\n        return `getaccept/video_thumb_proxy/${path}`;\n    }\n\n    public render() {\n        return [\n            <li class=\"video-thumb-container\" onClick={this.handleSelectVideo}>\n                {this.renderThumb(this.video.thumb_url)}\n                <div class=\"video-title\">{this.video.video_title}</div>\n            </li>,\n        ];\n    }\n\n    private renderThumb(originalUrl: string = '') {\n        if (originalUrl.includes('vimeocdn')) {\n            return (\n                <div class=\"thumbnail\">\n                    <limel-icon name=\"vimeo\" />\n                </div>\n            );\n        }\n\n        if (originalUrl.includes('ytimg')) {\n            return (\n                <div class=\"thumbnail youtube\">\n                    <limel-icon name=\"youtube_play\" />\n                </div>\n            );\n        }\n\n        return <img class=\"thumbnail\" src={this.getThumbUrl(originalUrl)} />;\n    }\n\n    private handleSelectVideo() {\n        this.setVideo.emit(this.video.video_id);\n        this.changeView.emit(EnumViews.sendDocument);\n    }\n}\n"]}