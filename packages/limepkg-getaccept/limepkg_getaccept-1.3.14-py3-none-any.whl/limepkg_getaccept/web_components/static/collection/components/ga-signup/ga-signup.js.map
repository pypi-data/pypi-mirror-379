{"version":3,"file":"ga-signup.js","sourceRoot":"","sources":["../../../src/components/ga-signup/ga-signup.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { ILoginField } from '../../types/LoginField';\nimport { Chip, LimelChipSetCustomEvent } from '@limetech/lime-elements';\nimport { LimeWebComponentPlatform } from '@limetech/lime-web-components';\nimport { signup } from '../../services';\nimport { ISession } from '../../types/Session';\nimport { ISignup } from '../../types/Signup';\n\n@Component({\n    tag: 'ga-signup',\n    shadow: true,\n    styleUrl: 'ga-signup.scss',\n})\nexport class GaSignup {\n    @Prop() public platform: LimeWebComponentPlatform;\n\n    @State() private isLoading: boolean = false;\n    @State() private disableSignup: boolean = false;\n    @State() private signupFirstName: string = '';\n    @State() private signupLastName: string = '';\n    @State() private companyName: string = '';\n    @State() private mobile: string = '';\n    @State() private countryCode: string = 'SE';\n    @State() private signupEmail: string;\n    @State() private signupPassword: string = '';\n\n    @Event() setSession: EventEmitter<ISession>;\n    @Event() errorHandler: EventEmitter<string>;\n\n    constructor() {\n        this.onChange = this.onChange.bind(this);\n        this.countrySetOnChange = this.countrySetOnChange.bind(this);\n        this.onSignup = this.onSignup.bind(this);\n    }\n\n    public render() {\n        this.disableSignup = this.shouldDisableSignup();\n\n        return [\n            <div class=\"auth-signup-field-container\">\n                {this.signupFields.map((signupField: ILoginField) => {\n                    return (\n                        <limel-input-field\n                            id={signupField.id}\n                            class={signupField.style}\n                            label={signupField.label}\n                            type={signupField.type}\n                            value={this[signupField.value]}\n                            required={signupField.required}\n                            trailingIcon={signupField.icon}\n                            onChange={event =>\n                                this.onChange(event, signupField.value)\n                            }\n                        />\n                    );\n                })}\n            </div>,\n            <span class=\"auth-language-label\">Country</span>,\n            <limel-chip-set\n                type=\"choice\"\n                onChange={this.countrySetOnChange}\n                required={true}\n                value={this.countryCodes}\n            />,\n            <limel-button\n                class=\"auth-button\"\n                label=\"Signup\"\n                primary={true}\n                loading={this.isLoading}\n                disabled={this.disableSignup}\n                onClick={this.onSignup}\n            />,\n        ];\n    }\n\n    private shouldDisableSignup(): boolean {\n        return (\n            this.signupEmail === '' &&\n            this.signupLastName === '' &&\n            this.signupLastName === '' &&\n            this.mobile === '' &&\n            this.signupPassword === ''\n        );\n    }\n\n    private onChange(event, valueReference) {\n        this[valueReference] = event.detail;\n    }\n\n    private countrySetOnChange(event: LimelChipSetCustomEvent<Chip>) {\n        this.countryCode = event.detail.id.toString();\n    }\n\n    private async onSignup() {\n        this.isLoading = true;\n        const signupData: ISignup = {\n            company: this.companyName,\n            first_name: this.signupFirstName,\n            last_name: this.signupLastName,\n            country_code: this.countryCode,\n            mobile: this.mobile,\n            email: this.signupEmail,\n            password: this.signupPassword,\n        };\n\n        const { data, success } = await signup(this.platform, signupData);\n\n        if (success) {\n            const session: ISession = {\n                username: this.signupEmail,\n                access_token: data.access_token,\n                expires_in: data.expires_in,\n            };\n            this.setSession.emit(session);\n        } else {\n            if (data.error) {\n                this.errorHandler.emit(data.error);\n            } else {\n                this.errorHandler.emit('Something went wrong...');\n            }\n        }\n\n        this.isLoading = false;\n    }\n\n    private signupFields: ILoginField[] = [\n        {\n            id: 'SignupEmail',\n            style: 'auth-imput',\n            label: 'Email address',\n            type: 'email',\n            value: 'signupEmail',\n            required: true,\n            icon: 'filled_message',\n        },\n        {\n            id: 'Password',\n            style: 'auth-imput',\n            label: 'Password',\n            type: 'password',\n            value: 'signupPassword',\n            required: true,\n            icon: 'lock_2',\n        },\n        {\n            id: 'FirstName',\n            style: 'auth-imput',\n            label: 'First name',\n            type: 'text',\n            value: 'signupFirstName',\n            required: true,\n            icon: 'user',\n        },\n        {\n            id: 'LastName',\n            style: 'auth-imput',\n            label: 'Last name',\n            type: 'text',\n            value: 'signupLastName',\n            required: true,\n            icon: 'user',\n        },\n        {\n            id: 'Company',\n            style: 'auth-imput',\n            label: 'Company',\n            type: 'text',\n            value: 'companyName',\n            required: true,\n            icon: 'organization',\n        },\n        {\n            id: 'Mobile',\n            style: 'auth-imput',\n            label: 'Mobile',\n            type: 'text',\n            value: 'mobile',\n            required: true,\n            icon: 'phone_not_being_used',\n        },\n    ];\n\n    private countryCodes: Chip[] = [\n        {\n            id: 'SE',\n            text: 'SWE',\n            selected: true,\n        },\n        {\n            id: 'NO',\n            text: 'NOR',\n        },\n        {\n            id: 'FI',\n            text: 'FIN',\n        },\n        {\n            id: 'DK',\n            text: 'DEN',\n        },\n        {\n            id: 'GB',\n            text: 'GBR',\n        },\n        {\n            id: 'US',\n            text: 'USA',\n        },\n    ];\n}\n"]}