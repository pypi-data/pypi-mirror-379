{"version":3,"file":"layout-settings.js","sourceRoot":"","sources":["../../../src/components/layout-settings/layout-settings.tsx"],"names":[],"mappings":"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","sourcesContent":["import { Component, h, Prop, State, Event, EventEmitter } from '@stencil/core';\nimport { IEntity } from '../../types/Entity';\nimport { LimeWebComponentPlatform } from '@limetech/lime-web-components';\nimport { switchEntity } from '../../services';\nimport { ISession } from '../../types/Session';\n\ninterface IOption {\n    text: string;\n    value: string;\n}\n\n@Component({\n    tag: 'layout-settings',\n    shadow: true,\n    styleUrl: 'layout-settings.scss',\n})\nexport class LayoutSettings {\n    @Prop() public entities: IEntity[];\n    @Prop() public user;\n    @Prop() public session: ISession;\n    @Prop() public platform: LimeWebComponentPlatform;\n\n    @Event() setSession: EventEmitter<ISession>;\n\n    @State() private entityOptions: IOption[];\n    @State() private selectedEntity: IOption;\n    @State() private isLoading: boolean;\n    @State() private error: string = '';\n\n    constructor() {\n        this.onChangeEntity = this.onChangeEntity.bind(this);\n        this.renderContent = this.renderContent.bind(this);\n    }\n\n    public componentWillLoad() {\n        this.entityOptions = this.entities.map((entity: IEntity) => ({\n            value: entity.id,\n            text: entity.name,\n        }));\n        this.selectedEntity = this.entityOptions.find((entity: IOption) => {\n            return entity.value === this.user.entity_id;\n        });\n    }\n\n    public render() {\n        return [\n            <h3>Settings</h3>,\n            <div class=\"settings-container\">\n                {this.isLoading ? this.renderLoader() : this.renderContent()}\n            </div>,\n        ];\n    }\n\n    private renderLoader() {\n        return <ga-loader class=\"full-width\" />;\n    }\n\n    private renderContent() {\n        return [\n            <div class=\"settings-column\">\n                <h4>My profile</h4>\n                <limel-flex-container justify=\"center\">\n                    <profile-picture thumbUrl={this.user.thumb_url} />\n                </limel-flex-container>\n                <limel-input-field\n                    label=\"Name\"\n                    value={`${this.user.first_name} ${this.user.last_name}`}\n                    disabled={true}\n                />\n                <limel-input-field\n                    label=\"Title\"\n                    value={this.user.title}\n                    disabled={true}\n                />\n                <limel-input-field\n                    label=\"Email\"\n                    value={this.user.email}\n                    disabled={true}\n                />\n                <limel-input-field\n                    label=\"Phone\"\n                    value={this.user.mobile}\n                    disabled={true}\n                />\n                <limel-input-field\n                    label=\"Role\"\n                    value={this.user.role}\n                    disabled={true}\n                />\n            </div>,\n            <div class=\"settings-column\">\n                <h4>Change entity</h4>\n                <limel-select\n                    class=\"entity-selector\"\n                    label=\"Entity\"\n                    value={this.selectedEntity}\n                    options={this.entityOptions}\n                    onChange={this.onChangeEntity}\n                    required={true}\n                />\n                {this.renderError(this.error)}\n            </div>,\n        ];\n    }\n\n    private renderError(error) {\n        return error ? <span class=\"error\">{error}</span> : '';\n    }\n    private async onChangeEntity(event) {\n        if (event.detail.value === this.selectedEntity.value) {\n            return;\n        }\n\n        this.isLoading = true;\n        const originalEntity: IOption = this.selectedEntity;\n        this.selectedEntity = event.detail;\n        try {\n            const session: ISession = await switchEntity(\n                this.selectedEntity.value,\n                this.platform,\n                this.session\n            );\n            this.setSession.emit(session);\n        } catch (e) {\n            this.error =\n                'Could not switch entity. Please try again at a later time.';\n            setTimeout(() => {\n                this.error = '';\n                // eslint-disable-next-line @typescript-eslint/no-magic-numbers\n            }, 3000);\n            this.selectedEntity = originalEntity;\n        }\n\n        this.isLoading = false;\n    }\n}\n"]}