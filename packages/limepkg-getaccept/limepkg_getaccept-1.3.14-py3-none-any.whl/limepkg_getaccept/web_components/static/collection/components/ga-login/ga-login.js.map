{"version":3,"file":"ga-login.js","sourceRoot":"","sources":["../../../src/components/ga-login/ga-login.tsx"],"names":[],"mappings":"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","sourcesContent":["/* eslint-disable camelcase */\nimport { Component, h, Prop, Event, State, EventEmitter } from '@stencil/core';\nimport { ILoginField } from '../../types/LoginField';\nimport {\n    LimeWebComponentPlatform,\n    PlatformServiceName,\n} from '@limetech/lime-web-components';\nimport { ISession } from '../../types/Session';\n\n@Component({\n    tag: 'ga-login',\n    shadow: true,\n    styleUrl: 'ga-login.scss',\n})\nexport class GaLogin {\n    @Prop() public platform: LimeWebComponentPlatform;\n\n    @Event() setSession: EventEmitter<ISession>;\n\n    @State() private loading: boolean = false;\n    @State() private errorOnLogin: boolean = false;\n    @State() private email: string = '';\n    @State() private password: string = '';\n\n    private loginFields: ILoginField[] = [\n        {\n            id: 'LoginEmail',\n            style: 'auth-imput',\n            label: 'Email address',\n            type: 'email',\n            value: 'email',\n            required: false,\n            icon: 'filled_message',\n        },\n        {\n            id: 'LoginPassword',\n            style: 'auth-imput',\n            label: 'Password',\n            type: 'password',\n            value: 'password',\n            required: false,\n            icon: 'lock_2',\n        },\n    ];\n\n    constructor() {\n        this.onChange = this.onChange.bind(this);\n        this.onLogin = this.onLogin.bind(this);\n        this.isDisabled = this.isDisabled.bind(this);\n    }\n\n    public render() {\n        return [\n            this.loginFields.map((loginField: ILoginField) => {\n                return (\n                    <limel-input-field\n                        id={loginField.id}\n                        class={loginField.style}\n                        label={loginField.label}\n                        type={loginField.type}\n                        value={this[loginField.value]}\n                        required={loginField.required}\n                        trailingIcon={loginField.icon}\n                        onChange={(event: any) =>\n                            this.onChange(event, loginField.value)\n                        }\n                    />\n                );\n            }),\n            (() => {\n                return (\n                    <div>\n                        <limel-button\n                            class=\"auth-button\"\n                            label=\"Login\"\n                            primary={true}\n                            loading={this.loading}\n                            disabled={this.isDisabled()}\n                            onClick={this.onLogin}\n                        />\n                        {this.errorOnLogin ? (\n                            <span class=\"auth-error\">\n                                Could not login. Please check your credentials\n                            </span>\n                        ) : null}\n                    </div>\n                );\n            })(),\n        ];\n    }\n\n    private isDisabled(): boolean {\n        return !(this.email && this.password);\n    }\n\n    private onChange(event, valueReference) {\n        this[valueReference] = event.detail;\n    }\n\n    private async onLogin() {\n        this.errorOnLogin = false;\n        this.loading = true;\n\n        const data = { email: this.email, password: this.password };\n        const response = await this.platform\n            .get(PlatformServiceName.Http)\n            .post('getaccept/login/', data);\n        this.loading = false;\n\n        if (response.success) {\n            const session: ISession = {\n                username: this.email,\n                access_token: response.data.access_token,\n                expires_in: response.data.expires_in,\n            };\n            this.setSession.emit(session);\n        } else {\n            this.errorOnLogin = true;\n        }\n    }\n}\n"]}