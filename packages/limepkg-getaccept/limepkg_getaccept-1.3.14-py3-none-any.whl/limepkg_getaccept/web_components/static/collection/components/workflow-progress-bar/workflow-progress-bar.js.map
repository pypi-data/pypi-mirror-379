{"version":3,"file":"workflow-progress-bar.js","sourceRoot":"","sources":["../../../src/components/workflow-progress-bar/workflow-progress-bar.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAgB,MAAM,eAAe,CAAC;AAGxE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAOjD,MAAM,OAAO,mBAAmB;IAK5B;;;QACI,IAAI,CAAC,yBAAyB;YAC1B,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9C,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACnE,IAAI,CAAC,sBAAsB,GAAG,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KACxE;IAEM,MAAM;QACT,OAAO,CAAC,GAAG,EAAE;YACT,IAAI,IAAI,CAAC,SAAS,EAAE,CAAC;gBACjB,OAAO,CACH,UAAI,KAAK,EAAC,gBAAgB;oBACtB,UACI,KAAK,EAAC,wBAAwB,EAC9B,OAAO,EAAE,IAAI,CAAC,yBAAyB,WAGtC;oBACJ,aAAa,CAAC,GAAG,CAAC,CAAC,IAAe,EAAE,KAAK,EAAE,EAAE;wBAC1C,IAAI,WAAW,GAAG,oBAAoB,CAAC;wBACvC,IAAI,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,EAAE,CAAC;4BACvC,WAAW,IAAI,SAAS,CAAC;wBAC7B,CAAC;wBAED,OAAO,CACH,UACI,KAAK,EAAC,eAAe,EACrB,OAAO,EAAE,GAAG,EAAE,CACV,IAAI,CAAC,sBAAsB,CACvB,IAAI,CAAC,WAAW,CACnB;4BAGL,YAAM,KAAK,EAAE,WAAW,IAAG,KAAK,GAAG,CAAC,CAAQ;4BAC5C,YAAM,KAAK,EAAC,oBAAoB,IAC3B,IAAI,CAAC,KAAK,CACR,CACN,CACR,CAAC;oBACN,CAAC,CAAC;oBACF,UACI,KAAK,EAAC,wBAAwB,EAC9B,OAAO,EAAE,IAAI,CAAC,qBAAqB,WAGlC,CACJ,CACR,CAAC;YACN,CAAC;QACL,CAAC,CAAC,EAAE,CAAC;IACT,CAAC;IAEO,yBAAyB;QAC7B,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;IAChD,CAAC;IAEO,qBAAqB;QACzB,MAAM,QAAQ,GAAG,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;YACvC,OAAO,IAAI,CAAC,WAAW,KAAK,IAAI,CAAC,UAAU,CAAC;QAChD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;IAC5C,CAAC;IAEO,sBAAsB,CAAC,WAAW;QACtC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IACtC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CACJ","sourcesContent":["import { Component, h, Prop, Event, EventEmitter } from '@stencil/core';\nimport { IProgress } from '../../types/Progress';\nimport { EnumViews } from '../../models/EnumViews';\nimport { workflowSteps } from './workflow-steps';\n\n@Component({\n    tag: 'workflow-progress-bar',\n    shadow: true,\n    styleUrl: 'workflow-progress-bar.scss',\n})\nexport class WorkflowProgressBar {\n    @Prop() activeView: EnumViews;\n    @Prop() isVisible: boolean;\n    @Event() changeView: EventEmitter<EnumViews>;\n\n    constructor() {\n        this.changeViewHandlerPrevious =\n            this.changeViewHandlerPrevious.bind(this);\n        this.changeViewHandlerNext = this.changeViewHandlerNext.bind(this);\n        this.changeViewSelectedStep = this.changeViewSelectedStep.bind(this);\n    }\n\n    public render() {\n        return (() => {\n            if (this.isVisible) {\n                return (\n                    <ul class=\"progress-steps\">\n                        <li\n                            class=\"progress-action-button\"\n                            onClick={this.changeViewHandlerPrevious}\n                        >\n                            Back\n                        </li>\n                        {workflowSteps.map((step: IProgress, index) => {\n                            let progessStep = 'progress-step-icon';\n                            if (step.currentView === this.activeView) {\n                                progessStep += ' active';\n                            }\n\n                            return (\n                                <li\n                                    class=\"progress-step\"\n                                    onClick={() =>\n                                        this.changeViewSelectedStep(\n                                            step.currentView\n                                        )\n                                    }\n                                >\n                                    <span class={progessStep}>{index + 1}</span>\n                                    <span class=\"progress-step-text\">\n                                        {step.label}\n                                    </span>\n                                </li>\n                            );\n                        })}\n                        <li\n                            class=\"progress-action-button\"\n                            onClick={this.changeViewHandlerNext}\n                        >\n                            Next\n                        </li>\n                    </ul>\n                );\n            }\n        })();\n    }\n\n    private changeViewHandlerPrevious() {\n        const viewData = workflowSteps.find(step => {\n            return step.currentView === this.activeView;\n        });\n        this.changeView.emit(viewData.previousView);\n    }\n\n    private changeViewHandlerNext() {\n        const viewData = workflowSteps.find(step => {\n            return step.currentView === this.activeView;\n        });\n        this.changeView.emit(viewData.nextView);\n    }\n\n    private changeViewSelectedStep(currentView) {\n        this.changeView.emit(currentView);\n    }\n}\n"]}