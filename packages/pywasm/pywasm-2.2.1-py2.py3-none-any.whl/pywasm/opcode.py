import typing

unreachable = 0x00
nop = 0x01
block = 0x02
loop = 0x03
if_then = 0x04
else_fi = 0x05
end = 0x0b
br = 0x0c
br_if = 0x0d
br_table = 0x0e
return_call = 0x0f
call = 0x10
call_indirect = 0x11
drop = 0x1a
select = 0x1b
select_type = 0x1c
local_get = 0x20
local_set = 0x21
local_tee = 0x22
global_get = 0x23
global_set = 0x24
table_get = 0x25
table_set = 0x26
i32_load = 0x28
i64_load = 0x29
f32_load = 0x2a
f64_load = 0x2b
i32_load8_s = 0x2c
i32_load8_u = 0x2d
i32_load16_s = 0x2e
i32_load16_u = 0x2f
i64_load8_s = 0x30
i64_load8_u = 0x31
i64_load16_s = 0x32
i64_load16_u = 0x33
i64_load32_s = 0x34
i64_load32_u = 0x35
i32_store = 0x36
i64_store = 0x37
f32_store = 0x38
f64_store = 0x39
i32_store8 = 0x3a
i32_store16 = 0x3b
i64_store8 = 0x3c
i64_store16 = 0x3d
i64_store32 = 0x3e
memory_size = 0x3f
memory_grow = 0x40
i32_const = 0x41
i64_const = 0x42
f32_const = 0x43
f64_const = 0x44
i32_eqz = 0x45
i32_eq = 0x46
i32_ne = 0x47
i32_lt_s = 0x48
i32_lt_u = 0x49
i32_gt_s = 0x4a
i32_gt_u = 0x4b
i32_le_s = 0x4c
i32_le_u = 0x4d
i32_ge_s = 0x4e
i32_ge_u = 0x4f
i64_eqz = 0x50
i64_eq = 0x51
i64_ne = 0x52
i64_lt_s = 0x53
i64_lt_u = 0x54
i64_gt_s = 0x55
i64_gt_u = 0x56
i64_le_s = 0x57
i64_le_u = 0x58
i64_ge_s = 0x59
i64_ge_u = 0x5a
f32_eq = 0x5b
f32_ne = 0x5c
f32_lt = 0x5d
f32_gt = 0x5e
f32_le = 0x5f
f32_ge = 0x60
f64_eq = 0x61
f64_ne = 0x62
f64_lt = 0x63
f64_gt = 0x64
f64_le = 0x65
f64_ge = 0x66
i32_clz = 0x67
i32_ctz = 0x68
i32_popcnt = 0x69
i32_add = 0x6a
i32_sub = 0x6b
i32_mul = 0x6c
i32_div_s = 0x6d
i32_div_u = 0x6e
i32_rem_s = 0x6f
i32_rem_u = 0x70
i32_and = 0x71
i32_or = 0x72
i32_xor = 0x73
i32_shl = 0x74
i32_shr_s = 0x75
i32_shr_u = 0x76
i32_rotl = 0x77
i32_rotr = 0x78
i64_clz = 0x79
i64_ctz = 0x7a
i64_popcnt = 0x7b
i64_add = 0x7c
i64_sub = 0x7d
i64_mul = 0x7e
i64_div_s = 0x7f
i64_div_u = 0x80
i64_rem_s = 0x81
i64_rem_u = 0x82
i64_and = 0x83
i64_or = 0x84
i64_xor = 0x85
i64_shl = 0x86
i64_shr_s = 0x87
i64_shr_u = 0x88
i64_rotl = 0x89
i64_rotr = 0x8a
f32_abs = 0x8b
f32_neg = 0x8c
f32_ceil = 0x8d
f32_floor = 0x8e
f32_trunc = 0x8f
f32_nearest = 0x90
f32_sqrt = 0x91
f32_add = 0x92
f32_sub = 0x93
f32_mul = 0x94
f32_div = 0x95
f32_min = 0x96
f32_max = 0x97
f32_copysign = 0x98
f64_abs = 0x99
f64_neg = 0x9a
f64_ceil = 0x9b
f64_floor = 0x9c
f64_trunc = 0x9d
f64_nearest = 0x9e
f64_sqrt = 0x9f
f64_add = 0xa0
f64_sub = 0xa1
f64_mul = 0xa2
f64_div = 0xa3
f64_min = 0xa4
f64_max = 0xa5
f64_copysign = 0xa6
i32_wrap_i64 = 0xa7
i32_trunc_f32_s = 0xa8
i32_trunc_f32_u = 0xa9
i32_trunc_f64_s = 0xaa
i32_trunc_f64_u = 0xab
i64_extend_i32_s = 0xac
i64_extend_i32_u = 0xad
i64_trunc_f32_s = 0xae
i64_trunc_f32_u = 0xaf
i64_trunc_f64_s = 0xb0
i64_trunc_f64_u = 0xb1
f32_convert_i32_s = 0xb2
f32_convert_i32_u = 0xb3
f32_convert_i64_s = 0xb4
f32_convert_i64_u = 0xb5
f32_demote_f64 = 0xb6
f64_convert_i32_s = 0xb7
f64_convert_i32_u = 0xb8
f64_convert_i64_s = 0xb9
f64_convert_i64_u = 0xba
f64_promote_f32 = 0xbb
i32_reinterpret_f32 = 0xbc
i64_reinterpret_f64 = 0xbd
f32_reinterpret_i32 = 0xbe
f64_reinterpret_i64 = 0xbf
i32_extend8_s = 0xc0
i32_extend16_s = 0xc1
i64_extend8_s = 0xc2
i64_extend16_s = 0xc3
i64_extend32_s = 0xc4
ref_null = 0xd0
ref_is_null = 0xd1
ref_func = 0xd2
i32_trunc_sat_f32_s = 0xfc00
i32_trunc_sat_f32_u = 0xfc01
i32_trunc_sat_f64_s = 0xfc02
i32_trunc_sat_f64_u = 0xfc03
i64_trunc_sat_f32_s = 0xfc04
i64_trunc_sat_f32_u = 0xfc05
i64_trunc_sat_f64_s = 0xfc06
i64_trunc_sat_f64_u = 0xfc07
memory_init = 0xfc08
data_drop = 0xfc09
memory_copy = 0xfc0a
memory_fill = 0xfc0b
table_init = 0xfc0c
elem_drop = 0xfc0d
table_copy = 0xfc0e
table_grow = 0xfc0f
table_size = 0xfc10
table_fill = 0xfc11
v128_load = 0xfd00
v128_load8x8_s = 0xfd01
v128_load8x8_u = 0xfd02
v128_load16x4_s = 0xfd03
v128_load16x4_u = 0xfd04
v128_load32x2_s = 0xfd05
v128_load32x2_u = 0xfd06
v128_load8_splat = 0xfd07
v128_load16_splat = 0xfd08
v128_load32_splat = 0xfd09
v128_load64_splat = 0xfd0a
v128_store = 0xfd0b
v128_const = 0xfd0c
i8x16_shuffle = 0xfd0d
i8x16_swizzle = 0xfd0e
i8x16_splat = 0xfd0f
i16x8_splat = 0xfd10
i32x4_splat = 0xfd11
i64x2_splat = 0xfd12
f32x4_splat = 0xfd13
f64x2_splat = 0xfd14
i8x16_extract_lane_s = 0xfd15
i8x16_extract_lane_u = 0xfd16
i8x16_replace_lane = 0xfd17
i16x8_extract_lane_s = 0xfd18
i16x8_extract_lane_u = 0xfd19
i16x8_replace_lane = 0xfd1a
i32x4_extract_lane = 0xfd1b
i32x4_replace_lane = 0xfd1c
i64x2_extract_lane = 0xfd1d
i64x2_replace_lane = 0xfd1e
f32x4_extract_lane = 0xfd1f
f32x4_replace_lane = 0xfd20
f64x2_extract_lane = 0xfd21
f64x2_replace_lane = 0xfd22
i8x16_eq = 0xfd23
i8x16_ne = 0xfd24
i8x16_lt_s = 0xfd25
i8x16_lt_u = 0xfd26
i8x16_gt_s = 0xfd27
i8x16_gt_u = 0xfd28
i8x16_le_s = 0xfd29
i8x16_le_u = 0xfd2a
i8x16_ge_s = 0xfd2b
i8x16_ge_u = 0xfd2c
i16x8_eq = 0xfd2d
i16x8_ne = 0xfd2e
i16x8_lt_s = 0xfd2f
i16x8_lt_u = 0xfd30
i16x8_gt_s = 0xfd31
i16x8_gt_u = 0xfd32
i16x8_le_s = 0xfd33
i16x8_le_u = 0xfd34
i16x8_ge_s = 0xfd35
i16x8_ge_u = 0xfd36
i32x4_eq = 0xfd37
i32x4_ne = 0xfd38
i32x4_lt_s = 0xfd39
i32x4_lt_u = 0xfd3a
i32x4_gt_s = 0xfd3b
i32x4_gt_u = 0xfd3c
i32x4_le_s = 0xfd3d
i32x4_le_u = 0xfd3e
i32x4_ge_s = 0xfd3f
i32x4_ge_u = 0xfd40
f32x4_eq = 0xfd41
f32x4_ne = 0xfd42
f32x4_lt = 0xfd43
f32x4_gt = 0xfd44
f32x4_le = 0xfd45
f32x4_ge = 0xfd46
f64x2_eq = 0xfd47
f64x2_ne = 0xfd48
f64x2_lt = 0xfd49
f64x2_gt = 0xfd4a
f64x2_le = 0xfd4b
f64x2_ge = 0xfd4c
v128_not = 0xfd4d
v128_and = 0xfd4e
v128_andnot = 0xfd4f
v128_or = 0xfd50
v128_xor = 0xfd51
v128_bitselect = 0xfd52
v128_any_true = 0xfd53
v128_load8_lane = 0xfd54
v128_load16_lane = 0xfd55
v128_load32_lane = 0xfd56
v128_load64_lane = 0xfd57
v128_store8_lane = 0xfd58
v128_store16_lane = 0xfd59
v128_store32_lane = 0xfd5a
v128_store64_lane = 0xfd5b
v128_load32_zero = 0xfd5c
v128_load64_zero = 0xfd5d
f32x4_demote_f64x2_zero = 0xfd5e
f64x2_promote_low_f32x4 = 0xfd5f
i8x16_abs = 0xfd60
i8x16_neg = 0xfd61
i8x16_popcnt = 0xfd62
i8x16_all_true = 0xfd63
i8x16_bitmask = 0xfd64
i8x16_narrow_i16x8_s = 0xfd65
i8x16_narrow_i16x8_u = 0xfd66
f32x4_ceil = 0xfd67
f32x4_floor = 0xfd68
f32x4_trunc = 0xfd69
f32x4_nearest = 0xfd6a
i8x16_shl = 0xfd6b
i8x16_shr_s = 0xfd6c
i8x16_shr_u = 0xfd6d
i8x16_add = 0xfd6e
i8x16_add_sat_s = 0xfd6f
i8x16_add_sat_u = 0xfd70
i8x16_sub = 0xfd71
i8x16_sub_sat_s = 0xfd72
i8x16_sub_sat_u = 0xfd73
f64x2_ceil = 0xfd74
f64x2_floor = 0xfd75
i8x16_min_s = 0xfd76
i8x16_min_u = 0xfd77
i8x16_max_s = 0xfd78
i8x16_max_u = 0xfd79
f64x2_trunc = 0xfd7a
i8x16_avgr_u = 0xfd7b
i16x8_extadd_pairwise_i8x16_s = 0xfd7c
i16x8_extadd_pairwise_i8x16_u = 0xfd7d
i32x4_extadd_pairwise_i16x8_s = 0xfd7e
i32x4_extadd_pairwise_i16x8_u = 0xfd7f
i16x8_abs = 0xfd8001
i16x8_neg = 0xfd8101
i16x8_q15mulr_sat_s = 0xfd8201
i16x8_all_true = 0xfd8301
i16x8_bitmask = 0xfd8401
i16x8_narrow_i32x4_s = 0xfd8501
i16x8_narrow_i32x4_u = 0xfd8601
i16x8_extend_low_i8x16_s = 0xfd8701
i16x8_extend_high_i8x16_s = 0xfd8801
i16x8_extend_low_i8x16_u = 0xfd8901
i16x8_extend_high_i8x16_u = 0xfd8a01
i16x8_shl = 0xfd8b01
i16x8_shr_s = 0xfd8c01
i16x8_shr_u = 0xfd8d01
i16x8_add = 0xfd8e01
i16x8_add_sat_s = 0xfd8f01
i16x8_add_sat_u = 0xfd9001
i16x8_sub = 0xfd9101
i16x8_sub_sat_s = 0xfd9201
i16x8_sub_sat_u = 0xfd9301
f64x2_nearest = 0xfd9401
i16x8_mul = 0xfd9501
i16x8_min_s = 0xfd9601
i16x8_min_u = 0xfd9701
i16x8_max_s = 0xfd9801
i16x8_max_u = 0xfd9901
i16x8_avgr_u = 0xfd9b01
i16x8_extmul_low_i8x16_s = 0xfd9c01
i16x8_extmul_high_i8x16_s = 0xfd9d01
i16x8_extmul_low_i8x16_u = 0xfd9e01
i16x8_extmul_high_i8x16_u = 0xfd9f01
i32x4_abs = 0xfda001
i32x4_neg = 0xfda101
i32x4_all_true = 0xfda301
i32x4_bitmask = 0xfda401
i32x4_extend_low_i16x8_s = 0xfda701
i32x4_extend_high_i16x8_s = 0xfda801
i32x4_extend_low_i16x8_u = 0xfda901
i32x4_extend_high_i16x8_u = 0xfdaa01
i32x4_shl = 0xfdab01
i32x4_shr_s = 0xfdac01
i32x4_shr_u = 0xfdad01
i32x4_add = 0xfdae01
i32x4_sub = 0xfdb101
i32x4_mul = 0xfdb501
i32x4_min_s = 0xfdb601
i32x4_min_u = 0xfdb701
i32x4_max_s = 0xfdb801
i32x4_max_u = 0xfdb901
i32x4_dot_i16x8_s = 0xfdba01
i32x4_extmul_low_i16x8_s = 0xfdbc01
i32x4_extmul_high_i16x8_s = 0xfdbd01
i32x4_extmul_low_i16x8_u = 0xfdbe01
i32x4_extmul_high_i16x8_u = 0xfdbf01
i64x2_abs = 0xfdc001
i64x2_neg = 0xfdc101
i64x2_all_true = 0xfdc301
i64x2_bitmask = 0xfdc401
i64x2_extend_low_i32x4_s = 0xfdc701
i64x2_extend_high_i32x4_s = 0xfdc801
i64x2_extend_low_i32x4_u = 0xfdc901
i64x2_extend_high_i32x4_u = 0xfdca01
i64x2_shl = 0xfdcb01
i64x2_shr_s = 0xfdcc01
i64x2_shr_u = 0xfdcd01
i64x2_add = 0xfdce01
i64x2_sub = 0xfdd101
i64x2_mul = 0xfdd501
i64x2_eq = 0xfdd601
i64x2_ne = 0xfdd701
i64x2_lt_s = 0xfdd801
i64x2_gt_s = 0xfdd901
i64x2_le_s = 0xfdda01
i64x2_ge_s = 0xfddb01
i64x2_extmul_low_i32x4_s = 0xfddc01
i64x2_extmul_high_i32x4_s = 0xfddd01
i64x2_extmul_low_i32x4_u = 0xfdde01
i64x2_extmul_high_i32x4_u = 0xfddf01
f32x4_abs = 0xfde001
f32x4_neg = 0xfde101
f32x4_sqrt = 0xfde301
f32x4_add = 0xfde401
f32x4_sub = 0xfde501
f32x4_mul = 0xfde601
f32x4_div = 0xfde701
f32x4_min = 0xfde801
f32x4_max = 0xfde901
f32x4_pmin = 0xfdea01
f32x4_pmax = 0xfdeb01
f64x2_abs = 0xfdec01
f64x2_neg = 0xfded01
f64x2_sqrt = 0xfdef01
f64x2_add = 0xfdf001
f64x2_sub = 0xfdf101
f64x2_mul = 0xfdf201
f64x2_div = 0xfdf301
f64x2_min = 0xfdf401
f64x2_max = 0xfdf501
f64x2_pmin = 0xfdf601
f64x2_pmax = 0xfdf701
i32x4_trunc_sat_f32x4_s = 0xfdf801
i32x4_trunc_sat_f32x4_u = 0xfdf901
f32x4_convert_i32x4_s = 0xfdfa01
f32x4_convert_i32x4_u = 0xfdfb01
i32x4_trunc_sat_f64x2_s_zero = 0xfdfc01
i32x4_trunc_sat_f64x2_u_zero = 0xfdfd01
f64x2_convert_low_i32x4_s = 0xfdfe01
f64x2_convert_low_i32x4_u = 0xfdff01

name: typing.Dict[int, str] = {}
name[unreachable] = 'unreachable'
name[nop] = 'nop'
name[block] = 'block'
name[loop] = 'loop'
name[if_then] = 'if'
name[else_fi] = 'else'
name[end] = 'end'
name[br] = 'br'
name[br_if] = 'br_if'
name[br_table] = 'br_table'
name[return_call] = 'return'
name[call] = 'call'
name[call_indirect] = 'call_indirect'
name[drop] = 'drop'
name[select] = 'select'
name[select_type] = 'select'
name[local_get] = 'local.get'
name[local_set] = 'local.set'
name[local_tee] = 'local.tee'
name[global_get] = 'global.get'
name[global_set] = 'global.set'
name[table_get] = 'table.get'
name[table_set] = 'table.set'
name[i32_load] = 'i32.load'
name[i64_load] = 'i64.load'
name[f32_load] = 'f32.load'
name[f64_load] = 'f64.load'
name[i32_load8_s] = 'i32.load8_s'
name[i32_load8_u] = 'i32.load8_u'
name[i32_load16_s] = 'i32.load16_s'
name[i32_load16_u] = 'i32.load16_u'
name[i64_load8_s] = 'i64.load8_s'
name[i64_load8_u] = 'i64.load8_u'
name[i64_load16_s] = 'i64.load16_s'
name[i64_load16_u] = 'i64.load16_u'
name[i64_load32_s] = 'i64.load32_s'
name[i64_load32_u] = 'i64.load32_u'
name[i32_store] = 'i32.store'
name[i64_store] = 'i64.store'
name[f32_store] = 'f32.store'
name[f64_store] = 'f64.store'
name[i32_store8] = 'i32.store8'
name[i32_store16] = 'i32.store16'
name[i64_store8] = 'i64.store8'
name[i64_store16] = 'i64.store16'
name[i64_store32] = 'i64.store32'
name[memory_size] = 'memory.size'
name[memory_grow] = 'memory.grow'
name[i32_const] = 'i32.const'
name[i64_const] = 'i64.const'
name[f32_const] = 'f32.const'
name[f64_const] = 'f64.const'
name[i32_eqz] = 'i32.eqz'
name[i32_eq] = 'i32.eq'
name[i32_ne] = 'i32.ne'
name[i32_lt_s] = 'i32.lt_s'
name[i32_lt_u] = 'i32.lt_u'
name[i32_gt_s] = 'i32.gt_s'
name[i32_gt_u] = 'i32.gt_u'
name[i32_le_s] = 'i32.le_s'
name[i32_le_u] = 'i32.le_u'
name[i32_ge_s] = 'i32.ge_s'
name[i32_ge_u] = 'i32.ge_u'
name[i64_eqz] = 'i64.eqz'
name[i64_eq] = 'i64.eq'
name[i64_ne] = 'i64.ne'
name[i64_lt_s] = 'i64.lt_s'
name[i64_lt_u] = 'i64.lt_u'
name[i64_gt_s] = 'i64.gt_s'
name[i64_gt_u] = 'i64.gt_u'
name[i64_le_s] = 'i64.le_s'
name[i64_le_u] = 'i64.le_u'
name[i64_ge_s] = 'i64.ge_s'
name[i64_ge_u] = 'i64.ge_u'
name[f32_eq] = 'f32.eq'
name[f32_ne] = 'f32.ne'
name[f32_lt] = 'f32.lt'
name[f32_gt] = 'f32.gt'
name[f32_le] = 'f32.le'
name[f32_ge] = 'f32.ge'
name[f64_eq] = 'f64.eq'
name[f64_ne] = 'f64.ne'
name[f64_lt] = 'f64.lt'
name[f64_gt] = 'f64.gt'
name[f64_le] = 'f64.le'
name[f64_ge] = 'f64.ge'
name[i32_clz] = 'i32.clz'
name[i32_ctz] = 'i32.ctz'
name[i32_popcnt] = 'i32.popcnt'
name[i32_add] = 'i32.add'
name[i32_sub] = 'i32.sub'
name[i32_mul] = 'i32.mul'
name[i32_div_s] = 'i32.div_s'
name[i32_div_u] = 'i32.div_u'
name[i32_rem_s] = 'i32.rem_s'
name[i32_rem_u] = 'i32.rem_u'
name[i32_and] = 'i32.and'
name[i32_or] = 'i32.or'
name[i32_xor] = 'i32.xor'
name[i32_shl] = 'i32.shl'
name[i32_shr_s] = 'i32.shr_s'
name[i32_shr_u] = 'i32.shr_u'
name[i32_rotl] = 'i32.rotl'
name[i32_rotr] = 'i32.rotr'
name[i64_clz] = 'i64.clz'
name[i64_ctz] = 'i64.ctz'
name[i64_popcnt] = 'i64.popcnt'
name[i64_add] = 'i64.add'
name[i64_sub] = 'i64.sub'
name[i64_mul] = 'i64.mul'
name[i64_div_s] = 'i64.div_s'
name[i64_div_u] = 'i64.div_u'
name[i64_rem_s] = 'i64.rem_s'
name[i64_rem_u] = 'i64.rem_u'
name[i64_and] = 'i64.and'
name[i64_or] = 'i64.or'
name[i64_xor] = 'i64.xor'
name[i64_shl] = 'i64.shl'
name[i64_shr_s] = 'i64.shr_s'
name[i64_shr_u] = 'i64.shr_u'
name[i64_rotl] = 'i64.rotl'
name[i64_rotr] = 'i64.rotr'
name[f32_abs] = 'f32.abs'
name[f32_neg] = 'f32.neg'
name[f32_ceil] = 'f32.ceil'
name[f32_floor] = 'f32.floor'
name[f32_trunc] = 'f32.trunc'
name[f32_nearest] = 'f32.nearest'
name[f32_sqrt] = 'f32.sqrt'
name[f32_add] = 'f32.add'
name[f32_sub] = 'f32.sub'
name[f32_mul] = 'f32.mul'
name[f32_div] = 'f32.div'
name[f32_min] = 'f32.min'
name[f32_max] = 'f32.max'
name[f32_copysign] = 'f32.copysign'
name[f64_abs] = 'f64.abs'
name[f64_neg] = 'f64.neg'
name[f64_ceil] = 'f64.ceil'
name[f64_floor] = 'f64.floor'
name[f64_trunc] = 'f64.trunc'
name[f64_nearest] = 'f64.nearest'
name[f64_sqrt] = 'f64.sqrt'
name[f64_add] = 'f64.add'
name[f64_sub] = 'f64.sub'
name[f64_mul] = 'f64.mul'
name[f64_div] = 'f64.div'
name[f64_min] = 'f64.min'
name[f64_max] = 'f64.max'
name[f64_copysign] = 'f64.copysign'
name[i32_wrap_i64] = 'i32.wrap_i64'
name[i32_trunc_f32_s] = 'i32.trunc_f32_s'
name[i32_trunc_f32_u] = 'i32.trunc_f32_u'
name[i32_trunc_f64_s] = 'i32.trunc_f64_s'
name[i32_trunc_f64_u] = 'i32.trunc_f64_u'
name[i64_extend_i32_s] = 'i64.extend_i32_s'
name[i64_extend_i32_u] = 'i64.extend_i32_u'
name[i64_trunc_f32_s] = 'i64.trunc_f32_s'
name[i64_trunc_f32_u] = 'i64.trunc_f32_u'
name[i64_trunc_f64_s] = 'i64.trunc_f64_s'
name[i64_trunc_f64_u] = 'i64.trunc_f64_u'
name[f32_convert_i32_s] = 'f32.convert_i32_s'
name[f32_convert_i32_u] = 'f32.convert_i32_u'
name[f32_convert_i64_s] = 'f32.convert_i64_s'
name[f32_convert_i64_u] = 'f32.convert_i64_u'
name[f32_demote_f64] = 'f32.demote_f64'
name[f64_convert_i32_s] = 'f64.convert_i32_s'
name[f64_convert_i32_u] = 'f64.convert_i32_u'
name[f64_convert_i64_s] = 'f64.convert_i64_s'
name[f64_convert_i64_u] = 'f64.convert_i64_u'
name[f64_promote_f32] = 'f64.promote_f32'
name[i32_reinterpret_f32] = 'i32.reinterpret_f32'
name[i64_reinterpret_f64] = 'i64.reinterpret_f64'
name[f32_reinterpret_i32] = 'f32.reinterpret_i32'
name[f64_reinterpret_i64] = 'f64.reinterpret_i64'
name[i32_extend8_s] = 'i32.extend8_s'
name[i32_extend16_s] = 'i32.extend16_s'
name[i64_extend8_s] = 'i64.extend8_s'
name[i64_extend16_s] = 'i64.extend16_s'
name[i64_extend32_s] = 'i64.extend32_s'
name[ref_null] = 'ref.null'
name[ref_is_null] = 'ref.is_null'
name[ref_func] = 'ref.func'
name[i32_trunc_sat_f32_s] = 'i32.trunc_sat_f32_s'
name[i32_trunc_sat_f32_u] = 'i32.trunc_sat_f32_u'
name[i32_trunc_sat_f64_s] = 'i32.trunc_sat_f64_s'
name[i32_trunc_sat_f64_u] = 'i32.trunc_sat_f64_u'
name[i64_trunc_sat_f32_s] = 'i64.trunc_sat_f32_s'
name[i64_trunc_sat_f32_u] = 'i64.trunc_sat_f32_u'
name[i64_trunc_sat_f64_s] = 'i64.trunc_sat_f64_s'
name[i64_trunc_sat_f64_u] = 'i64.trunc_sat_f64_u'
name[memory_init] = 'memory.init'
name[data_drop] = 'data.drop'
name[memory_copy] = 'memory.copy'
name[memory_fill] = 'memory.fill'
name[table_init] = 'table.init'
name[elem_drop] = 'elem.drop'
name[table_copy] = 'table.copy'
name[table_grow] = 'table.grow'
name[table_size] = 'table.size'
name[table_fill] = 'table.fill'
name[v128_load] = 'v128.load'
name[v128_load8x8_s] = 'v128.load8x8_s'
name[v128_load8x8_u] = 'v128.load8x8_u'
name[v128_load16x4_s] = 'v128.load16x4_s'
name[v128_load16x4_u] = 'v128.load16x4_u'
name[v128_load32x2_s] = 'v128.load32x2_s'
name[v128_load32x2_u] = 'v128.load32x2_u'
name[v128_load8_splat] = 'v128.load8_splat'
name[v128_load16_splat] = 'v128.load16_splat'
name[v128_load32_splat] = 'v128.load32_splat'
name[v128_load64_splat] = 'v128.load64_splat'
name[v128_store] = 'v128.store'
name[v128_const] = 'v128.const'
name[i8x16_shuffle] = 'i8x16.shuffle'
name[i8x16_swizzle] = 'i8x16.swizzle'
name[i8x16_splat] = 'i8x16.splat'
name[i16x8_splat] = 'i16x8.splat'
name[i32x4_splat] = 'i32x4.splat'
name[i64x2_splat] = 'i64x2.splat'
name[f32x4_splat] = 'f32x4.splat'
name[f64x2_splat] = 'f64x2.splat'
name[i8x16_extract_lane_s] = 'i8x16.extract_lane_s'
name[i8x16_extract_lane_u] = 'i8x16.extract_lane_u'
name[i8x16_replace_lane] = 'i8x16.replace_lane'
name[i16x8_extract_lane_s] = 'i16x8.extract_lane_s'
name[i16x8_extract_lane_u] = 'i16x8.extract_lane_u'
name[i16x8_replace_lane] = 'i16x8.replace_lane'
name[i32x4_extract_lane] = 'i32x4.extract_lane'
name[i32x4_replace_lane] = 'i32x4.replace_lane'
name[i64x2_extract_lane] = 'i64x2.extract_lane'
name[i64x2_replace_lane] = 'i64x2.replace_lane'
name[f32x4_extract_lane] = 'f32x4.extract_lane'
name[f32x4_replace_lane] = 'f32x4.replace_lane'
name[f64x2_extract_lane] = 'f64x2.extract_lane'
name[f64x2_replace_lane] = 'f64x2.replace_lane'
name[i8x16_eq] = 'i8x16.eq'
name[i8x16_ne] = 'i8x16.ne'
name[i8x16_lt_s] = 'i8x16.lt_s'
name[i8x16_lt_u] = 'i8x16.lt_u'
name[i8x16_gt_s] = 'i8x16.gt_s'
name[i8x16_gt_u] = 'i8x16.gt_u'
name[i8x16_le_s] = 'i8x16.le_s'
name[i8x16_le_u] = 'i8x16.le_u'
name[i8x16_ge_s] = 'i8x16.ge_s'
name[i8x16_ge_u] = 'i8x16.ge_u'
name[i16x8_eq] = 'i16x8.eq'
name[i16x8_ne] = 'i16x8.ne'
name[i16x8_lt_s] = 'i16x8.lt_s'
name[i16x8_lt_u] = 'i16x8.lt_u'
name[i16x8_gt_s] = 'i16x8.gt_s'
name[i16x8_gt_u] = 'i16x8.gt_u'
name[i16x8_le_s] = 'i16x8.le_s'
name[i16x8_le_u] = 'i16x8.le_u'
name[i16x8_ge_s] = 'i16x8.ge_s'
name[i16x8_ge_u] = 'i16x8.ge_u'
name[i32x4_eq] = 'i32x4.eq'
name[i32x4_ne] = 'i32x4.ne'
name[i32x4_lt_s] = 'i32x4.lt_s'
name[i32x4_lt_u] = 'i32x4.lt_u'
name[i32x4_gt_s] = 'i32x4.gt_s'
name[i32x4_gt_u] = 'i32x4.gt_u'
name[i32x4_le_s] = 'i32x4.le_s'
name[i32x4_le_u] = 'i32x4.le_u'
name[i32x4_ge_s] = 'i32x4.ge_s'
name[i32x4_ge_u] = 'i32x4.ge_u'
name[f32x4_eq] = 'f32x4.eq'
name[f32x4_ne] = 'f32x4.ne'
name[f32x4_lt] = 'f32x4.lt'
name[f32x4_gt] = 'f32x4.gt'
name[f32x4_le] = 'f32x4.le'
name[f32x4_ge] = 'f32x4.ge'
name[f64x2_eq] = 'f64x2.eq'
name[f64x2_ne] = 'f64x2.ne'
name[f64x2_lt] = 'f64x2.lt'
name[f64x2_gt] = 'f64x2.gt'
name[f64x2_le] = 'f64x2.le'
name[f64x2_ge] = 'f64x2.ge'
name[v128_not] = 'v128.not'
name[v128_and] = 'v128.and'
name[v128_andnot] = 'v128.andnot'
name[v128_or] = 'v128.or'
name[v128_xor] = 'v128.xor'
name[v128_bitselect] = 'v128.bitselect'
name[v128_any_true] = 'v128.any_true'
name[v128_load8_lane] = 'v128.load8_lane'
name[v128_load16_lane] = 'v128.load16_lane'
name[v128_load32_lane] = 'v128.load32_lane'
name[v128_load64_lane] = 'v128.load64_lane'
name[v128_store8_lane] = 'v128.store8_lane'
name[v128_store16_lane] = 'v128.store16_lane'
name[v128_store32_lane] = 'v128.store32_lane'
name[v128_store64_lane] = 'v128.store64_lane'
name[v128_load32_zero] = 'v128.load32_zero'
name[v128_load64_zero] = 'v128.load64_zero'
name[f32x4_demote_f64x2_zero] = 'f32x4.demote_f64x2_zero'
name[f64x2_promote_low_f32x4] = 'f64x2.promote_low_f32x4'
name[i8x16_abs] = 'i8x16.abs'
name[i8x16_neg] = 'i8x16.neg'
name[i8x16_popcnt] = 'i8x16.popcnt'
name[i8x16_all_true] = 'i8x16.all_true'
name[i8x16_bitmask] = 'i8x16.bitmask'
name[i8x16_narrow_i16x8_s] = 'i8x16.narrow_i16x8_s'
name[i8x16_narrow_i16x8_u] = 'i8x16.narrow_i16x8_u'
name[f32x4_ceil] = 'f32x4.ceil'
name[f32x4_floor] = 'f32x4.floor'
name[f32x4_trunc] = 'f32x4.trunc'
name[f32x4_nearest] = 'f32x4.nearest'
name[i8x16_shl] = 'i8x16.shl'
name[i8x16_shr_s] = 'i8x16.shr_s'
name[i8x16_shr_u] = 'i8x16.shr_u'
name[i8x16_add] = 'i8x16.add'
name[i8x16_add_sat_s] = 'i8x16.add_sat_s'
name[i8x16_add_sat_u] = 'i8x16.add_sat_u'
name[i8x16_sub] = 'i8x16.sub'
name[i8x16_sub_sat_s] = 'i8x16.sub_sat_s'
name[i8x16_sub_sat_u] = 'i8x16.sub_sat_u'
name[f64x2_ceil] = 'f64x2.ceil'
name[f64x2_floor] = 'f64x2.floor'
name[i8x16_min_s] = 'i8x16.min_s'
name[i8x16_min_u] = 'i8x16.min_u'
name[i8x16_max_s] = 'i8x16.max_s'
name[i8x16_max_u] = 'i8x16.max_u'
name[f64x2_trunc] = 'f64x2.trunc'
name[i8x16_avgr_u] = 'i8x16.avgr_u'
name[i16x8_extadd_pairwise_i8x16_s] = 'i16x8.extadd_pairwise_i8x16_s'
name[i16x8_extadd_pairwise_i8x16_u] = 'i16x8.extadd_pairwise_i8x16_u'
name[i32x4_extadd_pairwise_i16x8_s] = 'i32x4.extadd_pairwise_i16x8_s'
name[i32x4_extadd_pairwise_i16x8_u] = 'i32x4.extadd_pairwise_i16x8_u'
name[i16x8_abs] = 'i16x8.abs'
name[i16x8_neg] = 'i16x8.neg'
name[i16x8_q15mulr_sat_s] = 'i16x8.q15mulr_sat_s'
name[i16x8_all_true] = 'i16x8.all_true'
name[i16x8_bitmask] = 'i16x8.bitmask'
name[i16x8_narrow_i32x4_s] = 'i16x8.narrow_i32x4_s'
name[i16x8_narrow_i32x4_u] = 'i16x8.narrow_i32x4_u'
name[i16x8_extend_low_i8x16_s] = 'i16x8.extend_low_i8x16_s'
name[i16x8_extend_high_i8x16_s] = 'i16x8.extend_high_i8x16_s'
name[i16x8_extend_low_i8x16_u] = 'i16x8.extend_low_i8x16_u'
name[i16x8_extend_high_i8x16_u] = 'i16x8.extend_high_i8x16_u'
name[i16x8_shl] = 'i16x8.shl'
name[i16x8_shr_s] = 'i16x8.shr_s'
name[i16x8_shr_u] = 'i16x8.shr_u'
name[i16x8_add] = 'i16x8.add'
name[i16x8_add_sat_s] = 'i16x8.add_sat_s'
name[i16x8_add_sat_u] = 'i16x8.add_sat_u'
name[i16x8_sub] = 'i16x8.sub'
name[i16x8_sub_sat_s] = 'i16x8.sub_sat_s'
name[i16x8_sub_sat_u] = 'i16x8.sub_sat_u'
name[f64x2_nearest] = 'f64x2.nearest'
name[i16x8_mul] = 'i16x8.mul'
name[i16x8_min_s] = 'i16x8.min_s'
name[i16x8_min_u] = 'i16x8.min_u'
name[i16x8_max_s] = 'i16x8.max_s'
name[i16x8_max_u] = 'i16x8.max_u'
name[i16x8_avgr_u] = 'i16x8.avgr_u'
name[i16x8_extmul_low_i8x16_s] = 'i16x8.extmul_low_i8x16_s'
name[i16x8_extmul_high_i8x16_s] = 'i16x8.extmul_high_i8x16_s'
name[i16x8_extmul_low_i8x16_u] = 'i16x8.extmul_low_i8x16_u'
name[i16x8_extmul_high_i8x16_u] = 'i16x8.extmul_high_i8x16_u'
name[i32x4_abs] = 'i32x4.abs'
name[i32x4_neg] = 'i32x4.neg'
name[i32x4_all_true] = 'i32x4.all_true'
name[i32x4_bitmask] = 'i32x4.bitmask'
name[i32x4_extend_low_i16x8_s] = 'i32x4.extend_low_i16x8_s'
name[i32x4_extend_high_i16x8_s] = 'i32x4.extend_high_i16x8_s'
name[i32x4_extend_low_i16x8_u] = 'i32x4.extend_low_i16x8_u'
name[i32x4_extend_high_i16x8_u] = 'i32x4.extend_high_i16x8_u'
name[i32x4_shl] = 'i32x4.shl'
name[i32x4_shr_s] = 'i32x4.shr_s'
name[i32x4_shr_u] = 'i32x4.shr_u'
name[i32x4_add] = 'i32x4.add'
name[i32x4_sub] = 'i32x4.sub'
name[i32x4_mul] = 'i32x4.mul'
name[i32x4_min_s] = 'i32x4.min_s'
name[i32x4_min_u] = 'i32x4.min_u'
name[i32x4_max_s] = 'i32x4.max_s'
name[i32x4_max_u] = 'i32x4.max_u'
name[i32x4_dot_i16x8_s] = 'i32x4.dot_i16x8_s'
name[i32x4_extmul_low_i16x8_s] = 'i32x4.extmul_low_i16x8_s'
name[i32x4_extmul_high_i16x8_s] = 'i32x4.extmul_high_i16x8_s'
name[i32x4_extmul_low_i16x8_u] = 'i32x4.extmul_low_i16x8_u'
name[i32x4_extmul_high_i16x8_u] = 'i32x4.extmul_high_i16x8_u'
name[i64x2_abs] = 'i64x2.abs'
name[i64x2_neg] = 'i64x2.neg'
name[i64x2_all_true] = 'i64x2.all_true'
name[i64x2_bitmask] = 'i64x2.bitmask'
name[i64x2_extend_low_i32x4_s] = 'i64x2.extend_low_i32x4_s'
name[i64x2_extend_high_i32x4_s] = 'i64x2.extend_high_i32x4_s'
name[i64x2_extend_low_i32x4_u] = 'i64x2.extend_low_i32x4_u'
name[i64x2_extend_high_i32x4_u] = 'i64x2.extend_high_i32x4_u'
name[i64x2_shl] = 'i64x2.shl'
name[i64x2_shr_s] = 'i64x2.shr_s'
name[i64x2_shr_u] = 'i64x2.shr_u'
name[i64x2_add] = 'i64x2.add'
name[i64x2_sub] = 'i64x2.sub'
name[i64x2_mul] = 'i64x2.mul'
name[i64x2_eq] = 'i64x2.eq'
name[i64x2_ne] = 'i64x2.ne'
name[i64x2_lt_s] = 'i64x2.lt_s'
name[i64x2_gt_s] = 'i64x2.gt_s'
name[i64x2_le_s] = 'i64x2.le_s'
name[i64x2_ge_s] = 'i64x2.ge_s'
name[i64x2_extmul_low_i32x4_s] = 'i64x2.extmul_low_i32x4_s'
name[i64x2_extmul_high_i32x4_s] = 'i64x2.extmul_high_i32x4_s'
name[i64x2_extmul_low_i32x4_u] = 'i64x2.extmul_low_i32x4_u'
name[i64x2_extmul_high_i32x4_u] = 'i64x2.extmul_high_i32x4_u'
name[f32x4_abs] = 'f32x4.abs'
name[f32x4_neg] = 'f32x4.neg'
name[f32x4_sqrt] = 'f32x4.sqrt'
name[f32x4_add] = 'f32x4.add'
name[f32x4_sub] = 'f32x4.sub'
name[f32x4_mul] = 'f32x4.mul'
name[f32x4_div] = 'f32x4.div'
name[f32x4_min] = 'f32x4.min'
name[f32x4_max] = 'f32x4.max'
name[f32x4_pmin] = 'f32x4.pmin'
name[f32x4_pmax] = 'f32x4.pmax'
name[f64x2_abs] = 'f64x2.abs'
name[f64x2_neg] = 'f64x2.neg'
name[f64x2_sqrt] = 'f64x2.sqrt'
name[f64x2_add] = 'f64x2.add'
name[f64x2_sub] = 'f64x2.sub'
name[f64x2_mul] = 'f64x2.mul'
name[f64x2_div] = 'f64x2.div'
name[f64x2_min] = 'f64x2.min'
name[f64x2_max] = 'f64x2.max'
name[f64x2_pmin] = 'f64x2.pmin'
name[f64x2_pmax] = 'f64x2.pmax'
name[i32x4_trunc_sat_f32x4_s] = 'i32x4.trunc_sat_f32x4_s'
name[i32x4_trunc_sat_f32x4_u] = 'i32x4.trunc_sat_f32x4_u'
name[f32x4_convert_i32x4_s] = 'f32x4.convert_i32x4_s'
name[f32x4_convert_i32x4_u] = 'f32x4.convert_i32x4_u'
name[i32x4_trunc_sat_f64x2_s_zero] = 'i32x4.trunc_sat_f64x2_s_zero'
name[i32x4_trunc_sat_f64x2_u_zero] = 'i32x4.trunc_sat_f64x2_u_zero'
name[f64x2_convert_low_i32x4_s] = 'f64x2.convert_low_i32x4_s'
name[f64x2_convert_low_i32x4_u] = 'f64x2.convert_low_i32x4_u'
