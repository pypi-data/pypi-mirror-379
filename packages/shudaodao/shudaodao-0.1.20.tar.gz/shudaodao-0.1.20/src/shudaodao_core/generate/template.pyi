from ..utils.core_utils import CoreUtil as CoreUtil
from .config import GeneratorConfig as GeneratorConfig
from .meta_column import MetaColumn as MetaColumn
from .meta_table import MetaTable as MetaTable
from .meta_view import MetaView as MetaView
from _typeshed import Incomplete

class TemplateBuilder:
    default_factory: bool
    output: Incomplete
    def __init__(self, *, config: GeneratorConfig) -> None: ...
    @classmethod
    def format_column_base(cls, column: MetaColumn) -> str: ...
    @classmethod
    def format_column_table(cls, column: MetaColumn) -> str: ...
    @classmethod
    def format_column_response(cls, column: MetaColumn) -> str: ...
    @classmethod
    def format_column(cls, column: MetaColumn) -> str: ...
    def render_template_table_class(self, *, meta_model: MetaTable, template_name: str, child_path=...): ...
    def get_table_meta(self, table_name, schema_name) -> MetaTable: ...
    def get_view_meta(self, view_name, schema_name) -> MetaView: ...
    def get_table_names(self, *, schema_name): ...
    def get_view_names(self, *, schema_name): ...
    def get_schema_names(self): ...
