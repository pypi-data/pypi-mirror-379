[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "agentrylab"
version = "0.2.0"
description = "Lightweight, hackable multi-agent orchestration lab (CLI + Python) with transcripts, checkpoints, budgets, and pluggable providers/tools."
readme = "README.md"
requires-python = ">=3.11"
authors = [{ name = "Alexey Kislitsin" }]
license = "MIT"  # <-- SPDX string, not a table

keywords = [
    "multi-agent", "llm", "ai-agents", "agent-orchestration", "python", 
    "yaml-config", "cli-tool", "research", "experimentation", "ai-development", 
    "openai", "ollama", "llama3", "transcripts", "checkpoints", 
    "streaming", "hackable", "lightweight", "lab", "workflow-engine"
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
]

dependencies = [
  "pydantic>=2.7",
  "pyyaml>=6.0.1",
  "httpx>=0.27.0",
  "jsonschema>=4.22.0",
  "typer>=0.12.3",
  "rich>=13.7.1",
  "ddgs>=1.8.0",
  "wolframalpha>=5.0.0",
  "python-dotenv>=1.0.1"
]

[project.urls]
Homepage = "https://github.com/Alexeyisme/agentrylab"
Repository = "https://github.com/Alexeyisme/agentrylab"
Documentation = "https://github.com/Alexeyisme/agentrylab/tree/main/src/agentrylab/docs"
Issues = "https://github.com/Alexeyisme/agentrylab/issues"

[project.optional-dependencies]
dev = [
  "pytest>=8.3.2",
  "pytest-asyncio>=0.24.0",
  "pytest-cov>=5.0.0",
  "mypy>=1.11.1",
  "ruff>=0.6.9",
  "pyright>=1.1.381",
  "types-PyYAML>=6.0.12.20240808",
  "types-jsonschema>=4.23.0.20240813",
]

[project.scripts]
agentrylab = "agentrylab.cli.app:main"

[tool.setuptools]
package-dir = {"" = "src"}  # <-- src layout
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
include = ["agentrylab*"]

[tool.setuptools.package-data]
"agentrylab.presets" = ["*.yaml"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-q"
testpaths = ["tests"]
asyncio_mode = "auto"

[tool.mypy]
python_version = "3.11"
strict = true
warn_unused_ignores = true
warn_return_any = true
warn_redundant_casts = true
disallow_any_generics = true
no_implicit_optional = true
pretty = true
exclude = ["^build/"]

[tool.ruff]
line-length = 100
src = ["src", "tests"]

[tool.ruff.lint]
select = ["E"]
ignore = ["E203", "E402", "E501"]

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["E501"]
"api_quick_reference.py" = ["F401", "F841", "F541", "I001"]
"comprehensive_demo.py" = ["F401", "F841", "F541", "I001"]
"demo_agentrylab_api.py" = ["F401", "UP035", "UP006", "F541", "I001"]
"simple_demo.py" = ["F401", "F841", "I001"]

[tool.ruff.lint.isort]
known-first-party = ["agentrylab"]

[tool.coverage.run]
branch = true
source = ["agentrylab"]
omit = [
  "agentrylab/cli/*",
  "agentrylab/persistence/checkpoints/postgres.py",
  "agentrylab/runtime/providers/ollama.py",
  "agentrylab/runtime/providers/openai.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
fail_under = 40
exclude_lines = [
  "pragma: no cover",
  "if __name__ == .__main__.:",
]
