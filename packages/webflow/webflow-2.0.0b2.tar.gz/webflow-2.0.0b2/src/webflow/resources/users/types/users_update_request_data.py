# This file was auto-generated by Fern from our API Definition.

from ....core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ....core.serialization import FieldMetadata
from ....core.pydantic_utilities import IS_PYDANTIC_V2


class UsersUpdateRequestData(UniversalBaseModel):
    name: typing.Optional[str] = pydantic.Field(default=None)
    """
    The name of the user
    """

    accept_privacy: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="accept-privacy")] = (
        pydantic.Field(default=None)
    )
    """
    Boolean indicating if the user has accepted the privacy policy
    """

    accept_communications: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="accept-communications")
    ] = pydantic.Field(default=None)
    """
    Boolean indicating if the user has accepted to receive communications
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
