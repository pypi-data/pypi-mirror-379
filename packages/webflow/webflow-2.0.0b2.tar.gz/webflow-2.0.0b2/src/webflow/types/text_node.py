# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .text_node_text import TextNodeText
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class TextNode(UniversalBaseModel):
    """
    Represents text content within the DOM. It contains both the raw text and its HTML representation. Additional attributes can be associated with the text for styling or other purposes.
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Node UUID
    """

    text: typing.Optional[TextNodeText] = None
    attributes: typing.Optional[typing.Dict[str, str]] = pydantic.Field(default=None)
    """
    The custom attributes of the node
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
