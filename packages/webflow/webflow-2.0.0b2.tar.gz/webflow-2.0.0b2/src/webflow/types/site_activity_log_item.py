# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import typing_extensions
import datetime as dt
from ..core.serialization import FieldMetadata
from .site_activity_log_item_event import SiteActivityLogItemEvent
from .site_activity_log_item_resource_operation import SiteActivityLogItemResourceOperation
from .site_activity_log_item_user import SiteActivityLogItemUser
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class SiteActivityLogItem(UniversalBaseModel):
    id: typing.Optional[str] = None
    created_on: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createdOn")] = None
    last_updated: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastUpdated")] = None
    event: typing.Optional[SiteActivityLogItemEvent] = None
    resource_operation: typing_extensions.Annotated[
        typing.Optional[SiteActivityLogItemResourceOperation], FieldMetadata(alias="resourceOperation")
    ] = None
    user: typing.Optional[SiteActivityLogItemUser] = None
    resource_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="resourceId")] = None
    resource_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="resourceName")] = None
    new_value: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="newValue")] = None
    previous_value: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="previousValue")] = None
    payload: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
