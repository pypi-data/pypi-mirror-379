# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
import typing_extensions
import datetime as dt
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Domain(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for the Domain
    """

    url: typing.Optional[str] = pydantic.Field(default=None)
    """
    The registered Domain name
    """

    last_published: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastPublished")] = (
        pydantic.Field(default=None)
    )
    """
    The date the custom domain was last published to
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
