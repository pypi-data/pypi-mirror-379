# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
import datetime as dt
from .form_field import FormField
from .form_response_settings import FormResponseSettings
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Form(UniversalBaseModel):
    """
    A Webflow form
    """

    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = (
        pydantic.Field(default=None)
    )
    """
    The Form name displayed on the site
    """

    created_on: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createdOn")] = (
        pydantic.Field(default=None)
    )
    """
    Date that the Form was created on
    """

    last_updated: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastUpdated")] = (
        pydantic.Field(default=None)
    )
    """
    Date that the Form was last updated on
    """

    fields: typing.Optional[FormField] = pydantic.Field(default=None)
    """
    A collection of form field objects
    """

    response_settings: typing_extensions.Annotated[
        typing.Optional[FormResponseSettings], FieldMetadata(alias="responseSettings")
    ] = pydantic.Field(default=None)
    """
    Settings for form responses
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    The unique ID for the Form
    """

    site_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="siteId")] = pydantic.Field(
        default=None
    )
    """
    The unique ID of the Site the Form belongs to
    """

    site_domain_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="siteDomainId")] = (
        pydantic.Field(default=None)
    )
    """
    The unique ID corresponding to the site's Domain name
    """

    page_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="pageId")] = pydantic.Field(
        default=None
    )
    """
    The unique ID for the Page on which the Form is placed
    """

    page_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="pageName")] = pydantic.Field(
        default=None
    )
    """
    The user-visible name of the Page where the Form is placed
    """

    form_element_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="formElementId")] = (
        pydantic.Field(default=None)
    )
    """
    The unique ID of the Form element
    """

    workspace_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="workspaceId")] = (
        pydantic.Field(default=None)
    )
    """
    The unique ID of the Workspace the Site belongs to
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
