# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .user import User
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UserList(UniversalBaseModel):
    """
    The list users results
    """

    count: typing.Optional[float] = pydantic.Field(default=None)
    """
    Number of users returned
    """

    limit: typing.Optional[float] = pydantic.Field(default=None)
    """
    The limit specified in the request
    """

    offset: typing.Optional[float] = pydantic.Field(default=None)
    """
    The offset specified for pagination
    """

    total: typing.Optional[float] = pydantic.Field(default=None)
    """
    Total number of users in the collection
    """

    users: typing.Optional[typing.List[User]] = pydantic.Field(default=None)
    """
    List of Users for a Site
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
