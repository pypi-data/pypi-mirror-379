# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2
import typing


class TextNodeWrite(UniversalBaseModel):
    """
    Update a text node
    """

    node_id: typing_extensions.Annotated[str, FieldMetadata(alias="nodeId")] = pydantic.Field()
    """
    Node UUID
    """

    text: str = pydantic.Field()
    """
    HTML content of the node, including the HTML tag. The HTML tags must be the same as what's returned from the Get Content endpoint.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
