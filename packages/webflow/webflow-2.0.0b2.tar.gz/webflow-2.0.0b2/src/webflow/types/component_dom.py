# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import pydantic
from .node import Node
from .pagination import Pagination
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ComponentDom(UniversalBaseModel):
    """
    The Component DOM schema represents the content structure of a component. Similar to Page DOM, it captures various content nodes and their associated attributes, but specifically for a component's structure. Each node has a unique identifier and  can contain text, images, or nested component instances.
    """

    component_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="componentId")] = (
        pydantic.Field(default=None)
    )
    """
    Component ID
    """

    nodes: typing.Optional[typing.List[Node]] = None
    pagination: typing.Optional[Pagination] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
