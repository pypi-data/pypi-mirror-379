# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
from .user_access_groups_item_type import UserAccessGroupsItemType
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class UserAccessGroupsItem(UniversalBaseModel):
    """
    Access group slugs and types
    """

    slug: typing.Optional[str] = pydantic.Field(default=None)
    """
    Access group identifier for APIs
    """

    type: typing.Optional[UserAccessGroupsItemType] = pydantic.Field(default=None)
    """
    The type of access group based on how it was assigned to the user.
    * `admin` - Assigned to the user via API or in the designer
    * `ecommerce` - Assigned to the user via an ecommerce purchase
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
