# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from .order_price import OrderPrice
from ..core.serialization import FieldMetadata
from .order_purchased_item_variant_image import OrderPurchasedItemVariantImage
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class OrderPurchasedItem(UniversalBaseModel):
    """
    An Item that was purchased
    """

    count: typing.Optional[float] = pydantic.Field(default=None)
    """
    Number of Item purchased.
    """

    row_total: typing_extensions.Annotated[typing.Optional[OrderPrice], FieldMetadata(alias="rowTotal")] = (
        pydantic.Field(default=None)
    )
    """
    The total for the row
    """

    product_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="productId")] = pydantic.Field(
        default=None
    )
    """
    The unique identifier for the Product
    """

    product_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="productName")] = (
        pydantic.Field(default=None)
    )
    """
    User-facing name of the Product
    """

    product_slug: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="productSlug")] = (
        pydantic.Field(default=None)
    )
    """
    Slug for the Product
    """

    variant_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="variantId")] = pydantic.Field(
        default=None
    )
    """
    Identifier for the Product Variant (SKU)
    """

    variant_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="variantName")] = (
        pydantic.Field(default=None)
    )
    """
    User-facing name of the Product Variant (SKU)
    """

    variant_slug: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="variantSlug")] = (
        pydantic.Field(default=None)
    )
    """
    Slug for the Product Variant (SKU)
    """

    variant_sku: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="variantSKU")] = pydantic.Field(
        default=None
    )
    """
    The user-defined custom SKU of the Product Variant (SKU)
    """

    variant_image: typing_extensions.Annotated[
        typing.Optional[OrderPurchasedItemVariantImage], FieldMetadata(alias="variantImage")
    ] = None
    variant_price: typing_extensions.Annotated[typing.Optional[OrderPrice], FieldMetadata(alias="variantPrice")] = (
        pydantic.Field(default=None)
    )
    """
    The price corresponding to the variant
    """

    weight: typing.Optional[float] = pydantic.Field(default=None)
    """
    The physical weight of the variant if provided, or null
    """

    width: typing.Optional[float] = pydantic.Field(default=None)
    """
    The physical width of the variant if provided, or null
    """

    height: typing.Optional[float] = pydantic.Field(default=None)
    """
    The physical height of the variant if provided, or null
    """

    length: typing.Optional[float] = pydantic.Field(default=None)
    """
    The physical length of the variant if provided, or null
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
