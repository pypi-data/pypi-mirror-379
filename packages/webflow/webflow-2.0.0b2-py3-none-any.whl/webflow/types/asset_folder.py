# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class AssetFolder(UniversalBaseModel):
    """
    Asset Folder details
    """

    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Unique identifier for the Asset Folder
    """

    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = (
        pydantic.Field(default=None)
    )
    """
    User visible name for the Asset Folder
    """

    parent_folder: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="parentFolder")] = (
        pydantic.Field(default=None)
    )
    """
    Pointer to parent Asset Folder (or null if root)
    """

    assets: typing.Optional[typing.List[str]] = pydantic.Field(default=None)
    """
    Array of Asset instances in the folder
    """

    site_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="siteId")] = pydantic.Field(
        default=None
    )
    """
    The unique ID of the site the Asset Folder belongs to
    """

    created_on: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createdOn")] = (
        pydantic.Field(default=None)
    )
    """
    Date that the Asset Folder was created on
    """

    last_updated: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastUpdated")] = (
        pydantic.Field(default=None)
    )
    """
    Date that the Asset Folder was last updated on
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
