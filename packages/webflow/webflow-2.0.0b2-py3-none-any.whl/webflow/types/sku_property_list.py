# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
from .sku_property_list_enum_item import SkuPropertyListEnumItem
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class SkuPropertyList(UniversalBaseModel):
    """
    A variant/option type for a SKU
    """

    id: str = pydantic.Field()
    """
    Unique identifier for a collection of Product Variants
    """

    name: str = pydantic.Field()
    """
    Name of the collection of Product Variants
    """

    enum: typing.List[SkuPropertyListEnumItem] = pydantic.Field()
    """
    The individual Product variants that are contained within the collection
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
