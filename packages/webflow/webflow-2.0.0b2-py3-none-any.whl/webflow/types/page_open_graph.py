# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing
import pydantic
import typing_extensions
from ..core.serialization import FieldMetadata
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class PageOpenGraph(UniversalBaseModel):
    """
    Open Graph fields for the Page
    """

    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    The title supplied to Open Graph annotations
    """

    title_copied: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="titleCopied")] = (
        pydantic.Field(default=None)
    )
    """
    Indicates the Open Graph title was copied from the SEO title
    """

    description: typing.Optional[str] = pydantic.Field(default=None)
    """
    The description supplied to Open Graph annotations
    """

    description_copied: typing_extensions.Annotated[typing.Optional[bool], FieldMetadata(alias="descriptionCopied")] = (
        pydantic.Field(default=None)
    )
    """
    Indicates the Open Graph description was copied from the SEO description
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
