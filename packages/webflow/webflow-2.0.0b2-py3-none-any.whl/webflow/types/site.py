# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing_extensions
import typing
from ..core.serialization import FieldMetadata
import datetime as dt
from .domain import Domain
from .locales import Locales
from .site_data_collection_type import SiteDataCollectionType
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Site(UniversalBaseModel):
    id: str = pydantic.Field()
    """
    Unique identifier for the Site
    """

    workspace_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="workspaceId")] = (
        pydantic.Field(default=None)
    )
    """
    Unique identifier for the Workspace
    """

    created_on: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="createdOn")] = (
        pydantic.Field(default=None)
    )
    """
    Date the Site was created
    """

    display_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="displayName")] = (
        pydantic.Field(default=None)
    )
    """
    Name given to Site
    """

    short_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="shortName")] = pydantic.Field(
        default=None
    )
    """
    Slugified version of name
    """

    last_published: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastPublished")] = (
        pydantic.Field(default=None)
    )
    """
    Date the Site was last published
    """

    last_updated: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="lastUpdated")] = (
        pydantic.Field(default=None)
    )
    """
    Date the Site was last updated
    """

    preview_url: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="previewUrl")] = pydantic.Field(
        default=None
    )
    """
    URL of a generated image for the given Site
    """

    time_zone: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="timeZone")] = pydantic.Field(
        default=None
    )
    """
    Site timezone set under Site Settings
    """

    parent_folder_id: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="parentFolderId")] = (
        pydantic.Field(default=None)
    )
    """
    The ID of the parent folder the Site exists in
    """

    custom_domains: typing_extensions.Annotated[
        typing.Optional[typing.List[Domain]], FieldMetadata(alias="customDomains")
    ] = None
    locales: typing.Optional[Locales] = None
    data_collection_enabled: typing_extensions.Annotated[
        typing.Optional[bool], FieldMetadata(alias="dataCollectionEnabled")
    ] = pydantic.Field(default=None)
    """
    Indicates if data collection is enabled for the site.
    """

    data_collection_type: typing_extensions.Annotated[
        typing.Optional[SiteDataCollectionType], FieldMetadata(alias="dataCollectionType")
    ] = pydantic.Field(default=None)
    """
    The type of data collection enabled for the site.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
