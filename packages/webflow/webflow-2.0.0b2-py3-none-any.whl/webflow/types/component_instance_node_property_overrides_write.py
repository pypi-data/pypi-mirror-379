# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ..core.serialization import FieldMetadata
import pydantic
import typing
from .component_instance_node_property_overrides_write_property_overrides_item import (
    ComponentInstanceNodePropertyOverridesWritePropertyOverridesItem,
)
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class ComponentInstanceNodePropertyOverridesWrite(UniversalBaseModel):
    """
    Update text property overrides of a component instance
    """

    node_id: typing_extensions.Annotated[str, FieldMetadata(alias="nodeId")] = pydantic.Field()
    """
    Node UUID
    """

    property_overrides: typing_extensions.Annotated[
        typing.List[ComponentInstanceNodePropertyOverridesWritePropertyOverridesItem],
        FieldMetadata(alias="propertyOverrides"),
    ] = pydantic.Field()
    """
    A list of component instance properties to override within the specified secondary locale.
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
