name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      test_release:
        description: 'Test release (skips PyPI publish)'
        required: false
        default: false
        type: boolean

permissions:
  contents: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Required for hatch-vcs to access git history

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      # these libraries enable testing on Qt on linux
      - name: Set up Qt
        uses: tlambert03/setup-qt-libs@v1

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --extra test

      - name: Run tests
        uses: aganders3/headless-gui@v2
        with:
          run: uv run pytest

      - name: Build package
        run: |
          uv build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/

  release:
    needs: build
    runs-on: ubuntu-latest
    # Only run on main repo and not for test releases
    if: github.repository == 'royerlab/tracksdata' && github.event.inputs.test_release != 'true'
    environment:
      name: pypi
      url: https://pypi.org/p/tracksdata
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          attestations: true

  test-release:
    needs: build
    runs-on: ubuntu-latest
    # Only run for test releases or on forks
    if: github.event.inputs.test_release == 'true' || github.repository != 'royerlab/tracksdata'
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Test PyPI upload (dry run)
        run: |
          echo "ðŸ§ª This would upload to PyPI:"
          ls -la dist/
          echo "âœ… Test release completed successfully!"

  github-release:
    needs: build
    runs-on: ubuntu-latest
    # Only create GitHub releases on main repo and not for test releases
    if: github.repository == 'royerlab/tracksdata' && github.event.inputs.test_release != 'true'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*
          generate_release_notes: true
          draft: false
          prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}
