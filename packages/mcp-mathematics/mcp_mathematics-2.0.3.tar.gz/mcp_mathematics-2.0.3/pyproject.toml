[project]
name = "mcp-mathematics"
version = "2.0.3"
description = "Production-ready Model Context Protocol server for mathematical operations"
readme = "README.md"
requires-python = ">=3.10"
authors = [{ name = "Md. Sazzad Hossain Sharkar", email = "md@szd.sh" }]
keywords = ["mcp", "model-context-protocol", "mathematical", "scientific-computing", "ai-assistant", "claude", "fastmcp", "ast-evaluation", "secure", "production", "batch-processing", "mathematical-functions", "unicode-operators", "expression-parser"]
license = { text = "MIT" }
urls = { Source = "https://github.com/SHSharkar/MCP-Mathematics" }
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "mcp>=1.4.1",
]

[project.scripts]
mcp-mathematics = "mcp_mathematics:main"

[tool.hatch.build.targets.wheel]
packages = ["src/mcp_mathematics"]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312', 'py313']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
line-length = 100
target-version = "py310"

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG", # flake8-unused-arguments
    "SIM", # flake8-simplify
]
ignore = [
    "E501", # line too long (handled by black)
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ARG"]