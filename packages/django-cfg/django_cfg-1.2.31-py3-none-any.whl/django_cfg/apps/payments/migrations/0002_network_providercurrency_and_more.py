# Generated by Django 5.2.6 on 2025-09-24 19:54

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("django_cfg_payments", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Network",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(
                        help_text="Network code: ethereum, bitcoin, tron, bsc",
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="Network name: Ethereum, Bitcoin, TRON, BSC", max_length=100
                    ),
                ),
            ],
            options={
                "verbose_name": "Network",
                "verbose_name_plural": "Networks",
                "db_table": "payment_networks",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="ProviderCurrency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "provider_name",
                    models.CharField(
                        help_text="Provider: nowpayments, stripe, cryptomus", max_length=50
                    ),
                ),
                (
                    "provider_currency_code",
                    models.CharField(
                        help_text="Provider code: USDTERC20, USDTBSC, usd", max_length=20
                    ),
                ),
                (
                    "min_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Minimum payment amount",
                        max_digits=20,
                        null=True,
                    ),
                ),
                (
                    "max_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=8,
                        help_text="Maximum payment amount (null = no limit)",
                        max_digits=20,
                        null=True,
                    ),
                ),
                ("is_enabled", models.BooleanField(default=True, help_text="Enabled by provider")),
                (
                    "available_for_payment",
                    models.BooleanField(default=True, help_text="Can receive payments"),
                ),
                (
                    "available_for_payout",
                    models.BooleanField(default=True, help_text="Can send payouts"),
                ),
                (
                    "is_popular",
                    models.BooleanField(default=False, help_text="Popular/recommended by provider"),
                ),
                (
                    "is_stable",
                    models.BooleanField(default=False, help_text="Stable coin (USDT, USDC, etc.)"),
                ),
                (
                    "priority",
                    models.IntegerField(
                        default=0, help_text="Display priority (higher = shown first)"
                    ),
                ),
                (
                    "logo_url",
                    models.URLField(blank=True, help_text="Currency logo/icon URL from provider"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True,
                        default=dict,
                        help_text="All provider-specific data: logo_url, smart_contract, wallet_regex, commission_percent, etc.",
                    ),
                ),
            ],
            options={
                "verbose_name": "Provider Currency",
                "verbose_name_plural": "Provider Currencies",
                "db_table": "payment_provider_currencies",
                "ordering": ["-priority", "provider_name", "base_currency__code"],
            },
        ),
        migrations.AlterUniqueTogether(
            name="currencynetwork",
            unique_together=None,
        ),
        migrations.RemoveField(
            model_name="currencynetwork",
            name="currency",
        ),
        migrations.AlterModelOptions(
            name="currency",
            options={
                "ordering": ["currency_type", "code"],
                "verbose_name": "Currency",
                "verbose_name_plural": "Currencies",
            },
        ),
        migrations.RemoveIndex(
            model_name="currency",
            name="payment_cur_code_e2a506_idx",
        ),
        migrations.RemoveIndex(
            model_name="currency",
            name="payment_cur_currenc_6057a9_idx",
        ),
        migrations.RemoveIndex(
            model_name="currency",
            name="payment_cur_is_acti_8d558f_idx",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="decimal_places",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="is_active",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="min_payment_amount",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="rate_updated_at",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="symbol",
        ),
        migrations.RemoveField(
            model_name="currency",
            name="usd_rate",
        ),
        migrations.AlterField(
            model_name="currency",
            name="code",
            field=models.CharField(
                help_text="Clean currency code: BTC, USDT, ETH, USD (NO network suffixes)",
                max_length=10,
                unique=True,
            ),
        ),
        migrations.AlterField(
            model_name="currency",
            name="currency_type",
            field=models.CharField(
                choices=[("fiat", "Fiat Currency"), ("crypto", "Cryptocurrency")],
                help_text="fiat or crypto",
                max_length=10,
            ),
        ),
        migrations.AlterField(
            model_name="currency",
            name="name",
            field=models.CharField(
                help_text="Currency name: Bitcoin, Tether USD, Ethereum", max_length=100
            ),
        ),
        migrations.AddField(
            model_name="providercurrency",
            name="base_currency",
            field=models.ForeignKey(
                help_text="Base currency: BTC, USDT, ETH",
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider_mappings",
                to="django_cfg_payments.currency",
            ),
        ),
        migrations.AddField(
            model_name="providercurrency",
            name="network",
            field=models.ForeignKey(
                blank=True,
                help_text="Network for crypto (null for fiat)",
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="provider_currencies",
                to="django_cfg_payments.network",
            ),
        ),
        migrations.DeleteModel(
            name="CurrencyNetwork",
        ),
        migrations.AlterUniqueTogether(
            name="providercurrency",
            unique_together={
                ("provider_name", "base_currency", "network"),
                ("provider_name", "provider_currency_code"),
            },
        ),
    ]
