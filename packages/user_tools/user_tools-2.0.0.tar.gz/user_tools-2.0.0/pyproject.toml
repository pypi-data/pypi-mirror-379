[project]
name = "user_tools"
dynamic = ["version"]
description = "常用 Python 组件"
authors = [
    { name = "SkypeKey", email = "enablekey@outlook.com" },
]
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: POSIX",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Build Tools",
    "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)"
]

dependencies = [
    "pydantic>=2.11.7"
]

[project.optional-dependencies]
net = [
    "requests>=2.32.3",
    "paramiko>=3.4.0",
]
tar = [
    "py7zr>=0.21.0",
    "rarfile>=4.2",
]
db = [
    "pymysql>=1.1.1",
]
file = [
    "openpyxl>=3.1.3",
    "filetype>=1.2.0",
    "chinesecalendar>=1.9.1",
]
all = [
    "requests>=2.32.3",
    "paramiko>=3.4.0",
    "py7zr>=0.21.0",
    "rarfile>=4.2",
    "pymysql>=1.1.1",
    "openpyxl>=3.1.3",
    "filetype>=1.2.0",
    "chinesecalendar>=1.9.1",
]

[project.urls]
Homepage = "https://github.com/Skypekey/user_toolsv2/"
Repository = "https://github.com/Skypekey/user_toolsv2.git"
Changelog= "https://github.com/Skypekey/user_toolsv2/Changelog.md"
Tracker = "https://github.com/Skypekey/user_toolsv2/issues"

[tool.hatch.version]
path = "src/user_tools/version.py"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

# ruff
[tool.ruff]
indent-width = 4
line-length = 79
exclude = [
    "tests",
    "tmp"
]

[tool.ruff.lint]
select = [
    "ALL"
]
ignore = [
    "ANN002",  # *args 可能包含不同类型的值，不指定类型
    "ANN003",  # **kwargs 可能包含不同类型的值，不指定类型
    "D",       # 注释内容不进行校验
    "ERA001",  # 注释代码可能用于说明其他方案
    "N999",    # 未知异常，不检查
    "PYI034",  # 推荐解决方案依赖第三方模块，且 Python 3.11 之后才存在此第三方模块: typing_extensions
    "RUF013",  # 与 UP007 冲突
    "S324",    # 容易误报，部分场景下，必须获取 MD5 值
    "S603",    # 容易误报，输入的命令前置做了检查，也会出现这个报错。
    # "E501",    # 临时禁用
    # "ANN101",  # Missing type annotation for `self` in method
    # "ANN102",  # Missing type annotation for `cls` in classmethod"
    # "ANN401",  # Dynamically typed expressions (typing.Any) are disallowed in `arg`"
    # "COM812",  # conflicts with formatter
    # "CPY",     # No copyright header
    # "D203",    # `one-blank-line-before-class` (D203) and `no-blank-line-before-class` (D211) are incompatible
    # "D212",    # `multi-line-summary-first-line` (D212) and `multi-line-summary-second-line` (D213) are incompatible
    # "INP001",  # no implicit namespaces here
    # "ISC001",  # conflicts with formatter
    # "PLR0914", # Too many local variables
    # "PLR0917", # Too many positional arguments
    # "PYI041",  # Use float instead of int
    # "RET505",  # Checks for else statements with a return statement in the preceding if block.
    # "RET506",  # Checks for else statements with a raise statement in the preceding if block.
    # "S104",    # Possible binding to all interfaces
    # "S404",    # Using subprocess is alright
]

[tool.ruff.lint.isort]
combine-as-imports = true
force-sort-within-sections = true
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
required-imports = ["from __future__ import annotations"]

[tool.ruff.format]
skip-magic-trailing-comma = true
quote-style = "double"
line-ending = "lf"
indent-style = "space"
docstring-code-format = true
docstring-code-line-length = 79

# [tool.tox]
# legacy_tox_ini = """
# [tox]
# install_command=python -m pip install {packages}
# 以下先打包，后测试
# isolated_build = True
# envlist =
#     py38
#     py39
#     py310
#     py311
#     py312

# [testenv]
# deps =
#     pytest
#     pytest-html
# commands = pytest tests/main.py
# """

# 以下内容为 isort 独有，ruff 未支持，待跟进
# multi_line_output = 3
# force_grid_wrap = 3
# import_heading_future = FUTURE
# import_heading_stdlib = 标准库
# import_heading_thirdparty = 第三方模块
# import_heading_firstparty = 内部模块
# import_heading_localfolder = 本地文件
