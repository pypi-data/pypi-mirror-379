{
  "issue_title": "密码管理：不可信数据设为Random种子",
  "issue_level": "High",
  "issue_count": "1",
  "issue_desc": "将用户输入，即不可信数据做为Random种子，攻击者可以通过种子的值来判断Random随机出的值。\n\n**例如**：以下代码使用从HTTP请求中读取的参数的长度设为Random种子。\n```java\nString arg = request.getParameter(\"arg\");\n...\nint seed = arg.length();\n...\nRandom r = new Random();\nr.setSeed(seed);\n...\n```\n  如果Random对象使用用户输入值的长度作为种子，则`Random.nextInt()`以及类似方法返回的值用户是可以预测的。",
  "fix_advice": "不应将用户的输入设为Random种子。",
  "code_sample": "",
  "code_list": [
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java",
      "code_line_num": "21",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java;37行来自于命令行参数的数据从main()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java;43行赋值不可信的数据给变量key\n\n3 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java;47行不可信的数据从createPasswordReset()方法第2个参数进入\n\n4 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java;21行不可信的数据从length()方法this参数进入,然后从返回值返回\n\n5 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/PasswordResetLink.java;21行不可信的数据从setSeed()方法第1个参数进入"
    }
  ],
  "next_block_start": 10
}