{
  "issue_title": "输入验证：路径遍历",
  "issue_level": "High",
  "issue_count": "25",
  "issue_desc": "应用程序对用户可控制的输入未经合理校验，就传送给一个文件API。攻击者可能会使用一些特殊的字符（如`..`和`/`）摆脱受保护的限制，访问一些受保护的文件或目录。\n\n**例如**：下面代码片段通过验证输入路径是否以`/safe_dir/`为开头，来判断是否进行创建、删除操作。\n```java\n...\nString path = getInputPath();\nif (path.startsWith(\"/safe_dir/\")){\n    File f = new File(path);\n    f.delete();\n}\n...\n```\n攻击者可能提供类似下面的输入：\n`/safe_dir/../important.dat`\n程序假定路径是有效的，因为它是以`/safe_dir/`开头的，但是`../`将导致程序删除`important.dat`文件的父目录。",
  "fix_advice": "预防路径遍历的威胁，有以下三种方法：\n  1. 程序对非受信的用户输入做过滤和验证，对网站用户提交的文件路径进行硬编码或统一编码，过滤非法字符。\n  2. 对文件后缀进行白名单控制，拒绝包含了恶意的符号或空字节。\n  3. 合理配置Web服务器的目录访问权限。\n**示例**：以下代码使用ESAPI对用户输入路径进行过滤。\n\n```java\nimport org.owasp.esapi.ESAPI;\n...\nString path = getInputPath();\nString rootPath = PropertiesUtil.getProperty(\"ESAPI_VALID_ROOT\");\nString validDirectoryPath = ESAPI.validator().getValidDirectoryPath(\"用户输入路径\", path, new File(rootPath), false);\nFile f = new File(validDirectoryPath);\nf.delete();\n...\n```",
  "code_sample": "",
  "code_list": [
    {
      "code_location": "src/test/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignmentTest.java",
      "code_line_num": "137",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/test/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignmentTest.java;137行读取来自于属性配置的数据this.webGoatHomeDirectory\n\n2 src/test/java/org/owasp/webgoat/container/plugins/LessonTest.java;56行Tainted value enters from config file, then be used \n\n3 src/test/java/org/owasp/webgoat/lessons/xxe/BlindSendFileAssignmentTest.java;137行不可信的数据从File()方法第1个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/webwolf/FileServer.java",
      "code_line_num": "79",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/webwolf/FileServer.java;67行来自于http请求的数据从importFile()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/webwolf/FileServer.java;79行不可信的数据从getOriginalFilename()方法this参数进入,然后从返回值返回\n\n3 src/main/java/org/owasp/webgoat/webwolf/FileServer.java;79行不可信的数据从File()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java",
      "code_line_num": "103",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java;99行来自于http请求的数据从getProfilePicture()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileZipSlip.java;100行不可信的数据从getProfilePicture()方法第1个参数进入\n\n3 src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java;99行不可信的数据从getProfilePictureAsBase64()方法第1个参数进入\n\n4 src/main/java/org/owasp/webgoat/lessons/pathtraversal/ProfileUploadBase.java;103行不可信的数据从File()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java",
      "code_line_num": "53",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java;47行来自于命令行参数的数据从main()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java;51行赋值不可信的数据给变量element\n\n3 src/main/java/org/owasp/webgoat/lessons/challenges/challenge7/MD5.java;53行不可信的数据从File()方法第1个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java",
      "code_line_num": "32",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java;32行读取来自于属性配置的数据this.webGoatHomeDirectory\n\n2 src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java;22行Tainted value enters from config file, then be used \n\n3 src/main/java/org/owasp/webgoat/lessons/xxe/Ping.java;32行不可信的数据从File()方法第1个参数进入"
    }
  ],
  "next_block_start": 106
}