{
  "issue_title": "资源管理：有风险的数据库访问控制",
  "issue_level": "Medium",
  "issue_count": "5",
  "issue_desc": "程序未进行恰当的访问控制，执行了一个包含用户控制字段的SQL语句，可能会导致攻击者访问未经授权的记录。\n\n**例如**：下面代码片段中的SQL语句用于查询与指定名称相匹配的清单。\n```java\n...\nname = request.getParameter(\"name\");\nString query = \"SELECT * FROM invoices WHERE name = ?\";\nPreparedStatement stmt = conn.prepareStatement(query);\nstmt.setString(1, name);\nboolean results = stmt.execute();\n...\n```\n在上面代码中，攻击者可以通过为`name`设置不同的值，获取所需的任何清单信息。",
  "fix_advice": "任何情况下都不允许用户在没有取得相应权限的情况下获取或修改数据库中的记录。可以通过把当前被授权的userId作为查询语句的一部分来实现。\n\n**例如**：下面代码片段中，通过把当前被授权的userId作为查询语句的一部分来限制用户对清单的访问。\n```java\n...\nuserId = ctx.getAuthenticatedId();\nname = request.getParameter(\"name\");\nString query = \"SELECT * FROM invoices WHERE name = ? AND userId = ?\";\nPreparedStatement stmt = conn.prepareStatement(query);\nstmt.setString(1, name);\nstmt.setString(2, userId);\nboolean results = stmt.execute();\n...\n```",
  "code_sample": "",
  "code_list": [
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java",
      "code_line_num": "47",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java;43行来自于http请求的数据从completed()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/sqlinjection/mitigation/SqlInjectionLesson13.java;47行不可信的数据从setString()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "code_line_num": "66",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;48行来自于http请求的数据从registerNewUser()方法第3个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;66行不可信的数据从setString()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "code_line_num": "64",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;46行来自于http请求的数据从registerNewUser()方法第1个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;64行不可信的数据从setString()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java",
      "code_line_num": "65",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java;39行来自于http请求的数据从completed()方法第2个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java;41行不可信的数据从injectableQuery()方法第1个参数进入\n\n3 src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java;53行不可信的数据从parseInt()方法第1个参数进入,然后从返回值返回\n\n4 src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java;53行赋值不可信的数据给变量count\n\n5 src/main/java/org/owasp/webgoat/lessons/sqlinjection/introduction/SqlInjectionLesson5b.java;65行不可信的数据从setInt()方法第2个参数进入"
    },
    {
      "code_location": "src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java",
      "code_line_num": "65",
      "code_details": "跟踪路径:跟踪路径1:\n\n1 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;47行来自于http请求的数据从registerNewUser()方法第2个参数进入\n\n2 src/main/java/org/owasp/webgoat/lessons/sqlinjection/advanced/SqlInjectionChallenge.java;65行不可信的数据从setString()方法第2个参数进入"
    }
  ],
  "next_block_start": 26
}