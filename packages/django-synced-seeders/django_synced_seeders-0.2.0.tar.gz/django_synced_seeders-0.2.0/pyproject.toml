[project]
name = "django-synced-seeders"
version = "0.2.0"
description = "An easy-to-use seeder manager to keep seed data in sync across multiple environments."
readme = "README.md"
authors = [
    { name = "Starscribers", email = "Starscribers@gmail.com" }
]
requires-python = ">=3.8"
dependencies = [
    "django>=4.2.24",
    "django-stubs[compatible-mypy]>=5.1.3",
    "django-stubs-ext>=5.1.3",
    "requests>=2.32.4",
    "types-requests>=2.32.0.20241016",
    "slack-sdk>=3.36.0",
    "any-registries>=0.2.0",
    "django-stub>=0.1",
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Utilities",
    "Typing :: Typed",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "mypy>=0.950",
    "flake8>=4.0.0",
    "pre-commit>=3.0.0",
    "bandit>=1.7.0",
    "twine>=4.0.0",
    "types-setuptools>=68.0.0",
]
testing = [
    "pytest>=7.0.0",
    "pytest-cov>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/Starscribers/python-packages"
Repository = "https://github.com/Starscribers/python-packages.git"
Issues = "https://github.com/Starscribers/python-packages/issues"
Documentation = "https://github.com/Starscribers/python-packages/blob/main/django-synced-seeders/README.md"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "tests.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--reuse-db",
]
testpaths = ["tests"]
markers = [
    "django_db: mark test to use django database",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
known_first_party = "seeds"
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]


[tool.bandit]
skips = ["B101", "B601"]
exclude_dirs = ["tests"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**" = ["B011"]

[dependency-groups]
dev = [
    "django-stubs>=5.1.3",
    "mypy>=1.14.1",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-django>=4.11.1",
    "ruff>=0.13.1",
    "types-requests>=2.32.0.20241016",
]
