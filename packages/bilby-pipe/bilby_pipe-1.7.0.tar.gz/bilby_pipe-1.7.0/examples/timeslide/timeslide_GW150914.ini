################################################################################
## Job submission arguments
################################################################################

accounting=ligo.dev.o4.cbc.pe.bilby
label = timeslide_GW150914
outdir = outdir_timeslide_GW150914
submit=True
verbose = True

################################################################################
## Data generation arguments
################################################################################

gps-file = gps_times.txt
timeslide-file = timeslides.txt
channel-dict = {H1:GWOSC, L1:GWOSC}

################################################################################
## Detector arguments
################################################################################

coherence-test=True
detectors=['H1', 'L1']
duration=4.0

################################################################################
## Output arguments
################################################################################

################################################################################
## Waveform arguments
################################################################################

waveform-approximant=IMRPhenomPv2

################################################################################
## Sampler arguments
################################################################################

sampler = dynesty
sampler-kwargs = {nlive: 512, walks: 100}
prior-dict = {
mass_1 = Constraint(name='mass_1', minimum=10, maximum=80),
mass_2 = Constraint(name='mass_2', minimum=10, maximum=80),
mass_ratio =  Uniform(name='mass_ratio', minimum=0.125, maximum=1, latex_label="$q$"),
chirp_mass =  Uniform(name='chirp_mass', minimum=25, maximum=40, latex_label="$M_{c}$"),
a_1 = Uniform(name='a_1', minimum=0, maximum=0.99),
a_2 = Uniform(name='a_2', minimum=0, maximum=0.99),
tilt_1 = Sine(name='tilt_1'),
tilt_2 = Sine(name='tilt_2'),
phi_12 = Uniform(name='phi_12', minimum=0, maximum=2 * np.pi, boundary='periodic'),
phi_jl = Uniform(name='phi_jl', minimum=0, maximum=2 * np.pi, boundary='periodic'),
luminosity_distance = PowerLaw(alpha=2, name='luminosity_distance', minimum=50, maximum=2000, unit='Mpc', latex_label='$d_L$'),
dec = Cosine(name='dec'),
ra = Uniform(name='ra', minimum=0, maximum=2 * np.pi, boundary='periodic'),
theta_jn = Sine(name='theta_jn'),
psi =  Uniform(name='psi', minimum=0, maximum=np.pi, boundary='periodic'),
phase =  Uniform(name='phase', minimum=0, maximum=2 * np.pi, boundary='periodic'),
}
