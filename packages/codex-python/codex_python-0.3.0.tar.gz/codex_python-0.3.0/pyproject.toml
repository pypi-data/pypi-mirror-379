[build-system]
requires = ["maturin>=1.0,<2.0"]
build-backend = "maturin"

[project]
name = "codex-python"
description = "A minimal Python library scaffold for codex-python"
readme = "README.md"
requires-python = ">=3.12"
keywords = ["codex", "library", "scaffold"]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Typing :: Typed",
  "Operating System :: OS Independent",
]
dynamic = ["version"]
license = { file = "LICENSE" }
dependencies = [
    "pydantic>=2.11.7",
]

[project.urls]
Homepage = "https://github.com/gersmann/codex-python"
Repository = "https://github.com/gersmann/codex-python"
Issues = "https://github.com/gersmann/codex-python/issues"

[tool.maturin]
# Point maturin to the Rust crate and include this repository's Python sources.
manifest-path = "crates/codex_native/Cargo.toml"
python-packages = ["codex"]

# Development dependency groups (used by uv)
[dependency-groups]
dev = [
  "ruff>=0.13.1",
  "pytest>=8",
  "mypy>=1.18.2",
  "pre-commit>=4.3.0",
  "datamodel-code-generator>=0.26",
]

[tool.ruff]
line-length = 100
target-version = "py312"
extend-exclude = ["codex-proj", ".generated"]

[tool.ruff.lint]
select = ["E", "F", "I", "B", "UP"]
ignore = ["E501"]

[tool.pytest.ini_options]
addopts = "-q"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_ignores = true
disallow_untyped_defs = true
no_implicit_optional = true
check_untyped_defs = true
ignore_missing_imports = true
exclude = [
  "^codex-proj/",
  "^\\.generated/",
  "^crates/.*/target/",
  "^dist/",
]
