"use strict";(self.webpackChunkjupyterlab_browser_ai=self.webpackChunkjupyterlab_browser_ai||[]).push([[509],{509:(e,t,r)=>{r.r(t),r.d(t,{default:()=>w});var o=r(10),a=r(436),i=r(980),n=r(760),s=r(194),l=r(368),c=r(516),d=r(26),u=r(926);const p={id:"jupyterlab-browser-ai:plugin",description:"In-browser AI in JupyterLab and Jupyter Notebook",autoStart:!0,requires:[s.IChatProviderRegistry],optional:[o.ISettingRegistry],activate:(e,t,o)=>{if((0,l.doesBrowserSupportBuiltInAI)()){const e={id:"chrome-ai",name:"Chrome Built-in AI",requiresApiKey:!1,defaultModels:["chrome-ai"],supportsBaseURL:!1,supportsHeaders:!1,supportsToolCalling:!1,factory:()=>(0,d.aisdk)((0,l.builtInAI)("text"))};t.registerProvider(e)}if((0,c.doesBrowserSupportWebLLM)()){const e={id:"web-llm",name:"WebLLM",requiresApiKey:!1,defaultModels:["Llama-3.2-3B-Instruct-q4f16_1-MLC","Llama-3.2-1B-Instruct-q4f16_1-MLC","Phi-3.5-mini-instruct-q4f16_1-MLC","gemma-2-2b-it-q4f16_1-MLC","Qwen3-0.6B-q4f16_1-MLC"],supportsBaseURL:!1,supportsHeaders:!1,supportsToolCalling:!1,factory:e=>{var t;const o=null!==(t=e.model)&&void 0!==t?t:"Llama-3.2-3B-Instruct-q4f16_1-MLC";let i=null;const n=(0,c.webLLM)(o,{worker:new Worker(new URL(r.p+r.u(143),r.b),{type:void 0}),initProgressCallback:e=>{var t;const r=Math.round(100*e.progress);null===i?i=a.Notification.emit(null!==(t=e.text)&&void 0!==t?t:`Downloading ${o}...`,"in-progress",{progress:0,autoClose:!1}):100===r?i&&a.Notification.update({id:i,message:`${o} ready`,type:"success",progress:1,autoClose:3e3}):i&&a.Notification.update({id:i,message:`Downloading ${o}... ${r}%`,progress:e.progress})}});return(0,d.aisdk)(n)}};t.registerProvider(e)}o&&o.load(p.id).then(e=>{console.log("jupyterlab-browser-ai settings loaded:",e.composite)}).catch(e=>{console.error("Failed to load settings for jupyterlab-browser-ai.",e)})}};var g;!function(e){e.generateAltText="chrome-ai:generate-alt-text"}(g||(g={}));class m{async generateAltText(e){try{const t=await fetch(e),r=await t.blob(),o=await r.arrayBuffer(),a=new Uint8Array(o);let i="";const n=8192;for(let e=0;e<a.length;e+=n){const t=a.slice(e,e+n);i+=String.fromCharCode(...t)}const s=btoa(i),c=(0,u.gM)({model:(0,l.builtInAI)(),messages:[{role:"user",content:[{type:"text",text:'Generate a concise alt text description for this image. Focus on the most important visual elements and keep it under 125 characters. Do not include phrases like "an image of" or "a picture showing".'},{type:"file",mediaType:r.type||"image/png",data:s}]}]});let d="";for await(const e of c.textStream)d+=e;return d}catch(e){throw console.error("Failed to generate alt text:",e),e}}}const f={id:"jupyterlab-browser-ai:alt-text-generator",description:"Chrome AI Alt Text Generator Context Menu",autoStart:!0,requires:[i.INotebookTracker],activate:(e,t)=>{if(!(0,l.doesBrowserSupportBuiltInAI)())return void console.log("Chrome Built-in AI not supported in this browser");const r=new m,o=e=>"IMG"===e.tagName;e.commands.addCommand(g.generateAltText,{label:"Generate Alt Text with ChromeAI",icon:n.imageIcon,execute:async()=>{const i=e.contextMenuHitTest(o);if(!i)return;const n=i.src,s=a.Notification.emit("Generating alt text with ChromeAI...","in-progress",{autoClose:!1});try{const e=await r.generateAltText(n),o=await async function(e,t,r){try{const o=r.currentWidget;if(!o)return!1;const a=o.content;let i=a.activeCell;if(!i||"markdown"!==i.model.type){let t=null,r=-1;for(let o=0;o<a.widgets.length;o++){const i=a.widgets[o];if("markdown"===i.model.type){const a=i.node.querySelectorAll("img");for(const n of a)if(n.src===e.src){t=i,r=o;break}}if(t)break}if(!t)return!1;a.activeCellIndex=r,i=t}const n=i.model.sharedModel,s=n.getSource(),l=/!\[([^\]]*)\]\(([^)]+)\)/g;let c=0,d=!1;const u=s.replace(l,(e,r,o)=>(c++,d||""!==r.trim()&&1!==c?e:(d=!0,`![${t}](${o})`)));return u!==s&&(n.setSource(u),!0)}catch(e){return console.error("Failed to update image alt text:",e),!1}}(i,e,t);a.Notification.update({id:s,message:o?"Alt text generated and applied to markdown cell":"Alt text generated - copied to clipboard",type:"success",autoClose:3e3}),navigator.clipboard&&await navigator.clipboard.writeText(e)}catch(e){console.error("ChromeAI Alt Text Generation Error:",e),a.Notification.update({id:s,message:`Failed to generate alt text: ${e instanceof Error?e.message:"Unknown error"}`,type:"error",autoClose:5e3})}},describedBy:{args:{type:"object",properties:{}}}}),e.contextMenu.addItem({command:g.generateAltText,selector:"img",rank:1})}},w=[p,f]}}]);