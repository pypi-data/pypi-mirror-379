{"version":3,"file":"main.2756.f67d37486e2db370ee3c.js","mappings":"85CAAO,IASHA,EATSC,EAAO,qBASaD,EAAK,CAClCE,WAAY,oCACZC,WAAY,0GACZC,YAAa,qFACbC,YAAa,wDACbC,GAAI,uCACJC,EAAG,wCAIA,SAASC,EAAmBC,EAAMC,GACrC,IAAIC,EACoBA,OAAXC,IAATH,EAA0BA,EACnBI,KACX,IAAIC,EAAOC,OAAOD,KAAKH,EAAIK,aACIJ,IAAVF,EAAsBI,EAAKG,SAAWP,EAAQI,EAAKG,OAAS,IAE7EH,EAAKI,SAAQ,SAAAC,GACT,IAAIC,EAAMC,SAASC,eAAeH,GAC7BI,uBAAuB,eACT,IAAfH,EAAIH,UACJG,EAAMA,EAAI,IACMI,wBAAwBC,MAAQJ,SAC3CE,uBAAuB,iBAAiB,GACxCC,wBAAwBC,MACjBd,EAAIK,MAAMG,IAClBO,MAAMC,KAAKP,EAAIQ,iBACX,uBAAuBV,SAAQ,SAAAW,GACvBH,MAAMC,KAAKE,EAAGC,WAAWC,KAAK,KAC7BC,SAAS,gBAAgBH,EAAGI,MACxBC,YAAY,eAAgB,OACzC,IAGhB,GAER,EA7BEC,EAAAA,EAAAA,oBAAmBnC,GAgCd,IAAMoC,EAAU,SAAHC,GAGd,IAAAC,EAAAD,EAFFE,QAAAA,OAAO,IAAAD,EAAG,GAAEA,EAAEE,EAAKH,EAALG,MAAO/B,EAAI4B,EAAJ5B,KAAMgC,EAAQJ,EAARI,SAAQC,EAAAL,EACnCM,WAAAA,OAAU,IAAAD,GAAQA,EAAAE,EAAAP,EAAEQ,SAAAA,OAAQ,IAAAD,GAAQA,EAE9BE,GAAUC,EAAAA,EAAAA,YAAW/C,EAAI,CAAC,eAEhC,OADAwC,EAAQA,GAAS/B,EAAK+B,MACdM,EAAQE,MAAeC,EAAAA,cAACA,EAAAA,SAAc,MACxCN,GAAcH,GAASS,EAAAA,cAACA,EAAAA,SAAc,KACpCA,EAAAA,cAAA,SACIC,UAAWJ,EAAQ5C,WAAU,QACzB,UAAW,mBACX,CAAC,qBAAsB2C,IAE3BM,MAAOpC,OAAOqC,OAAO,CAAC,EAAG3C,EAAK4C,OAAS,CAAC,GAAGC,UACpC7C,EAAK8C,WACPf,EACAD,EAAQiB,KAAI,SAACC,EAAQC,GAAC,OAAKT,EAAAA,cAACA,EAAAA,SAAc,CAAC9B,IAAKuC,GAAG,MAQhDT,EAAAA,cAAA,QAAMU,wBAAyB,CAACC,OAAQH,KAC3B,IAAE,KAC3BR,EAAAA,cAAA,YAEHR,GAtBmB,IAwB5B,EAGAL,EAAQyB,UAAY,CAChBtB,QAASuB,IAAAA,MACTtB,MAAOsB,IAAAA,OACPrD,KAAMqD,IAAAA,OAAiBC,WACvBpB,WAAYmB,IAAAA,KACZjB,SAAUiB,IAAAA,KACVrB,SAAUqB,IAAAA,QAAkBC,YAIzB,IAAMC,EAAY,kBAAAC,EAAAA,EAAAA,IAAA,SAAAD,KAAAE,EAAAA,EAAAA,GAAA,KAAAF,EAAA,UAAA7C,IAAA,iBAAAkC,MACrB,SAAqBc,GAAyB,IAAvBlE,EAAIkE,EAAJlE,KAAMmE,EAAKD,EAALC,MAAOC,EAAOF,EAAPE,QAChC,OAAID,EAAME,EAAAA,yBAAqCA,EAAAA,mBACpCD,EAAQE,aAAatE,GACzBmE,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC5CD,EAAQG,KAAKJ,EAAMK,OAAOC,UAAUzE,GACpCmE,EAAME,EAAAA,yBAAqCA,EAAAA,kBACvCD,EAAQpE,GAAQoE,EAAQM,KAAK1E,EAC3C,IAAC,CARoB,GAYZ2E,EAAiB,SAAAC,GAgC1B,SAAAD,EAAYR,EAAOC,GAAS,IAAAS,EAYqB,OAZrBZ,EAAAA,EAAAA,GAAA,KAAAU,IACxBE,EAAAC,EAAA,KAAAH,EAAA,CAAMR,EAAOC,KAcjBW,OAAS,kBAAQ,CAAC,GAAI,UAAMpE,GAAWoB,SAAS8C,EAAKG,WAAW,EAb5DH,EAAKI,eAAiB,GACtBJ,EAAKK,QAAUf,EAAME,EAAAA,yBAAqCA,EAAAA,kBACpDF,EAAM3D,KAAK2E,aAAehB,EAAM3D,KAAKR,KAC3C6E,EAAKO,aAAejB,EAAMkB,UAAUC,WACpCT,EAAKU,EAAIpB,EAAMkB,UAAUC,WAEzBT,EAAKE,OAASF,EAAKE,OAAOS,KAAIX,GAC9BA,EAAKG,SAAWH,EAAKG,SAASQ,KAAIX,GAClCA,EAAKY,eAAiBZ,EAAKY,eAAeD,KAAIX,GAC9CA,EAAKa,UAAYb,EAAKa,UAAUF,KAAIX,GACpCA,EAAKc,WAAad,EAAKc,WAAWH,KAAIX,GAAOA,CACjD,CAAC,OAAAe,EAAAA,EAAAA,GAAAjB,EAAAC,IAAAZ,EAAAA,EAAAA,GAAAW,EAAA,EAAAzD,IAAA,iBAAAkC,MAID,SAAepD,GACX,OAAO+D,EAAa0B,eAAe,CAC/BzF,KAAMA,EAAMmE,MAAOvD,KAAKuD,MAAOC,QAASxD,KAAKwD,SACrD,GAAC,CAAAlD,IAAA,WAAAkC,MAED,WACI,OAAOxC,KAAK6E,eAAe7E,KAAKsE,QACpC,GAAC,CAAAhE,IAAA,YAAAkC,MAED,SAAUyC,GAAqB,IAAV7D,EAAK8D,UAAA9E,OAAA,QAAAL,IAAAmF,UAAA,GAAAA,UAAA,GAAC,CAAC,EACpBC,EAAInF,KAAKoE,WAGb,OAFKpE,KAAK2E,EAAER,OAAOgB,KAAIA,EAAI,KACvBA,aAAajF,SAAQiF,EAAIC,KAAKC,UAAUF,IACxCF,EACO7C,EAAAA,cAAA,OAAKhB,MAAOA,EAAO0B,wBAAyB,CAACC,OAAQoC,KAErD/C,EAAAA,cAAA,OAAKhB,MAAOA,GAAQ+D,EAEnC,GAAC,CAAA7E,IAAA,aAAAkC,MAED,WAAwC,IAAA8C,EAAAJ,UAAA9E,OAAA,QAAAL,IAAAmF,UAAA,GAAAA,UAAA,GAAJ,CAAC,EAACK,EAAAD,EAA1BE,MAAAA,OAAK,IAAAD,GAAMA,EAAAE,EAAAH,EAAEI,KAAAA,OAAI,IAAAD,EAAC,GAAEA,EAExBzF,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDzD,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,qBAEhDzD,KAAKwE,aAAamB,YAAYZ,WAAW,CACrC3F,KAAe,UAATsG,EAAmB1F,KAAK4F,QACxB5F,KAAKuD,MAAM3D,KAAKR,KAAMyG,IAAK7F,KAAMwF,MAAOA,EAAOE,KAAMA,IAC1C1F,KAAKuD,MAAMkB,UAAzBC,WACIoB,cAEnB,IAAC,CAhFyB,CAASC,EAAAA,WAA1BhC,EACFiC,gBAAkB,CAAC,cADjBjC,EAEFkC,MAAQ9G,EAFN4E,EAGFmC,YAAcC,EAAAA,gBAHZpC,EAIFqC,yBAAuBC,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAA,CAC1BzC,OAAQX,IAAAA,OACRqD,aAAcrD,IAAAA,KACdnB,WAAYmB,IAAAA,MACXQ,EAAAA,sBAAkCR,IAAAA,MAAgB,CAC/CQ,EAAAA,kBACAA,EAAAA,mBACAA,EAAAA,kBACAA,EAAAA,qBACAA,EAAAA,mBACAA,EAAAA,mBACAA,EAAAA,uBACF,WACQR,IAAAA,OAAiBC,YAjBtBa,EAoBFf,UAASuD,EAAAA,EAAA,GACTxC,EAAkBqC,yBAAuB,IAC5CxG,KAAMqD,IAAAA,OAAiBC,WACvBuB,UAAWxB,IAAAA,OAAiBC,aAvBvBa,EA0BFyC,cAAYH,EAAAA,EAAAA,GAAA,CACfC,cAAc,EACdxE,YAAY,GACX2B,EAAAA,sBAAkCA,EAAAA,qBAuDpC,IAAMgD,EAAyB,SAAAC,GAWlC,SAAAD,EAAYlD,EAAOC,GAAyB,IAAAmD,EAAhBC,EAAQ1B,UAAA9E,OAAA,QAAAL,IAAAmF,UAAA,IAAAA,UAAA,IAAM7B,EAAAA,EAAAA,GAAA,KAAAoD,IACtCE,EAAAzC,EAAA,KAAAuC,EAAA,CAAMlD,EAAOC,KAiFjBqD,WAAa,SAACC,IACQ,OAAdA,EAAOC,IACND,EAAOC,KAAOJ,EAAKK,MAAMD,IAAMD,EAAOG,KAAON,EAAKK,MAAMC,KAC3DN,EAAKO,QACX,EApFIP,EAAKQ,UAAY5D,EAAM3D,KAAKwH,cAC5B,IAAMC,EAAe,CAAC,EAee,OAdhC9D,EAAM+D,eAAepH,OAAOqC,OAAO8E,EACpCV,EAAKnC,aAAa+C,cAAcC,wBACpCb,EAAKK,MAAKT,EAAAA,EAAAA,EAAA,GACHI,EAAKK,OAAK,IAAExE,MAAO,KAAMiF,SAAU,MAASJ,GAAY,IAC3D/G,IAAKqG,EAAKnC,aAAakD,UACvBC,QAAShB,EAAKQ,UAAYP,IAE9BD,EAAKK,MAAMY,SAAWjB,EAAKK,MAAMW,UAAYhB,EAAKQ,QAClDR,EAAKf,QAAUrC,EAAM3D,KAAKiI,WAAatE,EAAM3D,KAAKR,KAAK+B,SAAS,KAC1DoC,EAAM3D,KAAKR,KAAO,GAAH0I,OAAMvE,EAAMkB,UAAUsD,OAAM,KAAAD,OAAIvE,EAAM3D,KAAKR,OAEhEuH,EAAKqB,sBAAwBrB,EAAKqB,sBAAsBpD,KAAI+B,GAC5DA,EAAKsB,QAAUtB,EAAKsB,QAAQrD,KAAI+B,GAChCA,EAAKvC,SAAWuC,EAAKvC,SAASQ,KAAI+B,GAClCA,EAAKO,OAASP,EAAKO,OAAOtC,KAAI+B,GAAOA,CACzC,CAAC,OAAA3B,EAAAA,EAAAA,GAAAyB,EAAAC,IAAAtD,EAAAA,EAAAA,GAAAqD,EAAA,EAAAnG,IAAA,UAAAkC,MAED,WACI,IAAI0F,EAAGC,EAAA1B,EAAA,kBAAA0B,CAAA,IACFnI,KAAKmH,SAILnH,KAAKuD,MAAM+D,eAAetH,KAAK+E,WAAW,CAACW,KAAM,UACtD1F,KAAKwE,aAAa4D,QAAQC,OAAOrI,KAAK4F,SAAW5F,KACrC,OAARkI,EAAclI,KAAKiI,QAAQC,EAAII,mBAC9BtI,KAAKuI,SAAS,CAAC/F,MAAO,IAAUiF,cAAU1H,KAN3CC,KAAKuI,SAAS,CAAC/F,MAAO0F,GAO9B,GAAC,CAAA5H,IAAA,wBAAAkC,MAED,SAAsBgG,EAAWC,EAAWjF,GACxC,IAAM0E,EAAGC,EAAA1B,EAAA,kBAAA0B,CAAA,IACLjB,EACAlH,KAAKgH,MAAMxE,QAAUiG,EAAUjG,OAC/BxC,KAAKgH,MAAMY,UAAYa,EAAUb,SACjC5H,KAAKgH,MAAM7E,QAAUsG,EAAUtG,MAInC,OAFInC,KAAKmH,UAASD,EAASA,GAAgC,OAArBlH,KAAKgH,MAAMxE,QAC5C0F,GAAO,CAAC,GAAGI,oBAAsBtI,KAAKgH,MAAMS,UAC1CP,CACX,GAAC,CAAA5G,IAAA,qBAAAkC,MAED,SAAmBkG,EAAWC,GAC1B,IAAMT,EAAGC,EAAA1B,EAAA,kBAAA0B,CAAA,IACLnI,KAAKmH,QACDnH,KAAKgH,MAAMS,YAAcS,GAAO,CAAC,GAAGI,oBACpCtI,KAAKuI,SAAS,CAAC/F,MAAO,OACV,OAAR0F,EAAclI,KAAKkH,SAClBlH,KAAKuI,SAAS,CAAC/F,MAAO,IAAUiF,cAAU1H,KAEhDC,KAAKuI,SAAS,CAAC/F,MAAO0F,GACjC,GAAC,CAAA5H,IAAA,uBAAAkC,MAED,kBACWxC,KAAKwE,aAAa4D,QAAQC,OAAOrI,KAAK4F,QACjD,GAAC,CAAAtF,IAAA,WAAAkC,MAED,WACI,OAAOxC,KAAKgH,MAAMxE,KACtB,GAAC,CAAAlC,IAAA,UAAAkC,MAED,SAAQiF,GAAU,IAAAmB,EAAA,KACd,GAAK5I,KAAKgH,MAAMY,QAAhB,CAEA,IAAMd,EAAS9G,KAAKuD,MAAMkB,UAAUC,WAAW6C,cAAcsB,YAE7D/B,EAAOrD,EAAAA,4BACHzD,KAAKwE,aAAa+C,cAAcuB,QAEpC9I,KAAKwE,aAAa+C,cAAcwB,YAAY,CAExCC,KAAM,GAAFlB,OAAKL,EAAQ,KAAAK,OAAI9H,KAAKb,GAAGK,YAAW,QAAS6F,UAAUyB,MAC5DmC,MAAK,SAACnF,GACL8E,EAAKL,SAAS,CAAC/F,MAAOsB,EAAKA,KAAMoF,QAASpF,EAAKoF,QAChCzB,SAAUA,IACzBmB,EAAKpE,aAAa2E,KAAKZ,SAAS,CAAC,EACrC,GAd+B,CAenC,GAAC,CAAAjI,IAAA,SAAAkC,MAQD,WACIxC,KAAKiI,QAAQE,EAAA1B,EAAA,kBAAA0B,CAAA,IAAiBG,kBAClC,GAAC,CAAAhI,IAAA,cAAAkC,MAED,WACI,KAAM,gBACV,GAAC,CAAAlC,IAAA,SAAAkC,MAED,WAAS,IAAA4G,EAAA,KACL,IAAKpJ,KAAKgH,MAAM7E,MAAO,OAAO,KAC9B,IAAiCwC,EAAtB3E,KAAKuD,MAAMkB,UAAkBC,WACxC,OAAO1E,KAAKgH,MAAMW,QAAUvF,EAAAA,cAAA,KAAMjD,GAAGM,GAAG4J,WAAU,CAC9CC,YAAa,SAAC9F,GAEV,OADa4F,EAAKE,aAEtB,EACAxC,OAAQnC,EAAE4C,cAAcC,uBACxB+B,cAAe5E,EACfqE,KAAI,QAAAlB,OAAU9H,KAAK4F,QAAQ4D,MAAM,KAAKtI,KAAK,MAC3CuI,eAAgB,SAACjG,GACb4F,EAAK5E,aAAehB,EAAQkB,WAC5B0E,EAAKb,SAAS,CAACX,SAAS,GAC5B,EACA8B,QAAQ,EACRC,QAAS3J,OAAUA,KAAKsJ,aAChC,IAAC,CA5HiC,CAASvF,GAAlC0C,EACFT,gBAAkB,CAAC,cAAe,MAAM8B,OAAO/D,EAAkBiC,iBAD/DS,EAEFzD,UAASuD,EAAAA,EAAA,GACTxC,EAAkBf,WAAS,IAC9BsE,cAAerE,IAAAA,KAAeC,aAJzBuD,EAMFD,aAAYD,EAAAA,EAAA,GACZxC,EAAkByC,cAAY,IACjCc,eAAe,IAwHhB,IAAMsC,EAAkB,SAAAC,GAE3B,SAAAD,EAAYrG,EAAOC,GAAS,IAAAsG,EA4Ba,OA5BbzG,EAAAA,EAAAA,GAAA,KAAAuG,IACxBE,EAAA5F,EAAA,KAAA0F,EAAA,CAAMrG,EAAOC,KAERa,eAAe0F,KAAK,mBAEzBD,EAAK9C,MAAKT,EAAAA,EAAA,GACHuD,EAAK9C,OAAK,IACbgD,cAAc,IAGlBF,EAAKG,aAAe,CAChB,iBACA,SACA,wBAGJH,EAAKI,SAAWJ,EAAKI,SAAStF,KAAIkF,GAClCA,EAAK3F,OAAS2F,EAAK3F,OAAOS,KAAIkF,GAC9BA,EAAKK,MAAQL,EAAKK,MAAMvF,KAAIkF,GAC5BA,EAAKM,oBAAsBN,EAAKM,oBAAoBxF,KAAIkF,GACxDA,EAAKO,aAAeP,EAAKO,aAAazF,KAAIkF,GAC1CA,EAAKQ,eAAiBR,EAAKQ,eAAe1F,KAAIkF,GAC9CA,EAAKS,WAAaT,EAAKS,WAAW3F,KAAIkF,GACtCA,EAAKU,UAAYV,EAAKU,UAAU5F,KAAIkF,GACpCA,EAAKW,MAAQX,EAAKW,MAAM7F,KAAIkF,GAC5BA,EAAKY,aAAeZ,EAAKY,aAAa9F,KAAIkF,GAC1CA,EAAKa,OAASb,EAAKa,OAAO/F,KAAIkF,GAC9BA,EAAKc,cAAgBd,EAAKc,cAAchG,KAAIkF,GAC5CA,EAAK5C,OAAS4C,EAAK5C,OAAOtC,KAAIkF,GAAOA,CACzC,CAAC,OAAA9E,EAAAA,EAAAA,GAAA4E,EAAAC,IAAAzG,EAAAA,EAAAA,GAAAwG,EAAA,EAAAtJ,IAAA,UAAAkC,OAAAqI,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAED,SAAAC,IAAA,OAAAD,IAAAA,MAAA,SAAAE,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACInL,KAAKoL,WAAa,CACdC,eAAgBrL,KAAKb,GAAGI,YAAY+L,UACpCC,WAAW,EACXC,WAAY,CAAC,EACbC,qBAAsB,SAACC,GAAK,OAAM,CAAI,EACtCC,aAAc,SAACD,GAAK,OAAM,IAAI,GAElC1L,KAAK+E,WAAW,CAACS,OAAO,IAAO,wBAAAyF,EAAAW,OAAA,GAAAZ,EAAA,UAClC,WATY,OAAAH,EAAAgB,MAAC,KAAD3G,UAAA,KAAA5E,IAAA,WAAAkC,MAWb,WACI,GAAIxC,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,kBAChD,OAAO,EACX,GAAIzD,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChD,OAAO,EACX,IAAKzD,KAAKuD,MAAM3D,KAAKkM,SAAU,OAAO,EACtC,GAAI9L,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,kBAA6B,CAC7E,IAAIsI,EAAM/L,KAAKwD,QAAQG,KAAK3D,KAAKuD,MAAMK,OAAOC,UAC1CmI,EAAYD,EAAIA,EAAI3L,OAAS,GAGjC,SAAK4L,IAAcA,EAAUC,MAAQD,EAAUE,aAE3CH,EAAIA,EAAI3L,OAAS,KAEd2L,EAAIA,EAAI3L,OAAS,GAAGJ,KAAKuD,MAAM3D,KAAKR,QAAS,GACxD,CACI,QAAIY,KAAKwD,QAAQM,KAAKqI,kBACfnM,KAAKwD,QAAQM,KAAKsI,gBAAgBpM,KAAKuD,MAAM3D,KAAKR,QAAS,EAE1E,GAEA,CAAAkB,IAAA,uBAAAkC,MAGA,SAAqBqD,GACjB,OAAKA,GACDA,EAAIwG,WAAYxG,EAAMA,EAAIwG,WACrBxG,EAAIyG,SAAUzG,EAAMA,EAAIyG,SAASC,QACjC1G,EAAI2G,eAAe,cAAa3G,EAAMA,EAAI4G,YAC5C5G,GAJUA,CAKrB,GAAC,CAAAvF,IAAA,SAAAkC,MAED,SAAOgD,GAAO,IAAAkH,EAAA,KACJC,EAAU,SAACC,GACbF,EAAK1F,MAAMgD,cAAe,EAC1B4C,EAAOC,QACX,EACIrH,EAAMqH,OAASF,EAAQnH,IACvBxF,KAAK8M,YAAWtH,EAAQxF,KAAK8M,UAAUC,qBAAqB,SAAS,IACrEvH,GAASA,EAAMqH,QAAQF,EAAQnH,GACvC,GAAC,CAAAlF,IAAA,QAAAkC,MAED,WACI,IAAIqD,EAAM7F,KAAKgN,qBAAqBhN,KAAKiN,SACrCpH,IAAQ7F,KAAKkN,WACTrH,EAAIsE,MACJtE,EAAIsE,QACGtE,EAAIsH,OACXtH,EAAIsH,QAERnN,KAAKkN,UAAW,EAChBlN,KAAK6M,OAAOhH,GAEpB,GAAC,CAAAvF,IAAA,sBAAAkC,MAED,SAAoB0H,GAChB,IAAID,EAAe,GAenB,OAdIjK,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,kBAC5CzD,KAAKwD,QAAQ4J,aAAapN,KAAKuD,MAAMK,OAAOC,UAAU1C,SACtDnB,KAAKuD,MAAM3D,KAAK2E,eAEhB0F,EAAaF,KAAK,yBAGtBE,EAAaF,KAAK,UACd/J,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,oBAC5CyG,EAAUD,EAAaF,KAAK,kBACvB/J,KAAKwD,QAAQ6J,SAASlM,SAASnB,KAAKuD,MAAM3D,KAAKR,OACpD6K,EAAaF,KAAK,0BAGvBE,CACX,GAAC,CAAA3J,IAAA,eAAAkC,MAED,WAAe,IAAA8K,EAAA,KACPnI,EAAInF,KAAKoE,WAEb,OADKpE,KAAK2E,EAAER,OAAOgB,KAAIA,EAAI,IACpB/C,EAAAA,cAAA,KAAMgJ,WAAWC,gBAAckC,EAAAA,EAAAA,GAAA,CAElCC,SAAU,SAACC,GACFH,EAAKlC,WAAWK,qBAAqBgC,KAC1CH,EAAKhD,eAAemD,GACpBH,EAAKlC,WAAWO,aAAa8B,GACjC,EACA5H,IAAK7F,KAAKuK,WACVnJ,MAAO,CAACR,MAAO,QACf8M,SAAU1N,KAAKuD,MAAMmK,SACrBlL,MAAO2C,GACHnF,KAAKoL,WAAWI,YAC5B,GAAC,CAAAlL,IAAA,iBAAAkC,MAED,SAAeiL,GACXzN,KAAKkH,QAAMb,EAAAA,EAAAA,GAAC,CAAC,EAACrG,KAAKsE,QAAUmJ,EAAEE,OAAOnL,QACtCxC,KAAKuI,SAAS,CAAC,EACnB,GAAC,CAAAjI,IAAA,aAAAkC,MAED,SAAWqD,GACP,GAAIA,IACIA,GAAO7F,KAAKiN,UAASjN,KAAK4N,WAAY,GAC1C5N,KAAKiN,QAAUpH,GACV7F,KAAK4N,WAAW,CACjB,IAAIC,EAAY7N,KAAKgN,qBAAqBnH,GAC1C,GAAIrF,SAASsN,gBAAkBD,EAAW,OACtC7N,KAAK4K,iBAAiB5K,KAAKmK,QAC/BnK,KAAK4N,WAAY,CACrB,CAER,GAAC,CAAAtN,IAAA,YAAAkC,MAED,SAAUkJ,GACa,WAAfA,EAAMqC,MACV/N,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDzD,KAAKuD,MAAM+C,cACPtG,KAAKb,GAAGO,EAAEsO,kBAAkBhO,KAAKuD,MAAMkB,UAE/C,GAAC,CAAAnE,IAAA,QAAAkC,MAED,SAAMqD,GAAK,IAAAoI,EAAA,KACD/D,EAAWlK,KAAKkK,WAChBgE,EAAU,WACZD,EAAKnB,UAAUqB,QAAU,SAACzC,GACjBxB,IACDhK,OAAOqC,OAAO0L,EAAKzJ,aAAa4D,QAAS,CACrCgG,qBAAsBlO,OAAOqC,OAAO,CAACsB,SAAU,GAAIoK,EAAK1K,MAAMK,QAAQC,SACtEwK,qBAAsBJ,EAAK1K,MAAMmK,SACjCY,uBAAwBL,EAAK1K,MAAME,EAAAA,uBACnC8K,sBAAuBN,EAAKzJ,aAAa+C,cAAcuB,UAEvDmF,EAAK1K,MAAME,EAAAA,yBAAqCA,EAAAA,qBAC3CwK,EAAK1K,MAAM+C,aAGR2H,EAAKjH,MAAMgD,aAAciE,EAAK1F,SAAS,CAACyB,cAAc,IACrDiE,EAAKpB,OAAOoB,EAAKjB,qBAAqBiB,EAAKhB,UAHhDgB,EAAKzJ,aAAagK,QAAQC,aAAa,CAACnI,cAAc,KAOtE,CACJ,EACIT,IACA7F,KAAK8M,UAAYjH,EACb7F,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDzD,KAAK8M,UAAYjH,EAAI6I,QAAQ,MAC7BR,KAGAlO,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,oBAChDzD,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,oBAClDyK,KAENlO,KAAK0K,aAAa1K,KAAK8M,UAAW5C,EACtC,GAAC,CAAA5J,IAAA,eAAAkC,MAED,SAAaqD,EAAKqE,GACd,GAAIrE,EAAK,CACL,IAAI8I,EAAU3O,KAAKoK,oBAAoBF,GACvClK,KAAKiK,aAAa5J,SAAQ,SAAAuO,GAAS/I,EAAI5E,UAAU4N,OAAOD,EAAK,IAC7DD,EAAQtO,SAAQ,SAAAuO,GAAS/I,EAAI5E,UAAU6N,IAAIF,EAAK,GACpD,CACJ,GAAC,CAAAtO,IAAA,SAAAkC,MAED,WACIxC,KAAKwE,aAAa+C,cAAcoD,OAAO,CACnCoE,SAAU,CAAClL,SAAU7D,KAAKuD,MAAMK,OAAOC,WAC/C,GAAC,CAAAvD,IAAA,gBAAAkC,MAED,WACI,OACIxC,KAAKuD,MAAME,EAAAA,yBAAqCA,EAAAA,mBAChDzD,KAAKuD,MAAMK,OAAOC,WAAa7D,KAAKwE,aAAa4D,QAAQgG,wBAGzDpO,KAAKuD,MAAME,EAAAA,yBAAqCzD,KAAKwE,aAAa4D,QAAQkG,wBAC1EtO,KAAKwE,aAAa+C,cAAcuB,UAAY9I,KAAKwE,aAAa4D,QAAQmG,uBACtEvO,KAAKuD,MAAMmK,WAAa1N,KAAKwE,aAAa4D,QAAQiG,qBAG1D,GAAC,CAAA/N,IAAA,SAAAkC,MAED,SAAOwM,GACHhP,KAAKwE,aAAa+C,cAAcL,OAAO,CACnC8H,OAAQA,EAAQpP,KAAMI,KAAKuD,MAAM3D,KAAMqP,IAAKjP,KAAKuD,MAAMK,OACvDsL,WAAYlP,KAAKuD,MAAME,EAAAA,wBAC/B,GAAC,CAAAnD,IAAA,SAAAkC,MAED,WAAyC,IAAlCV,EAAUoD,UAAA9E,OAAA,QAAAL,IAAAmF,UAAA,GAAAA,UAAA,GAAClF,KAAKuD,MAAMzB,WACzB,IAAK9B,KAAKgH,MAAM7E,MAAO,OAAO,KAC9B,IAAM+H,EAAWlK,KAAKkK,WAEtB,OADIlK,KAAK8M,WAAW9M,KAAK0K,aAAa1K,KAAK8M,UAAW5C,GAC/C9H,EAAAA,cAACb,GAAOgM,EAAAA,EAAAA,GAAA,GAAKvN,KAAKuD,MAAK,CAC1B7B,SAAU1B,KAAKwD,QAAQ2L,eAAiB,CAAC,GAAGnP,KAAKuD,MAAM3D,KAAKR,OAAS,GACrE0C,WAAYA,EACZlC,KAAMI,KAAKuD,MAAM3D,KAAMoC,SAAUhC,KAAKmE,WACtC/B,EAAAA,cAAA,OACIC,UAAWrC,KAAKb,GAAGE,WAAU,QACzBW,KAAKqE,eACL,CAAC,qBAAsB6F,IAE3BM,UAAWxK,KAAKwK,UAChB3E,IAAK7F,KAAKyK,OACLzK,KAAKoL,WAAWG,WACbvL,KAAKuD,MAAM+C,eAAiB4D,EADHlK,KAAKqK,eAEJrK,KAAK8E,aAGnD,KA3NC,IAAA+F,CA2NA,CA1P0B,CAAS9G,GAA3B6F,EACF5D,gBAAkB,CAAC,cAAe,KAAK8B,OAAO/D,EAAkBiC,iBA6PpE,IAAMoJ,EAAyB,SAAAC,GAElC,SAAAD,EAAY7L,EAAOC,GAAS,IAAA8L,EAcmB,OAdnBjM,EAAAA,EAAAA,GAAA,KAAA+L,IACxBE,EAAApL,EAAA,KAAAkL,EAAA,CAAM7L,EAAOC,KAgBjBgH,UAAY,SAACiD,GACTtF,EAAAiH,EAAA,YAAAE,EAAA,EAAAnH,CAAA,CAAgBsF,IACF,UAAVA,EAAEnN,KAAmBgP,EAAKrC,QAAQsC,cAAc9B,EAAE+B,iBAC1D,EAlBIF,EAAKjL,eAAe0F,KAAK,4BACzBuF,EAAKtI,MAAKT,EAAAA,EAAA,GACH+I,EAAKtI,OAAK,IACbyI,aAAc,OAGlBH,EAAKI,cAAgBnM,EAAME,EAAAA,yBAAqCA,EAAAA,kBAC1DF,EAAM3D,KAAK+P,oBACXpM,EAAM3D,KAAKR,KAAO,SAExBkQ,EAAKjF,aAAeiF,EAAKjF,aAAazF,KAAI0K,GAC1CA,EAAKlL,SAAWkL,EAAKlL,SAASQ,KAAI0K,GAClCA,EAAKxK,UAAYwK,EAAKxK,UAAUF,KAAI0K,GAAOA,CAC/C,CAAC,OAAAtK,EAAAA,EAAAA,GAAAoK,EAAAC,IAAAjM,EAAAA,EAAAA,GAAAgM,EAAA,EAAA9O,IAAA,WAAAkC,MAOD,WACI,MAAO,CACHoN,KAAIzH,EAAAiH,EAAA,kBAAAjH,CAAA,IACJ3F,MAAOxC,KAAK6E,eAAe7E,KAAK0P,eACxC,GAAC,CAAApP,IAAA,eAAAkC,MAED,WAAe,IAAAqN,EAAA,KACX,OAAOzN,EAAAA,cAAA,KAAMjD,GAAGG,WAAWwQ,SAAQ,CAE/BC,WAAW,EACXC,aAAc,SAACpB,GACX,OAAOxM,EAAAA,cAAA,OAAKU,wBAAyB,CAACC,OAAQ6L,EAAKgB,OACvD,EACApC,SAAU,SAACC,GACHA,EAAEwC,cAAcC,SAAWzC,EAAEwC,cAAcE,SAC/CN,EAAK3I,QAAMb,EAAAA,EAAAA,IAAAA,EAAAA,EAAAA,GAAC,CAAC,EAACwJ,EAAKvL,QAAUmJ,EAAEjL,OAAS,MACnCqN,EAAKH,cAAgBjC,EAAEjL,OAAS,OACrCqN,EAAKtH,SAAS,CAAC,GACnB,EACA6H,YAAY,OACZC,QAASrQ,KAAKqQ,QAGdC,UAAWtQ,KAAKuD,MAAM3D,KAAK2Q,cAAcC,WACzCpP,MAAO,CAACR,MAAO,QACf8M,SAAU1N,KAAKuD,MAAMmK,SACrBlL,MAAOxC,KAAKoE,WAAW5B,MACvBiO,cAAe,SAAC7B,EAAMyB,GAClB,OAAIzB,EAAaxM,EAAAA,cAAA,OAAKU,wBAAyB,CAACC,OAAQ6L,EAAKgB,QACtDxN,EAAAA,cAAA,WAAK,IAChB,GACR,GAAC,CAAA9B,IAAA,YAAAkC,MAED,WACI,IAAI2C,EAACgD,EAAAiH,EAAA,kBAAAjH,CAAA,IAGL,OAFKnI,KAAK2E,EAAER,OAAOgB,KAAIA,EAAI,KAEpB/C,EAAAA,cAAA,OAA0CU,wBAAyB,CAACC,OAAQoC,IACvF,IAAC,CA9DiC,CAASyE,GAAlCwF,EACFpJ,gBAAkB,CAAC,cAAc8B,OAAO8B,EAAmB5D,gB","sources":["webpack://lino_react/./lino_react/react/components/LinoComponentUtils.jsx"],"sourcesContent":["export const name = \"LinoComponentUtils\";\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { RegisterImportPool, getExReady, Component, DataContextType } from \"./Base\";\n\nimport * as constants from \"./constants\";\n\n\nlet ex; const exModulePromises = ex = {\n    classNames: import(/* webpackChunkName: \"classNames_LinoComponentUtils\" */\"classnames\"),\n    prDropdown: import(/* webpackChunkName: \"prDropdown_LinoComponentUtils\" */\"primereact/dropdown\"),\n    prInputText: import(/* webpackChunkName: \"prInputText_LinoComponentUtils\" */\"primereact/inputtext\"),\n    queryString: import(/* webpackChunkName: \"queryString_LinoComponentUtils\" */\"query-string\"),\n    sc: import(/* webpackChunkName: \"SiteContext_LinoComponentUtils\" */\"./SiteContext\"),\n    u: import(/* webpackChunkName: \"LinoUtils_LinoComponentUtils\" */\"./LinoUtils\"),\n};RegisterImportPool(ex);\n\n\nexport function maintainTableWidth(elem, count) {\n    let ctx;\n    if (elem !== undefined) ctx = elem\n    else ctx = this;\n    let keys = Object.keys(ctx.flexs),\n        fo_conditional = count !== undefined ? keys.length === count : keys.length > 1;\n    if (fo_conditional) {\n        keys.forEach(key => {\n            var tbl = document.getElementById(key)\n                .getElementsByClassName('p-datatable');\n            if (tbl.length === 1) {\n                tbl = tbl[0]\n                let width = tbl.getBoundingClientRect().width / document\n                    .getElementsByClassName('layout-topbar')[0]\n                    .getBoundingClientRect().width;\n                if (width > ctx.flexs[key]) {\n                    Array.from(tbl.querySelectorAll(\n                        '.p-datatable table')).forEach(el => {\n                            if (Array.from(el.classList).join(' ')\n                                .includes('p-datatable')) el.style\n                                    .setProperty('table-layout', 'auto');\n                        });\n                }\n            }\n        });\n    }\n}\n\n\nexport const Labeled = ({\n    actions = [], label, elem, children,\n    hide_label = false, isFilled = false,\n}) => {\n    const localEx = getExReady(ex, ['classNames']);\n    label = label || elem.label;\n    return !localEx.ready ? null : <React.Fragment>\n        {!hide_label && label && <React.Fragment>\n            <label\n                className={localEx.classNames.default(\n                    \"l-label\", \"l-span-clickable\",\n                    {\"l-label--unfilled\": !isFilled},\n                )}\n                title={Object.assign({}, elem.value || {}).quicktip\n                    || elem.help_text}>\n                    {label}\n                    {actions.map((action, i) => <React.Fragment key={i}>\n                        &nbsp;|&nbsp;\n                        {\n                            // <span\n                            //     className=\"l-span-clickable\"\n                            //     onClick={e => action.run(e)}>\n                            //     {action.label}</span>\n                        }\n                        <span dangerouslySetInnerHTML={{__html: action}} />\n                    </React.Fragment>)}:</label>\n            <br/>\n        </React.Fragment>}\n        {children}\n    </React.Fragment>\n}\n\n\nLabeled.propTypes = {\n    actions: PropTypes.array,\n    label: PropTypes.string,\n    elem: PropTypes.object.isRequired,\n    hide_label: PropTypes.bool,\n    isFilled: PropTypes.bool,\n    children: PropTypes.element.isRequired,\n}\n\n\nexport class ABCComponent {\n    static getValueByName({name, props, context}) {\n        if (props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return context.param_values[name];\n        return props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? context.rows[props.column.rowIndex][name]\n            : props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS\n                ? context[name] : context.data[name];\n    }\n}\n\n\nexport class LeafComponentBase extends Component {\n    static requiredModules = [\"classNames\"];\n    static iPool = ex;\n    static contextType = DataContextType;\n    static propTypesFromLinoLayout = {\n        column: PropTypes.object,\n        editing_mode: PropTypes.bool,\n        hide_label: PropTypes.bool,\n        [constants.URL_PARAM_WINDOW_TYPE]: PropTypes.oneOf([\n            constants.WINDOW_TYPE_TABLE,\n            constants.WINDOW_TYPE_DETAIL,\n            constants.WINDOW_TYPE_CARDS,\n            constants.WINDOW_TYPE_GALLERIA,\n            constants.WINDOW_TYPE_INSERT,\n            constants.WINDOW_TYPE_PARAMS,\n            constants.WINDOW_TYPE_UNKNOWN,\n        ]),\n        tabIndex: PropTypes.number.isRequired,\n    }\n\n    static propTypes = {\n        ...LeafComponentBase.propTypesFromLinoLayout,\n        elem: PropTypes.object.isRequired,\n        urlParams: PropTypes.object.isRequired,\n    }\n\n    static defaultProps = {\n        editing_mode: false,\n        hide_label: false,\n        [constants.URL_PARAM_WINDOW_TYPE]: constants.WINDOW_TYPE_UNKNOWN,\n    }\n\n    constructor(props, context) {\n        super(props, context);\n        this.wrapperClasses = []\n        this.dataKey = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index : props.elem.name;\n        this.upController = props.urlParams.controller;\n        this.c = props.urlParams.controller;\n\n        this.filled = this.filled.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.getValueByName = this.getValueByName.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n        this.setLeafRef = this.setLeafRef.bind(this);\n    }\n\n    filled = () => (![\"\", null, undefined].includes(this.getValue()));\n\n    getValueByName(name) {\n        return ABCComponent.getValueByName({\n            name: name, props: this.props, context: this.context});\n    }\n\n    getValue() {\n        return this.getValueByName(this.dataKey);\n    }\n\n    innerHTML(dangerous, style={}) {\n        let v = this.getValue();\n        if (!this.c.filled(v)) v = \"\\u00a0\";\n        if (v instanceof Object) v = JSON.stringify(v);\n        if (dangerous) {\n            return <div style={style} dangerouslySetInnerHTML={{__html: v}}/>\n        } else {\n            return <div style={style}>{v}</div>\n        }\n    }\n\n    setLeafRef({input=false, type=\"\"} = {}) {\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL ||\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_INSERT\n        ) {\n            this.upController.dataContext.setLeafRef({\n                name: type === 'slave' ? this.actorID\n                    : this.props.elem.name, ref: this, input: input, type: type});\n            const {controller} = this.props.urlParams;\n            controller.onLeafMount();\n        }\n    }\n}\n\n\nexport class LeafComponentDelayedValue extends LeafComponentBase {\n    static requiredModules = [\"queryString\", \"sc\"].concat(LeafComponentBase.requiredModules);\n    static propTypes = {\n        ...LeafComponentBase.propTypes,\n        hasOwnContext: PropTypes.bool.isRequired\n    }\n    static defaultProps = {\n        ...LeafComponentBase.defaultProps,\n        hasOwnContext: false\n    }\n\n    constructor(props, context, notSlave=false) {\n        super(props, context);\n        this.delayed = !!props.elem.delayed_value;\n        const masterRelate = {}\n        if (!props.hasOwnContext) Object.assign(masterRelate,\n            this.upController.actionHandler.masterRelateForSlave());\n        this.state = {\n            ...this.state, value: null, data_url: null, ...masterRelate,\n            key: this.upController.newSlug(),\n            haveCTX: this.delayed && !notSlave,\n        }\n        this.state.UCMount = !this.state.haveCTX || !this.delayed;\n        this.actorID = props.elem.actor_id || (props.elem.name.includes('.')\n            ? props.elem.name : `${props.urlParams.packId}.${props.elem.name}`);\n\n        this.shouldComponentUpdate = this.shouldComponentUpdate.bind(this);\n        this.getData = this.getData.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    onReady() {\n        let val = super.getValue();\n        if (!this.delayed) {\n            this.setState({value: val});\n            return;\n        }\n        if (!this.props.hasOwnContext) this.setLeafRef({type: 'slave'});\n        this.upController.globals.panels[this.actorID] = this;\n        if (val !== null) this.getData(val.delayed_value_url)\n        else this.setState({value: \"\\u00a0\", data_url: undefined});\n    }\n\n    shouldComponentUpdate(nextProps, nextState, context) {\n        const val = super.getValue();\n        let update = (\n            this.state.value !== nextState.value ||\n            this.state.UCMount !== nextState.UCMount ||\n            this.state.ready !== nextState.ready\n        );\n        if (this.delayed) update = update || (this.state.value !== null &&\n            (val || {}).delayed_value_url !== this.state.data_url);\n        return update;\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const val = super.getValue();\n        if (this.delayed) {\n            if (this.state.data_url !== (val || {}).delayed_value_url) {\n                this.setState({value: null});\n                if (val !== null) this.update()\n                else this.setState({value: \"\\u00a0\", data_url: undefined});\n            }\n        } else this.setState({value: val});\n    }\n\n    componentWillUnmount() {\n        delete this.upController.globals.panels[this.actorID];\n    }\n\n    getValue() {\n        return this.state.value;\n    }\n\n    getData(data_url) {\n        if (!this.state.UCMount) return;\n        // const params = this.upController.actionHandler.getParams();\n        const params = this.props.urlParams.controller.actionHandler.getParams();\n        // this.props.urlParams.controller.actionHandler.defaultStaticParams(params);\n        params[constants.URL_PARAM_REQUESTING_PANEL\n        ] = this.upController.actionHandler.refName;\n\n        this.upController.actionHandler.silentFetch({\n            // path: `${data_url}?${this.ex.queryString.default.stringify(this.upController.actionHandler.commonParams())}`\n            path: `${data_url}?${this.ex.queryString.default.stringify(params)}`\n        }).then((data) => {\n            this.setState({value: data.data, buttons: data.buttons,\n                           data_url: data_url});\n            this.upController.root.setState({});\n        });\n    }\n\n    liveUpdate = (params) => {\n        if (params.mk === null ||\n            (params.mk === this.state.mk && params.mt === this.state.mt)\n        ) this.update();\n    }\n\n    update() {\n        this.getData(super.getValue().delayed_value_url);\n    }\n\n    getChildren() {\n        throw \"NotImplemented\";\n    }\n\n    render() {\n        if (!this.state.ready) return null;\n        const up = this.props.urlParams, c = up.controller;\n        return this.state.haveCTX ? <this.ex.sc.URLContext\n            getChildren={(context) => {\n                const elem = this.getChildren();\n                return elem;\n            }}\n            params={c.actionHandler.masterRelateForSlave()}\n            parentContext={c}\n            path={`/api/${this.actorID.split(\".\").join(\"/\")}`}\n            onContextReady={(context) => {\n                this.upController = context.controller;\n                this.setState({UCMount: true});\n            }}\n            simple={false}\n            summary={this}/> : this.getChildren();\n    }\n}\n\n\nexport class LeafComponentInput extends LeafComponentBase {\n    static requiredModules = [\"prInputText\", \"u\"].concat(LeafComponentBase.requiredModules);\n    constructor(props, context) {\n        super(props, context);\n\n        this.wrapperClasses.push(\"lino-input-leaf\");\n\n        this.state = {\n            ...this.state,\n            textSelected: false\n        }\n\n        this.styleClasses = [\n            \"disabled-input\",\n            \"l-card\",\n            \"unsaved-modification\",\n        ]\n\n        this.disabled = this.disabled.bind(this);\n        this.filled = this.filled.bind(this);\n        this.focus = this.focus.bind(this);\n        this.getCellStyleClasses = this.getCellStyleClasses.bind(this);\n        this.getLinoInput = this.getLinoInput.bind(this);\n        this.onChangeUpdate = this.onChangeUpdate.bind(this);\n        this.onInputRef = this.onInputRef.bind(this);\n        this.onKeyDown = this.onKeyDown.bind(this);\n        this.onRef = this.onRef.bind(this);\n        this.setCellStyle = this.setCellStyle.bind(this);\n        this.submit = this.submit.bind(this);\n        this.tabIndexMatch = this.tabIndexMatch.bind(this);\n        this.update = this.update.bind(this);\n    }\n\n    async prepare() {\n        this.inputState = {\n            inputComponent: this.ex.prInputText.InputText,\n            inputOnly: false,\n            inputProps: {},\n            onChangeUpdateAssert: (event) => (true),\n            postOnChange: (event) => (null),\n        }\n        this.setLeafRef({input: true});\n    }\n\n    disabled() {\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_CARDS)\n            return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_PARAMS)\n            return false;\n        if (!this.props.elem.editable) return true;\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            let row = this.context.rows[this.props.column.rowIndex],\n                last_item = row[row.length - 1];\n\n            // No meta, assume not disabled;\n            if (!last_item || !last_item.meta || last_item.phantom) return false;\n            // disable_editing set to true;\n            if (row[row.length - 2]) return true;\n            // check name in the disabled_fields meta;\n            return row[row.length - 3][this.props.elem.name] || false;\n        } else {\n            if (this.context.data.disable_editing) return true;\n            return this.context.data.disabled_fields[this.props.elem.name] || false;\n        }\n    }\n\n    /**\n     * Find HTML input element\n     */\n    findHTMLInputElement(ref) {\n        if (!ref) return ref;\n        if (ref.focusInput) ref = ref.focusInput\n        else if (ref.inputRef) ref = ref.inputRef.current\n        else if (ref.hasOwnProperty('getInput')) ref = ref.getInput();\n        return ref;\n    }\n\n    select(input) {\n        const _select = (_input) => {\n            this.state.textSelected = true;\n            _input.select();\n        }\n        if (input.select) {_select(input); return}\n        if (this.container) input = this.container.getElementsByTagName('input')[0];\n        if (input && input.select) _select(input);\n    }\n\n    focus() {\n        let ref = this.findHTMLInputElement(this.inputEl), input;\n        if (ref && !this.focusSet) {\n            if (ref.focus) {\n                ref.focus()\n            } else if (ref.click) {\n                ref.click();\n            }\n            this.focusSet = true\n            this.select(ref);\n        }\n    }\n\n    getCellStyleClasses(disabled) {\n        let styleClasses = [];\n        if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n            if (this.context.modifiedRows[this.props.column.rowIndex].includes(\n                this.props.elem.fields_index\n            )) {\n                styleClasses.push(\"unsaved-modification\");\n            }\n        } else {\n            styleClasses.push('l-card');\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] !== constants.WINDOW_TYPE_CARDS) {\n                if (disabled) styleClasses.push(\"disabled-input\")\n                else if (this.context.modified.includes(this.props.elem.name))\n                    styleClasses.push(\"unsaved-modification\");\n            }\n        }\n        return styleClasses;\n    }\n\n    getLinoInput() {\n        let v = this.getValue();\n        if (!this.c.filled(v)) v = \"\";\n        return <this.inputState.inputComponent\n            // autoFocus={this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE ? true : undefined}\n            onChange={(e) => {\n                if (!this.inputState.onChangeUpdateAssert(e)) return;\n                this.onChangeUpdate(e);\n                this.inputState.postOnChange(e);\n            }}\n            ref={this.onInputRef}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={v}\n            {...this.inputState.inputProps}/>;\n    }\n\n    onChangeUpdate(e) {\n        this.update({[this.dataKey]: e.target.value});\n        this.setState({});\n    }\n\n    onInputRef(ref) {\n        if (ref) {\n            if (ref != this.inputEl) this.focusDone = false;\n            this.inputEl = ref;\n            if (!this.focusDone) {\n                let htmlInput = this.findHTMLInputElement(ref);\n                if (document.activeElement === htmlInput) return;\n                if (this.tabIndexMatch()) this.focus();\n                this.focusDone = true\n            }\n        }\n    }\n\n    onKeyDown(event) {\n        if (event.code === \"Escape\" &&\n        this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL &&\n        this.props.editing_mode) {\n            this.ex.u.toggleEditingMode(this.props.urlParams);\n        }\n    }\n\n    onRef(ref) {\n        const disabled = this.disabled();\n        const onClick = () => {\n            this.container.onclick = (event) => {\n                if (!disabled) {\n                    Object.assign(this.upController.globals, {\n                        currentInputRowIndex: Object.assign({rowIndex: 0}, this.props.column).rowIndex,\n                        currentInputTabIndex: this.props.tabIndex,\n                        currentInputWindowType: this.props[constants.URL_PARAM_WINDOW_TYPE],\n                        currentInputAHRefName: this.upController.actionHandler.refName,\n                    });\n                    if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL) {\n                        if (!this.props.editing_mode)\n                            this.upController.history.replaceState({editing_mode: true})\n                        else {\n                            if (this.state.textSelected) this.setState({textSelected: false})\n                            else this.select(this.findHTMLInputElement(this.inputEl));\n                        }\n                    }\n                }\n            }\n        }\n        if (ref) {\n            this.container = ref;\n            if (this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE) {\n                this.container = ref.closest(\"td\");\n                onClick();\n            }\n            else if (\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_DETAIL ||\n                this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_INSERT\n            ) onClick();\n        }\n        this.setCellStyle(this.container, disabled);\n    }\n\n    setCellStyle(ref, disabled) {\n        if (ref) {\n            let classes = this.getCellStyleClasses(disabled);\n            this.styleClasses.forEach(item => {ref.classList.remove(item)});\n            classes.forEach(item => {ref.classList.add(item)});\n        }\n    }\n\n    submit() {\n        this.upController.actionHandler.submit({\n            cellInfo: {rowIndex: this.props.column.rowIndex}});\n    }\n\n    tabIndexMatch() {\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE &&\n            this.props.column.rowIndex !== this.upController.globals.currentInputRowIndex\n        ) return false;\n        if (\n            this.props[constants.URL_PARAM_WINDOW_TYPE] === this.upController.globals.currentInputWindowType &&\n            this.upController.actionHandler.refName === this.upController.globals.currentInputAHRefName &&\n            this.props.tabIndex === this.upController.globals.currentInputTabIndex\n        ) return true;\n        return false;\n    }\n\n    update(values) {\n        this.upController.actionHandler.update({\n            values: values, elem: this.props.elem, col: this.props.column,\n            windowType: this.props[constants.URL_PARAM_WINDOW_TYPE]});\n    }\n\n    render(hide_label=this.props.hide_label) {\n        if (!this.state.ready) return null;\n        const disabled = this.disabled();\n        if (this.container) this.setCellStyle(this.container, disabled);\n        return <Labeled {...this.props}\n            actions={(this.context.field_actions || {})[this.props.elem.name] || []}\n            hide_label={hide_label}\n            elem={this.props.elem} isFilled={this.filled()}>\n            <div\n                className={this.ex.classNames.default(\n                    this.wrapperClasses,\n                    {\"lino-disabled-leaf\": disabled},\n                )}\n                onKeyDown={this.onKeyDown}\n                ref={this.onRef}>\n                    {this.inputState.inputOnly ? this.getLinoInput() :\n                        this.props.editing_mode && !disabled ?\n                            this.getLinoInput() : this.innerHTML()}\n            </div>\n        </Labeled>\n    }\n}\n\n\nexport class LeafComponentInputChoices extends LeafComponentInput {\n    static requiredModules = [\"prDropdown\"].concat(LeafComponentInput.requiredModules);\n    constructor(props, context) {\n        super(props, context);\n        this.wrapperClasses.push(\"l-ChoiceListFieldElement\");\n        this.state = {\n            ...this.state,\n            hidden_value: null\n        }\n\n        this.dataKeyHidden = props[constants.URL_PARAM_WINDOW_TYPE] === constants.WINDOW_TYPE_TABLE\n            ? props.elem.fields_index_hidden\n            : props.elem.name + \"Hidden\";\n\n        this.getLinoInput = this.getLinoInput.bind(this);\n        this.getValue = this.getValue.bind(this);\n        this.innerHTML = this.innerHTML.bind(this);\n    }\n\n    onKeyDown = (e) => {\n        super.onKeyDown(e);\n        if (e.key === \"Enter\" && this.inputEl.getOverlay()) e.stopPropagation();\n    }\n\n    getValue() {\n        return {\n            text: super.getValue(),\n            value: this.getValueByName(this.dataKeyHidden)};\n    }\n\n    getLinoInput() {\n        return <this.ex.prDropdown.Dropdown\n            // appendTo={this.inputEl ? this.findHTMLInputElement(this.inputEl) : window.App.topDiv}\n            autoFocus={true}\n            itemTemplate={(item) => {\n                return <div dangerouslySetInnerHTML={{__html: item.text}}/>\n            }}\n            onChange={(e) => {\n                if (e.originalEvent.ctrlKey || e.originalEvent.altKey) return;\n                this.update({[this.dataKey]: e.value || null,  // have null instead of undefined\n                    [this.dataKeyHidden]: e.value || null});\n                this.setState({});\n            }}\n            optionLabel=\"text\"\n            options={this.options}\n            // panelStyle={{zIndex: \"99999\"}}\n            // ref={this.onInputRef}\n            showClear={this.props.elem.field_options.allowBlank}\n            style={{width: \"100%\"}}\n            tabIndex={this.props.tabIndex}\n            value={this.getValue().value}\n            valueTemplate={(item, options) => {\n                if (item) return <div dangerouslySetInnerHTML={{__html: item.text}}/>\n                return <div>&nbsp;</div>;\n            }}/>\n    }\n\n    innerHTML() {\n        let v = super.getValue();\n        if (!this.c.filled(v)) v = \"\\u00a0\";\n        // return <div style={{whiteSpace: \"nowrap\"}}>{v}</div>\n        return <div /* style={{whiteSpace: \"nowrap\"}} */ dangerouslySetInnerHTML={{__html: v}}/>\n    }\n}\n"],"names":["ex","name","classNames","prDropdown","prInputText","queryString","sc","u","maintainTableWidth","elem","count","ctx","undefined","this","keys","Object","flexs","length","forEach","key","tbl","document","getElementById","getElementsByClassName","getBoundingClientRect","width","Array","from","querySelectorAll","el","classList","join","includes","style","setProperty","RegisterImportPool","Labeled","_ref","_ref$actions","actions","label","children","_ref$hide_label","hide_label","_ref$isFilled","isFilled","localEx","getExReady","ready","React","className","title","assign","value","quicktip","help_text","map","action","i","dangerouslySetInnerHTML","__html","propTypes","PropTypes","isRequired","ABCComponent","_createClass","_classCallCheck","_ref2","props","context","constants","param_values","rows","column","rowIndex","data","LeafComponentBase","_Component","_this","_callSuper","filled","getValue","wrapperClasses","dataKey","fields_index","upController","urlParams","controller","c","bind","getValueByName","innerHTML","setLeafRef","_inherits","dangerous","arguments","v","JSON","stringify","_ref3","_ref3$input","input","_ref3$type","type","dataContext","actorID","ref","onLeafMount","Component","requiredModules","iPool","contextType","DataContextType","propTypesFromLinoLayout","_defineProperty","editing_mode","_objectSpread","defaultProps","LeafComponentDelayedValue","_LeafComponentBase","_this2","notSlave","liveUpdate","params","mk","state","mt","update","delayed","delayed_value","masterRelate","hasOwnContext","actionHandler","masterRelateForSlave","data_url","newSlug","haveCTX","UCMount","actor_id","concat","packId","shouldComponentUpdate","getData","val","_superPropGet","globals","panels","delayed_value_url","setState","nextProps","nextState","prevProps","prevState","_this3","getParams","refName","silentFetch","path","then","buttons","root","_this4","URLContext","getChildren","parentContext","split","onContextReady","simple","summary","LeafComponentInput","_LeafComponentBase2","_this5","push","textSelected","styleClasses","disabled","focus","getCellStyleClasses","getLinoInput","onChangeUpdate","onInputRef","onKeyDown","onRef","setCellStyle","submit","tabIndexMatch","_prepare","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","inputState","inputComponent","InputText","inputOnly","inputProps","onChangeUpdateAssert","event","postOnChange","stop","apply","editable","row","last_item","meta","phantom","disable_editing","disabled_fields","focusInput","inputRef","current","hasOwnProperty","getInput","_this6","_select","_input","select","container","getElementsByTagName","findHTMLInputElement","inputEl","focusSet","click","modifiedRows","modified","_this7","_extends","onChange","e","tabIndex","target","focusDone","htmlInput","activeElement","code","toggleEditingMode","_this8","onClick","onclick","currentInputRowIndex","currentInputTabIndex","currentInputWindowType","currentInputAHRefName","history","replaceState","closest","classes","item","remove","add","cellInfo","values","col","windowType","field_actions","LeafComponentInputChoices","_LeafComponentInput","_this9","getOverlay","stopPropagation","hidden_value","dataKeyHidden","fields_index_hidden","text","_this10","Dropdown","autoFocus","itemTemplate","originalEvent","ctrlKey","altKey","optionLabel","options","showClear","field_options","allowBlank","valueTemplate"],"sourceRoot":""}