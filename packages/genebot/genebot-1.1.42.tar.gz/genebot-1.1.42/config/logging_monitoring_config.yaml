# Logging Monitoring and Alerting Configuration

monitoring:
  enabled: true
  monitoring_interval: 60.0  # seconds
  
  # Prometheus integration
  prometheus:
    enabled: false
    gateway_url: "http://localhost:9091"
    job_name: "trading_bot"
  
  # Datadog integration
  datadog:
    enabled: false
    api_key: "${DATADOG_API_KEY}"
    app_key: "${DATADOG_APP_KEY}"
  
  # Slack alerting
  slack:
    enabled: false
    webhook_url: "${SLACK_WEBHOOK_URL}"
    channel: "#alerts"
  
  # Log aggregation (ELK Stack, etc.)
  log_aggregation:
    enabled: false
    endpoint_url: "http://localhost:9200"
    index_name: "trading-bot-logs"

# Log aggregation settings
aggregation:
  enabled: false
  format_type: "elasticsearch"  # elasticsearch, fluentd, splunk, logstash, generic_json
  output_directory: "logs/aggregation"
  buffer_size: 1000
  compress_output: true
  flush_interval: 300  # seconds
  retention_days: 30

# Alert rules configuration
alerting:
  enabled: true
  
  # Default alert rules (can be overridden)
  rules:
    - name: "high_error_rate"
      condition: "rate"
      operator: "gt"
      threshold: 10.0  # errors per minute
      severity: "high"
      description: "High error rate detected"
      time_window_minutes: 5
      cooldown_minutes: 15
      level_filter: "ERROR"
      enabled: true
      tags: ["error", "rate"]
    
    - name: "critical_errors"
      condition: "threshold"
      operator: "gt"
      threshold: 0
      severity: "critical"
      description: "Critical error occurred"
      time_window_minutes: 1
      cooldown_minutes: 5
      level_filter: "CRITICAL"
      enabled: true
      tags: ["critical", "error"]
    
    - name: "security_violations"
      condition: "pattern"
      pattern: "(unauthorized|forbidden|access denied|security violation)"
      severity: "high"
      description: "Security-related log message detected"
      time_window_minutes: 5
      cooldown_minutes: 10
      enabled: true
      tags: ["security", "pattern"]
    
    - name: "performance_issues"
      condition: "pattern"
      pattern: "(timeout|slow|performance|degradation)"
      severity: "medium"
      description: "Performance issue detected in logs"
      time_window_minutes: 10
      cooldown_minutes: 20
      enabled: true
      tags: ["performance", "pattern"]
    
    - name: "high_log_volume"
      condition: "rate"
      operator: "gt"
      threshold: 1000.0  # logs per minute
      severity: "medium"
      description: "Unusually high log volume"
      time_window_minutes: 5
      cooldown_minutes: 30
      enabled: true
      tags: ["volume", "rate"]
    
    - name: "trading_errors"
      condition: "pattern"
      pattern: "(trade failed|order rejected|insufficient balance)"
      severity: "high"
      description: "Trading-related error detected"
      time_window_minutes: 5
      cooldown_minutes: 10
      logger_filter: ".*trading.*"
      enabled: true
      tags: ["trading", "error", "pattern"]
    
    - name: "exchange_connectivity"
      condition: "pattern"
      pattern: "(connection failed|timeout|network error)"
      severity: "high"
      description: "Exchange connectivity issue"
      time_window_minutes: 3
      cooldown_minutes: 5
      logger_filter: ".*exchange.*"
      enabled: true
      tags: ["exchange", "connectivity", "pattern"]
    
    - name: "missing_heartbeat"
      condition: "absence"
      min_occurrences: 1
      severity: "high"
      description: "Application heartbeat missing"
      time_window_minutes: 10
      cooldown_minutes: 5
      logger_filter: ".*heartbeat.*"
      enabled: false  # Disabled by default, enable if using heartbeat logging
      tags: ["heartbeat", "absence"]

# Performance monitoring
performance_monitoring:
  enabled: true
  
  # Thresholds for performance alerts
  thresholds:
    log_operation_duration_ms: 1000  # Alert if logging takes > 1 second
    error_rate_per_minute: 10
    log_volume_per_minute: 1000
    memory_usage_mb: 1000
    disk_usage_percent: 90

# Health checks
health_checks:
  enabled: true
  interval_seconds: 300  # 5 minutes
  
  checks:
    - name: "log_file_growth"
      description: "Check if log files are growing (indicating active logging)"
      enabled: true
    
    - name: "disk_space"
      description: "Check available disk space for logs"
      enabled: true
      threshold_percent: 90
    
    - name: "log_rotation"
      description: "Check if log rotation is working properly"
      enabled: true
    
    - name: "handler_health"
      description: "Check if log handlers are functioning"
      enabled: true

# Notification channels
notifications:
  # Email notifications
  email:
    enabled: false
    smtp_server: "smtp.gmail.com"
    smtp_port: 587
    username: "${EMAIL_USERNAME}"
    password: "${EMAIL_PASSWORD}"
    from_address: "alerts@tradingbot.com"
    to_addresses: ["admin@tradingbot.com"]
    
  # Webhook notifications
  webhook:
    enabled: false
    url: "${WEBHOOK_URL}"
    headers:
      Content-Type: "application/json"
      Authorization: "Bearer ${WEBHOOK_TOKEN}"
    
  # PagerDuty integration
  pagerduty:
    enabled: false
    integration_key: "${PAGERDUTY_INTEGRATION_KEY}"
    
  # Custom notification script
  custom_script:
    enabled: false
    script_path: "scripts/custom_alert_handler.py"
    timeout_seconds: 30

# Metrics collection
metrics:
  enabled: true
  
  # Built-in metrics to collect
  collect:
    - log_messages_total
    - log_error_rate
    - log_operation_duration
    - log_file_sizes
    - log_handler_status
    - system_resources
  
  # Custom metrics collectors
  custom_collectors:
    - name: "trading_metrics"
      module: "genebot.monitoring.trading_metrics"
      function: "collect_trading_metrics"
      interval_seconds: 60
    
    - name: "exchange_metrics"
      module: "genebot.monitoring.exchange_metrics"
      function: "collect_exchange_metrics"
      interval_seconds: 30

# Log analysis
analysis:
  enabled: true
  
  # Automatic log analysis
  auto_analysis:
    enabled: true
    interval_minutes: 60
    
    # Analysis types
    error_pattern_detection: true
    performance_trend_analysis: true
    anomaly_detection: true
    log_volume_analysis: true
  
  # Report generation
  reports:
    enabled: true
    output_directory: "reports/logging"
    formats: ["json", "html"]
    
    # Report schedules
    schedules:
      - name: "hourly_summary"
        interval_minutes: 60
        include: ["error_summary", "performance_summary"]
      
      - name: "daily_report"
        interval_minutes: 1440  # 24 hours
        include: ["full_analysis", "trends", "recommendations"]

# Environment-specific overrides
environments:
  development:
    monitoring:
      monitoring_interval: 30.0
    alerting:
      rules:
        - name: "high_error_rate"
          threshold: 5.0  # Lower threshold for development
    
  production:
    monitoring:
      monitoring_interval: 60.0
    alerting:
      rules:
        - name: "high_error_rate"
          threshold: 20.0  # Higher threshold for production
    notifications:
      email:
        enabled: true
      slack:
        enabled: true
    
  testing:
    monitoring:
      enabled: false
    alerting:
      enabled: false