[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "genebot"
version = "1.1.38"
authors = [
    {name = "GeneBot Development Team", email = "support@genebot.ai"},
]
maintainers = [
    {name = "GeneBot Core Team", email = "maintainers@genebot.ai"},
]
description = "Advanced Multi-Market Trading Bot with Crypto & Forex Support"
readme = {file = "README_GENEBOT.md", content-type = "text/markdown"}
license = "MIT"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Financial and Insurance Industry",
    "Topic :: Office/Business :: Financial :: Investment",

    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "trading", "bot", "crypto", "forex", "algorithmic-trading",
    "multi-market", "risk-management", "backtesting", "portfolio",
    "arbitrage", "strategy", "automation", "finance", "investment"
]
dependencies = [
    # Core trading libraries
    "ccxt>=4.0.0",
    "pandas>=1.5.0",
    "numpy>=1.21.0",
    
    # Configuration and validation
    "pydantic>=2.0.0",
    "PyYAML>=6.0",
    "python-dotenv>=1.0.0",
    
    # HTTP and WebSocket clients
    "requests>=2.28.0",
    "aiohttp>=3.8.0",
    "websockets>=11.0",
    
    # Database and migrations
    "sqlalchemy>=2.0.0",
    "alembic>=1.12.0",
    
    # CLI and UI
    "colorama>=0.4.6",
    "tabulate>=0.9.0",
    "rich>=13.0.0",
    "click>=8.0.0",
    
    # Analysis and visualization
    "matplotlib>=3.6.0",
    "seaborn>=0.12.0",
    "scipy>=1.9.0",
    "TA-Lib>=0.4.25",
    "yfinance>=0.2.0",
    
    # System monitoring
    "psutil>=5.9.0",
    
    # Async support
    "asyncio-mqtt>=0.13.0",
    
    # Logging and monitoring
    "structlog>=23.0.0",
    
    # Security
    "cryptography>=41.0.0",
]

[project.optional-dependencies]
# Development tools
dev = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "pytest-xdist>=3.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.5",
    "pre-commit>=3.0",
    "isort>=5.12",
    "bandit>=1.7",
    "safety>=2.3",
]

# Monitoring and observability
monitoring = [
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    "opentelemetry-instrumentation>=0.41b0",
]

# Machine learning and AI
ml = [
    "scikit-learn>=1.3.0",
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "xgboost>=1.7.0",
    "lightgbm>=4.0.0",
    "optuna>=3.4.0",
]

# Advanced forex trading
forex = [
    "MetaTrader5>=5.0.45",
    "ib-insync>=0.9.86",
    "oandapyV20>=0.6.3",
    "fxcmpy>=1.3.0",
]

# Performance and optimization
performance = [
    "numba>=0.58.0",
    "cython>=3.0.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "orjson>=3.9.0",
]

# Documentation
docs = [
    "sphinx>=7.0",
    "sphinx-rtd-theme>=1.3",
    "myst-parser>=2.0",
    "sphinx-autodoc-typehints>=1.24",
]

# Testing extras
test = [
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "pytest-benchmark>=4.0",
    "hypothesis>=6.82",
    "factory-boy>=3.3",
]

# All optional dependencies
all = [
    # Development
    "pytest>=7.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0",
    "pytest-mock>=3.10",
    "pytest-xdist>=3.0",
    "black>=23.0",
    "ruff>=0.1.0",
    "mypy>=1.5",
    "pre-commit>=3.0",
    "isort>=5.12",
    "bandit>=1.7",
    "safety>=2.3",
    
    # Monitoring
    "prometheus-client>=0.17.0",
    "grafana-api>=1.0.3",
    "opentelemetry-api>=1.20.0",
    "opentelemetry-sdk>=1.20.0",
    
    # Machine Learning
    "scikit-learn>=1.3.0",
    "tensorflow>=2.13.0",
    "torch>=2.0.0",
    "xgboost>=1.7.0",
    
    # Forex
    "MetaTrader5>=5.0.45",
    "ib-insync>=0.9.86",
    "oandapyV20>=0.6.3",
    
    # Performance
    "numba>=0.58.0",
    "uvloop>=0.17.0; sys_platform != 'win32'",
    "orjson>=3.9.0",
]

[project.urls]
Homepage = "https://github.com/genebot/genebot"
Documentation = "https://docs.genebot.ai"
Repository = "https://github.com/genebot/genebot.git"
"Bug Tracker" = "https://github.com/genebot/genebot/issues"
"Feature Requests" = "https://github.com/genebot/genebot/discussions"
Changelog = "https://github.com/genebot/genebot/blob/main/CHANGELOG.md"
"Release Notes" = "https://github.com/genebot/genebot/releases"
"Security Policy" = "https://github.com/genebot/genebot/security/policy"
"Contributing" = "https://github.com/genebot/genebot/blob/main/CONTRIBUTING.md"
"Code of Conduct" = "https://github.com/genebot/genebot/blob/main/CODE_OF_CONDUCT.md"

[project.scripts]
genebot = "genebot.cli.main:main"
genebot-cli = "genebot.cli.main:main"

[tool.setuptools]
packages = [
    "genebot",
    "genebot.cli",
    "genebot.cli.commands",
    "genebot.cli.utils",
    "genebot.config",
    "genebot.core", 
    "genebot.strategies",
    "genebot.models",
    "genebot.exceptions",
    "genebot.utils",
    "genebot.markets",
    "genebot.analysis",
    "genebot.data",
    "genebot.logging"
]

[tool.setuptools.package-data]
genebot = ["config/*.yaml", "config/*.yml", "templates/*.yaml", "docs/*.md"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\\.pyi?$'
extend-exclude = '''
/(
  # directories
  \\.eggs
  | \\.git
  | \\.hg
  | \\.mypy_cache
  | \\.tox
  | \\.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["genebot"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "forex: marks tests as forex-specific",
    "crypto: marks tests as crypto-specific",
    "multi_market: marks tests as multi-market tests",
    "compliance: marks tests as compliance tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["genebot"]
omit = [
    "*/tests/*",
    "*/test_*",
    "setup.py",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    "venv",
]

[tool.bandit]
exclude_dirs = ["tests", "test_*"]
skips = ["B101", "B601"]

[tool.ruff]
target-version = "py38"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["B011"]





# Entry points for plugins and extensions
[project.entry-points."genebot.strategies"]
moving_average = "genebot.strategies.moving_average_strategy:MovingAverageStrategy"
rsi = "genebot.strategies.rsi_strategy:RSIStrategy"
mean_reversion = "genebot.strategies.mean_reversion_strategy:MeanReversionStrategy"

[project.entry-points."genebot.exchanges"]
ccxt = "genebot.exchanges.ccxt_adapter:CCXTAdapter"
oanda = "genebot.exchanges.forex.oanda_adapter:OandaAdapter"
ib = "genebot.exchanges.forex.ib_adapter:IBAdapter"

[project.entry-points."genebot.risk_managers"]
basic = "genebot.risk.risk_manager:RiskManager"
cross_market = "genebot.risk.cross_market_risk_manager:CrossMarketRiskManager"

