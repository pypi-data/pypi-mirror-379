[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "dogecloud-uploader"
version = "1.1.0"
description = "多吉云上传工具 - 支持图片和文件上传到多吉云存储"
readme = "README.md"
license = "MIT"
authors = [
    {name = "Overseas Report Team", email = "overseas.report@example.com"}
]
maintainers = [
    {name = "Overseas Report Team", email = "overseas.report@example.com"}
]
keywords = ["dogecloud", "upload", "storage", "image", "file"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Archiving",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.31.0",
    "python-dotenv>=1.0.0",
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    "aiohttp>=3.9.0",
    "click>=8.0.0",
    "Pillow>=10.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "types-requests>=2.31.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
]

[project.urls]
"Homepage" = "https://github.com/overseas-report/dogecloud-uploader"
"Bug Reports" = "https://github.com/overseas-report/dogecloud-uploader/issues"
"Source" = "https://github.com/overseas-report/dogecloud-uploader"
"Documentation" = "https://github.com/overseas-report/dogecloud-uploader#readme"

[project.scripts]
dogecloud = "dogecloud_uploader.cli:main"

[tool.setuptools]
packages = ["dogecloud_uploader"]

[tool.setuptools.package-data]
dogecloud_uploader = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
known_first_party = ["dogecloud_uploader"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]

[tool.coverage.run]
source = ["dogecloud_uploader"]
omit = [
    "*/tests/*",
    "*/test_*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]