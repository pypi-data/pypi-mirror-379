# This workflow automates the build, testing, and publication of a Python
# distribution to PyPI and TestPyPI.
name: Build and Publish

# Trigger the workflow on push events to tags starting with 'v' and 'main' branch.
on:
  push:
    tags:
    - v*
    branches:
    - main
    # Uncomment the below section to enable testing package builds on pull
    # requests to 'main'.
    # pull_request:
    #   branches:
    #   - main

jobs:
  # Job to build the Python distribution.
  build:
    name: Build distribution 📦
    runs-on: ubuntu-latest
    outputs:
        package_name: ${{ steps.build_artifacts.outputs.package_name }}
        package_version: ${{ steps.build_artifacts.outputs.package_version }}
    steps:
    - uses: actions/checkout@v5
      with:
        persist-credentials: false
        fetch-tags: true
        fetch-depth: 0
    - name: Set up Python
      uses: actions/setup-python@v6
      with:
        python-version: "3.x"
    - name: Install pypa/build
      run: python3 -m pip install build setuptools wheel --user
    - name: Build a binary wheel and a source tarball
      id: build_artifacts
      run: |
        python3 -m build
        # Extract package name and version from built artifacts
        wheel_file=$(ls dist/*.whl | head -n 1)
        package_name=$(basename "$wheel_file" | cut -d'-' -f1)
        package_version=$(basename "$wheel_file" | cut -d'-' -f2)
        echo "package_name=$package_name" >> $GITHUB_OUTPUT
        echo "package_version=$package_version" >> $GITHUB_OUTPUT
        echo "Built package: $package_name version $package_version"
    - name: Store the distribution packages
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

  # Job to publish the distribution to PyPI on tag pushes.
  publish-to-pypi:
    name: Publish Python 🐍 distribution 📦 to PyPI
    if: startsWith(github.ref, 'refs/tags/v') && github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/${{ needs.build.outputs.package_name }}
    permissions:
      id-token: write  # Required for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1



  # Job to publish the distribution to TestPyPI on pushes to the 'main' branch.
  publish-to-testpypi:
    name: Publish Python 🐍 distribution 📦 to TestPyPI
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: [build]
    runs-on: ubuntu-latest
    environment:
      name: testpypi
      url: https://test.pypi.org/p/${{ needs.build.outputs.package_name }}
    permissions:
      id-token: write  # Required for trusted publishing
    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v5
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish distribution 📦 to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
        verbose: true