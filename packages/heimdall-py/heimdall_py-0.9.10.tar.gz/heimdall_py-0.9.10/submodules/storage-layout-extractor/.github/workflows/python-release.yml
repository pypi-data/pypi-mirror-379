# This file is autogenerated by maturin v1.4.0
# To update, run
#
#    maturin generate-ci github
#
name: python-release

on:
  workflow_dispatch:
    inputs:
      sha:
        description: "The full sha of the commit to be released. If omitted, the latest commit on the default branch will be used."
        default: ""
        type: string
      release:
        description: 'Set to true to run the release on pypi, dry run otherwise'
        required: true
        default: 'false'
  pull_request:
    paths:
      - .github/workflows/python-release.yml

permissions:
  contents: read

jobs:
  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        target: [x86_64-unknown-linux-gnu]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
      - name: Remove lockfile to force fresh dependencies
        run: rm -f Cargo.lock
      - name: Update timestamps
        run: find . -type f -name "*.rs" -o -name "*.toml" -o -name "*.py" | xargs touch
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter python${{ matrix.python-version }}
          sccache: 'true'
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ strategy.job-index }}
          path: dist

  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        target: [x64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
      - name: Update timestamps
        run: Get-ChildItem -Recurse -Include *.rs,*.toml,*.py | ForEach-Object { $_.LastWriteTime = Get-Date }
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.target }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter python${{ matrix.python-version }}
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ strategy.job-index }}
          path: dist

  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        target: [x86_64, aarch64]
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
      - name: Update timestamps
        run: find . -type f -name "*.rs" -o -name "*.toml" -o -name "*.py" | xargs touch
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist --interpreter python${{ matrix.python-version }}
          sccache: 'true'
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos-${{ strategy.job-index }}
          path: dist

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.sha }}
      - name: Update timestamps
        run: find . -type f -name "*.rs" -o -name "*.toml" -o -name "*.py" | xargs touch
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels-sdist
          path: dist

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event.inputs.release == 'true'
    needs:
      - linux
      - windows
      - macos
      - sdist
    # environment:
    #   name: pypi
    #   url: https://pypi.org/p/storage-layout-extractor
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: wheels-*
          merge-multiple: true
      - name: Publish package distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          skip-existing: true
          packages-dir: ./