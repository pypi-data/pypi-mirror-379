# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions
# Based on ~/code/xcookie/xcookie/rc/tests.yml.in
# Now based on ~/code/xcookie/xcookie/builders/github_actions.py
# See: https://github.com/Erotemic/xcookie
# modified from https://github.com/ArjanCodes/examples/blob/main/2024/publish_pypi/release.yaml

name: Lint, Build, Test, Deploy

on:
  push:
    branches: [devel, master]
    tags:
      - "[0-9]+.[0-9]+.[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+a[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+b[0-9]+"
      - "[0-9]+.[0-9]+.[0-9]+rc[0-9]+"
  pull_request:

env:
  PACKAGE_NAME: "<PACKAGE_NAME>"
  OWNER: "<OWNER>"
  TAP_NAME: "<TAP_NAME>"


jobs:
  lint_job:
    ##
    # Run quick linting and typing checks.
    # To disable all linting add "linter=false" to the xcookie config.
    # To disable type checks add "notypes" to the xcookie tags.
    ##
    runs-on: ubuntu-latest
    outputs:
      scm_version: ${{ steps.version.outputs.scm_version }}
    steps:
    - name: Checkout source
      uses: actions/checkout@v5
      with:
        fetch-depth: 0 # fetch all history for accurate version calculation

    - name: Set up Python 3.11 for linting
      uses: actions/setup-python@v6
      with:
        python-version: '3.11'
    - name: Install dependencies
      run: |-
        python -m pip install --upgrade pip
        python -m pip install flake8 setuptools_scm

    - name: Get version with setuptools_scm
      id: version
      run: |
        SCM_VERSION=$(python -m setuptools_scm)
        echo "scm_version=$SCM_VERSION"
        echo scm_version=$SCM_VERSION >> $GITHUB_OUTPUT
      env:
        SETUPTOOLS_SCM_DEBUG: "1"
    - name: Lint with flake8
      run: |-
        # stop the build if there are Python syntax errors or undefined names
        flake8 ./src/python/pyxccd --count --select=E9,F63,F7,F82 --show-source --statistics
    - name: Typecheck with mypy
      run: |-
        python -m pip install mypy
        mypy --install-types --non-interactive ./src/python/pyxccd
        mypy ./src/python/pyxccd

  build_and_test_sdist:
    needs: lint_job # run linting before building and testing
    uses: ./.github/workflows/sdist_tests.yml
    with:
      scm_version: ${{ needs.lint_job.outputs.scm_version }}
  build_and_test_linux_wheels:
    needs: lint_job # run linting before building and testing
    if: github.event_name == 'push' && (github.event.ref =='refs/heads/master' || github.event.ref =='refs/heads/devel' || startsWith(github.event.ref, 'refs/tags')) 
    uses: ./.github/workflows/linux_wheels.yml
    with:
      scm_version: ${{ needs.lint_job.outputs.scm_version }}
  build_and_test_macos_wheels:
    needs: lint_job # run linting before building and testing
    if: github.event_name == 'push' && (github.event.ref =='refs/heads/master' || github.event.ref =='refs/heads/devel' || startsWith(github.event.ref, 'refs/tags')) 
    uses: ./.github/workflows/macos_wheels.yml
    with:
      scm_version: ${{ needs.lint_job.outputs.scm_version }}
  build_and_test_windows_wheels:
    needs: lint_job # run linting before building and testing
    if: github.event_name == 'push' && (github.event.ref =='refs/heads/master' || github.event.ref =='refs/heads/devel' || startsWith(github.event.ref, 'refs/tags')) 
    uses: ./.github/workflows/win_wheels.yml
    with:
      scm_version: ${{ needs.lint_job.outputs.scm_version }}

  # job to upload the package to PyPI
  upload-to-test-pypi:
    needs: 
      - lint_job
      - build_and_test_sdist
      - build_and_test_linux_wheels
      - build_and_test_macos_wheels
      - build_and_test_windows_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.event.ref =='refs/heads/main' || github.event.ref =='refs/heads/devel')
    environment:
      name: testpypi
      url: https://test.pypi.org/p/pyxccd
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - uses: actions/download-artifact@v5
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist # default upload path of pypi-publish
    - name: Show files to upload
      shell: bash
      run: ls -la dist

    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        # print-hash: true
        verbose: true
  upload-to-pypi:
    needs: 
      - lint_job
      - build_and_test_sdist
      - build_and_test_linux_wheels
      - build_and_test_macos_wheels
      - build_and_test_windows_wheels
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    environment:
      name: pypi
      url: https://pypi.org/p/pyxccd
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
    - name: ensure no "dev" in scm_version
      if: contains(needs.lint_job.outputs.scm_version, 'dev')
      run: |
        echo "Error: scm_version=${{ needs.lint_job.outputs.scm_version }} is a 'dev' version. This is not allowed for a release tag."
        exit 1
    - name: ensure scm_version match the tag name
      if: needs.lint_job.outputs.scm_version !=  github.ref_name
      run: |
        echo "Error: scm_version=${{ needs.lint_job.outputs.scm_version }} does not match the tag name ${{ github.ref_name }}."
        exit 1
    - uses: actions/download-artifact@v5
      with:
        pattern: wheels-*
        merge-multiple: true
        path: dist # default upload path of pypi-publish
    - name: Show files to upload
      shell: bash
      run: ls -la dist
    - name: Publish package distributions to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true
        verbose: true
