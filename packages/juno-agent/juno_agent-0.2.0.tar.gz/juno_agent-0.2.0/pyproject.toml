[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "juno-agent"
version = "0.2.0"
description = "AI-powered coding assistant for developers"
authors = [{name = "Juno AI", email = "support@askbudi.ai"}]
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "typer[all]>=0.12.0",
    "rich>=13.0.0",
    "textual>=0.70.0",
    "prompt_toolkit>=3.0.52",
    "requests>=2.31.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "gitpython>=3.1.0",
    "toml>=0.10.0",
    "click>=8.0.0",
    "tinyagent-py[all]>=0.1.18",
    "aiosqlite>=0.21.0",
    
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-mock>=3.10.0",
    "black>=23.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "textual-dev>=1.0.0",  # For Pilot UI testing
]
tracing = [
    "arize-phoenix>=4.0.0",
    "openinference-instrumentation-litellm>=0.1.0",
]
clipboard = [
    "pyperclip>=1.8.0",
]

[project.scripts]
juno-agent = "juno_agent.main:app"
juno-cli = "juno_agent.main:app"

[project.urls]
Homepage = "https://askbudi.ai"
Repository = "https://github.com/AskDevAI/juno-agent"
Documentation = "https://askbudi.ai"

[tool.setuptools.packages.find]
where = ["."]
include = ["juno_agent*"]

[tool.setuptools.package-data]
juno_agent = [
    "config/*.json",
    "prompts/*.yaml",
    "prompts/*.yml",
    "fancy_ui/*.json",
    "fancy_ui/*.md",
    "fancy_ui/styles/*.tcss",
    "fancy_ui/styles/*.css",
    "fancy_ui/setup/*.md",
    "fancy_ui/utils/*.md"
]

[tool.black]
line-length = 88
target-version = ['py310']

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
