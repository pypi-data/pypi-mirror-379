Metadata-Version: 2.4
Name: lakefs-sdk
Version: 1.70.1
Summary: lakeFS API
Home-page: https://github.com/treeverse/lakeFS/tree/master/clients/python
Author: Treeverse
Author-email: services@treeverse.io
License: Apache 2.0
Keywords: OpenAPI,OpenAPI-Generator,lakeFS API
Requires-Python: >=3.6
Description-Content-Type: text/markdown
Requires-Dist: urllib3<3.0.0,>=1.25.3
Requires-Dist: python-dateutil
Requires-Dist: pydantic>=1.10.5
Requires-Dist: aenum
Dynamic: author
Dynamic: author-email
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# lakefs-sdk
lakeFS HTTP API

This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.0
- Package version: 1.70.1
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.7+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/treeverse/lakeFS.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/treeverse/lakeFS.git`)

Then import the package:
```python
import lakefs_sdk
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import lakefs_sdk
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import time
import lakefs_sdk
from lakefs_sdk.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to /api/v1
# See configuration.py for a list of all supported configuration parameters.
configuration = lakefs_sdk.Configuration(
    host = "/api/v1"
)

# The client must configure the authentication and authorization parameters
# in accordance with the API server security policy.
# Examples for each auth method are provided below, use the example that
# satisfies your auth use case.

# Configure HTTP basic authorization: basic_auth
configuration = lakefs_sdk.Configuration(
    username = os.environ["USERNAME"],
    password = os.environ["PASSWORD"]
)

# Configure API key authorization: cookie_auth
configuration.api_key['cookie_auth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['cookie_auth'] = 'Bearer'

# Configure API key authorization: oidc_auth
configuration.api_key['oidc_auth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['oidc_auth'] = 'Bearer'

# Configure API key authorization: saml_auth
configuration.api_key['saml_auth'] = os.environ["API_KEY"]

# Uncomment below to setup prefix (e.g. Bearer) for API key, if needed
# configuration.api_key_prefix['saml_auth'] = 'Bearer'

# Configure Bearer authorization (JWT): jwt_token
configuration = lakefs_sdk.Configuration(
    access_token = os.environ["BEARER_TOKEN"]
)


# Enter a context with an instance of the API client
with lakefs_sdk.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = lakefs_sdk.ActionsApi(api_client)
    repository = 'repository_example' # str | 
    run_id = 'run_id_example' # str | 

    try:
        # get a run
        api_response = api_instance.get_run(repository, run_id)
        print("The response of ActionsApi->get_run:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling ActionsApi->get_run: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to */api/v1*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*ActionsApi* | [**get_run**](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionsApi.html#get_run) | **GET** /repositories/{repository}/actions/runs/{run_id} | get a run
*ActionsApi* | [**get_run_hook_output**](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionsApi.html#get_run_hook_output) | **GET** /repositories/{repository}/actions/runs/{run_id}/hooks/{hook_run_id}/output | get run hook output
*ActionsApi* | [**list_repository_runs**](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionsApi.html#list_repository_runs) | **GET** /repositories/{repository}/actions/runs | list runs
*ActionsApi* | [**list_run_hooks**](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionsApi.html#list_run_hooks) | **GET** /repositories/{repository}/actions/runs/{run_id}/hooks | list run hooks
*AuthApi* | [**add_group_membership**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#add_group_membership) | **PUT** /auth/groups/{groupId}/members/{userId} | add group membership
*AuthApi* | [**attach_policy_to_group**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#attach_policy_to_group) | **PUT** /auth/groups/{groupId}/policies/{policyId} | attach policy to group
*AuthApi* | [**attach_policy_to_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#attach_policy_to_user) | **PUT** /auth/users/{userId}/policies/{policyId} | attach policy to user
*AuthApi* | [**create_credentials**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#create_credentials) | **POST** /auth/users/{userId}/credentials | create credentials
*AuthApi* | [**create_group**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#create_group) | **POST** /auth/groups | create group
*AuthApi* | [**create_policy**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#create_policy) | **POST** /auth/policies | create policy
*AuthApi* | [**create_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#create_user) | **POST** /auth/users | create user
*AuthApi* | [**create_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#create_user_external_principal) | **POST** /auth/users/{userId}/external/principals | attach external principal to user
*AuthApi* | [**delete_credentials**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_credentials) | **DELETE** /auth/users/{userId}/credentials/{accessKeyId} | delete credentials
*AuthApi* | [**delete_group**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_group) | **DELETE** /auth/groups/{groupId} | delete group
*AuthApi* | [**delete_group_membership**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_group_membership) | **DELETE** /auth/groups/{groupId}/members/{userId} | delete group membership
*AuthApi* | [**delete_policy**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_policy) | **DELETE** /auth/policies/{policyId} | delete policy
*AuthApi* | [**delete_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_user) | **DELETE** /auth/users/{userId} | delete user
*AuthApi* | [**delete_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#delete_user_external_principal) | **DELETE** /auth/users/{userId}/external/principals | delete external principal from user
*AuthApi* | [**detach_policy_from_group**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#detach_policy_from_group) | **DELETE** /auth/groups/{groupId}/policies/{policyId} | detach policy from group
*AuthApi* | [**detach_policy_from_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#detach_policy_from_user) | **DELETE** /auth/users/{userId}/policies/{policyId} | detach policy from user
*AuthApi* | [**external_principal_login**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#external_principal_login) | **POST** /auth/external/principal/login | perform a login using an external authenticator
*AuthApi* | [**get_credentials**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_credentials) | **GET** /auth/users/{userId}/credentials/{accessKeyId} | get credentials
*AuthApi* | [**get_current_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_current_user) | **GET** /user | get current user
*AuthApi* | [**get_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_external_principal) | **GET** /auth/external/principals | describe external principal by id
*AuthApi* | [**get_group**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_group) | **GET** /auth/groups/{groupId} | get group
*AuthApi* | [**get_group_acl**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_group_acl) | **GET** /auth/groups/{groupId}/acl | get ACL of group
*AuthApi* | [**get_policy**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_policy) | **GET** /auth/policies/{policyId} | get policy
*AuthApi* | [**get_user**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#get_user) | **GET** /auth/users/{userId} | get user
*AuthApi* | [**list_group_members**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_group_members) | **GET** /auth/groups/{groupId}/members | list group members
*AuthApi* | [**list_group_policies**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_group_policies) | **GET** /auth/groups/{groupId}/policies | list group policies
*AuthApi* | [**list_groups**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_groups) | **GET** /auth/groups | list groups
*AuthApi* | [**list_policies**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_policies) | **GET** /auth/policies | list policies
*AuthApi* | [**list_user_credentials**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_user_credentials) | **GET** /auth/users/{userId}/credentials | list user credentials
*AuthApi* | [**list_user_external_principals**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_user_external_principals) | **GET** /auth/users/{userId}/external/principals/ls | list user external policies attached to a user
*AuthApi* | [**list_user_groups**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_user_groups) | **GET** /auth/users/{userId}/groups | list user groups
*AuthApi* | [**list_user_policies**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_user_policies) | **GET** /auth/users/{userId}/policies | list user policies
*AuthApi* | [**list_users**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#list_users) | **GET** /auth/users | list users
*AuthApi* | [**login**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#login) | **POST** /auth/login | perform a login
*AuthApi* | [**oauth_callback**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#oauth_callback) | **GET** /oidc/callback | 
*AuthApi* | [**set_group_acl**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#set_group_acl) | **POST** /auth/groups/{groupId}/acl | set ACL of group
*AuthApi* | [**update_policy**](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthApi.html#update_policy) | **PUT** /auth/policies/{policyId} | update policy
*BranchesApi* | [**cherry_pick**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#cherry_pick) | **POST** /repositories/{repository}/branches/{branch}/cherry-pick | Replay the changes from the given commit on the branch
*BranchesApi* | [**create_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#create_branch) | **POST** /repositories/{repository}/branches | create branch
*BranchesApi* | [**delete_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#delete_branch) | **DELETE** /repositories/{repository}/branches/{branch} | delete branch
*BranchesApi* | [**diff_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#diff_branch) | **GET** /repositories/{repository}/branches/{branch}/diff | diff branch
*BranchesApi* | [**get_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#get_branch) | **GET** /repositories/{repository}/branches/{branch} | get branch
*BranchesApi* | [**list_branches**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#list_branches) | **GET** /repositories/{repository}/branches | list branches
*BranchesApi* | [**reset_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#reset_branch) | **PUT** /repositories/{repository}/branches/{branch} | reset branch
*BranchesApi* | [**revert_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchesApi.html#revert_branch) | **POST** /repositories/{repository}/branches/{branch}/revert | revert
*CommitsApi* | [**commit**](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitsApi.html#commit) | **POST** /repositories/{repository}/branches/{branch}/commits | create commit
*CommitsApi* | [**get_commit**](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitsApi.html#get_commit) | **GET** /repositories/{repository}/commits/{commitId} | get commit
*ConfigApi* | [**get_config**](https://pydocs-sdk.lakefs.io/v1.70/docs/ConfigApi.html#get_config) | **GET** /config | 
*ExperimentalApi* | [**abort_presign_multipart_upload**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#abort_presign_multipart_upload) | **DELETE** /repositories/{repository}/branches/{branch}/staging/pmpu/{uploadId} | Abort a presign multipart upload
*ExperimentalApi* | [**complete_presign_multipart_upload**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#complete_presign_multipart_upload) | **PUT** /repositories/{repository}/branches/{branch}/staging/pmpu/{uploadId} | Complete a presign multipart upload request
*ExperimentalApi* | [**create_presign_multipart_upload**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#create_presign_multipart_upload) | **POST** /repositories/{repository}/branches/{branch}/staging/pmpu | Initiate a multipart upload
*ExperimentalApi* | [**create_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#create_pull_request) | **POST** /repositories/{repository}/pulls | create pull request
*ExperimentalApi* | [**create_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#create_user_external_principal) | **POST** /auth/users/{userId}/external/principals | attach external principal to user
*ExperimentalApi* | [**delete_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#delete_user_external_principal) | **DELETE** /auth/users/{userId}/external/principals | delete external principal from user
*ExperimentalApi* | [**external_principal_login**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#external_principal_login) | **POST** /auth/external/principal/login | perform a login using an external authenticator
*ExperimentalApi* | [**get_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#get_external_principal) | **GET** /auth/external/principals | describe external principal by id
*ExperimentalApi* | [**get_license**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#get_license) | **GET** /license | 
*ExperimentalApi* | [**get_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#get_pull_request) | **GET** /repositories/{repository}/pulls/{pull_request} | get pull request
*ExperimentalApi* | [**hard_reset_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#hard_reset_branch) | **PUT** /repositories/{repository}/branches/{branch}/hard_reset | hard reset branch
*ExperimentalApi* | [**list_pull_requests**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#list_pull_requests) | **GET** /repositories/{repository}/pulls | list pull requests
*ExperimentalApi* | [**list_user_external_principals**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#list_user_external_principals) | **GET** /auth/users/{userId}/external/principals/ls | list user external policies attached to a user
*ExperimentalApi* | [**merge_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#merge_pull_request) | **PUT** /repositories/{repository}/pulls/{pull_request}/merge | merge pull request
*ExperimentalApi* | [**sts_login**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#sts_login) | **POST** /sts/login | perform a login with STS
*ExperimentalApi* | [**update_object_user_metadata**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#update_object_user_metadata) | **PUT** /repositories/{repository}/branches/{branch}/objects/stat/user_metadata | rewrite (all) object metadata
*ExperimentalApi* | [**update_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#update_pull_request) | **PATCH** /repositories/{repository}/pulls/{pull_request} | update pull request
*ExperimentalApi* | [**upload_part**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#upload_part) | **PUT** /repositories/{repository}/branches/{branch}/staging/pmpu/{uploadId}/parts/{partNumber} | 
*ExperimentalApi* | [**upload_part_copy**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExperimentalApi.html#upload_part_copy) | **PUT** /repositories/{repository}/branches/{branch}/staging/pmpu/{uploadId}/parts/{partNumber}/copy | 
*ExternalApi* | [**create_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalApi.html#create_user_external_principal) | **POST** /auth/users/{userId}/external/principals | attach external principal to user
*ExternalApi* | [**delete_user_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalApi.html#delete_user_external_principal) | **DELETE** /auth/users/{userId}/external/principals | delete external principal from user
*ExternalApi* | [**external_principal_login**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalApi.html#external_principal_login) | **POST** /auth/external/principal/login | perform a login using an external authenticator
*ExternalApi* | [**get_external_principal**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalApi.html#get_external_principal) | **GET** /auth/external/principals | describe external principal by id
*ExternalApi* | [**list_user_external_principals**](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalApi.html#list_user_external_principals) | **GET** /auth/users/{userId}/external/principals/ls | list user external policies attached to a user
*HealthCheckApi* | [**health_check**](https://pydocs-sdk.lakefs.io/v1.70/docs/HealthCheckApi.html#health_check) | **GET** /healthcheck | 
*ImportApi* | [**import_cancel**](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportApi.html#import_cancel) | **DELETE** /repositories/{repository}/branches/{branch}/import | cancel ongoing import
*ImportApi* | [**import_start**](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportApi.html#import_start) | **POST** /repositories/{repository}/branches/{branch}/import | import data from object store
*ImportApi* | [**import_status**](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportApi.html#import_status) | **GET** /repositories/{repository}/branches/{branch}/import | get import status
*InternalApi* | [**create_branch_protection_rule_preflight**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#create_branch_protection_rule_preflight) | **GET** /repositories/{repository}/branch_protection/set_allowed | 
*InternalApi* | [**create_commit_record**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#create_commit_record) | **POST** /repositories/{repository}/commits | create commit record
*InternalApi* | [**create_symlink_file**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#create_symlink_file) | **POST** /repositories/{repository}/refs/{branch}/symlink | creates symlink files corresponding to the given directory
*InternalApi* | [**delete_repository_metadata**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#delete_repository_metadata) | **DELETE** /repositories/{repository}/metadata | delete repository metadata
*InternalApi* | [**dump_refs**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#dump_refs) | **PUT** /repositories/{repository}/refs/dump | Dump repository refs (tags, commits, branches) to object store Deprecated: a new API will introduce long running operations 
*InternalApi* | [**get_auth_capabilities**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_auth_capabilities) | **GET** /auth/capabilities | list authentication capabilities supported
*InternalApi* | [**get_garbage_collection_config**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_garbage_collection_config) | **GET** /config/garbage-collection | 
*InternalApi* | [**get_lake_fs_version**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_lake_fs_version) | **GET** /config/version | 
*InternalApi* | [**get_metadata_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_metadata_object) | **GET** /repositories/{repository}/metadata/object/{type}/{object_id} | return a lakeFS metadata object by ID
*InternalApi* | [**get_setup_state**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_setup_state) | **GET** /setup_lakefs | check if the lakeFS installation is already set up
*InternalApi* | [**get_storage_config**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_storage_config) | **GET** /config/storage | 
*InternalApi* | [**get_usage_report_summary**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#get_usage_report_summary) | **GET** /usage-report/summary | get usage report summary
*InternalApi* | [**internal_create_branch_protection_rule**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_create_branch_protection_rule) | **POST** /repositories/{repository}/branch_protection | 
*InternalApi* | [**internal_delete_branch_protection_rule**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_delete_branch_protection_rule) | **DELETE** /repositories/{repository}/branch_protection | 
*InternalApi* | [**internal_delete_garbage_collection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_delete_garbage_collection_rules) | **DELETE** /repositories/{repository}/gc/rules | 
*InternalApi* | [**internal_get_branch_protection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_get_branch_protection_rules) | **GET** /repositories/{repository}/branch_protection | get branch protection rules
*InternalApi* | [**internal_get_garbage_collection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_get_garbage_collection_rules) | **GET** /repositories/{repository}/gc/rules | 
*InternalApi* | [**internal_set_garbage_collection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#internal_set_garbage_collection_rules) | **POST** /repositories/{repository}/gc/rules | 
*InternalApi* | [**post_stats_events**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#post_stats_events) | **POST** /statistics | post stats events, this endpoint is meant for internal use only
*InternalApi* | [**prepare_garbage_collection_commits**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#prepare_garbage_collection_commits) | **POST** /repositories/{repository}/gc/prepare_commits | save lists of active commits for garbage collection
*InternalApi* | [**prepare_garbage_collection_uncommitted**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#prepare_garbage_collection_uncommitted) | **POST** /repositories/{repository}/gc/prepare_uncommited | save repository uncommitted metadata for garbage collection
*InternalApi* | [**restore_refs**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#restore_refs) | **PUT** /repositories/{repository}/refs/restore | Restore repository refs (tags, commits, branches) from object store. Deprecated: a new API will introduce long running operations 
*InternalApi* | [**set_garbage_collection_rules_preflight**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#set_garbage_collection_rules_preflight) | **GET** /repositories/{repository}/gc/rules/set_allowed | 
*InternalApi* | [**set_repository_metadata**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#set_repository_metadata) | **POST** /repositories/{repository}/metadata | set repository metadata
*InternalApi* | [**setup**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#setup) | **POST** /setup_lakefs | setup lakeFS and create a first user
*InternalApi* | [**setup_comm_prefs**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#setup_comm_prefs) | **POST** /setup_comm_prefs | setup communications preferences
*InternalApi* | [**stage_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#stage_object) | **PUT** /repositories/{repository}/branches/{branch}/objects | stage an object&#39;s metadata for the given branch
*InternalApi* | [**upload_object_preflight**](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalApi.html#upload_object_preflight) | **GET** /repositories/{repository}/branches/{branch}/objects/stage_allowed | 
*LicenseApi* | [**get_license**](https://pydocs-sdk.lakefs.io/v1.70/docs/LicenseApi.html#get_license) | **GET** /license | 
*MetadataApi* | [**get_meta_range**](https://pydocs-sdk.lakefs.io/v1.70/docs/MetadataApi.html#get_meta_range) | **GET** /repositories/{repository}/metadata/meta_range/{meta_range} | return URI to a meta-range file
*MetadataApi* | [**get_range**](https://pydocs-sdk.lakefs.io/v1.70/docs/MetadataApi.html#get_range) | **GET** /repositories/{repository}/metadata/range/{range} | return URI to a range file
*ObjectsApi* | [**copy_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#copy_object) | **POST** /repositories/{repository}/branches/{branch}/objects/copy | create a copy of an object
*ObjectsApi* | [**delete_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#delete_object) | **DELETE** /repositories/{repository}/branches/{branch}/objects | delete object. Missing objects will not return a NotFound error.
*ObjectsApi* | [**delete_objects**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#delete_objects) | **POST** /repositories/{repository}/branches/{branch}/objects/delete | delete objects. Missing objects will not return a NotFound error.
*ObjectsApi* | [**get_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#get_object) | **GET** /repositories/{repository}/refs/{ref}/objects | get object content
*ObjectsApi* | [**get_underlying_properties**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#get_underlying_properties) | **GET** /repositories/{repository}/refs/{ref}/objects/underlyingProperties | get object properties on underlying storage
*ObjectsApi* | [**head_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#head_object) | **HEAD** /repositories/{repository}/refs/{ref}/objects | check if object exists
*ObjectsApi* | [**list_objects**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#list_objects) | **GET** /repositories/{repository}/refs/{ref}/objects/ls | list objects under a given prefix
*ObjectsApi* | [**stat_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#stat_object) | **GET** /repositories/{repository}/refs/{ref}/objects/stat | get object metadata
*ObjectsApi* | [**update_object_user_metadata**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#update_object_user_metadata) | **PUT** /repositories/{repository}/branches/{branch}/objects/stat/user_metadata | rewrite (all) object metadata
*ObjectsApi* | [**upload_object**](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectsApi.html#upload_object) | **POST** /repositories/{repository}/branches/{branch}/objects | 
*PullsApi* | [**create_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/PullsApi.html#create_pull_request) | **POST** /repositories/{repository}/pulls | create pull request
*PullsApi* | [**get_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/PullsApi.html#get_pull_request) | **GET** /repositories/{repository}/pulls/{pull_request} | get pull request
*PullsApi* | [**list_pull_requests**](https://pydocs-sdk.lakefs.io/v1.70/docs/PullsApi.html#list_pull_requests) | **GET** /repositories/{repository}/pulls | list pull requests
*PullsApi* | [**merge_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/PullsApi.html#merge_pull_request) | **PUT** /repositories/{repository}/pulls/{pull_request}/merge | merge pull request
*PullsApi* | [**update_pull_request**](https://pydocs-sdk.lakefs.io/v1.70/docs/PullsApi.html#update_pull_request) | **PATCH** /repositories/{repository}/pulls/{pull_request} | update pull request
*RefsApi* | [**diff_refs**](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsApi.html#diff_refs) | **GET** /repositories/{repository}/refs/{leftRef}/diff/{rightRef} | diff references
*RefsApi* | [**find_merge_base**](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsApi.html#find_merge_base) | **GET** /repositories/{repository}/refs/{sourceRef}/merge/{destinationBranch} | find the merge base for 2 references
*RefsApi* | [**log_commits**](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsApi.html#log_commits) | **GET** /repositories/{repository}/refs/{ref}/commits | get commit log from ref. If both objects and prefixes are empty, return all commits.
*RefsApi* | [**merge_into_branch**](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsApi.html#merge_into_branch) | **POST** /repositories/{repository}/refs/{sourceRef}/merge/{destinationBranch} | merge references
*RepositoriesApi* | [**create_repository**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#create_repository) | **POST** /repositories | create repository
*RepositoriesApi* | [**delete_gc_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#delete_gc_rules) | **DELETE** /repositories/{repository}/settings/gc_rules | 
*RepositoriesApi* | [**delete_repository**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#delete_repository) | **DELETE** /repositories/{repository} | delete repository
*RepositoriesApi* | [**dump_status**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#dump_status) | **GET** /repositories/{repository}/dump | Status of a repository dump task
*RepositoriesApi* | [**dump_submit**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#dump_submit) | **POST** /repositories/{repository}/dump | Backup the repository metadata (tags, commits, branches) and save the backup to the object store.
*RepositoriesApi* | [**get_branch_protection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#get_branch_protection_rules) | **GET** /repositories/{repository}/settings/branch_protection | get branch protection rules
*RepositoriesApi* | [**get_gc_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#get_gc_rules) | **GET** /repositories/{repository}/settings/gc_rules | get repository GC rules
*RepositoriesApi* | [**get_repository**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#get_repository) | **GET** /repositories/{repository} | get repository
*RepositoriesApi* | [**get_repository_metadata**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#get_repository_metadata) | **GET** /repositories/{repository}/metadata | get repository metadata
*RepositoriesApi* | [**list_repositories**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#list_repositories) | **GET** /repositories | list repositories
*RepositoriesApi* | [**restore_status**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#restore_status) | **GET** /repositories/{repository}/restore | Status of a restore request
*RepositoriesApi* | [**restore_submit**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#restore_submit) | **POST** /repositories/{repository}/restore | Restore repository from a dump in the object store
*RepositoriesApi* | [**set_branch_protection_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#set_branch_protection_rules) | **PUT** /repositories/{repository}/settings/branch_protection | 
*RepositoriesApi* | [**set_gc_rules**](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoriesApi.html#set_gc_rules) | **PUT** /repositories/{repository}/settings/gc_rules | 
*StagingApi* | [**get_physical_address**](https://pydocs-sdk.lakefs.io/v1.70/docs/StagingApi.html#get_physical_address) | **GET** /repositories/{repository}/branches/{branch}/staging/backing | generate an address to which the client can upload an object
*StagingApi* | [**link_physical_address**](https://pydocs-sdk.lakefs.io/v1.70/docs/StagingApi.html#link_physical_address) | **PUT** /repositories/{repository}/branches/{branch}/staging/backing | associate staging on this physical address with a path
*TagsApi* | [**create_tag**](https://pydocs-sdk.lakefs.io/v1.70/docs/TagsApi.html#create_tag) | **POST** /repositories/{repository}/tags | create tag
*TagsApi* | [**delete_tag**](https://pydocs-sdk.lakefs.io/v1.70/docs/TagsApi.html#delete_tag) | **DELETE** /repositories/{repository}/tags/{tag} | delete tag
*TagsApi* | [**get_tag**](https://pydocs-sdk.lakefs.io/v1.70/docs/TagsApi.html#get_tag) | **GET** /repositories/{repository}/tags/{tag} | get tag
*TagsApi* | [**list_tags**](https://pydocs-sdk.lakefs.io/v1.70/docs/TagsApi.html#list_tags) | **GET** /repositories/{repository}/tags | list tags


## Documentation For Models

 - [ACL](https://pydocs-sdk.lakefs.io/v1.70/docs/ACL.html)
 - [AbortPresignMultipartUpload](https://pydocs-sdk.lakefs.io/v1.70/docs/AbortPresignMultipartUpload.html)
 - [AccessKeyCredentials](https://pydocs-sdk.lakefs.io/v1.70/docs/AccessKeyCredentials.html)
 - [ActionRun](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionRun.html)
 - [ActionRunList](https://pydocs-sdk.lakefs.io/v1.70/docs/ActionRunList.html)
 - [AuthCapabilities](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthCapabilities.html)
 - [AuthenticationToken](https://pydocs-sdk.lakefs.io/v1.70/docs/AuthenticationToken.html)
 - [BranchCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchCreation.html)
 - [BranchProtectionRule](https://pydocs-sdk.lakefs.io/v1.70/docs/BranchProtectionRule.html)
 - [CherryPickCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/CherryPickCreation.html)
 - [CommPrefsInput](https://pydocs-sdk.lakefs.io/v1.70/docs/CommPrefsInput.html)
 - [Commit](https://pydocs-sdk.lakefs.io/v1.70/docs/Commit.html)
 - [CommitCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitCreation.html)
 - [CommitList](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitList.html)
 - [CommitOverrides](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitOverrides.html)
 - [CommitRecordCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/CommitRecordCreation.html)
 - [CompletePresignMultipartUpload](https://pydocs-sdk.lakefs.io/v1.70/docs/CompletePresignMultipartUpload.html)
 - [Config](https://pydocs-sdk.lakefs.io/v1.70/docs/Config.html)
 - [CopyPartSource](https://pydocs-sdk.lakefs.io/v1.70/docs/CopyPartSource.html)
 - [Credentials](https://pydocs-sdk.lakefs.io/v1.70/docs/Credentials.html)
 - [CredentialsList](https://pydocs-sdk.lakefs.io/v1.70/docs/CredentialsList.html)
 - [CredentialsWithSecret](https://pydocs-sdk.lakefs.io/v1.70/docs/CredentialsWithSecret.html)
 - [CurrentUser](https://pydocs-sdk.lakefs.io/v1.70/docs/CurrentUser.html)
 - [CustomViewer](https://pydocs-sdk.lakefs.io/v1.70/docs/CustomViewer.html)
 - [Diff](https://pydocs-sdk.lakefs.io/v1.70/docs/Diff.html)
 - [DiffList](https://pydocs-sdk.lakefs.io/v1.70/docs/DiffList.html)
 - [DiffObjectStat](https://pydocs-sdk.lakefs.io/v1.70/docs/DiffObjectStat.html)
 - [Error](https://pydocs-sdk.lakefs.io/v1.70/docs/Error.html)
 - [ErrorNoACL](https://pydocs-sdk.lakefs.io/v1.70/docs/ErrorNoACL.html)
 - [ExternalLoginInformation](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalLoginInformation.html)
 - [ExternalPrincipal](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalPrincipal.html)
 - [ExternalPrincipalCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalPrincipalCreation.html)
 - [ExternalPrincipalList](https://pydocs-sdk.lakefs.io/v1.70/docs/ExternalPrincipalList.html)
 - [FindMergeBaseResult](https://pydocs-sdk.lakefs.io/v1.70/docs/FindMergeBaseResult.html)
 - [GarbageCollectionConfig](https://pydocs-sdk.lakefs.io/v1.70/docs/GarbageCollectionConfig.html)
 - [GarbageCollectionPrepareResponse](https://pydocs-sdk.lakefs.io/v1.70/docs/GarbageCollectionPrepareResponse.html)
 - [GarbageCollectionRule](https://pydocs-sdk.lakefs.io/v1.70/docs/GarbageCollectionRule.html)
 - [GarbageCollectionRules](https://pydocs-sdk.lakefs.io/v1.70/docs/GarbageCollectionRules.html)
 - [Group](https://pydocs-sdk.lakefs.io/v1.70/docs/Group.html)
 - [GroupCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/GroupCreation.html)
 - [GroupList](https://pydocs-sdk.lakefs.io/v1.70/docs/GroupList.html)
 - [HookRun](https://pydocs-sdk.lakefs.io/v1.70/docs/HookRun.html)
 - [HookRunList](https://pydocs-sdk.lakefs.io/v1.70/docs/HookRunList.html)
 - [ImportCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportCreation.html)
 - [ImportCreationResponse](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportCreationResponse.html)
 - [ImportLocation](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportLocation.html)
 - [ImportStatus](https://pydocs-sdk.lakefs.io/v1.70/docs/ImportStatus.html)
 - [InstallationUsageReport](https://pydocs-sdk.lakefs.io/v1.70/docs/InstallationUsageReport.html)
 - [InternalDeleteBranchProtectionRuleRequest](https://pydocs-sdk.lakefs.io/v1.70/docs/InternalDeleteBranchProtectionRuleRequest.html)
 - [License](https://pydocs-sdk.lakefs.io/v1.70/docs/License.html)
 - [LoginConfig](https://pydocs-sdk.lakefs.io/v1.70/docs/LoginConfig.html)
 - [LoginInformation](https://pydocs-sdk.lakefs.io/v1.70/docs/LoginInformation.html)
 - [Merge](https://pydocs-sdk.lakefs.io/v1.70/docs/Merge.html)
 - [MergeResult](https://pydocs-sdk.lakefs.io/v1.70/docs/MergeResult.html)
 - [MetaRangeCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/MetaRangeCreation.html)
 - [MetaRangeCreationResponse](https://pydocs-sdk.lakefs.io/v1.70/docs/MetaRangeCreationResponse.html)
 - [ObjectCopyCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectCopyCreation.html)
 - [ObjectError](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectError.html)
 - [ObjectErrorList](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectErrorList.html)
 - [ObjectStageCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectStageCreation.html)
 - [ObjectStats](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectStats.html)
 - [ObjectStatsList](https://pydocs-sdk.lakefs.io/v1.70/docs/ObjectStatsList.html)
 - [Pagination](https://pydocs-sdk.lakefs.io/v1.70/docs/Pagination.html)
 - [PathList](https://pydocs-sdk.lakefs.io/v1.70/docs/PathList.html)
 - [Policy](https://pydocs-sdk.lakefs.io/v1.70/docs/Policy.html)
 - [PolicyList](https://pydocs-sdk.lakefs.io/v1.70/docs/PolicyList.html)
 - [PrepareGCUncommittedRequest](https://pydocs-sdk.lakefs.io/v1.70/docs/PrepareGCUncommittedRequest.html)
 - [PrepareGCUncommittedResponse](https://pydocs-sdk.lakefs.io/v1.70/docs/PrepareGCUncommittedResponse.html)
 - [PresignMultipartUpload](https://pydocs-sdk.lakefs.io/v1.70/docs/PresignMultipartUpload.html)
 - [PullRequest](https://pydocs-sdk.lakefs.io/v1.70/docs/PullRequest.html)
 - [PullRequestBasic](https://pydocs-sdk.lakefs.io/v1.70/docs/PullRequestBasic.html)
 - [PullRequestCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/PullRequestCreation.html)
 - [PullRequestCreationResponse](https://pydocs-sdk.lakefs.io/v1.70/docs/PullRequestCreationResponse.html)
 - [PullRequestsList](https://pydocs-sdk.lakefs.io/v1.70/docs/PullRequestsList.html)
 - [RangeMetadata](https://pydocs-sdk.lakefs.io/v1.70/docs/RangeMetadata.html)
 - [Ref](https://pydocs-sdk.lakefs.io/v1.70/docs/Ref.html)
 - [RefList](https://pydocs-sdk.lakefs.io/v1.70/docs/RefList.html)
 - [RefsDump](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsDump.html)
 - [RefsRestore](https://pydocs-sdk.lakefs.io/v1.70/docs/RefsRestore.html)
 - [Repository](https://pydocs-sdk.lakefs.io/v1.70/docs/Repository.html)
 - [RepositoryCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryCreation.html)
 - [RepositoryDumpStatus](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryDumpStatus.html)
 - [RepositoryList](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryList.html)
 - [RepositoryMetadataKeys](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryMetadataKeys.html)
 - [RepositoryMetadataSet](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryMetadataSet.html)
 - [RepositoryRestoreStatus](https://pydocs-sdk.lakefs.io/v1.70/docs/RepositoryRestoreStatus.html)
 - [ResetCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/ResetCreation.html)
 - [RevertCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/RevertCreation.html)
 - [Setup](https://pydocs-sdk.lakefs.io/v1.70/docs/Setup.html)
 - [SetupState](https://pydocs-sdk.lakefs.io/v1.70/docs/SetupState.html)
 - [StagingLocation](https://pydocs-sdk.lakefs.io/v1.70/docs/StagingLocation.html)
 - [StagingMetadata](https://pydocs-sdk.lakefs.io/v1.70/docs/StagingMetadata.html)
 - [Statement](https://pydocs-sdk.lakefs.io/v1.70/docs/Statement.html)
 - [StatsEvent](https://pydocs-sdk.lakefs.io/v1.70/docs/StatsEvent.html)
 - [StatsEventsList](https://pydocs-sdk.lakefs.io/v1.70/docs/StatsEventsList.html)
 - [StorageConfig](https://pydocs-sdk.lakefs.io/v1.70/docs/StorageConfig.html)
 - [StorageURI](https://pydocs-sdk.lakefs.io/v1.70/docs/StorageURI.html)
 - [StsAuthRequest](https://pydocs-sdk.lakefs.io/v1.70/docs/StsAuthRequest.html)
 - [TagCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/TagCreation.html)
 - [TaskInfo](https://pydocs-sdk.lakefs.io/v1.70/docs/TaskInfo.html)
 - [UIConfig](https://pydocs-sdk.lakefs.io/v1.70/docs/UIConfig.html)
 - [UnderlyingObjectProperties](https://pydocs-sdk.lakefs.io/v1.70/docs/UnderlyingObjectProperties.html)
 - [UpdateObjectUserMetadata](https://pydocs-sdk.lakefs.io/v1.70/docs/UpdateObjectUserMetadata.html)
 - [UpdateToken](https://pydocs-sdk.lakefs.io/v1.70/docs/UpdateToken.html)
 - [UploadPart](https://pydocs-sdk.lakefs.io/v1.70/docs/UploadPart.html)
 - [UploadPartCopyFrom](https://pydocs-sdk.lakefs.io/v1.70/docs/UploadPartCopyFrom.html)
 - [UploadPartFrom](https://pydocs-sdk.lakefs.io/v1.70/docs/UploadPartFrom.html)
 - [UploadTo](https://pydocs-sdk.lakefs.io/v1.70/docs/UploadTo.html)
 - [UsageReport](https://pydocs-sdk.lakefs.io/v1.70/docs/UsageReport.html)
 - [User](https://pydocs-sdk.lakefs.io/v1.70/docs/User.html)
 - [UserCreation](https://pydocs-sdk.lakefs.io/v1.70/docs/UserCreation.html)
 - [UserList](https://pydocs-sdk.lakefs.io/v1.70/docs/UserList.html)
 - [VersionConfig](https://pydocs-sdk.lakefs.io/v1.70/docs/VersionConfig.html)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization


Authentication schemes defined for the API:
<a id="basic_auth"></a>
### basic_auth

- **Type**: HTTP basic authentication

<a id="jwt_token"></a>
### jwt_token

- **Type**: Bearer authentication (JWT)

<a id="cookie_auth"></a>
### cookie_auth

- **Type**: API key
- **API key parameter name**: internal_auth_session
- **Location**: 

<a id="oidc_auth"></a>
### oidc_auth

- **Type**: API key
- **API key parameter name**: oidc_auth_session
- **Location**: 

<a id="saml_auth"></a>
### saml_auth

- **Type**: API key
- **API key parameter name**: saml_auth_session
- **Location**: 


## Author

services@treeverse.io


