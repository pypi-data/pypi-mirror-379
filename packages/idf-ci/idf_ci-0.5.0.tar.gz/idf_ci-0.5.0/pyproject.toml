[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"

[project]
name = "idf-ci"
version = "0.5.0"
description = "The python library for CI/CD of ESP-IDF projects"
readme = "README.md"
requires-python = ">=3.7"
authors = [{ name = "Fu Hanxi", email = "fuhanxi@espressif.com" }]
license = { file = "LICENSE" }
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
]
dependencies = [
    "click",
    # file format
    "tomlkit", # we need both read and write
    "pyyaml",
    "jinja2",
    # ci related
    "python-gitlab",
    "minio",
    # build related
    "idf-build-apps>=2.12.3,<3",  # 2.12.3 fixed a bug of using `App` in set()
    # test related
    "pytest-embedded-idf[serial]>=1.16,<3",
    "pytest-embedded-jtag>=1.16,<3",
    "pytest-embedded-qemu>=1.16,<3",
    "pytest-ignore-test-results>=0.3.0,<1",
    "pytest-timeout",
    "pytest-rerunfailures",
    # logging / printing
    "rich",
]

[project.urls]
Homepage = "https://github.com/espressif/idf-ci"
Documentation = "https://docs.espressif.com/projects/idf-ci"
Repository = "https://github.com/espressif/idf-ci.git"
Changelog = "https://github.com/espressif/idf-ci/blob/master/CHANGELOG.md"

[project.optional-dependencies]
test = ["pytest", "pytest-cov"]

doc = [
    "sphinx",
    # theme
    "sphinx-rtd-theme",
    # extensions
    "sphinx_copybutton",        # copy button
    "myst-parser",              # markdown support
    "sphinxcontrib-mermaid",    # mermaid graph support
    "sphinx-argparse",          # auto-generate cli help message
    "sphinx-tabs",              # tabs
    "autodoc-pydantic",         # pydantic support
]

[project.scripts]
idf-ci = "idf_ci.cli:click_cli"

[project.entry-points.pytest11]
idf-ci = "idf_ci.idf_pytest.plugin"

[tool.setuptools.packages.find]
include = [
    "idf_ci*",
]

[tool.setuptools.package-data]
idf_ci = [
    "py.typed",
    "templates/.idf_build_apps.toml",
    "templates/.idf_ci.toml",
    "templates/*",
]

[tool.isort]
profile = 'black'
force_grid_wrap = 1

[tool.ruff]
line-length = 120
target-version = "py37"

[tool.ruff.lint]
select = [
    'F',   # Pyflakes
    'E',   # pycodestyle
    'W',   # pycodestyle
    'I',   # isort
    'UP',  # pyupgrade
    'YTT', # flake8-2020
    'A',   # flake8-builtins
    'ARG', # flake8-unused-arguments
    'RUF', # ruff
]

[tool.ruff.lint.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.format]
quote-style = "single"
docstring-code-format = true

[tool.mypy]
python_version = "3.8"
[[tool.mypy.overrides]]
module = [
    "pytest_embedded.plugin.*",
    "pytest_embedded.utils.*",
]
follow_untyped_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:idf-ci -p pytester --cov idf_ci/ --cov-report term-missing:skip-covered"

filterwarnings = [
    "ignore::FutureWarning",
]

junit_family = "xunit1"

[tool.coverage.run]
omit = [
    "idf_ci/_vendor.py",
]

[tool.commitizen]
name = "czespressif"

annotated_tag = true
tag_format = "v$version"

version_scheme = "pep440"
version_provider = "pep621"

update_changelog_on_bump = true
changelog_merge_prerelease = true

types_in_changelog = ["BREAKING CHANGE", "feat", "fix", "refactor", "change", "perf", "docs"]
