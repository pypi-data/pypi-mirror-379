/* CSS stylesheet for displaying xarray objects in jupyterlab.
 *
 */

:root {
    --qat-font-color0: rgba(0, 0, 0, 1);
    --qat-font-color2: rgba(0, 0, 0, 0.54);
    --qat-font-color3: rgba(0, 0, 0, 0.38);
    --qat-border-color: #E7EAF6;
    --qat-disabled-color: #BDBDBD;
    --qat-background-color: white;
    --qat-background-color-row-even: white;
    --qat-background-color-row-odd: #D4DCFD;
}

html[theme=dark],
body[data-theme=dark],
body.vscode-dark {
    --qat-font-color0: rgba(255, 255, 255, 1);
    --qat-font-color2: rgba(255, 255, 255, 0.54);
    --qat-font-color3: rgba(255, 255, 255, 0.38);
    --qat-border-color: #1F1F1F;
    --qat-disabled-color: #515151;
    --qat-background-color: #111111;
    --qat-background-color-row-even: #111111;
    --qat-background-color-row-odd: #313131;
}

.qat-wrap {
    display: block !important;
    min-width: 300px;
    max-width: 700px;
}

.qat-text-repr-fallback {
    /* fallback to plain text repr when CSS is not injected (untrusted notebook) */
    display: none;
}

.qat-header {
    padding-top: 6px;
    padding-bottom: 6px;
    margin-bottom: 4px;
    border-bottom: solid 1px var(--qat-border-color);
}

.qat-header>div,
.qat-header>ul {
    display: inline;
    margin-top: 0;
    margin-bottom: 0;
}

.qat-obj-type,
.qat-array-name {
    margin-left: 2px;
    margin-right: 10px;
}

.qat-obj-type {
    color: var(--qat-font-color2);
}

.qat-sections {
    padding-left: 0 !important;
    display: grid;
    grid-template-columns: 150px auto auto 1fr 20px 20px;
}

.qat-section-item {
    display: contents;
}

.qat-section-item input {
    display: none;
}

.qat-section-item input+label {
    color: var(--qat-disabled-color);
}

.qat-section-item input:enabled+label {
    cursor: pointer;
    color: var(--qat-font-color2);
}

.qat-section-item input:enabled+label:hover {
    color: var(--qat-font-color0);
}

.qat-section-summary {
    grid-column: 1;
    color: var(--qat-font-color2);
    font-weight: 500;
    white-space: nowrap;
}

.qat-section-summary>span {
    display: inline-block;
    padding-left: 0.5em;
}

.qat-section-summary-in:disabled+label {
    color: var(--qat-font-color2);
}

.qat-section-summary-in+label:before {
    display: inline-block;
    content: '►';
    font-size: 11px;
    width: 15px;
    text-align: center;
}

.qat-section-summary-in:disabled+label:before {
    color: var(--qat-disabled-color);
}

.qat-section-summary-in:checked+label:before {
    content: '▼';
}

.qat-section-summary-in:checked+label>span {
    display: none;
}

.qat-section-summary,
.qat-section-inline-details {
    padding-top: 4px;
    padding-bottom: 4px;
}

.qat-section-inline-details {
    grid-column: 2 / -1;
}

.qat-section-details {
    display: none;
    grid-column: 1 / -1;
    margin-bottom: 5px;
}

.qat-section-summary-in:checked~.qat-section-details {
    display: contents;
}

.qat-array-wrap {
    grid-column: 1 / -1;
    display: grid;
    grid-template-columns: 20px auto;
}

.qat-array-wrap>label {
    grid-column: 1;
    vertical-align: top;
}

.qat-preview {
    color: var(--qat-font-color3);
}

.qat-array-preview,
.qat-array-data {
    padding: 0 5px !important;
    grid-column: 2;
}

.qat-array-data,
.qat-array-in:checked~.qat-array-preview {
    display: none;
}

.qat-array-in:checked~.qat-array-data,
.qat-array-preview {
    display: inline-block;
}

.qat-dim-list {
    display: inline-block !important;
    list-style: none;
    padding: 0 !important;
    margin: 0;
}

.qat-dim-list li {
    display: inline-block;
    padding: 0;
    margin: 0;
}

.qat-dim-list:before {
    content: '(';
}

.qat-dim-list:after {
    content: ')';
}

.qat-dim-list li:not(:last-child):after {
    content: ',';
    padding-right: 5px;
}

.qat-has-index {
    font-weight: bold;
}

.qat-var-list,
.qat-var-item {
    display: contents;
}

.qat-var-item>div,
.qat-var-item label,
.qat-var-item>.qat-var-name span {
    background-color: var(--qat-background-color-row-even);
    margin-bottom: 0;
}

.qat-var-item>.qat-var-name:hover span {
    padding-right: 5px;
}

.qat-var-list>li:nth-child(odd)>div,
.qat-var-list>li:nth-child(odd)>label,
.qat-var-list>li:nth-child(odd)>.qat-var-name span {
    background-color: var(--qat-background-color-row-odd);
}

.qat-var-name {
    grid-column: 1;
}

.qat-var-dims {
    grid-column: 2;
}

.qat-var-dtype {
    grid-column: 3;
    text-align: right;
    color: var(--qat-font-color2);
}

.qat-var-preview {
    grid-column: 4;
}

.qat-index-preview {
    grid-column: 2 / 5;
    color: var(--qat-font-color2);
}

.qat-var-name,
.qat-var-dims,
.qat-var-dtype,
.qat-preview,
.qat-attrs dt {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    padding-right: 10px;
}

.qat-var-name:hover,
.qat-var-dims:hover,
.qat-var-dtype:hover,
.qat-attrs dt:hover {
    overflow: visible;
    width: auto;
    z-index: 1;
}

.qat-var-attrs,
.qat-var-data,
.qat-index-data {
    display: none;
    background-color: var(--qat-background-color) !important;
    padding-bottom: 5px !important;
}

.qat-var-attrs-in:checked~.qat-var-attrs,
.qat-var-data-in:checked~.qat-var-data,
.qat-index-data-in:checked~.qat-index-data {
    display: block;
}

.qat-var-data>table {
    float: right;
}

.qat-var-name span,
.qat-var-data,
.qat-index-name div,
.qat-index-data,
.qat-attrs {
    padding-left: 25px !important;
}

.qat-attrs,
.qat-var-attrs,
.qat-var-data,
.qat-index-data {
    grid-column: 1 / -1;
}

dl.qat-attrs {
    padding: 0;
    margin: 0;
    display: grid;
    grid-template-columns: 125px auto;
}

.qat-attrs dt,
.qat-attrs dd {
    padding: 0;
    margin: 0;
    float: left;
    padding-right: 10px;
    width: auto;
}

.qat-attrs dt {
    font-weight: normal;
    grid-column: 1;
}

.qat-attrs dt:hover span {
    display: inline-block;
    background: var(--qat-background-color);
    padding-right: 10px;
}

.qat-attrs dd {
    grid-column: 2;
    white-space: pre-wrap;
    word-break: break-all;
}

.qat-icon-database,
.qat-icon-file-text2,
.qat-no-icon {
    display: inline-block;
    vertical-align: middle;
    width: 1em;
    height: 1.5em !important;
    stroke-width: 0;
    stroke: currentColor;
    fill: currentColor;
}