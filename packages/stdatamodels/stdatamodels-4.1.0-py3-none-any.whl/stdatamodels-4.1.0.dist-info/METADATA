Metadata-Version: 2.4
Name: stdatamodels
Version: 4.1.0
Summary: Core support for DataModel classes used in calibration pipelines
Author: STScI
Project-URL: Homepage, https://github.com/spacetelescope/stdatamodels
Project-URL: Bug Tracker, https://github.com/spacetelescope/stdatamodels/issues
Project-URL: Source Code, https://github.com/spacetelescope/stdatamodels
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Astronomy
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: asdf>=3.3.0
Requires-Dist: asdf-transform-schemas>=0.6.0
Requires-Dist: asdf-astropy>=0.6.0
Requires-Dist: numpy>=1.25
Requires-Dist: astropy>=6.1
Provides-Extra: test
Requires-Dist: psutil; extra == "test"
Requires-Dist: pyyaml; extra == "test"
Requires-Dist: pytest>=4.6.0; extra == "test"
Requires-Dist: pytest-asdf-plugin; extra == "test"
Requires-Dist: pytest-doctestplus; extra == "test"
Requires-Dist: crds>=11.17.1; extra == "test"
Requires-Dist: requests; extra == "test"
Requires-Dist: scipy>=1.9.2; extra == "test"
Provides-Extra: docs
Requires-Dist: sphinx; extra == "docs"
Requires-Dist: sphinx-automodapi; extra == "docs"
Requires-Dist: numpydoc; extra == "docs"
Requires-Dist: sphinx-rtd-theme; extra == "docs"
Requires-Dist: sphinx-asdf>=0.1.1; extra == "docs"
Dynamic: license-file

# stdatamodels

[![CI](https://github.com/spacetelescope/stdatamodels/actions/workflows/ci.yml/badge.svg)](https://github.com/spacetelescope/stdatamodels/actions/workflows/ci.yml)
[![codecov](https://codecov.io/gh/spacetelescope/stdatamodels/branch/main/graph/badge.svg?token=TrmUKaTP2t)](https://codecov.io/gh/spacetelescope/stdatamodels)
[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.16280288.svg)](https://doi.org/10.5281/zenodo.16280288)


Provides JWST data model classes and schemas.


## Unit Tests

A few unit tests require downloading (~500MB) data from CRDS. CRDS must be configured for these tests to pass
(see the [CRDS User Guide](https://jwst-crds.stsci.edu/static/users_guide/index.html)
for more information). Minimally (if not on the stsci vpn where the default path of
`/grp/crds/cache` is available) you will need to set `CRDS_PATH`.

```bash
export CRDS_PATH=/tmp/crds_cache/jwst_ops
```

These tests can also be skipped with the `no-crds` pytest option

```bash
pytest --no-crds
```
