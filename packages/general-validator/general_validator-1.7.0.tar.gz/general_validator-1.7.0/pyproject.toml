[project]
name = "general-validator"
version = "1.7.0"
description = "General-Validator is a universal batch data validator."
authors = [
    {name = "Devin",email = "zhangchuzhao@dingtalk.com"}
]
readme = "README.md"
homepage = "https://github.com/zhuifengshen/general-validator"
repository = "https://github.com/zhuifengshen/general-validator"
documentation = "https://github.com/zhuifengshen/general-validator"
license = {file = "LICENSE"}
requires-python = ">=3.6"
dependencies = [
    "colorama (==0.4.1)",
    "colorlog (==4.0.2)"
]

[project.optional-dependencies]
test = [
    "pytest>=6.0.0",
    "pytest-cov>=3.0.0",
    "pytest-mock>=3.0.0"
]
docs = [
    "mkdocs-material>=9.0.0"
]

[tool.poetry]
packages = [{include = "general_validator", from = "src"}]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/general_validator",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=50"
]
markers = [
    "unit: 单元测试",
    "integration: 集成测试",
    "performance: 性能测试",
    "slow: 慢速测试"
]

[tool.coverage.run]
source = ["src/general_validator"]
omit = ["*/tests/*", "*/test_*.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:"
]

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"
