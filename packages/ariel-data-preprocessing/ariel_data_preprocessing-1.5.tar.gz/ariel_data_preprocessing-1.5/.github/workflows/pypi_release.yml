# This workflow will upload a Python Package to PyPI when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: PyPI release

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:

  test-release:
    name: Test release distribution
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r build_requirements.txt

      - name: Test data processor
        run: |
          python -m unittest tests/test_data_processor.py

      - name: Test signal correction functions
        run: |
          python -m unittest tests/test_signal_correction.py

      - name: Test signal extraction functions
        run: |
          python -m unittest tests/test_signal_extraction.py

      - name: Test utility functions
        run: |
          python -m unittest tests/test_utility_functions.py

  build-release:
    name: Build release distribution
    runs-on: ubuntu-latest

    needs:
      - test-release

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.8"
          cache: "pip"

      - name: Install dependencies
        run: |
          pip install -r build_requirements.txt

      - name: Build release distributions
        run: |
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    name: Publish release to PyPI
    runs-on: ubuntu-latest

    needs:
      - build-release

    permissions:
      id-token: write

    environment:
      name: pypi
      url: https://pypi.org/project/${{ github.event.release.name }}

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          packages-dir: dist/