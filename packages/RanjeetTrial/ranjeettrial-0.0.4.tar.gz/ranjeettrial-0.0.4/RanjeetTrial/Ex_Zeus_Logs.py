ssn = ["SSN","ssn","SOC SEC NBR","Soc. Sec. #","SSN","SS#","Soc","Social","Security","SocSecNum","Employee EIN","SocialSecurityNo","Social Security","SOCIAL SECURITY NUMBER           ","SOC. SEC. NO.","SOC. SEC.","soc","SOC #","Social Security Number","SOC SEC ","SOC.","Soc. Sec. Num","SOC SEC NUMBER","SocSecNumber","SOC SEC #","Social Security No.","Social Security ","SOCIAL SECURITY NUMBER ","Social Security #","EMPLOYEE SOC","Soc. Sec No.","SOC SEC","Soc Security #","payer soc","SOC_SEC_NO","SS #","SS # ","SS or FEIN ","SS NUM ","SS Number","v_work_history_q_ssn","SSN","SSN/Tax ID","SSN#","SSN #","cboSSN","ssnum","SSN / FEIN#","SSN:","H8SSN","SSN#:","SSN/HIRE DATE","Soc Sec #","Soc Sec#","Soc Sec Num","Soc Sec Number","Soc Sec","SSN","Empl. SSN","SSN:","Member SSN","SSN #","SSN/Tax ID","H8SSN","SSN#","SSN ","SS No.","S.S.#","BeneSSN","Dep SSN","EE_SSN","Mem_SSN","MemberSSN","SSN","SSN2","Emp SSN","Emp_SSN","Employee SSN","Mem SSN","BeneSSN","Dep SSN","EE_SSN","Mem_SSN","MemberSSN","SSN","SSN2","EE SSN","Client SSN","SSN Masked","PtSSNum","SSN  1","Provider SSN","FEIN / SSN","Last 4 digits of SSN","Tax ID SSN or EIN? (25)","Modified SSN for GOSH","ADCU_SSN","Client SSN Display","DEP SSN","Dpdt SSN"]
tinnumber = ["TIN NUMBER","Tax ID #","FEDERAL ID #"]
Firstname =["First Name","First","FIRST NAME","FirstName","FIRST","First_Name","Prescriber First Name","Member First Name","patientfirstname","First Name","First_Name","Prescriber First Name","FNAME","Patient's Name","patient name","FIRSTNAME","Participant First Name","PtFName","F_NAME"]
middlename =["Middle Name,","MIDDLE INITIAL","Middle","MI","Middle Name of covered individual(s)","NameMI","Middle Name"]
lastname = ["Last Name","LAST NAME","last_name","LastName","Last Name ","LAST NAME2","Recipient Name1 Or Last Name","LAST","Last_Name","Prescriber Last Name","Member Last Name","patientlastname","Last Name","Last_Name","Prescriber Last Name","Last Name","LNAME","Patient Last Name","L_NAME"]
Fullname = ["FullName","Full Name","Employee Name","Name:","Name","Full Name","NameOfBene","NameofMember","USER_NAME","USER_PREFERENCE_NAME","Employee","mem_name","Member","Member Name","NAME","Name of covered individual(s)","PATIENT","Patient Name","PatientNameOrSelf","CLMT NAME","EMPLOYEE NAME                                    ","Full Name","NameOfBene","NameofMember","USER_NAME","USER_PREFERENCE_NAME","Full Name","IATSE Local 1 P","F. LastName","LFMNAME"]
suffix =["Suffix","suf"]
dob =["Birth Date","MEMBER D.O.B","D.O.B","dbirthdate","BirthDate","Birthday","Date of Birth","Birth","DOB","BeneDOB","Birth Dte","Birth_Date","DateofBirth","MemberDOB","DATE OF BIRTH","Employee Birth Date","Member Birth Date","Birth dte","BeneDOB","Birth Dte","Birth_Date","DateofBirth","MemberDOB","DOB","Birth dte","Employee Date of Birth","Spouse Date of Birth","patient date of birth","BIRTHDATE","Date of birth","MEMBER DATE OF BIRTH","BIRTH DATE","Participant Birthdate","DateOfBirth","Birth Date","Dpdt Birth Date","Patient Birthdate (3)"]
address =["Street","Address","4 Address","addr1","Address 1","Address and","ADDRESS AND SOCIAL SECURITY NUMBER OF EMPLOYEE","Address Apt/Suite","Address Code","Address Deliv/Street","Address Locations","Address Type","Address_1","Address1","e_address1","Street1","Address Line 1","memaddr1","Member Address 1","Member Street Address","Address","Home Address","Participant Address","Primary Address","CATT_Address","Patient Address Street (5)","PAddress1","Street Name"]
address2 = ["addr2","Address 2","ADDRESS LINE 2","e_address2","Street2","Street3","memaddr2","Member Address 2","Address_2","Address2","Address2","ADDRESS 2","Address 3","CATT_Address2","PAddress2"]
addcity =["City and Suburban Electrical Contractors","City Description","CITY OF DUNLAP","CITY OF GRANITE CITY","City of Show","CITY OF UNIVERSITY CITY","City:","e_city","City","City","Member City","memcity","Home City","Participant City","City  3","Home Location (CITY ONLY)","Primary City","Patient Address City (5)","PCity"]
addstate =["e_state","City/State","CITY/STATE/ZIP","State","Member State","memstate","Employee State of Residence","Home State/Province","Participant State","Patient Address State (5)","PState"]
addzip =["e_zip","FORMATTED_ZIP","JobZip","Zip Code","ZIP Code","ZIP/Postal Code","Zip","Zip_Code","ZipCode","Member Zip","memzip","Zip / Postal Code","ZIP 4","ZIP 5","Residential Zip Code","Home ZIP/Postal Code","ResZip","Participant Zip","Resident Zip","Zip  3","Home (Zipcode only)","Zip-code","Patient Address Zip (5)","PZip"]
dod = ["DateofDeath","Date of Death"]
Businessname = ["BUSINESS NAME"]
Phone =["Home_Phone","Home Phone"]
driverslicence = ["State License Number","Secondary State License #","Primary State License #"]

keyclms = ssn + tinnumber + Firstname + middlename + lastname + Fullname + suffix + dob + address + address2 + addcity + addstate + addzip + dod + Businessname + Phone + driverslicence


columnheaders_dict={
     "Ssn":ssn
     ,"TinNumber":tinnumber
     ,"FirstName":Firstname
     ,"MiddleName":middlename
     ,"LastName":lastname
     ,"FullName":Fullname
     ,"Suffix":suffix
     ,"Dob":dob
     ,"Address1":address
     ,"Address2":address2
     ,"City":addcity
     ,"State":addstate
     ,"Zipcode":addzip
     ,"Dod":dod
     ,"Business":Businessname
     ,"PhoneNumber":Phone
     ,"DriversLicense":driverslicence
          }

import re


name_rx = re.compile(rb"(?:[A-Z]?[a-zA-Z]{0,}?'?-?[A-Z]'?-?.?[a-zA-Z]+\s?'?-?){2,}")
ssn_rx = re.compile(rb'(?!123-?45-?6789)0*\b(?!000|666|333)0*(?:[0-6][0-9][0-9]|[0-7][0-6][0-9]|[0-7][0-7][0-2])[- ]?(?!00)[0-9]{2}[- ]?(?!0000)[0-9]{4}\b')
dates_rx = re.compile(rb'(?:\b(?<!\:)(?<!\:\d)[0-3]?\d(?:st|nd|rd|th)?\s+(?:of\s+)?(?:january|jan\.?|february|feb\.?|march|mar\.?|april|apr\.?|may|june|jun\.?|july|jul\.?|august|aug\.?|september|sep\.?|october|oct\.?|november|nov\.?|december|dec\.?|januar|februar|marz|mai|juni|juli|oktober|dezember|janvier|fevrier|mars|avril|juin|juillet|aout|septembre|octobre|novembre|decembre|janeiro|fevereiro|marco|abril|maio|junho|julho|agosto|setembro|uotubro|novembro|de janeiro de|de fevereiro de|de marco de|de abril de|de maio de|de junho de|de julho de|de agosto de|de setembro de|de uotubro de|de novembro de|januari|februari|maart|mei|juni|augustus|oktober|gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)\b|(?:january|jan\.?|february|feb\.?|march|mar\.?|april|apr\.?|may|june|jun\.?|july|jul\.?|august|aug\.?|september|sep\.?|october|oct\.?|november|nov\.?|december|dec\.?|januar|februar|marz|mai|juni|juli|oktober|dezember|janvier|fevrier|mars|avril|juin|juillet|aout|septembre|octobre|novembre|decembre|janeiro|fevereiro|marco|abril|maio|junho|julho|agosto|setembro|uotubro|novembro|de janeiro de|de fevereiro de|de marco de|de abril de|de maio de|de junho de|de julho de|de agosto de|de setembro de|de uotubro de|de novembro de|januari|februari|maart|mei|juni|augustus|oktober|gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)\b\s+(?<!\:)(?<!\:\d)[0-3]?\d(?:st|nd|rd|th)?)(?:\,)?\s*(?:19\d{2}|20\d{2}|\d{2}\b)?\b|\b(?!3[2-9]|[4-9]0-9])[0-3]?\d[-\./][0-3]?\d[-\./](?:\b19[10-99]\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9]\b)?\d{2}?\b|\b19[1-9][0-9][-\./]?[0-3][0-9][-\./]?[0-3]\d\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9][-\./]?[0-3]\d[-\./]?[0-3]\d\b|\b(?!3[2-9]|[4-9]0-9])[0-3]?\d[-\./][0-3]?\d[-\./](?:\b19[10-99]\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9]\b)?\d{4}?\b|\b19[1-9][0-9][-\./]?[0-3][0-9][-\./]?[0-3]\d\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9][-\./]?[0-3]\d[-\./]?[0-3]\d\b')
phonenumber_rx = re.compile(rb'\+\d{1,2}[-\.\s(]\d{3}[-.\s/()]?\d{3}[-.\s/()]\d{4}|\(?\d{3}[-.\s/()]*?\d{3}[-.\s/]\d{4}')
TINNumber_rx = re.compile(rb'\b(?!000|.+0{4})(?:\d{2}-\d2{7})\b|\d{2}-\d2{7}|[0-9]{2}-[0-9]{7}')
email_rx = re.compile(rb"([a-z0-9!#$%&'*+\/=?^_`{|.}~-]+@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)")
credit_card_rx = re.compile(rb'((?:(?:\\d{4}[- ]?){3}\\d{4}|\\d{15,16}))(?![\\d])')
btc_address_rx = re.compile(rb'(?<![a-km-zA-HJ-NP-Z0-9])[13][a-km-zA-HJ-NP-Z0-9]{26,33}(?![a-km-zA-HJ-NP-Z0-9])')
street_address_rx = re.compile(rb"\d{1,7}[\w+\s\w+]{1,6} (?:abbey|acres|all\xe9e|aly|alley|anex|anx|annex|arcade|arc|autoroute|avenue|ave|bay|bayou|byu|beach|bch|bend|bnd|bluff|blf|bluffs|blfs|bottom|btm|boulevard|blvd|box|branch|br|bridge|brg|brook|brk|brooks|brks|burg|bg|burgs|bgs|burrow|bypass|byp|by-pass|byway|camp|cp|campus|canyon|cyn|cape|cpe|carr\xe9|carrefour|castle|causeway|cswy|centre|ctr|centres|ctrs|cercle|chare|chase|chemin|circle|cir|circles|cirs|circuit|cliff|clfs|cliffs|clf|close|club|clb|common|cmn|commons|cmns|concession|corner|cors|corners|cor|c\xf4te|cour|cours|course|crse|court|ct|courts|cts|cove|cv|coves|cvs|creek|crk|crescent|cres|crest|crst|croissant|cross|crossing|xing|crossroad|xrds|crossroads|xrd|cul-de-sac|curve|curv|dale|dl|dam|dm|dell|diagonal|diversion|divide|dv|downs|drive|dr|\xe9changeur|end|esplanade|estate|est|estates|ests|expressway|expy|extension|ext|extensions|exts|fall|falls|fls|farm|ferry|fry|field|fld|fields|flds|flat|flt|flats|flts|ford|frd|fords|frds|forest|frst|forge|frg|forges|frgs|fork|frk|forks|frks|fort|ft|freeway|fwy|front|garden|gdn|gardens|gdns|gate|gateway|gtwy|glade|glen|gln|glens|glns|glenway|golfway|green|grn|greens|grns|grounds|grove|grv|groves|grvs|hall|harbour|hbr|harbours|hbrs|haven|hvn|heath|heights|hts|highlands|highway|hwy|hill|hl|hills|hls|hollow|holw|\xeele|impasse|inlet|inlt|island|is|islands|iss|isle|junction|jct|junctions|jcts|keep|key|ky|keys|kys|knoll|knl|knolls|knls|lake|lk|lakes|lks|land|landing|lndg|lane|ln|light|lgt|lights|lgts|ligne|limits|line|link|loaf|lf|lock|lck|locks|lcks|lodge|ldg|lookout|loop|mall|manor|mnr|manors|mnrs|maze|meadow|mdw|meadows|mdws|mews|mill|ml|mills|mls|mission|msn|mont\xe9e|moor|motorway|mtwy|mount|mt|mountain|mtn|mountains|mtns|neck|nck|nene|oaks|orchard|orch|oval|overpass|opas|parade|parc|park|parkway|pkwy|pass|passage|psge|path|pathway|peak|pike|pine|pines|pnes|place|pl|placeway|plain|pln|plains|plns|plateau|plaza|plz|point|pt|pointe|pond|port|prt|prairie|pr|private|promenade|quai|quary|quay|radial|radl|ramp|ranch|rnch|rang|range|rang\xe9e|rapid|rpd|rapids|rpds|reach|rest|rst|ridge|rdg|ridges|rdgs|right of way|rise|river|riv|road|rd|ronde|rond-point|round|route|rte|row|rue|ruelle|run|sentier|shoal|shl|shoals|shls|shore|shrs|shores|shr|sideroad|skyway|skwy|spring|spgs|springs|spg|spur|square|sq|squares|sqs|standard|station|sta|stravenue|stra|stream|strm|street|st|streets|sts|stroll|subdivision|summit|smt|summits|tailer|trlr|terrace|ter|terrasse|thicket|throughway|trwy|tour|towers|townline|trace|trce|track|trak|trafficway|trfy|trail|trl|tr|tunnel|tunl|turnabout|turnpike|tpke|two|underpass|upas|union|un|unions|uns|vale|valley|vly|valleys|vlys|via|viaduct|view|vw|views|vws|villa|vlg|villages|villas|vlgs|ville|vl|vista|vis|voie|walk|walkway|wall|ways|well|wl|wells|wls|wharf|wold|woods|wynd)\w?(?=\s|$|,)")
zip_code_rx = re.compile(rb'\b\d{5}(?:[-\s]\d{4})?\b')
po_box_rx = re.compile(rb'p\.? ?o\.? box \d+')
driverslience_rx = re.compile(rb'([a-zA-z]{2}[0-9]{7})')

name_str = re.compile(r"(([A-Z][a-zA-Z]{2,30}\s)?(?:([A-Z][a-zA-Z]{1,30}\s)+)([A-Z]'?-?[a-zA-Z]{2,30}))")
reg_ssn_str = re.compile(r'(?!123-?45-?6789)0*\b(?!000|666|333)0*(?:[0-6][0-9][0-9]|[0-7][0-6][0-9]|[0-7][0-7][0-2])[- ]?(?!00)[0-9]{2}[- ]?(?!0000)[0-9]{4}\b')
reg_dates_str = re.compile(r'(?:\b(?<!\:)(?<!\:\d)[0-3]?\d(?:st|nd|rd|th)?\s+(?:of\s+)?(?:january|jan\.?|february|feb\.?|march|mar\.?|april|apr\.?|may|june|jun\.?|july|jul\.?|august|aug\.?|september|sep\.?|october|oct\.?|november|nov\.?|december|dec\.?|januar|februar|marz|mai|juni|juli|oktober|dezember|janvier|fevrier|mars|avril|juin|juillet|aout|septembre|octobre|novembre|decembre|janeiro|fevereiro|marco|abril|maio|junho|julho|agosto|setembro|uotubro|novembro|de janeiro de|de fevereiro de|de marco de|de abril de|de maio de|de junho de|de julho de|de agosto de|de setembro de|de uotubro de|de novembro de|januari|februari|maart|mei|juni|augustus|oktober|gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)\b|(?:january|jan\.?|february|feb\.?|march|mar\.?|april|apr\.?|may|june|jun\.?|july|jul\.?|august|aug\.?|september|sep\.?|october|oct\.?|november|nov\.?|december|dec\.?|januar|februar|marz|mai|juni|juli|oktober|dezember|janvier|fevrier|mars|avril|juin|juillet|aout|septembre|octobre|novembre|decembre|janeiro|fevereiro|marco|abril|maio|junho|julho|agosto|setembro|uotubro|novembro|de janeiro de|de fevereiro de|de marco de|de abril de|de maio de|de junho de|de julho de|de agosto de|de setembro de|de uotubro de|de novembro de|januari|februari|maart|mei|juni|augustus|oktober|gennaio|febbraio|marzo|aprile|maggio|giugno|luglio|agosto|settembre|ottobre|novembre|dicembre)\b\s+(?<!\:)(?<!\:\d)[0-3]?\d(?:st|nd|rd|th)?)(?:\,)?\s*(?:19\d{2}|20\d{2}|\d{2}\b)?\b|\b(?!3[2-9]|[4-9]0-9])[0-3]?\d[-\./][0-3]?\d[-\./](?:\b19[10-99]\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9]\b)?\d{2}?\b|\b19[1-9][0-9][-\./]?[0-3][0-9][-\./]?[0-3]\d\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9][-\./]?[0-3]\d[-\./]?[0-3]\d\b|\b(?!3[2-9]|[4-9]0-9])[0-3]?\d[-\./][0-3]?\d[-\./](?:\b19[10-99]\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9]\b)?\d{4}?\b|\b19[1-9][0-9][-\./]?[0-3][0-9][-\./]?[0-3]\d\b|\b20(?!2[3-9]|[3-9][0-9])[0-2][0-9][-\./]?[0-3]\d[-\./]?[0-3]\d\b')
phonenumber_str = re.compile(r'\+\d{1,2}[-\.\s(]\d{3}[-.\s/()]?\d{3}[-.\s/()]\d{4}|\(?\d{3}[-.\s/()]*?\d{3}[-.\s/]\d{4}')
TINNumber_str = re.compile(r'\b(?!000|.+0{4})(?:\d{2}-\d2{7})\b|\d{2}-\d2{7}|[0-9]{2}-[0-9]{7}')
email_str = re.compile(r"([a-z0-9!#$%&'*+\/=?^_`{|.}~-]+@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?)")
credit_card_str = re.compile(r'((?:(?:\\d{4}[- ]?){3}\\d{4}|\\d{15,16}))(?![\\d])')
btc_address_str = re.compile(r'(?<![a-km-zA-HJ-NP-Z0-9])[13][a-km-zA-HJ-NP-Z0-9]{26,33}(?![a-km-zA-HJ-NP-Z0-9])')
street_address_str = re.compile(r"\d{1,7}[\w+\s\w+]{1,6} (?:abbey|acres|all\xe9e|aly|alley|anex|anx|annex|arcade|arc|autoroute|avenue|ave|bay|bayou|byu|beach|bch|bend|bnd|bluff|blf|bluffs|blfs|bottom|btm|boulevard|blvd|box|branch|br|bridge|brg|brook|brk|brooks|brks|burg|bg|burgs|bgs|burrow|bypass|byp|by-pass|byway|camp|cp|campus|canyon|cyn|cape|cpe|carr\xe9|carrefour|castle|causeway|cswy|centre|ctr|centres|ctrs|cercle|chare|chase|chemin|circle|cir|circles|cirs|circuit|cliff|clfs|cliffs|clf|close|club|clb|common|cmn|commons|cmns|concession|corner|cors|corners|cor|c\xf4te|cour|cours|course|crse|court|ct|courts|cts|cove|cv|coves|cvs|creek|crk|crescent|cres|crest|crst|croissant|cross|crossing|xing|crossroad|xrds|crossroads|xrd|cul-de-sac|curve|curv|dale|dl|dam|dm|dell|diagonal|diversion|divide|dv|downs|drive|dr|\xe9changeur|end|esplanade|estate|est|estates|ests|expressway|expy|extension|ext|extensions|exts|fall|falls|fls|farm|ferry|fry|field|fld|fields|flds|flat|flt|flats|flts|ford|frd|fords|frds|forest|frst|forge|frg|forges|frgs|fork|frk|forks|frks|fort|ft|freeway|fwy|front|garden|gdn|gardens|gdns|gate|gateway|gtwy|glade|glen|gln|glens|glns|glenway|golfway|green|grn|greens|grns|grounds|grove|grv|groves|grvs|hall|harbour|hbr|harbours|hbrs|haven|hvn|heath|heights|hts|highlands|highway|hwy|hill|hl|hills|hls|hollow|holw|\xeele|impasse|inlet|inlt|island|is|islands|iss|isle|junction|jct|junctions|jcts|keep|key|ky|keys|kys|knoll|knl|knolls|knls|lake|lk|lakes|lks|land|landing|lndg|lane|ln|light|lgt|lights|lgts|ligne|limits|line|link|loaf|lf|lock|lck|locks|lcks|lodge|ldg|lookout|loop|mall|manor|mnr|manors|mnrs|maze|meadow|mdw|meadows|mdws|mews|mill|ml|mills|mls|mission|msn|mont\xe9e|moor|motorway|mtwy|mount|mt|mountain|mtn|mountains|mtns|neck|nck|nene|oaks|orchard|orch|oval|overpass|opas|parade|parc|park|parkway|pkwy|pass|passage|psge|path|pathway|peak|pike|pine|pines|pnes|place|pl|placeway|plain|pln|plains|plns|plateau|plaza|plz|point|pt|pointe|pond|port|prt|prairie|pr|private|promenade|quai|quary|quay|radial|radl|ramp|ranch|rnch|rang|range|rang\xe9e|rapid|rpd|rapids|rpds|reach|rest|rst|ridge|rdg|ridges|rdgs|right of way|rise|river|riv|road|rd|ronde|rond-point|round|route|rte|row|rue|ruelle|run|sentier|shoal|shl|shoals|shls|shore|shrs|shores|shr|sideroad|skyway|skwy|spring|spgs|springs|spg|spur|square|sq|squares|sqs|standard|station|sta|stravenue|stra|stream|strm|street|st|streets|sts|stroll|subdivision|summit|smt|summits|tailer|trlr|terrace|ter|terrasse|thicket|throughway|trwy|tour|towers|townline|trace|trce|track|trak|trafficway|trfy|trail|trl|tr|tunnel|tunl|turnabout|turnpike|tpke|two|underpass|upas|union|un|unions|uns|vale|valley|vly|valleys|vlys|via|viaduct|view|vw|views|vws|villa|vlg|villages|villas|vlgs|ville|vl|vista|vis|voie|walk|walkway|wall|ways|well|wl|wells|wls|wharf|wold|woods|wynd)\w?(?=\s|$|,)")
zip_code_str = re.compile(r'\b\d{5}(?:[-\s]\d{4})?\b')
po_box_str = re.compile(r'p\.? ?o\.? box \d+')
driverslience_str = re.compile(r'([a-zA-z]{2}[0-9]{7})')




ssn_header_regx_str = re.compile(r"\bSSN\b|\bssn\b|\bSOC SEC NBR\b|\bSoc. Sec. #\b|\bSSN\b|\bSS#\b|\bSoc\b|\bSocial\b|\bSecurity\b|\bSocSecNum\b|\bEmployee EIN\b|\bSocialSecurityNo\b|\bSocial Security\b|\bSOCIAL SECURITY NUMBER           \b|\bSOC. SEC. NO.\b|\bSOC. SEC.\b|\bsoc\b|\bSOC #\b|\bSocial Security Number\b|\bSOC SEC \b|\bSOC.\b|\bSoc. Sec. Num\b|\bSOC SEC NUMBER\b|\bSocSecNumber\b|\bSOC SEC #\b|\bSocial Security No.\b|\bSocial Security \b|\bSOCIAL SECURITY NUMBER \b|\bSocial Security #\b|\bEMPLOYEE SOC\b|\bSoc. Sec No.\b|\bSOC SEC\b|\bSoc Security #\b|\bpayer soc\b|\bSOC_SEC_NO\b|\bSS #\b|\bSS # \b|\bSS or FEIN \b|\bSS NUM \b|\bSS Number\b|\bv_work_history_q_ssn\b|\bSSN\b|\bSSN/Tax ID\b|\bSSN#\b|\bSSN #\b|\bcboSSN\b|\bssnum\b|\bSSN / FEIN#\b|\bSSN:\b|\bH8SSN\b|\bSSN#:\b|\bSSN/HIRE DATE\b|\bSoc Sec #\b|\bSoc Sec#\b|\bSoc Sec Num\b|\bSoc Sec Number\b|\bSoc Sec\b|\bSSN\b|\bEmpl. SSN\b|\bSSN:\b|\bMember SSN\b|\bSSN #\b|\bSSN/Tax ID\b|\bH8SSN\b|\bSSN#\b|\bSSN \b|\bSS No.\b|\bS.S.#\b|\bBeneSSN\b|\bDep SSN\b|\bEE_SSN\b|\bMem_SSN\b|\bMemberSSN\b|\bSSN\b|\bSSN2\b|\bEmp SSN\b|\bEmp_SSN\b|\bEmployee SSN\b|\bMem SSN\b|\bBeneSSN\b|\bDep SSN\b|\bEE_SSN\b|\bMem_SSN\b|\bMemberSSN\b|\bSSN\b|\bSSN2\b|\bEE SSN\b|\bClient SSN\b|\bSSN Masked\b|\bPtSSNum\b|\bSSN  1\b|\bProvider SSN\b|\bFEIN / SSN\b|\bLast 4 digits of SSN\b|\bTax ID SSN or EIN? (25)\b|\bModified SSN for GOSH\b|\bADCU_SSN\b|\bClient SSN Display\b|\bDEP SSN\b|\bDpdt SSN\b")

tinnumber_header_regx_str = re.compile(r"\bTIN NUMBER\b|\bTax ID #\b|\bFEDERAL ID #\b")

Firstname_header_regx_str = re.compile(r"\bFirst Name\b|\bFirst\b|\bFIRST NAME\b|\bFirstName\b|\bFIRST\b|\bFirst_Name\b|\bPrescriber First Name\b|\bMember First Name\b|\bpatientfirstname\b|\bFirst Name\b|\bFirst_Name\b|\bPrescriber First Name\b|\bFNAME\b|\bPatient's Name\b|\bpatient name\b|\bFIRSTNAME\b|\bParticipant First Name\b|\bPtFName\b|\bF_NAME\b")

middlename_header_regx_str = re.compile(r"\bMiddle Name,\b|\bMIDDLE INITIAL\b|\bMiddle\b|\bMI\b|\bMiddle Name of covered individual(s)\b|\bNameMI\b")

lastname_header_regx_str = re.compile(r"\bLast Name\b|\bLAST NAME\b|\blast_name\b|\bLastName\b|\bLast Name \b|\bLAST NAME2\b|\bRecipient Name1 Or Last Name\b|\bLAST\b|\bLast_Name\b|\bPrescriber Last Name\b|\bMiddle Name\b|\bMember Last Name\b|\bpatientlastname\b|\bLast Name\b|\bLast_Name\b|\bPrescriber Last Name\b|\bLast Name\b|\bLNAME\b|\bPatient Last Name\b|\bL_NAME\b")

Fullname_header_regx_str = re.compile(r"\bFullName\b|\bFull Name\b|\bEmployee Name\b|\bName:\b|\bName\b|\bFull Name\b|\bNameOfBene\b|\bNameofMember\b|\bUSER_NAME\b|\bUSER_PREFERENCE_NAME\b|\bEmployee\b|\bmem_name\b|\bMember\b|\bMember Name\b|\bNAME\b|\bName of covered individual(s)\b|\bPATIENT\b|\bPatient Name\b|\bPatientNameOrSelf\b|\bCLMT NAME\b|\bEMPLOYEE NAME                                    \b|\bFull Name\b|\bNameOfBene\b|\bNameofMember\b|\bUSER_NAME\b|\bUSER_PREFERENCE_NAME\b|\bFull Name\b|\bIATSE Local 1 P\b|\bF. LastName\b|\bLFMNAME\b")

suffix_header_regx_str = re.compile(r"\bSuffix\b|\bsuf\b")

dob_header_regx_str = re.compile(r"\bBirth Date\b|\bMEMBER D.O.B\b|\bD.O.B\b|\bdbirthdate\b|\bBirthDate\b|\bBirthday\b|\bDate of Birth\b|\bBirth\b|\bDOB\b|\bBeneDOB\b|\bBirth Dte\b|\bBirth_Date\b|\bDateofBirth\b|\bMemberDOB\b|\bDATE OF BIRTH\b|\bEmployee Birth Date\b|\bMember Birth Date\b|\bBirth dte\b|\bBeneDOB\b|\bBirth Dte\b|\bBirth_Date\b|\bDateofBirth\b|\bMemberDOB\b|\bDOB\b|\bBirth dte\b|\bEmployee Date of Birth\b|\bSpouse Date of Birth\b|\bpatient date of birth\b|\bBIRTHDATE\b|\bDate of birth\b|\bMEMBER DATE OF BIRTH\b|\bBIRTH DATE\b|\bParticipant Birthdate\b|\bDateOfBirth\b|\bBirth Date\b|\bDpdt Birth Date\b|\bPatient Birthdate (3)\b")

address_header_regx_str = re.compile(r"\bStreet\b|\bAddress\b|\b4 Address\b|\baddr1\b|\bAddress 1\b|\bAddress and\b|\bADDRESS AND SOCIAL SECURITY NUMBER OF EMPLOYEE\b|\bAddress Apt/Suite\b|\bAddress Code\b|\bAddress Deliv/Street\b|\bAddress Locations\b|\bAddress Type\b|\bAddress_1\b|\bAddress1\b|\be_address1\b|\bStreet1\b|\bAddress Line 1\b|\bmemaddr1\b|\bMember Address 1\b|\bMember Street Address\b|\bAddress\b|\bHome Address\b|\bParticipant Address\b|\bPrimary Address\b|\bCATT_Address\b|\bPatient Address Street (5)\b|\bPAddress1\b|\bStreet Name\b")

address2_header_regx_str = re.compile(r"\baddr2\b|\bAddress 2\b|\bADDRESS LINE 2\b|\be_address2\b|\bStreet2\b|\bStreet3\b|\bmemaddr2\b|\bMember Address 2\b|\bAddress_2\b|\bAddress2\b|\bAddress2\b|\bADDRESS 2\b|\bAddress 3\b|\bCATT_Address2\b|\bPAddress2\b")

addcity_header_regx_str = re.compile(r"\bCity and Suburban Electrical Contractors\b|\bCity Description\b|\bCITY OF DUNLAP\b|\bCITY OF GRANITE CITY\b|\bCity of Show\b|\bCITY OF UNIVERSITY CITY\b|\bCity:\b|\be_city\b|\bCity\b|\bCity\b|\bMember City\b|\bmemcity\b|\bHome City\b|\bParticipant City\b|\bCity  3\b|\bHome Location (CITY ONLY)\b|\bPrimary City\b|\bPatient Address City (5)\b|\bPCity\b")

addstate_header_regx_str = re.compile(r"\be_state\b|\bCity/State\b|\bCITY/STATE/ZIP\b|\bState\b|\bMember State\b|\bmemstate\b|\bEmployee State of Residence\b|\bHome State/Province\b|\bParticipant State\b|\bPatient Address State (5)\b|\bPState\b")

addzip_header_regx_str = re.compile(r"\be_zip\b|\bFORMATTED_ZIP\b|\bJobZip\b|\bZip Code\b|\bZIP Code\b|\bZIP/Postal Code\b|\bZip\b|\bZip_Code\b|\bZipCode\b|\bMember Zip\b|\bmemzip\b|\bZip / Postal Code\b|\bZIP 4\b|\bZIP 5\b|\bResidential Zip Code\b|\bHome ZIP/Postal Code\b|\bResZip\b|\bParticipant Zip\b|\bResident Zip\b|\bZip  3\b|\bHome (Zipcode only)\b|\bZip-code\b|\bPatient Address Zip (5)\b|\bPZip\b")

dod_header_regx_str = re.compile(r"\bDateofDeath\b|\bDate of Death\b")

Businessname_header_regx_str = re.compile(r"\bBUSINESS NAME\b")

Phone_header_regx_str = re.compile(r"\bHome_Phone\b|\bHome Phone\b")

driverslicence_header_regx_str = re.compile(r"\bState License Number\b|\bSecondary State License #\b|\bPrimary State License #\b")
