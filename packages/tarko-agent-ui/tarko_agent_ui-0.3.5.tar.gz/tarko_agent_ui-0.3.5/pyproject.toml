[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "tarko-agent-ui"
version = "0.3.5"
description = "Python SDK for managing Tarko Agent UI Builder static assets"
readme = "README.md"
requires-python = ">=3.8"
authors = [
    {name = "ULIVZ", email = "chenhaoli@bytedance.com"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: User Interfaces",
    "Framework :: FastAPI",
    "Framework :: Flask",
    "Framework :: Django",
]
dependencies = []

[project.urls]
Homepage = "https://github.com/agent-infra/tarko-agent-ui-python"
Repository = "https://github.com/agent-infra/tarko-agent-ui-python"
"Bug Tracker" = "https://github.com/agent-infra/tarko-agent-ui-python/issues"

[tool.setuptools.packages.find]
where = ["."]
include = ["tarko_agent_ui*"]

[tool.setuptools.package-data]
tarko_agent_ui = ["static/**/*"]



[dependency-groups]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "mypy>=1.0.0",
    "fastapi>=0.68.0",
    "uvicorn[standard]>=0.15.0",
    "httpx>=0.24.0",
    "requests>=2.25.0",
    "types-requests>=2.25.0",
]

[tool.pytest.ini_options]
minversion = "0.3.5"
addopts = ["-ra", "--cov=tarko_agent_ui"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["tarko_agent_ui"]
omit = ["tests/*"]

[tool.black]
line-length = 88
target-version = ['py38']
exclude = '''
(
  tarko_agent_ui/static
  | test_env
  | \.venv
)
'''

[tool.mypy]
python_version = "0.3.5"
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true

[[tool.mypy.overrides]]
module = "tests.*"
check_untyped_defs = false

[[tool.mypy.overrides]]
module = "examples.*"
check_untyped_defs = false
