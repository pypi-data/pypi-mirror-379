[project]
name = "betterproto2_compiler"
version = "0.9.0"
description = "Compiler for betterproto2"
authors = [
    { name = "Adrien Vannson", email = "adrien.vannson@protonmail.com" },
    { name = "Daniel G. Taylor", email = "danielgtaylor@gmail.com" },
]
license = "MIT"
keywords = [
    "protobuf",
    "gRPC",
    "compiler",
]
requires-python = ">=3.10,<4.0"
dependencies = [
    # TODO use the version from the current repo?
    "betterproto2>=0.9.0,<0.10",
    # "betterproto2",
    "ruff~=0.9.3",
    "jinja2>=3.0.3",
    "typing-extensions>=4.7.1,<5",
    "strenum>=0.4.15,<0.5 ; python_version == '3.10'",
]

# [tool.uv.sources]
# betterproto2 = { path = "../betterproto2" }

[project.urls]
Documentation = "https://betterproto.github.io/python-betterproto2/"
Repository = "https://github.com/betterproto/python-betterproto2"

[project.scripts]
protoc-gen-python_betterproto2 = "betterproto2_compiler.plugin:main"

[dependency-groups]
dev = [
    "pre-commit>=4.2.0,<5",
    "grpcio-tools>=1.54.2,<2",
    "poethepoet>=0.32.2,<0.33",
    "pyright>=1.1.391,<2",
    "ipykernel>=6.29.5,<7",
]
test = [
    "pytest>=8.3.4,<9",
    "protobuf>=5.29.3,<6",
]

[tool.uv]
package = true
default-groups = "all"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
extend-exclude = ["tests/outputs", "src/betterproto2_compiler/lib"]
target-version = "py310"
line-length = 120

[tool.ruff.lint]
select = [
    "F401",  # Unused imports
    "F841",  # Unused local variables
    "F821",  # Undefined names
    "E501",  # Line length violations

    "SIM101", # Simplify unnecessary if-else blocks
    "SIM102", # Simplify return or yield statements
    "SIM103", # Simplify list/set/dict comprehensions

    "UP",

    "I",
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.poe.tasks.test]
cmd = "pytest"
help = "Run tests"

[tool.poe.tasks.generate]
# sequence = ["_generate_tests", "_generate_tests_lib"]
sequence = ["_generate_tests"]
help = "Generate test cases"

[tool.poe.tasks._generate_tests]
script = "tests.generate:main"

[tool.poe.tasks._generate_tests_lib]
shell = """
python -m grpc.tools.protoc \
    --python_betterproto2_out=tests/output_betterproto \
    google/protobuf/any.proto \
    google/protobuf/api.proto \
    google/protobuf/duration.proto \
    google/protobuf/empty.proto \
    google/protobuf/field_mask.proto \
    google/protobuf/source_context.proto \
    google/protobuf/struct.proto \
    google/protobuf/timestamp.proto \
    google/protobuf/type.proto \
    google/protobuf/wrappers.proto

python -m grpc.tools.protoc \
    --python_betterproto2_out=tests/output_betterproto_pydantic \
    --python_betterproto2_opt=pydantic_dataclasses \
    google/protobuf/any.proto \
    google/protobuf/api.proto \
    google/protobuf/duration.proto \
    google/protobuf/empty.proto \
    google/protobuf/field_mask.proto \
    google/protobuf/source_context.proto \
    google/protobuf/struct.proto \
    google/protobuf/timestamp.proto \
    google/protobuf/type.proto \
    google/protobuf/wrappers.proto

python -m grpc.tools.protoc \
    --python_betterproto2_out=tests/output_betterproto_descriptor \
    --python_betterproto2_opt=google_protobuf_descriptors \
    google/protobuf/any.proto \
    google/protobuf/api.proto \
    google/protobuf/duration.proto \
    google/protobuf/empty.proto \
    google/protobuf/field_mask.proto \
    google/protobuf/source_context.proto \
    google/protobuf/struct.proto \
    google/protobuf/timestamp.proto \
    google/protobuf/type.proto \
    google/protobuf/wrappers.proto
"""

[tool.poe.tasks.typecheck]
cmd  = "pyright src"
help = "Typecheck the code with Pyright"

[tool.poe.tasks.format]
sequence = ["_format", "_sort-imports"]
help = "Format the source code, and sort the imports"

[tool.poe.tasks.check]
sequence = ["_check-format", "_check-ruff-lint"]
help = "Check that the source code is formatted and the code passes the linter"

[tool.poe.tasks._format]
cmd = "ruff format src tests"
help = "Format the source code without sorting the imports"

[tool.poe.tasks._sort-imports]
cmd = "ruff check --select I --fix src tests"
help = "Sort the imports"

[tool.poe.tasks._check-format]
cmd = "ruff format --diff src tests"
help = "Check that the source code is formatted"

[tool.poe.tasks._check-ruff-lint]
cmd = "ruff check src tests"
help = "Check the code with the Ruff linter"

# python -m grpc.tools.protoc \
#     --python_betterproto2_out=src/lib2 \
#     google/protobuf/any.proto \
#     google/protobuf/api.proto \
#     google/protobuf/duration.proto \
#     google/protobuf/empty.proto \
#     google/protobuf/field_mask.proto \
#     google/protobuf/source_context.proto \
#     google/protobuf/struct.proto \
#     google/protobuf/timestamp.proto \
#     google/protobuf/type.proto \
#     google/protobuf/wrappers.proto \
#     google/protobuf/compiler/plugin.proto