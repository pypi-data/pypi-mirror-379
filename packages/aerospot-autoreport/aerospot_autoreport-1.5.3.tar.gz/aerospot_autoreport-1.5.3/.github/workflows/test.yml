name: Test AutoReportV2

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # 允许手动触发

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10', '3.11', '3.12']
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install setuptools-scm[toml]
        pip install -e ".[dev]"
        
    - name: Check version detection
      run: |
        echo "Python version: ${{ matrix.python-version }}"
        echo "OS: ${{ matrix.os }}"
        python -c "from setuptools_scm import get_version; print(f'SCM version: {get_version()}')"
        python -c "import autoreport; print(f'Package version: {autoreport.__version__}')"
        
    - name: Run basic import test
      run: |
        python -c "
        import autoreport
        print(f'✅ Package imported successfully')
        print(f'📦 Package: {autoreport.__name__}')
        print(f'🏷️  Version: {autoreport.__version__}')
        print(f'👥 Author: {autoreport.__author__}')
        print(f'📧 Email: {autoreport.__email__}')
        
        # Test main components
        generator_class = autoreport.get_aerospotreportgenerator()
        print(f'✅ AeroSpotReportGenerator class: {generator_class}')
        
        report_class = autoreport.get_reportgenerator()
        print(f'✅ ReportGenerator class: {report_class}')
        
        print('🎉 All basic tests passed!')
        "
        
    - name: Run pytest (if tests exist)
      run: |
        if [ -d "tests" ]; then
          pytest --version
          pytest tests/ -v
        else
          echo "No tests directory found, skipping pytest"
        fi
      shell: bash
      continue-on-error: true
      
  compatibility-check:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up Python 3.11 (recommended)
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install build setuptools-scm[toml]
        
    - name: Build package
      run: python -m build
      
    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        python -c "
        import autoreport
        print('🎯 Wheel installation test passed!')
        print(f'Version: {autoreport.__version__}')
        "
        
    - name: Check package metadata
      run: |
        python -c "
        import importlib.metadata as metadata
        pkg_info = metadata.metadata('aerospot-autoreport')
        print('📋 Package Metadata:')
        print(f'Name: {pkg_info[\"Name\"]}')
        print(f'Version: {pkg_info[\"Version\"]}')
        print(f'Summary: {pkg_info[\"Summary\"]}')
        print(f'Author: {pkg_info[\"Author\"]}')
        print(f'Requires-Python: {pkg_info[\"Requires-Python\"]}')
        print('✅ Metadata check passed!')
        "