# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ..core.serialization import FieldMetadata


class UserAuthResponse(UniversalBaseModel):
    token: typing.Optional[str] = pydantic.Field(default=None)
    """
    Authentication token
    """

    expires_in: typing_extensions.Annotated[typing.Optional[int], FieldMetadata(alias="expiresIn")] = pydantic.Field(
        default=None
    )
    """
    Token expiration time in seconds
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
