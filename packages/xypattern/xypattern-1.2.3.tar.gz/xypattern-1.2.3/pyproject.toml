[tool.poetry]
name = "xypattern"
version = "1.2.3"
description = "Library for handling x-y pattern data."
authors = ["Clemens Prescher <clemens.prescher@gmail.com>"]
license = "MIT"
readme = "README.md"
build = "build_xypattern.py"

classifiers = [
    'Intended Audience :: Science/Research',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'License :: OSI Approved :: MIT License',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Physics',
    'Topic :: Scientific/Engineering :: Chemistry',
    'Topic :: Scientific/Engineering :: Visualization',
    'Topic :: Scientific/Engineering :: Information Analysis',
]

include = [
    # C extensions must be included in the wheel distributions
    {path = "xypattern/util/*.so", format = "wheel"},
    {path = "xypattern/util/*.pyd", format = "wheel"},
]
exclude = ["tests/*"] # Exclude tests from package


[tool.poetry-dynamic-versioning]
enable = false
vcs = "git"
pattern = "default-unprefixed"
style = "semver"

[tool.poetry-dynamic-versioning.substitution]
files = ["dioptas/__init__.py"]



[tool.poetry.dependencies]
python = ">=3.8, <3.14"
numpy = [
  { version = "^1.24.0", python = ">=3.8, <3.9" },
  { version = ">=1.26,<3.0", python = ">=3.9" }
]
scipy = [
  { version = "^1.9.3", python = "<3.10" },
  { version = "^1.11.3", python = ">=3.10" }
]


[tool.poetry.group.dev.dependencies]
cython = "^3.0.3"
pytest = "^7.4.2"
pytest-cov = "^4.1.0"
setuptools = { version = "^68.2.2", python = "^3.12" }
sphinx = "<7.0.0"
sphinx-rtd-theme = "<2.0.0"
myst-parser = "<0.19.0"

[tool.poetry.scripts]
stitch_patterns = "xypattern.scripts.stitch_patterns:main"

[build-system]
requires = ["poetry-core", "cython", "setuptools", "poetry-dynamic-versioning"]
build-backend = "poetry_dynamic_versioning.backend"
