[build-system]
# AVOID CHANGING REQUIRES: IT WILL BE UPDATED BY PYSCAFFOLD!
requires = ["setuptools>=61", "setuptools_scm[toml]>=7", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "sphinx-linkfix"
description = "Sphinx extension that rewrites GitHub-style links into proper Sphinx references."
dynamic = ["version"]
authors = [{ name = "Javier Moralejo PiÃ±as", email = "j.moralejo.pinas@gmail.com" }]
readme = "README.rst"
license = { text = "MIT" }
keywords = ["sphinx", "sphinx-extension", "github", "links", "references"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Environment :: Plugins",
    "Topic :: Documentation",
    "Topic :: Documentation :: Sphinx",
    "Topic :: Software Development :: Documentation",
    "Topic :: Software Development :: Build Tools",
    "Topic :: Text Processing :: Markup",
    "Topic :: Text Processing :: Markup :: reStructuredText",
    "Framework :: Sphinx",
    "Framework :: Sphinx :: Extension",
]
requires-python = ">=3.9"
dependencies = [
    "sphinx",
    "docutils",
]

[project.urls]
Homepage = "https://github.com/j-moralejo-pinas/sphinx-linkfix"
Changelog = "https://sphinx-linkfix.readthedocs.io/en/latest/CHANGELOG.html"
Source = "https://github.com/j-moralejo-pinas/sphinx-linkfix"
Documentation = "https://sphinx-linkfix.readthedocs.io/"
Tracker = "https://github.com/j-moralejo-pinas/sphinx-linkfix/issues"

[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
exclude = ["tests"]

[tool.setuptools_scm]
# For smarter version schemes and other configuration options,
# check out https://github.com/pypa/setuptools_scm
version_scheme = "guess-next-dev"
local_scheme = "node-and-date"
write_to = "src/sphinx_linkfix/_version.py"

[project.optional-dependencies]
dev = [
    "pytest",
    "pyright",
    "pre-commit",
    "ruff",
    "pydoclint",
    "docformatter",
    "pytest",
    "pytest-cov",
    "pyupgrade",
    "twine",
    "build",
]
docs = ["sphinx", "sphinx-autoapi", "sphinx-rtd-theme"]
format = ["ruff", "docformatter", "pyupgrade"]
code-quality = ["ruff", "pydoclint", "pyright"]
test = ["pytest", "pytest-cov"]

[tool.pytest.ini_options]
pythonpath = ["src", "tests"]
addopts = "-ra --strict-markers"
# norecursedirs = ["build", "dist"]
testpaths = ["tests"]

[tool.coverage.run]
source = ["src"]
omit = [
]

[tool.ruff]
fix = true
unsafe-fixes = true
line-length = 100

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
ignore = [
    "S101", # Use of `assert` for testing purposes
    "COM812", # Add commas at the end of an iterable
    "S311", # Standard pseudo-random generators are not suitable for cryptographic purposes
    "TD003", # Missing issue link for this TODO
    "FIX001", # Line contains FIXME, consider resolving the issue
    "FIX002", # Line contains TODO, consider resolving the issue
    "PLR0913",  # Too many arguments in function definition
    "PLR0915", # Too many statements
    "ANN401", # Dynamically typed expressions (typing.Any) are disallowed in `**kwargs`
]
select = ["ALL"]
exclude = ["docs/*"] # "tests/*"

[tool.ruff.lint.pycodestyle]
max-doc-length = 100

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "SLF001", # Private member accessed
    "PLR2004", # Magic value used in comparison
    "INP001", # File is part of an implicit namespace package.
]
"src/sphinx_linkfix/_version.py" = [
    "ALL",
]

[tool.pydoclint]
style = 'numpy'

[tool.docformatter]
style = 'numpy'
wrap-summaries = 100
wrap-descriptions = 100
pre-summary-newline = true
close-quotes-on-newline = true

[tool.vulture]
# min_confidence = 80
paths = ["src", "tests"]
