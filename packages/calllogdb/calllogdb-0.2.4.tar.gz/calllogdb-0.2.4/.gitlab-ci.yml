stages:
  - lint
  - build

# ───────────────────────────────────────────────────────────────
# 🔹 Общий шаблон для линтеров (ruff / mypy)
# ───────────────────────────────────────────────────────────────
.lint-template:
  stage: lint
  image: python:${PYTHON_VERSION}-bookworm
  variables:
    UV_CACHE_DIR: .uv-cache
  before_script:
    - apt-get update -qq && apt-get install -y curl
    - curl -LsSf https://astral.sh/uv/install.sh | sh
    - uv sync
  cache:
    paths: [.uv-cache]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push" &&
        ($CI_COMMIT_BRANCH == "main" || $CI_COMMIT_BRANCH == "develop")'
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'
    - when: never

# ───────────────────────────────────────────────────────────────
# 🔹 Шаблон сборки Docker-образа → GitLab Container Registry
# ───────────────────────────────────────────────────────────────
.build-template:
  stage: build
  image: docker:26.1-cli
  services: [docker:26.1-dind]
  variables:
    DOCKER_BUILDKIT: 1
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login "$CI_REGISTRY" -u "$CI_REGISTRY_USER" --password-stdin
    # генерим settings.yml из settings.tpl.yml
    - apt-get update && apt-get install -y gettext
    - envsubst < settings.tpl.yml > settings.yml
  script:
    - docker build -t $IMAGE_NAME:$CI_COMMIT_TAG -t $IMAGE_NAME:latest .
    - docker push $IMAGE_NAME:$CI_COMMIT_TAG
    - docker push $IMAGE_NAME:latest
  artifacts:
    when: on_failure
    expire_in: 1 hour
    paths: [settings.yml]
  needs: [ruff-lint, mypy-check]
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v\d+\.\d+\.\d+$/'

# ───────────────────────────────────────────────────────────────
# 🔹 Job: Ruff (форматтер + линт)
# ───────────────────────────────────────────────────────────────

ruff-lint:
  extends: .lint-template
  variables:
    PYTHON_VERSION: "3.13"
  script:
    - uv run nox -s ruff_format ruff

# ───────────────────────────────────────────────────────────────
# 🔹 Job: Mypy (type checker)
# ───────────────────────────────────────────────────────────────
mypy-check:
  extends: .lint-template
  variables:
    PYTHON_VERSION: "3.13"
  script:
    - uv run nox -s mypy

# ───────────────────────────────────────────────────────────────
# 🔹 Job: сборки
# ───────────────────────────────────────────────────────────────
# build-image:
#   extends: .build-template
#   variables:
#     IMAGE_NAME: $CI_REGISTRY_IMAGE
