[build-system]
requires = ["hatchling", "uv-dynamic-versioning"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "uv-dynamic-versioning"

[tool.uv-dynamic-versioning]
vcs = "git"
style = "pep440"
bump = true

[project]
name = "logfire-mcp"
dynamic = ["version"]
description = "The Pydantic Logfire MCP server! 🔍"
authors = [
    { name = "Marcelo Trylesinski", email = "marcelotryle@gmail.com" },
    { name = "Samuel Colvin", email = "samuel@pydantic.dev" },
]
readme = "README.md"
requires-python = ">=3.11"
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
]
dependencies = ["logfire>=3.7.1", "mcp[cli]>=1.10.0", "python-dotenv>=1.1.1"]

[project.scripts]
logfire-mcp = "logfire_mcp.__main__:main"

[project.urls]
Homepage = "https://github.com/pydantic/logfire-mcp"
Repository = "https://github.com/pydantic/logfire-mcp"
Issues = "https://github.com/pydantic/logfire-mcp/issues"

[dependency-groups]
dev = [
    "devtools>=0.12.2",
    "inline-snapshot[black]>=0.24.0",
    "pyright>=1.1.403",
    "pytest-recording>=0.13.4",
    "ruff",
]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
extend-select = [
    "Q",
    "RUF100",
    "RUF018", # https://docs.astral.sh/ruff/rules/assignment-in-assert/
    "C90",
    "UP",
    "I",
    "TID251",
]
ignore = ["UP031"] # https://docs.astral.sh/ruff/rules/printf-string-formatting/
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { combine-as-imports = true }

[tool.ruff.format]
# don't format python in docstrings, pytest-examples takes care of it
docstring-code-format = false
quote-style = "single"

[tool.inline-snapshot]
format-command = "ruff format --stdin-filename {filename}"

[tool.inline-snapshot.shortcuts]
snap-fix = ["create", "fix"]
snap = ["create"]
