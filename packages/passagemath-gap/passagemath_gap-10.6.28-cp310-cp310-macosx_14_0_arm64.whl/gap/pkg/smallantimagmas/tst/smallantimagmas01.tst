# smallantimagmas, chapter 1
#
# DO NOT EDIT THIS FILE - EDIT EXAMPLES IN THE SOURCE INSTEAD!
#
# This file has been generated by AutoDoc. It contains examples extracted from
# the package documentation. Each example is preceded by a comment which gives
# the name of a GAPDoc XML file and a line range from which the example were
# taken. Note that the XML file in turn may have been generated by AutoDoc
# from some other input.
#
gap> START_TEST("smallantimagmas01.tst");

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:17-24
gap> IsAntiassociative(OneSmallGroup(16));
false
gap> IsAntiassociative(OneSmallAntimagma(2));
true
gap> IsAntiassociative(OneSmallAntimagma(3));
true

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:59-71
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> Display( MultiplicationTable(M) );
[ [  2,  1 ],
  [  2,  1 ] ]
gap> IsRightCancellative(M);
false
gap> IsLeftCancellative(M);
true
gap> List(AllSmallAntimagmas(2), M -> IsLeftCancellative(M));
[ true, false ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:86-89
gap> List(AllSmallAntimagmas(2), M -> IsRightCancellative(M));
[ false, true ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:104-107
gap> List(AllSmallAntimagmas(2), M -> IsCancellative(M));
[ false, false ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:126-137
gap> OneSmallAntimagma(2);
<magma with 2 generators>
gap> AssociativityIndex(OneSmallAntimagma(2));
0
gap> OneSmallGroup(4);
<pc group of size 4 with 2 generators>
gap> AssociativityIndex(OneSmallGroup(4));
64
gap> AssociativityIndex(OneSmallGroup(4)) = 4 ^ 3;
true

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:150-158
gap> List(AllSmallAntimagmas(3), M -> DiagonalOfMultiplicationTable((M)));                
[ [ 2, 1, 1 ], [ 2, 1, 1 ], 
  [ 2, 3, 2 ], [ 2, 1, 1 ], 
  [ 2, 1, 1 ], [ 2, 1, 2 ], 
  [ 2, 3, 2 ], [ 2, 1, 2 ], 
  [ 2, 3, 1 ], [ 2, 3, 1 ]
]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:171-173


# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:186-187

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:200-207
gap> List(AllSmallAntimagmas(2), M -> List(M, m -> m * m) );                
[ [ m2, m1 ], [ m2, m1 ] ]
gap> List(AllSmallAntimagmas(2), M -> SquaresIndex(M ));
[ 2, 2 ]
gap> List(AllSmallAntimagmas(3), M -> SquaresIndex(M ));
[ 2, 2, 2, 2, 2, 2, 2, 2, 3, 3 ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:220-227
gap> IsAntiassociative(OneSmallGroup(16));
false
gap> IsAntiassociative(OneSmallAntimagma(2));
true
gap> IsAntiassociative(OneSmallAntimagma(3));
true

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:278-283
gap> AllSmallAntimagmas(2);
[ <magma with 2 generators>, <magma with 2 generators> ]
gap> List(AllSmallAntimagmas(2), M -> AllSubmagmas(M));
[ [ <magma with 1 generator> ], [ <magma with 1 generator> ] ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:304-317
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> N := SmallAntimagma(2, 2);
<magma with 2 generators>
gap> T := MagmaByMultiplicationTable([ [2, 1], [2, 1] ]);
<magma with 2 generators>
gap> IsMagmaIsomorphic(M, M);
true
gap> IsMagmaIsomorphic(M, T);
true
gap> IsMagmaIsomorphic(M, N);
false

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:330-343
gap> N := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> N := SmallAntimagma(2, 2);
<magma with 2 generators>
gap> IsMagmaAntiisomorphic(M, M);
false
gap> IsMagmaAntiisomorphic(M, N);
true
gap> IsMagmaAntiisomorphic(M, TransposedMagma(M));
true

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:356-371
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> IsMagmaAntiisomorphic(M, TransposedMagma(M));
true
gap> IsMagmaIsomorphic(M, TransposedMagma(TransposedMagma(M)));
true
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> Display(MultiplicationTable(M));
[ [  2,  1 ],
  [  2,  1 ] ]
gap> Display(MultiplicationTable(TransposedMagma(M)));
[ [  2,  2 ],
  [  1,  1 ] ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:400-410
gap> AllSmallAntimagmas(2);
[ <magma with 2 generators>, <magma with 2 generators> ]
gap> AllSmallAntimagmas(3);
[ 
  <magma with 3 generators>, <magma with 3 generators>, <magma with 3 generators>,
  <magma with 3 generators>, <magma with 3 generators>, <magma with 3 generators>,
  <magma with 3 generators>, <magma with 3 generators>,
  <magma with 3 generators>, <magma with 3 generators>
]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:423-430
gap> NrSmallAntimagmas(2);
2
gap> NrSmallAntimagmas(3);
10
gap> NrSmallAntimagmas(4);
17780

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:443-448
gap> SmallAntimagma(2, 1);
<magma with 2 generators>
gap> SmallAntimagma(4, 5);
<magma with 4 generators>

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:461-467
gap> OneSmallAntimagma(2);
<magma with 2 generators>

gap> OneSmallAntimagma(3);
<magma with 3 generators>

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:480-483
gap> ReallyAllSmallAntimagmas(2);
[ <magma with 2 generators>, <magma with 2 generators> ]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:496-499
gap> ReallyNrSmallAntimagmas(3);
52

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:512-520
gap> AntimagmaGeneratorPossibleDiagonals(2);
[ [ 2, 1 ] ]
gap> AntimagmaGeneratorPossibleDiagonals(3);
[ 
  [ 2, 1, 1 ], [ 2, 1, 2 ], [ 2, 3, 1 ], [ 2, 3, 2 ], 
  [ 3, 1, 1 ], [ 3, 1, 2 ], [ 3, 3, 1 ], [ 3, 3, 2 ] 
]

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:547-554
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> N := MagmaByMultiplicationTable([ [2, 1], [2, 1] ]);
<magma with 2 generators>
gap> MagmaIsomorphism(M, N);
<mapping: Domain([ m1, m2 ]) -> Domain([ m1, m2 ]) >

# doc/_Chapter_smallantimagmas_automatic_generated_documentation.xml:567-574
gap> M := SmallAntimagma(2, 1);
<magma with 2 generators>
gap> N := SmallAntimagma(2, 2);
<magma with 2 generators>
gap> MagmaAntiisomorphism(M, N);
<mapping: Domain([ m1, m2 ]) -> Domain([ m1, m2 ]) >

#
gap> STOP_TEST("smallantimagmas01.tst", 1);
