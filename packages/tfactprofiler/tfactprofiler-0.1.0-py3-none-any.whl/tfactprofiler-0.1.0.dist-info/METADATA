Metadata-Version: 2.4
Name: tfactprofiler
Version: 0.1.0
Summary: TF activity inference, reliability estimation, and perturbation prediction.
Author: Hikaru Sugimoto
License: BSD 3-Clause License
        
        Copyright (c) 2025, Hikaru Sugimoto
        All rights reserved.
        
        Redistribution and use in source and binary forms, with or without
        modification, are permitted provided that the following conditions are met:
        
        1. Redistributions of source code must retain the above copyright notice, this
           list of conditions and the following disclaimer.
        
        2. Redistributions in binary form must reproduce the above copyright notice,
           this list of conditions and the following disclaimer in the documentation
           and/or other materials provided with the distribution.
        
        3. Neither the name of the copyright holder nor the names of its
           contributors may be used to endorse or promote products derived from
           this software without specific prior written permission.
        
        THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
        AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
        IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
        DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
        FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
        DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
        SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
        CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
        OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
        OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
        
Keywords: single-cell,transcription factor,scRNA-seq,bioinformatics,perturbation
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: License :: OSI Approved :: BSD License
Classifier: Intended Audience :: Science/Research
Classifier: Topic :: Scientific/Engineering :: Bio-Informatics
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: numpy>=1.22
Requires-Dist: pandas>=1.5
Requires-Dist: scipy<1.16
Requires-Dist: scikit-learn>=1.1
Requires-Dist: anndata>=0.9
Requires-Dist: decoupler==2.0.4
Requires-Dist: adjusttext
Requires-Dist: docrep
Requires-Dist: marsilea
Requires-Dist: numba
Requires-Dist: requests
Requires-Dist: session-info2
Requires-Dist: scanpy
Requires-Dist: tqdm
Dynamic: license-file

# TFActProfiler

**TFActProfiler** provides tools to infer transcription factor (TF) activities from gene expression data, assess their reliability, and simulate perturbation effects with or without additional model training.

## Features
1. **TF activity inference with reliability estimation**  
   - `estimate_reliability`: Computes activity scores for transcription factors and estimates their reliability 
   
2. **Perturbation simulation without additional training**  
   - `perturbation_predict`: Predicts the effects of TF perturbations (e.g., knockout) directly from prior TFâ€“target interaction networks and observed expression data.  
   - No extra model fitting required.
   
3. **Perturbation simulation with additional training**  
   - `train_W`, `predict_withW`: Learns gene expression changes to predict TF perturbations.


## Installation
```bash
pip install tfactprofiler
```

## Quick usage
Usage examples are provided as Jupyter notebooks inside each **example** folder:

- `example/TF_activity_inference.ipynb`  
  *Single-cell TF activity inference with reliability estimation.*
  
- `example/Perturbation_without_training.ipynb`  
  *Perturbation simulation without additional model training.*
  
- `example/Perturbation_with_training.ipynb`  
  *Perturbation simulation with model training and cross-validation.*

