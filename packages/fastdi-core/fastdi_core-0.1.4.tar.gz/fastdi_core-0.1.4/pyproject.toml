[build-system]
requires = ["maturin>=1.4,<2.0"]
build-backend = "maturin"

[project]
name = "fastdi-core"
version = "0.1.4"
description = "FastDI â€” Rust-powered Dependency Injection for Python"
authors = [
    { name = "Ali Aliyev", email = "ali@aliev.me" },
]
readme = "README.md"
requires-python = ">=3.9"
license = { text = "MIT" }
classifiers = [
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Rust",
  "Programming Language :: Python :: Implementation :: CPython",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = []

[project.urls]
homepage = "https://github.com/aliev/fastdi"

[tool.maturin]
bindings = "pyo3"
# Expose the Rust module as a top-level to avoid import shadowing
module-name = "_fastdi_core"
include = [
    "_fastdi_core.pyi",
    "fastdi/__init__.py",
    "fastdi/container.py",
    "fastdi/decorators.py",
    "fastdi/types.py",
    "fastdi/py.typed",
]

[dependency-groups]
dev = [
    "maturin>=1.9.4",
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.20",
    "mkdocstrings>=0.30.1",
    "mkdocstrings-python>=1.18.2",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "ruff>=0.13.1",
    "tabulate>=0.9.0",
]

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = ["E", "F", "I", "UP", "B", "SIM", "W"]

[tool.ruff.lint.per-file-ignores]
"fastdi/__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.11"
warn_unused_ignores = true
ignore_missing_imports = true
check_untyped_defs = true
exclude = "(^benchmarks/|^examples/|^tests/)"
