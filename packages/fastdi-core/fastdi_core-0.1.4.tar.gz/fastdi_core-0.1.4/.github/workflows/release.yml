name: Build Wheels and Publish

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build-wheels:
    name: Build wheels (${{ matrix.platform }})
    runs-on: ${{ matrix.os }}
    env:
      UV_PYTHON: "3.11"
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: linux
            os: ubuntu-latest
            arch_env: CIBW_ARCHS_LINUX
            archs: "x86_64"
          - platform: macos
            os: macos-13
            arch_env: CIBW_ARCHS_MACOS
            archs: "universal2"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Add rust targets (host)
        if: ${{ matrix.platform == 'macos' }}
        run: rustup target add aarch64-apple-darwin

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Install Python runtime
        run: uv python install 3.11

      - name: Install build tooling
        run: uv tool install cibuildwheel==2.19.1

      - name: Build wheels
        run: uvx cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: "cp38-* cp39-* cp310-* cp311-* cp312-*"
          CIBW_SKIP: "pp*-*"
          CIBW_BEFORE_ALL_LINUX: >
            curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal &&
            source $HOME/.cargo/env &&
            rustup target add x86_64-unknown-linux-gnu
          CIBW_ENVIRONMENT_LINUX: PATH="$HOME/.cargo/bin:$PATH"
          CIBW_BEFORE_ALL_MACOS: rustup target add aarch64-apple-darwin
          CIBW_ENVIRONMENT_MACOS: PATH="$HOME/.cargo/bin:$PATH" MACOSX_DEPLOYMENT_TARGET=10.13
          CIBW_MANYLINUX_X86_64: "manylinux_2_28"
          CIBW_MANYLINUX_PYPY_X86_64: "manylinux_2_28"
          ${{ matrix.arch_env }}: ${{ matrix.archs }}

      - name: Upload wheels artifact
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.platform }}
          path: dist

  sdist:
    name: Build sdist
    runs-on: ubuntu-latest
    env:
      UV_PYTHON: "3.11"
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up uv
        uses: astral-sh/setup-uv@v1

      - name: Install Python runtime
        run: uv python install 3.11

      - name: Install build tooling
        run: uv tool install maturin

      - name: Build source distribution
        run: uvx maturin sdist --out dist

      - name: Upload sdist artifact
        uses: actions/upload-artifact@v4
        with:
          name: sdist
          path: dist

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs:
      - build-wheels
      - sdist
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -R dist

      - name: Publish to PyPI
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages-dir: dist
          skip-existing: true
