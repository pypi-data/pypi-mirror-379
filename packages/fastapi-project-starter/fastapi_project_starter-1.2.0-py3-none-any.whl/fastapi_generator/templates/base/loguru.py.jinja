"""
Logging configuration for {{ project_name }}
Using loguru for structured logging
"""

import os
from app.core.config import settings
from pathlib import Path
from loguru import logger

# Remove default handler
logger.remove()

LOG_DIR = Path(__file__).resolve().parents[2] / "logs"
LOG_DIR.mkdir(parents=True, exist_ok=True)

# Bind a default request_id so it's never missing
logger = logger.bind(request_id="global")

# Log format
LOG_FORMAT = (
    "{time:YYYY-MM-DD HH:mm:ss.SSS} | {level: <8} | "
    "{name}:{function}:{line} - {message}"
)

# Debug/Info log - everything up to WARNING level
logger.add(
    sink=os.path.join(LOG_DIR, "debug.log"),
    format=LOG_FORMAT,
    level="DEBUG" if settings.ENVIRONMENT == "development" else "INFO",
    filter=lambda record: record['level'].no <= logger.level("WARNING").no,
    rotation="10 MB",
    retention="30 days",
    compression="zip",
    backtrace=True,
    diagnose=True
)

# Error log - only ERROR and above
logger.add(
    sink=os.path.join(LOG_DIR, "error.log"),
    format=LOG_FORMAT,
    level="ERROR",
    rotation="5 MB",
    retention="60 days",
    compression="zip",
    backtrace=True,
    diagnose=True
)


def get_logger():
    """Get the configured logger instance"""
    return logger