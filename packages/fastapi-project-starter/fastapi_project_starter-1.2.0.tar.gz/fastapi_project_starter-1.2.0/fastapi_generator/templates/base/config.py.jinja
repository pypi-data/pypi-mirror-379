"""
Configuration settings for {{ project_name }}
"""
from pathlib import Path

from pydantic_settings import BaseSettings, SettingsConfigDict
from pydantic import Field

BASE_DIR = Path(__file__).parent.parent.parent.resolve()  # points to project root
ENV_FILE = BASE_DIR / "envs" / ".env.local"


class Settings(BaseSettings):
    """Application settings"""

    APP_VERSION: str = Field(default="1.0.0", description="App version")

    POSTGRES_HOST: str
    POSTGRES_PORT: int
    POSTGRES_DB: str
    POSTGRES_USER: str
    POSTGRES_PASSWORD: str

    API_V1_STR: str = Field(default="/api/v1", description="API V1 prefix")
    # App settings
    APP_NAME: str = "{{ project_name }}"
    APP_VERSION: str = "{{ version }}"
    DEBUG: bool = Field(default=False, description="Debug mode")

    # Server settings
    HOST: str = Field(default="0.0.0.0", description="Host to bind to")
    PORT: int = Field(default=8000, description="Port to bind to")

    {% if include_database %}
    # Database settings
    DATABASE_URL: str = Field(
        default="{{ database_url }}",
        description="Database connection URL"
    )
    {% endif %}

    {% if include_auth %}
    # Authentication settings
    SECRET_KEY: str = Field(
        default="SECRET-KEY-CHANGE-IN-PROD",
        description="Secret key for JWT tokens"
    )
    ALGORITHM: str = Field(default="HS256", description="JWT algorithm")
    ACCESS_TOKEN_EXPIRE_MINUTES: int = Field(
        default=30,
        description="Access token expiry time in minutes"
    )
    {% endif %}

    {% if include_celery %}
    # Celery settings
    CELERY_BROKER_URL: str = Field(
        default="redis://localhost:6379/0",
        description="Celery broker URL"
    )
    CELERY_RESULT_BACKEND: str = Field(
        default="redis://localhost:6379/0",
        description="Celery result backend URL"
    )
    {% endif %}

    # Mail settings (added)
    MAIL_FROM: str = Field(default="no-reply@example.com")
    MAIL_FROM_NAME: str = "My App"
    MAIL_SERVER: str = Field(default="smtp.example.com")
    MAIL_PORT: int = Field(default=587)
    MAIL_USERNAME: str = Field(default="username")
    MAIL_PASSWORD: str = Field(default="password")
    MAIL_TLS: bool = Field(default=True)
    MAIL_SSL: bool = Field(default=False)



    # Environment
    ENVIRONMENT: str = Field(default="development", description="Environment")

    model_config = SettingsConfigDict(
        env_file=str(ENV_FILE),
        env_file_encoding="utf-8",
        env_ignore_empty=True,
        extra="ignore",  # Ignore unknown env vars
    )


# Global settings instance
settings = Settings()
