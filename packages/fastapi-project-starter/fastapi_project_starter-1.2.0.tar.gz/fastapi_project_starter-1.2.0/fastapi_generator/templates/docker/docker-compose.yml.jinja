version: '3.8'

services:
  traefik:
    image: docker.io/traefik:v3.2
    restart: unless-stopped
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./docker/traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - {{ project_slug }}_network
    command:
      - --providers.docker

  api: &api
    build:
      context: .
      dockerfile: ./docker/fastapi/Dockerfile
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    env_file:
      - ./envs/.env.local
    {% if include_database or include_celery %}
    depends_on:
      {% if include_database %}
      - postgres
      {% endif %}
      {% if include_celery %}
      - redis
      {% endif %}
    {% endif %}
    command: /start.sh
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.entrypoints=web"
      - "traefik.http.routers.api.rule=Host(`api.localhost`)"
      - "traefik.http.routers.api.service=api-service"
      - "traefik.http.services.api-service.loadbalancer.server.port=8000"
      - "traefik.http.services.api-service.loadbalancer.healthcheck.path=/health"
      - "traefik.http.services.api-service.loadbalancer.healthcheck.interval=30s"
      - "traefik.http.services.api-service.loadbalancer.healthcheck.timeout=5s"
    networks:
      - {{ project_slug }}_network

  {% if include_database %}
  postgres:
    image: postgres:15-alpine
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - {{ project_slug }}_postgres_data:/var/lib/postgresql/data
    env_file:
      - ./envs/.env.local
    networks:
      - {{ project_slug }}_network
  {% endif %}

  {% if include_celery %}
  redis:
    image: docker.io/redis:7.0-alpine
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - {{ project_slug }}_redis_data:/data
    env_file:
      - ./envs/.env.local
    networks:
      - {{ project_slug }}_network

  celery_worker:
    <<: *api
    ports: []
    command: /docker/fastapi/celery/worker/start.sh
    depends_on:
      {% if include_database %}
      - postgres
      {% endif %}
      - redis

  celery_beat:
    <<: *api
    ports: []
    command: /docker/fastapi/celery/beat/start.sh
    depends_on:
      {% if include_database %}
      - postgres
      {% endif %}
      - redis

  flower:
    <<: *api
    ports:
      - "5555:5555"
    command: /docker/fastapi/celery/flower/start.sh
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.entrypoints=web"
      - "traefik.http.routers.flower.rule=Host(`flower.localhost`)"
      - "traefik.http.routers.flower.service=flower-service"
      - "traefik.http.services.flower-service.loadbalancer.server.port=5555"
  {% endif %}

  mailpit:
    image: docker.io/axllent/mailpit:v1.20.3
    ports:
      - "8025:8025"
      - "1025:1025"
    volumes:
      - {{ project_slug }}_mailpit_data:/data
    environment:
      MP_MAX_MESSAGES: 5000
      MP_DATA_FILE: /data/mailpit.db
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    networks:
      - {{ project_slug }}_network
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mailpit.entrypoints=web"
      - "traefik.http.routers.mailpit.rule=Host(`mailpit.localhost`)"
      - "traefik.http.routers.mailpit.service=mailpit-service"
      - "traefik.http.services.mailpit-service.loadbalancer.server.port=8025"

networks:
  {{ project_slug }}_network:
    driver: bridge

volumes:
  {% if include_database %}
  {{ project_slug }}_postgres_data:
  {% endif %}
  {% if include_celery %}
  {{ project_slug }}_redis_data:
  {% endif %}
  {{ project_slug }}_mailpit_data:
