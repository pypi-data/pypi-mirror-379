import time
from starlette.middleware.base import BaseHTTPMiddleware
from starlette.requests import Request
from starlette.responses import Response

class TimerMiddleware(BaseHTTPMiddleware):
    """
       Simple middleware to track how long each request takes.

       Why use it:
       - Handy for spotting slow endpoints
       - Quick way to see performance during development

       Example:
           app.add_middleware(TimerMiddleware)

           # If you call /example, youâ€™ll see something like:
           # Request : /example completed in 0.02305 seconds
       """
    async def dispatch(self,request: Request, call_next) -> Response:
        start_time = time.time()
        response = await call_next(request)
        process_time = time.time() - start_time
        print(f"Request : {request.url.path} completed in {process_time:.5f} seconds")
        return response