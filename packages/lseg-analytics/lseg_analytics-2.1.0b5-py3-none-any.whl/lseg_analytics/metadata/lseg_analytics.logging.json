[
    {
        "type": "EnumChunk",
        "name": "LoggingOutput",
        "id": "lseg_analytics.logging.LoggingOutput",
        "content": "class LoggingOutput(enum.Enum):\n    \"\"\"\n    Enum class for logging output types.\n\n    Attributes\n    ----------\n    STDOUT : str\n        Output to standard output.\n    FILE : str\n        Output to a file.\n\n    Examples\n    --------\n    Add file output for SDK logging.\n\n    >>> Configuration[\"logging\"].add_output(LoggingOutput.FILE)\n\n    Remove standard output for SDK logging.\n\n    >>> Configuration[\"logging\"].remove_output(LoggingOutput.STDOUT)\n\n    \"\"\"\n\n    STDOUT = \"stdout\"\n    \"\"\" Output to standard output. \"\"\"\n    FILE = \"file\"\n    \"\"\" Output to a file. \"\"\"\n",
        "metadata": {
            "doc": "\n    Enum class for logging output types.\n\n    Attributes\n    ----------\n    STDOUT : str\n        Output to standard output.\n    FILE : str\n        Output to a file.\n\n    Examples\n    --------\n    Add file output for SDK logging.\n\n    >>> Configuration[\"logging\"].add_output(LoggingOutput.FILE)\n\n    Remove standard output for SDK logging.\n\n    >>> Configuration[\"logging\"].remove_output(LoggingOutput.STDOUT)\n\n    \n",
            "members": [
                "LoggingOutput.STDOUT = stdout",
                "LoggingOutput.FILE = file"
            ],
            "signature": "class LoggingOutput(Enum):\n    \"\"\"\"\"\"\n    STDOUT = stdout\n    FILE = file"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": []
        },
        "source_module": "lseg_analytics.logging",
        "module_version": "2.1.0b5"
    }
]