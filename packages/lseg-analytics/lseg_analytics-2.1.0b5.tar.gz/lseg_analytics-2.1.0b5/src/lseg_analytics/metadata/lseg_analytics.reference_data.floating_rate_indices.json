[
    {
        "type": "ClassChunk",
        "name": "FloatingRateIndex",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex",
        "params": [
            {
                "name": "definition",
                "type": "FloatingRateIndexDefinition"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_floating_rate_index.py",
        "line_number": 25,
        "content": "class FloatingRateIndex:\n    \"\"\"\n    FloatingRateIndex object.\n\n    Contains all the necessary information to identify and define a FloatingRateIndex instance.\n\n    Attributes\n    ----------\n    type : Union[str, ResourceType], optional\n        Property defining the type of the resource.\n    id : str, optional\n        Unique identifier of the FloatingRateIndex.\n    location : Location\n        Object defining the location of the FloatingRateIndex in the platform.\n    description : Description, optional\n        Object defining metadata for the FloatingRateIndex.\n    definition : FloatingRateIndexDefinition\n        Object defining the FloatingRateIndex.\n\n    See Also\n    --------\n\n\n    Examples\n    --------\n    >>> rounding=RoundingDefinition(\n    >>>     decimal_places=0,\n    >>>     scale=1\n    >>> )\n    >>>\n    >>> quote_definition = QuoteDefinition(\n    >>>     instrument_code=\"EUROSTR=\"\n    >>> )\n    >>>\n    >>> index_definition = FloatingRateIndexDefinition(\n    >>>     currency='EUR',\n    >>>     name='New_EUR_3M_FR',\n    >>>     tenor='3M',\n    >>>     year_basis='YB_360',\n    >>>     rounding=rounding,\n    >>>     quote_definition=quote_definition)\n    >>>\n    >>> index_description=Description(summary=\"User defined EUR 3M Floating Rate Index\", tags=[\"EUR\"])\n    >>>\n    >>> user_defined_index = FloatingRateIndex(definition=index_definition, description=index_description)\n    >>>\n    >>> print(user_defined_index.definition)\n    {'currency': 'EUR', 'name': 'New_EUR_3M_FR', 'tenor': '3M', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR='}}\n\n    \n    \"\"\"\n",
        "metadata": {
            "doc": "\n    FloatingRateIndex object.\n\n    Contains all the necessary information to identify and define a FloatingRateIndex instance.\n\n    Attributes\n    ----------\n    type : Union[str, ResourceType], optional\n        Property defining the type of the resource.\n    id : str, optional\n        Unique identifier of the FloatingRateIndex.\n    location : Location\n        Object defining the location of the FloatingRateIndex in the platform.\n    description : Description, optional\n        Object defining metadata for the FloatingRateIndex.\n    definition : FloatingRateIndexDefinition\n        Object defining the FloatingRateIndex.\n\n    See Also\n    --------\n\n\n    Examples\n    --------\n    >>> rounding=RoundingDefinition(\n    >>>     decimal_places=0,\n    >>>     scale=1\n    >>> )\n    >>>\n    >>> quote_definition = QuoteDefinition(\n    >>>     instrument_code=\"EUROSTR=\"\n    >>> )\n    >>>\n    >>> index_definition = FloatingRateIndexDefinition(\n    >>>     currency='EUR',\n    >>>     name='New_EUR_3M_FR',\n    >>>     tenor='3M',\n    >>>     year_basis='YB_360',\n    >>>     rounding=rounding,\n    >>>     quote_definition=quote_definition)\n    >>>\n    >>> index_description=Description(summary=\"User defined EUR 3M Floating Rate Index\", tags=[\"EUR\"])\n    >>>\n    >>> user_defined_index = FloatingRateIndex(definition=index_definition, description=index_description)\n    >>>\n    >>> print(user_defined_index.definition)\n    {'currency': 'EUR', 'name': 'New_EUR_3M_FR', 'tenor': '3M', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR='}}\n\n    \n",
            "annotations": "",
            "signature": "class FloatingRateIndex:\n    \"\"\"\"\"\"\n"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.__init__",
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.id",
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.location",
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.save",
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.clone"
            ],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "MethodChunk",
        "name": "FloatingRateIndex.__init__",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.__init__",
        "params": [
            {
                "name": "definition",
                "type": "FloatingRateIndexDefinition"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_floating_rate_index.py",
        "line_number": 78,
        "content": "class FloatingRateIndex:\n    def __init__(self, definition: FloatingRateIndexDefinition, description: Optional[Description] = None):\n        \"\"\"\n        FloatingRateIndex constructor\n\n        Parameters\n        ----------\n        definition : FloatingRateIndexDefinition\n            Object defining the FloatingRateIndex.\n        description : Description, optional\n            Object defining metadata for the FloatingRateIndex.\n\n        Examples\n        --------\n        >>> rounding=RoundingDefinition(\n        >>>     decimal_places=0,\n        >>>     scale=1\n        >>> )\n        >>>\n        >>> quote_definition = QuoteDefinition(\n        >>>     instrument_code=\"EUROSTR=\"\n        >>> )\n        >>>\n        >>> index_definition = FloatingRateIndexDefinition(\n        >>>     currency='EUR',\n        >>>     name='New_EUR_3M_FR',\n        >>>     tenor='3M',\n        >>>     year_basis='YB_360',\n        >>>     rounding=rounding,\n        >>>     quote_definition=quote_definition)\n        >>>\n        >>> index_description=Description(summary=\"User defined EUR 3M Floating Rate Index\", tags=[\"EUR\"])\n        >>>\n        >>> user_defined_index = FloatingRateIndex(definition=index_definition, description=index_description)\n        >>>\n        >>> print(user_defined_index.definition)\n        {'currency': 'EUR', 'name': 'New_EUR_3M_FR', 'tenor': '3M', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR='}}\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        FloatingRateIndex constructor\n\n        Parameters\n        ----------\n        definition : FloatingRateIndexDefinition\n            Object defining the FloatingRateIndex.\n        description : Description, optional\n            Object defining metadata for the FloatingRateIndex.\n\n        Examples\n        --------\n        >>> rounding=RoundingDefinition(\n        >>>     decimal_places=0,\n        >>>     scale=1\n        >>> )\n        >>>\n        >>> quote_definition = QuoteDefinition(\n        >>>     instrument_code=\"EUROSTR=\"\n        >>> )\n        >>>\n        >>> index_definition = FloatingRateIndexDefinition(\n        >>>     currency='EUR',\n        >>>     name='New_EUR_3M_FR',\n        >>>     tenor='3M',\n        >>>     year_basis='YB_360',\n        >>>     rounding=rounding,\n        >>>     quote_definition=quote_definition)\n        >>>\n        >>> index_description=Description(summary=\"User defined EUR 3M Floating Rate Index\", tags=[\"EUR\"])\n        >>>\n        >>> user_defined_index = FloatingRateIndex(definition=index_definition, description=index_description)\n        >>>\n        >>> print(user_defined_index.definition)\n        {'currency': 'EUR', 'name': 'New_EUR_3M_FR', 'tenor': '3M', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR='}}\n\n        \n",
            "signature": "class FloatingRateIndex:\n    def __init__(self, definition: FloatingRateIndexDefinition, description: Optional[Description] = None):",
            "class": "FloatingRateIndex"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "use": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexDefinition",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "PropertyChunk",
        "name": "FloatingRateIndex.id",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.id",
        "content": "class FloatingRateIndex:\n    @property\n    def id(self):\n        \"\"\"\n        Returns the FloatingRateIndex id\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        str\n            Unique identifier of the FloatingRateIndex.\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Returns the FloatingRateIndex id\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        str\n            Unique identifier of the FloatingRateIndex.\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class FloatingRateIndex:\n    def id(self):",
            "class": "FloatingRateIndex"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "PropertyChunk",
        "name": "FloatingRateIndex.location",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.location",
        "content": "class FloatingRateIndex:\n    @property\n    def location(self):\n        \"\"\"\n        Returns the FloatingRateIndex location\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Location\n            Object defining the location of the FloatingRateIndex in the platform.\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Returns the FloatingRateIndex location\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        Location\n            Object defining the location of the FloatingRateIndex in the platform.\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class FloatingRateIndex:\n    def location(self):",
            "class": "FloatingRateIndex"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "MethodChunk",
        "name": "FloatingRateIndex.save",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.save",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "FloatingRateIndex.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "FloatingRateIndex.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_floating_rate_index.py",
        "line_number": 242,
        "content": "class FloatingRateIndex:\n    def save(self, *, name: Optional[str] = None, space: Optional[str] = None) -> bool:\n        \"\"\"\n        Save FloatingRateIndex instance in the platform store.\n\n        Parameters\n        ----------\n        name : str, optional\n            The FloatingRateIndex name. The name parameter must be specified when the object is first created. Thereafter it is optional. For first creation, name must follow the pattern '^[A-Za-z0-9_]{1,50}$'.\n        space : str, optional\n            The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n            LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n        Returns\n        --------\n        bool, optional\n            True, if saved successfully, otherwise None\n\n\n        Examples\n        --------\n        >>> # Save the index to a user space\n        >>> user_defined_index.save(name=\"User_EUR_3M_Index\", space=\"HOME\")\n        True\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Save FloatingRateIndex instance in the platform store.\n\n        Parameters\n        ----------\n        name : str, optional\n            The FloatingRateIndex name. The name parameter must be specified when the object is first created. Thereafter it is optional. For first creation, name must follow the pattern '^[A-Za-z0-9_]{1,50}$'.\n        space : str, optional\n            The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n            LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n        Returns\n        --------\n        bool, optional\n            True, if saved successfully, otherwise None\n\n\n        Examples\n        --------\n        >>> # Save the index to a user space\n        >>> user_defined_index.save(name=\"User_EUR_3M_Index\", space=\"HOME\")\n        True\n\n        \n",
            "signature": "class FloatingRateIndex:\n    def save(self, *, name: Optional[str] = None, space: Optional[str] = None) -> bool:",
            "class": "FloatingRateIndex"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "MethodChunk",
        "name": "FloatingRateIndex.clone",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex.clone",
        "params": [],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_floating_rate_index.py",
        "line_number": 285,
        "content": "class FloatingRateIndex:\n    def clone(self) -> 'FloatingRateIndex':\n        \"\"\"\n        Return the same object, without id, name and space\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        FloatingRateIndex\n            The cloned FloatingRateIndex object\n\n\n        Examples\n        --------\n\n\n        \n        \"\"\"",
        "metadata": {
            "doc": "\n        Return the same object, without id, name and space\n\n        Parameters\n        ----------\n\n\n        Returns\n        --------\n        FloatingRateIndex\n            The cloned FloatingRateIndex object\n\n\n        Examples\n        --------\n\n\n        \n",
            "signature": "class FloatingRateIndex:\n    def clone(self) -> 'FloatingRateIndex':",
            "class": "FloatingRateIndex"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "use": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndex"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "ClassChunk",
        "name": "FloatingRateIndexDefinition",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexDefinition",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "currency",
                "type": "str",
                "valuelookup": "currency_list"
            },
            {
                "name": "name",
                "type": "str"
            },
            {
                "name": "tenor",
                "type": "str",
                "valuelookup": "tenors"
            },
            {
                "name": "year_basis",
                "type": "YearBasisEnum",
                "valuelookup": "enum.YearBasisEnum"
            },
            {
                "name": "rounding",
                "type": "RoundingDefinition"
            },
            {
                "name": "quote_definition",
                "type": "QuoteDefinition"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 27832,
        "content": "class FloatingRateIndexDefinition:\n    \"\"\"An object that defines the reference index of a floating rate.\n\n    Attributes\n    ----------\n    currency : str\n        The currency of the reference index. The value is expressed in ISO 4217\n        alphabetical format (e.g., 'GBP'). Required.\n    name : str\n        The name of the floating rate index (e.g., 'EURIBOR'). Required.\n    tenor : str\n        The period code indicating the tenor of the underlying floating rate\n        index (e.g., '1M', '1Y'). Required.\n    year_basis : str or ~analyticsapi.models.YearBasisEnum\n        The period length in days for the year used to calculate the time\n        fraction and depends on the year basis convention applied. Required.\n        Known values are: \"YB_252\", \"YB_360\", \"YB_364\", \"YB_365\", \"YB_36525\",\n        \"YB_366\", and \"YB_Actual\".\n    rounding : ~analyticsapi.models.RoundingDefinition\n        An object that defines how rounding is applied to the reference\n        floating rate index. Required.\n    quote_definition : ~analyticsapi.models.QuoteDefinition\n        An object that defines the attributes for getting the floating rate\n        index quote. Required.\n    \n    \"\"\"\n    currency: str\n    name: str\n    tenor: str\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasisEnum')]\n    rounding: _models.RoundingDefinition\n    quote_definition: _models.QuoteDefinition",
        "metadata": {
            "doc": "An object that defines the reference index of a floating rate.\n\n    Attributes\n    ----------\n    currency : str\n        The currency of the reference index. The value is expressed in ISO 4217\n        alphabetical format (e.g., 'GBP'). Required.\n    name : str\n        The name of the floating rate index (e.g., 'EURIBOR'). Required.\n    tenor : str\n        The period code indicating the tenor of the underlying floating rate\n        index (e.g., '1M', '1Y'). Required.\n    year_basis : str or ~analyticsapi.models.YearBasisEnum\n        The period length in days for the year used to calculate the time\n        fraction and depends on the year basis convention applied. Required.\n        Known values are: \"YB_252\", \"YB_360\", \"YB_364\", \"YB_365\", \"YB_36525\",\n        \"YB_366\", and \"YB_Actual\".\n    rounding : ~analyticsapi.models.RoundingDefinition\n        An object that defines how rounding is applied to the reference\n        floating rate index. Required.\n    quote_definition : ~analyticsapi.models.QuoteDefinition\n        An object that defines the attributes for getting the floating rate\n        index quote. Required.\n    \n",
            "annotations": "    currency: str\n    name: str\n    tenor: str\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasisEnum')]\n    rounding: _models.RoundingDefinition\n    quote_definition: _models.QuoteDefinition",
            "signature": "class FloatingRateIndexDefinition:\n    \"\"\"\"\"\"\n    currency: str\n    name: str\n    tenor: str\n    year_basis: typing.Union[str, ForwardRef('_models.YearBasisEnum')]\n    rounding: _models.RoundingDefinition\n    quote_definition: _models.QuoteDefinition"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexDefinition.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.common.YearBasisEnum",
                "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition",
                "lseg_analytics.common.QuoteDefinition"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "FloatingRateIndexDefinition.__init__",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexDefinition.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 27896,
        "content": "class FloatingRateIndexDefinition:\n    @overload\n    def __init__(self, *, currency: str, name: str, tenor: str, year_basis: Union[str, ForwardRef('_models.YearBasisEnum')], rounding: '_models.RoundingDefinition', quote_definition: '_models.QuoteDefinition') -> None:\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]) -> None:\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "FloatingRateIndexDefinition"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexDefinition"
            ],
            "use": [
                "lseg_analytics.common.YearBasisEnum",
                "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition",
                "lseg_analytics.common.QuoteDefinition"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "ClassChunk",
        "name": "FloatingRateIndexInfo",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexInfo",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "location",
                "type": "Location"
            },
            {
                "name": "description",
                "type": "Description"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 27900,
        "content": "class FloatingRateIndexInfo:\n    \"\"\"A model template defining the partial description of the resource returned by the GET list\n    service.\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.FLOATING_RATE_INDEX\n        Property defining the type of the resource.\n    id : str\n        Unique identifier of the FloatingRateIndex.\n    location : ~analyticsapi.models.Location\n        Object defining metadata for the FloatingRateIndex. Required.\n    description : ~analyticsapi.models.Description\n        Object defining the FloatingRateIndex.\n    \n    \"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.FLOATING_RATE_INDEX: 'FloatingRateIndex'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]",
        "metadata": {
            "doc": "A model template defining the partial description of the resource returned by the GET list\n    service.\n\n    Readonly variables are only populated by the server, and will be ignored when sending a request.\n\n    Attributes\n    ----------\n    type : str or ~analyticsapi.models.FLOATING_RATE_INDEX\n        Property defining the type of the resource.\n    id : str\n        Unique identifier of the FloatingRateIndex.\n    location : ~analyticsapi.models.Location\n        Object defining metadata for the FloatingRateIndex. Required.\n    description : ~analyticsapi.models.Description\n        Object defining the FloatingRateIndex.\n    \n",
            "annotations": "    type: typing.Optional[typing.Literal[<ResourceType.FLOATING_RATE_INDEX: 'FloatingRateIndex'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]",
            "signature": "class FloatingRateIndexInfo:\n    \"\"\"\"\"\"\n    type: typing.Optional[typing.Literal[<ResourceType.FLOATING_RATE_INDEX: 'FloatingRateIndex'>]]\n    id: typing.Optional[str]\n    location: _models.Location\n    description: typing.Optional[ForwardRef('_models.Description')]"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexInfo.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.common.Location",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "FloatingRateIndexInfo.__init__",
        "id": "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexInfo.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 27946,
        "content": "class FloatingRateIndexInfo:\n    @overload\n    def __init__(self, *, location: '_models.Location', description: Optional[ForwardRef('_models.Description')] = None) -> None:\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]) -> None:\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "FloatingRateIndexInfo"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexInfo"
            ],
            "use": [
                "lseg_analytics.common.Location",
                "lseg_analytics.common.Description"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "ClassChunk",
        "name": "RoundingDefinition",
        "id": "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "decimal_places",
                "type": "int"
            },
            {
                "name": "direction",
                "type": "RoundingModeEnum",
                "valuelookup": "enum.RoundingModeEnum"
            },
            {
                "name": "scale",
                "type": "int"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 52598,
        "content": "class RoundingDefinition:\n    \"\"\"An object that defines how rounding is applied.\n\n    Attributes\n    ----------\n    decimal_places : int\n        The decimal place the rounding applies to. Required.\n    direction : str or ~analyticsapi.models.RoundingModeEnum\n        The direction of the rounding. Known values are: \"Ceiling\", \"Down\",\n        \"Floor\", \"Near\", and \"Up\".\n    scale : int\n        The scaling factor applied before the rounding operation.\n    \n    \"\"\"\n    decimal_places: int\n    direction: typing.Union[str, ForwardRef('_models.RoundingModeEnum'), NoneType]\n    scale: typing.Optional[int]",
        "metadata": {
            "doc": "An object that defines how rounding is applied.\n\n    Attributes\n    ----------\n    decimal_places : int\n        The decimal place the rounding applies to. Required.\n    direction : str or ~analyticsapi.models.RoundingModeEnum\n        The direction of the rounding. Known values are: \"Ceiling\", \"Down\",\n        \"Floor\", \"Near\", and \"Up\".\n    scale : int\n        The scaling factor applied before the rounding operation.\n    \n",
            "annotations": "    decimal_places: int\n    direction: typing.Union[str, ForwardRef('_models.RoundingModeEnum'), NoneType]\n    scale: typing.Optional[int]",
            "signature": "class RoundingDefinition:\n    \"\"\"\"\"\"\n    decimal_places: int\n    direction: typing.Union[str, ForwardRef('_models.RoundingModeEnum'), NoneType]\n    scale: typing.Optional[int]"
        },
        "dependencies": {
            "children": [
                "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition.__init__"
            ],
            "parent": [],
            "use": [
                "lseg_analytics.reference_data.floating_rate_indices.RoundingModeEnum"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "OverloadedMethodChunk",
        "name": "RoundingDefinition.__init__",
        "id": "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition.__init__",
        "params": [
            {
                "name": "args",
                "type": "Any"
            },
            {
                "name": "kwargs",
                "type": "Any"
            }
        ],
        "file_path": "lseg_analytics_basic_client/models/_models.py",
        "line_number": 52638,
        "content": "class RoundingDefinition:\n    @overload\n    def __init__(self, *, decimal_places: int, direction: Union[str, ForwardRef('_models.RoundingModeEnum'), NoneType] = None, scale: Optional[int] = None) -> None:\n        \"\"\"\"\"\"\n\n    @overload\n    def __init__(self, mapping: Mapping[str, Any]) -> None:\n        \"\"\"\n        Parameters\n        ----------\n        mapping : Mapping[str, Any]\n            raw JSON to initialize the model.\n        \n        \"\"\"\n\n    def __init__(self, *args: Any, **kwargs: Any) -> None:\n        \"\"\"\"\"\"",
        "metadata": {
            "doc": "",
            "signature": "__init__(self, *args: Any, **kwargs: Any) -> None:",
            "class": "RoundingDefinition"
        },
        "dependencies": {
            "children": [],
            "parent": [
                "lseg_analytics.reference_data.floating_rate_indices.RoundingDefinition"
            ],
            "use": [
                "lseg_analytics.reference_data.floating_rate_indices.RoundingModeEnum"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "EnumChunk",
        "name": "RoundingModeEnum",
        "id": "lseg_analytics.reference_data.floating_rate_indices.RoundingModeEnum",
        "content": "class RoundingModeEnum(str, Enum, metaclass=CaseInsensitiveEnumMeta):\n    \"\"\"The direction of the rounding.\"\"\"\n\n    CEILING = \"Ceiling\"\n    \"\"\"The number is rounded to the minimum of the closest value and the ceiling.\"\"\"\n    DOWN = \"Down\"\n    \"\"\"The number is truncated.\"\"\"\n    FLOOR = \"Floor\"\n    \"\"\"The number is rounded to the maximum of the closest value and the floor.\"\"\"\n    NEAR = \"Near\"\n    \"\"\"The number is rounded to the closest value.\"\"\"\n    UP = \"Up\"\n    \"\"\"The number is truncated and 1 is added to the previous decimal value.\"\"\"\n",
        "metadata": {
            "doc": "The direction of the rounding.\n",
            "members": [
                "RoundingModeEnum.CEILING = 'Ceiling'",
                "RoundingModeEnum.DOWN = 'Down'",
                "RoundingModeEnum.FLOOR = 'Floor'",
                "RoundingModeEnum.NEAR = 'Near'",
                "RoundingModeEnum.UP = 'Up'"
            ],
            "signature": "class RoundingModeEnum(Enum):\n    \"\"\"\"\"\"\n    CEILING = 'Ceiling'\n    DOWN = 'Down'\n    FLOOR = 'Floor'\n    NEAR = 'Near'\n    UP = 'Up'"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "FunctionChunk",
        "name": "delete",
        "id": "lseg_analytics.reference_data.floating_rate_indices.delete",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "resource_id",
                "type": "str",
                "valuelookup": "FloatingRateIndex.id"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "FloatingRateIndex.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "FloatingRateIndex.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_functions.py",
        "line_number": 103,
        "content": "def delete(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):\n    \"\"\"\n    Delete FloatingRateIndex instance from the server.\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The FloatingRateIndex resource ID.\n        Required if name is not provided.\n    name : str, optional\n        The FloatingRateIndex name.\n        Required if resource_id is not provided.\n    space : str, optional\n        The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    ServiceErrorResponse, optional\n        Error response, if applicable, otherwise None\n\n    Examples\n    --------\n    >>> # Delete the index from a user space\n    >>> delete(name=\"User_EUR_3M_Index\", space=\"HOME\")\n    True\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    Delete FloatingRateIndex instance from the server.\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The FloatingRateIndex resource ID.\n        Required if name is not provided.\n    name : str, optional\n        The FloatingRateIndex name.\n        Required if resource_id is not provided.\n    space : str, optional\n        The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    ServiceErrorResponse, optional\n        Error response, if applicable, otherwise None\n\n    Examples\n    --------\n    >>> # Delete the index from a user space\n    >>> delete(name=\"User_EUR_3M_Index\", space=\"HOME\")\n    True\n\n    \n",
            "signature": "def delete(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "FunctionChunk",
        "name": "load",
        "id": "lseg_analytics.reference_data.floating_rate_indices.load",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "resource_id",
                "type": "str",
                "valuelookup": "FloatingRateIndex.id"
            },
            {
                "name": "name",
                "type": "str",
                "valuelookup": "FloatingRateIndex.name"
            },
            {
                "name": "space",
                "type": "str",
                "valuelookup": "FloatingRateIndex.space"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_functions.py",
        "line_number": 40,
        "content": "def load(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):\n    \"\"\"\n    Load a FloatingRateIndex using its name and space\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The FloatingRateIndex id. Or the combination of the space and name of the resource with a slash, e.g. 'HOME/my_resource'.\n        Required if name is not provided.\n    name : str, optional\n        The FloatingRateIndex name.\n        Required if resource_id is not provided. The name parameter must be specified when the object is first created. Thereafter it is optional.\n    space : str, optional\n        The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    FloatingRateIndex\n        The FloatingRateIndex instance.\n\n    Examples\n    --------\n    >>> # Load using template name\n    >>> index_by_name = load(name = index_templates[0].location.name)\n    >>>\n    >>> print(index_by_name.definition)\n    {'currency': 'EUR', 'name': 'ESTR', 'tenor': 'ON', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR= (overwritten)'}}\n\n\n    >>> # Load using template id\n    >>> index_by_id = load(resource_id = index_templates[0].id)\n    >>>\n    >>> print(index_by_id.definition)\n    {'currency': 'EUR', 'name': 'ESTR', 'tenor': 'ON', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR= (overwritten)'}}\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    Load a FloatingRateIndex using its name and space\n\n    Parameters\n    ----------\n    resource_id : str, optional\n        The FloatingRateIndex id. Or the combination of the space and name of the resource with a slash, e.g. 'HOME/my_resource'.\n        Required if name is not provided.\n    name : str, optional\n        The FloatingRateIndex name.\n        Required if resource_id is not provided. The name parameter must be specified when the object is first created. Thereafter it is optional.\n    space : str, optional\n        The space where the FloatingRateIndex is stored. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space. If space is not specified, HOME will be used.\n\n    Returns\n    -------\n    FloatingRateIndex\n        The FloatingRateIndex instance.\n\n    Examples\n    --------\n    >>> # Load using template name\n    >>> index_by_name = load(name = index_templates[0].location.name)\n    >>>\n    >>> print(index_by_name.definition)\n    {'currency': 'EUR', 'name': 'ESTR', 'tenor': 'ON', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR= (overwritten)'}}\n\n\n    >>> # Load using template id\n    >>> index_by_id = load(resource_id = index_templates[0].id)\n    >>>\n    >>> print(index_by_id.definition)\n    {'currency': 'EUR', 'name': 'ESTR', 'tenor': 'ON', 'yearBasis': 'YB_360', 'rounding': {'decimalPlaces': 0, 'scale': 1}, 'quoteDefinition': {'instrumentCode': 'EUROSTR= (overwritten)'}}\n\n    \n",
            "signature": "def load(*, resource_id: Optional[str] = None, name: Optional[str] = None, space: Optional[str] = None):"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    },
    {
        "type": "FunctionChunk",
        "name": "search",
        "id": "lseg_analytics.reference_data.floating_rate_indices.search",
        "params": [
            {
                "name": "*",
                "type": "python-keyword"
            },
            {
                "name": "item_per_page",
                "type": "int"
            },
            {
                "name": "page",
                "type": "int"
            },
            {
                "name": "spaces",
                "type": "List[str]",
                "valuelookup": "FloatingRateIndex.space"
            },
            {
                "name": "names",
                "type": "List[str]",
                "valuelookup": "FloatingRateIndex.name"
            },
            {
                "name": "space_name_sort_order",
                "type": "SortingOrderEnum",
                "valuelookup": "enum.SortingOrderEnum"
            },
            {
                "name": "tags",
                "type": "List[str]"
            },
            {
                "name": "fields",
                "type": "str"
            }
        ],
        "file_path": "lseg_analytics/reference_data/floating_rate_indices/_functions.py",
        "line_number": 232,
        "content": "def search(*, item_per_page: Optional[int] = None, page: Optional[int] = None, spaces: Optional[List[str]] = None, names: Optional[List[str]] = None, space_name_sort_order: Union[str, SortingOrderEnum, NoneType] = None, tags: Optional[List[str]] = None, fields: Optional[str] = None) -> List[FloatingRateIndexInfo]:\n    \"\"\"\n    List the FloatingRateIndexs existing in the platform (depending on permissions)\n\n    Parameters\n    ----------\n    item_per_page : int, optional\n        A parameter used to select the number of items allowed per page. The valid range is 1-500. If not provided, 50 will be used.\n    page : int, optional\n        A parameter used to define the page number to display.\n    spaces : List[str], optional\n        A parameter used to search for platform resources stored in a given space. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space.\n        If space is not specified, it will search within all spaces.\n    names : List[str], optional\n        A parameter used to search for platform resources with given names.\n    space_name_sort_order : Union[str, SortingOrderEnum], optional\n        A parameter used to sort platform resources by name based on a defined order.\n    tags : List[str], optional\n        A parameter used to search for platform resources with given tags.\n    fields : str, optional\n        A parameter used to select the fields to return in response. If not provided, all fields will be returned.\n        Some usage examples:\n        1. Simply enumerating the fields, separating them by ',', e.g. 'fields=//please insert the selected fields here, e.g., field1, field2 //'\n        2. Using parentheses to indicate nesting, e.g. 'fields= //please insert the selected field and subfields here, e.g., field1(subfield1, subfield2), field2(subfield3)//\u2019\n        3. Using forward slash '/' to indicate nesting, e.g. 'fields=//please insert the selected field and subfields here, e.g.,  field1/subfield1, field1/subfield2, field2/subfield3//\u2019 (same result as example above)\n        4. Operators can even be combined (forward slashes in brackets, not the way around), e.g. 'fields=//please insert the selected field and subfields here, e.g.,  field1(subfield1/subsubfield1), field2/subfield2//'\n\n    Returns\n    --------\n    List[FloatingRateIndexInfo]\n        A model template defining the partial description of the resource returned by the GET list service.\n\n    Examples\n    --------\n    >>> # Full search with no filters\n    >>> index_templates = search()\n    >>>\n    >>> print(index_templates[:5])\n    [{'type': 'FloatingRateIndex', 'id': '4436d66b-addb-46a5-9f66-13bb946f150e', 'location': {'space': 'HOME', 'name': 'TestIrIndex'}, 'description': {'summary': 'EUROSTR (overwritten)', 'tags': ['Tests', 'EUR', 'ESTR', 'ON', 'RFTB']}}, {'type': 'FloatingRateIndex', 'id': 'c1051f64-fb15-4984-91fb-2c97e97ac7e3', 'location': {'space': 'HOME', 'name': 'TestRefFri17443031935839942'}, 'description': {'summary': 'Test description', 'tags': ['tag1', 'tag2']}}, {'type': 'FloatingRateIndex', 'id': 'f882ded9-13b9-4456-ab56-134d93cec3d4', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_1M'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:1M', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}, {'type': 'FloatingRateIndex', 'id': '7a102320-d152-4ebf-9fce-b4b254ddc471', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_1Y'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:1Y', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}, {'type': 'FloatingRateIndex', 'id': '3d8b26aa-940a-45d0-9756-6af902ce5738', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_3M'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:3M', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}]\n\n    \n    \"\"\"",
        "metadata": {
            "doc": "\n    List the FloatingRateIndexs existing in the platform (depending on permissions)\n\n    Parameters\n    ----------\n    item_per_page : int, optional\n        A parameter used to select the number of items allowed per page. The valid range is 1-500. If not provided, 50 will be used.\n    page : int, optional\n        A parameter used to define the page number to display.\n    spaces : List[str], optional\n        A parameter used to search for platform resources stored in a given space. Space is like a namespace where resources are stored. By default there are two spaces:\n        LSEG is reserved for LSEG maintained resources, HOME is reserved for user's default space.\n        If space is not specified, it will search within all spaces.\n    names : List[str], optional\n        A parameter used to search for platform resources with given names.\n    space_name_sort_order : Union[str, SortingOrderEnum], optional\n        A parameter used to sort platform resources by name based on a defined order.\n    tags : List[str], optional\n        A parameter used to search for platform resources with given tags.\n    fields : str, optional\n        A parameter used to select the fields to return in response. If not provided, all fields will be returned.\n        Some usage examples:\n        1. Simply enumerating the fields, separating them by ',', e.g. 'fields=//please insert the selected fields here, e.g., field1, field2 //'\n        2. Using parentheses to indicate nesting, e.g. 'fields= //please insert the selected field and subfields here, e.g., field1(subfield1, subfield2), field2(subfield3)//\u2019\n        3. Using forward slash '/' to indicate nesting, e.g. 'fields=//please insert the selected field and subfields here, e.g.,  field1/subfield1, field1/subfield2, field2/subfield3//\u2019 (same result as example above)\n        4. Operators can even be combined (forward slashes in brackets, not the way around), e.g. 'fields=//please insert the selected field and subfields here, e.g.,  field1(subfield1/subsubfield1), field2/subfield2//'\n\n    Returns\n    --------\n    List[FloatingRateIndexInfo]\n        A model template defining the partial description of the resource returned by the GET list service.\n\n    Examples\n    --------\n    >>> # Full search with no filters\n    >>> index_templates = search()\n    >>>\n    >>> print(index_templates[:5])\n    [{'type': 'FloatingRateIndex', 'id': '4436d66b-addb-46a5-9f66-13bb946f150e', 'location': {'space': 'HOME', 'name': 'TestIrIndex'}, 'description': {'summary': 'EUROSTR (overwritten)', 'tags': ['Tests', 'EUR', 'ESTR', 'ON', 'RFTB']}}, {'type': 'FloatingRateIndex', 'id': 'c1051f64-fb15-4984-91fb-2c97e97ac7e3', 'location': {'space': 'HOME', 'name': 'TestRefFri17443031935839942'}, 'description': {'summary': 'Test description', 'tags': ['tag1', 'tag2']}}, {'type': 'FloatingRateIndex', 'id': 'f882ded9-13b9-4456-ab56-134d93cec3d4', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_1M'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:1M', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}, {'type': 'FloatingRateIndex', 'id': '7a102320-d152-4ebf-9fce-b4b254ddc471', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_1Y'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:1Y', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}, {'type': 'FloatingRateIndex', 'id': '3d8b26aa-940a-45d0-9756-6af902ce5738', 'location': {'space': 'LSEG', 'name': 'AED_AEIBOR_3M'}, 'description': {'summary': 'AED AEIBOR', 'tags': ['currency:AED', 'indexTenor:3M', 'sourceLongName:Refinitiv', 'sourceShortName:RFTB']}}]\n\n    \n",
            "signature": "def search(*, item_per_page: Optional[int] = None, page: Optional[int] = None, spaces: Optional[List[str]] = None, names: Optional[List[str]] = None, space_name_sort_order: Union[str, SortingOrderEnum, NoneType] = None, tags: Optional[List[str]] = None, fields: Optional[str] = None) -> List[FloatingRateIndexInfo]:"
        },
        "dependencies": {
            "children": [],
            "parent": [],
            "use": [
                "lseg_analytics.common.SortingOrderEnum",
                "lseg_analytics.reference_data.floating_rate_indices.FloatingRateIndexInfo"
            ],
            "base_classes": [],
            "sub_classes": []
        },
        "source_module": "lseg_analytics.reference_data.floating_rate_indices",
        "module_version": "2.1.0b5"
    }
]