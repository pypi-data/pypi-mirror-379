[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "autocleaneeg-pipeline"
version = "2.3.0"
description = "A modular framework for automated EEG data processing, built on MNE-Python"
readme = "README.md"
requires-python = ">=3.10,<3.14"
license = {file = "LICENSE"}
keywords = ["eeg", "neuroscience", "signal-processing", "preprocessing", "mne-python", "bids", "electrophysiology"]
authors = [
    { name = "Ernest Pedapati", email = "ernest.pedapati@cchmc.org" },
    { name = "Gavin Gammoh", email = "gavin.gammoh@cchmc.org" }
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
]
dependencies = [
    # Core scientific computing
    "numpy>=1.20.0",
    "scipy>=1.7.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "seaborn>=0.13.2",
    "PyWavelets>=1.5.0",
    # EEG processing core
    "mne>=1.7.0",
    "mne-icalabel>=0.8.0",
    "mne-bids>=0.10",
    "autoreject>=0.3.0",
    "pyprep>=0.3.0",
    "python-picard==0.8",
    # EEG file formats
    "eeglabio>=0.0.3",
    "pybv>=0.6.0",
    "fastparquet>=2024.11.0",
    "fastplotlib>=0.3.0",
    # Connectivity analysis
    "mne-connectivity>=0.7.0",
    "networkx>=3.4.2",
    "bctpy>=0.6.1",
    "fooof>=1.1.0",
    # Machine learning
    "torch>=1.9.0",
    # Utilities and data handling
    "rich>=10.0.0",
    "python-dotenv>=0.19.0",
    "defusedxml",
    "pyyaml>=5.1",
    "schema>=0.7.0",
    "python-ulid>=1.0.0",
    "cython>=0.29.0",
    "loguru>=0.6.0",
    "pydantic>=2.0",
    "Pillow>=9.0.0",
    "reportlab>=3.6.0",
    "nibabel>=5.3.2",
    "platformdirs>=3.0.0",
    # Authentication and compliance
    "auth0-python>=4.7.1",
    "requests>=2.25.0",
    "cryptography>=3.4.8",
    "inquirer>=3.1.0",
    "autocleaneeg-icvision>=0.1.0",
    "autoclean-eeg2source>=0.1.0",
    "autocleaneeg-view",
    # GUI dependencies
    "PyQt5>=5.15.11",
    "mne-qt-browser>=0.3.0",
    # "PySide6>=6.5.0",
    "pymupdf>=1.0.0",
    "pyjsonviewer>=0.1.0",
    "textual>=0.11.0",
    "textual-dev>=0.11.0",
    "PyMuPDF",
    "pyvistaqt>=0.11.2",
    "qtpy>=2.4.3",
    # OpenGL acceleration
    "PyOpenGL-accelerate",
    # Documentation handled externally; keep Python package lean
    # AI dependencies
    "openai>=1.78.1",
    "onnxruntime>=1.22.1",
]

[project.urls]
Homepage = "https://github.com/cincibrainlab/autoclean_pipeline"
Repository = "https://github.com/cincibrainlab/autoclean_pipeline"
Documentation = "https://cincibrainlab.github.io/autoclean_pipeline/"
Issues = "https://github.com/cincibrainlab/autoclean_pipeline/issues"

[project.scripts]
autocleaneeg-pipeline = "autoclean.__main__:main"

[tool.hatch]
version.path = "src/autoclean/__init__.py"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/autoclean", "configs"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=autoclean"
testpaths = [
    "tests",
]

[tool.black]
line-length = 88
target-version = ["py39", "py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.ruff]
exclude = [
    "autoclean/tasks/TEMPLATE.py",
    ".git",
    ".env",
    "__pycache__",
    "build",
    "dist"
]

[tool.ruff.lint]
per-file-ignores = { "autoclean/step_functions/__init__.py" = ["E402", "F403"], "autoclean/tools/autoclean_review.py" = ["E402"], "autoclean/calc/source.py" = ["F401"] }
