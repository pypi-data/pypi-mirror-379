name: Run pytest

on:
  # Run on pushes and PRs to develop and master
  push:
    branches: [ "develop", "master" ]
  pull_request:
    branches: [ "develop", "master" ]

# Needed so the publish action can create check runs / PR comments
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  pytest:
    runs-on: ubuntu-latest

    strategy:
      # Test the versions we advertise in classifiers
      matrix:
        python-version: [ "3.9", "3.10", "3.11" ]

    steps:
      # Checkout repository
      - name: Checkout
        uses: actions/checkout@v4

      # Set up Python with pip cache
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: "pip"  # Enable pip cache to speed up installs

      # Install the package and test dependencies
      - name: Install project
        run: |
          python -m pip install --upgrade pip
          # Install the package using PEP 517/518 (pyproject.toml)
          pip install .
          # Install test runner and any test-only deps if needed
          pip install pytest

      # Run pytest and always produce a JUnit XML report
      - name: Run pytest
        run: |
          mkdir -p results
          # Use --junitxml (correct long option name)
          python -m pytest tests/unittests --junitxml results/pytest.xml
        continue-on-error: true  # Let subsequent steps publish results even on failures

      # Upload raw JUnit XML as an artifact (useful for debugging)
      - name: Upload Unit Test Results
        if: ${{ always() }}
        uses: actions/upload-artifact@v4
        with:
          name: unit-test-results-py${{ matrix.python-version }}
          path: results/*.xml

      # Download artifacts so the publish step can glob over them
      - name: Download Artifacts
        if: ${{ always() }}
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      # Publish test results to the Checks tab and PR comment
      - name: Publish Unit Test Results
        if: ${{ always() }}
        uses: EnricoMi/publish-unit-test-result-action@v2
        with:
          files: artifacts/**/*.xml
