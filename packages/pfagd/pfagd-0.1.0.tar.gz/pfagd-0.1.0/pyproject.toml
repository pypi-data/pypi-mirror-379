[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "pfagd"
version = "0.1.0"
authors = [
    {name = "PFAGD Development Team", email = "dev@pfagd.org"},
]
description = "Python for Android Game Development - Cross-platform game framework"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Games/Entertainment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Multimedia :: Graphics",
    "Topic :: Multimedia :: Sound/Audio",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
keywords = [
    "game", "development", "android", "cross-platform", 
    "kivy", "mobile", "desktop", "2d", "3d", "gamedev"
]
dependencies = [
    "kivy>=2.1.0",
    "Pillow>=8.0.0", 
    "requests>=2.25.0",
    "buildozer>=1.4.0",
    "PyInstaller>=4.0",
]

[project.optional-dependencies]
android = [
    "pyjnius>=1.4.0",
    "plyer>=2.0.0",
]
desktop = [
    "pygame>=2.0.0",
    "PyQt5>=5.15.0",
]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0",
    "flake8>=3.8.0",
    "mypy>=0.800",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]
all = [
    "pyjnius>=1.4.0",
    "plyer>=2.0.0", 
    "pygame>=2.0.0",
    "PyQt5>=5.15.0",
    "pytest>=6.0.0",
    "pytest-cov>=2.0.0",
    "black>=21.0.0", 
    "flake8>=3.8.0",
    "mypy>=0.800",
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/pfagd/pfagd"
Documentation = "https://pfagd.readthedocs.io/"
Repository = "https://github.com/pfagd/pfagd"
"Bug Tracker" = "https://github.com/pfagd/pfagd/issues"
Changelog = "https://github.com/pfagd/pfagd/blob/main/CHANGELOG.md"

[project.scripts]
pfagd = "pfagd.cli.main:main"

[tool.setuptools]
packages = ["pfagd"]

[tool.setuptools.package-data]
pfagd = [
    "templates/**/*",
    "examples/**/*", 
    "docs/**/*",
]

[tool.black]
line-length = 88
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "E266", "E501", "W503", "F403", "F401"]
max-complexity = 10
select = ["B","C","E","F","W","T4","B9"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]