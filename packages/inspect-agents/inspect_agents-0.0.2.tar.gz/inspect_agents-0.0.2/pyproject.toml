[project]
name = "inspect-agents"
version = "0.0.2"
description = "Inspect-AIâ€“based agents and tools."
readme = "README.md"
requires-python = ">=3.11,<4.0"
dependencies = [
    "inspect-ai>=0.3.129",
    "jsonlines>=4.0.0",
    "openai>=1.104.1",
    "requests>=2.32.5",
    "tavily-python>=0.7.11",
]

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://github.com/cnm13ryan/inspect_agents"
Documentation = "https://cnm13ryan.github.io/inspect_agents"
Repository = "https://github.com/cnm13ryan/inspect_agents.git"
Issues = "https://github.com/cnm13ryan/inspect_agents/issues"

[project.optional-dependencies]
dev = [
    "ruff>=0.9.6,<0.13.0",
    "pyright==1.1.401",
    "pre-commit",
]
testing = [
    "pytest==8.3.5",
    "pytest-asyncio==0.26.0",
    "pytest-mock==3.14.0",
    "pytest-benchmark==4.0.0",
    "pytest-xdist",
    "pytest-cov==6.1.1",
    "coverage[toml]",
    "hypothesis==6.131.10",
]
utilities = [
    "python-dotenv==1.0.0",
    "PyYAML",
    "retry==0.9.2",
    "nbformat",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.0",
    "mkdocs-mermaid2-plugin",
    "mkdocs-autorefs>=1.0",
    "mkdocs-redirects>=1.2.1",
    "mkdocs-exclude-search>=0.6.5",
    "mkdocs-minify-plugin",
    "mkdocs-click",
    "mkdocs-glightbox>=0.3.4",
    "mkdocs-git-revision-date-localized-plugin",
    "mkdocs-htmlproofer-plugin>=1.2.0",
    "mkdocstrings[python]>=0.21",
    "mike>=2.0.0",
    "interrogate",
]

[tool.ruff]
line-length = 120
target-version = "py312"
extend-exclude = [
    "external/**",
    "**/*.ipynb",
    ".inspect/**",
    "logs/**",
    "tests/.pytest-deps/**",
]

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I",
    "N",
    "UP",
]
ignore = [
    "UP038",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pyright]
pythonVersion = "3.12"
ignore = [
    "**/node_modules",
    "**/__pycache__",
]
include = [
    "src",
]

[tool.pytest.ini_options]
addopts = "-q -n auto --maxfail=1"
asyncio_default_fixture_loop_scope = "function"
testpaths = [
    "tests",
]
filterwarnings = [
    "ignore::pydantic.warnings.PydanticDeprecatedSince211",
    "ignore:Unknown config option.*asyncio_default_fixture_loop_scope.*:pytest.PytestConfigWarning",
]
markers = [
    "approvals: tests for approval policies and chains",
    "handoff: tests for subagent handoffs and boundaries",
    "filters: tests for input/output filtering around handoffs",
    "kill_switch: tests for parallel execution kill-switch policy",
    "timeout: tests for tool timeouts and fallbacks",
    "truncation: tests for tool-output truncation envelopes",
    "parallel: tests for parallel execution semantics",
    "model_flags: tests for model resolution flags and runners",
    "network: allow real network for this test",
    "sandbox_e2e: provider sandbox e2e tests (Docker/K8s; opt-in)",
    "benchmark: performance microbenchmarks (opt-in in CI)",
]

[tool.coverage.run]
source = [
    "src",
]
omit = [
    "*/tests/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
]

[tool.pdm]
distribution = true

[tool.pdm.package-dir]
"" = "src"

[tool.pdm.dev-dependencies.dev]
composite = [
    "dev",
    "testing",
    "utilities",
]

[tool.uv]
package = true
environments = [
    "sys_platform == 'linux' and python_version >= '3.12'",
    "sys_platform == 'darwin' and python_version >= '3.12'",
]

[build-system]
requires = [
    "pdm-backend>=2.4.4",
]
build-backend = "pdm.backend"
