{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://example.invalid/coverage-universe/udl.schema.json",
  "type": "object",
  "required": ["parameters"],
  "properties": {
    "version": {"type": ["string", "number"]},
    "metadata": {"type": "object"},
    "coverage": {
      "type": "object",
      "properties": {
        "t_wise": {"type": ["integer", "string"]},
        "include_boundary": {"type": ["boolean", "string", "number"]}
      }
    },
    "constraints": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["if", "then"],
        "properties": {
          "if": {"type": "object"},
          "then": {"type": "object"}
        }
      }
    },
    "parameters": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type"],
        "properties": {
          "name": {"type": "string"},
          "type": {"enum": ["enum", "number"]},
          "tags": {"type": "array", "items": {"type": ["string", "number"]}},
          "partitions": {"type": "array"},
          "boundary": {
            "type": "object",
            "properties": {
              "include": {
                "type": "array",
                "items": {"enum": ["min", "max", "just-inside", "just-outside"]}
              }
            }
          }
        },
        "allOf": [
          {
            "if": {"properties": {"type": {"const": "enum"}}},
            "then": {
              "properties": {
                "partitions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "required": ["value"],
                    "properties": {
                      "value": {"type": ["string", "number", "boolean"]},
                      "weight": {"type": ["number", "string"]}
                    }
                  }
                }
              }
            }
          },
          {
            "if": {"properties": {"type": {"const": "number"}}},
            "then": {
              "properties": {
                "partitions": {
                  "type": "array",
                  "minItems": 1,
                  "items": {
                    "type": "object",
                    "required": ["range"],
                    "properties": {
                      "range": {
                        "type": "array",
                        "minItems": 2,
                        "maxItems": 2,
                        "items": {"type": ["number", "string"]}
                      },
                      "class": {"type": ["string", "number"]},
                      "weight": {"type": ["number", "string"]}
                    }
                  }
                }
              }
            }
          }
        ]
      }
    }
  }
}
