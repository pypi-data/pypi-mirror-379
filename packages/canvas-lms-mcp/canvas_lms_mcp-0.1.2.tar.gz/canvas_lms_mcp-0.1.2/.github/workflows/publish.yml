name: Publish Package to PyPI

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # First verify that the git tag version matches the version in pyproject.toml
  verify-version:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version-file: "pyproject.toml"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install tomli

      - name: Check tag version matches pyproject.toml
        run: |
          # Extract version from tag
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "Tag version: $TAG_VERSION"
          
          # Extract version from pyproject.toml
          PYPROJECT_VERSION=$(python -c "import tomli; print(tomli.loads(open('pyproject.toml', 'r').read())['project']['version'])")
          echo "pyproject.toml version: $PYPROJECT_VERSION"
          
          # Verify versions match
          if [ "$TAG_VERSION" != "$PYPROJECT_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match version in pyproject.toml ($PYPROJECT_VERSION)"
            exit 1
          fi
          echo "âœ… Version check passed: $TAG_VERSION"

  # Build and publish the package to PyPI
  build-and-publish:
    needs: verify-version
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv with caching
        uses: astral-sh/setup-uv@v5
        with:
          version: "0.6.16"
          enable-cache: true
          cache-dependency-glob: "pyproject.toml"

      - name: Build package
        run: |
          uv build

      - name: Publish distribution ðŸ“¦ to PyPI
        if: startsWith(github.ref, 'refs/tags')
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}