[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "strala-core-infrastructure"
version = "0.1.0"
authors = [
    {name = "Strala", email = "dev@strala.com"},
]
description = "Shared Python package containing common utilities, schemas, and services for Strala's claims platform"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
keywords = ["claims", "insurance", "platform", "utilities"]

dependencies = [
    "pydantic>=2.0.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "ruff>=0.3.0",
    "pre-commit>=3.0.0",
]

[project.urls]
Homepage = "https://github.com/strala/core-infrastructure"
Repository = "https://github.com/strala/core-infrastructure"
Issues = "https://github.com/strala/core-infrastructure/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/strala_core"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/README.md",
    "/LICENSE",
]

[tool.ruff]
# Enable pycodestyle (`E`), Pyflakes (`F`), and import sorting (`I`) codes
lint.select = ["E", "F", "I"]
lint.ignore = []

# Allow autofix for all enabled rules (when `--fix` is used)
lint.fixable = ["ALL"]
lint.unfixable = []

# Allow unused variables when underscore-prefixed.
lint.dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

# Line length
line-length = 88

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint.mccabe]
# Unlike Flake8, default to a complexity level of 10.
max-complexity = 10

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --cov=strala_core --cov-report=term-missing"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
