name: Install dependencies and build

on:
  release:
    types:
      - created

jobs:
  build:
    name: Build and Publish to PyPI
    runs-on: ubuntu-latest

    environment:
      name: pypi
      url: https://pypi.org/p/atlasopenmagic

    permissions:
      id-token: write

    steps:
    - uses: actions/checkout@v4

    - name: Install the latest version of uv
      uses: astral-sh/setup-uv@v5

    - name: Build a sdist and wheel
      run: |
        set -eux

        uvx --from build pyproject-build

    - name: Validate package structure with twine
      run: uvx twine check --strict dist/*

    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        skip-existing: true

    - name: Notify Mattermost of release
      if: success()
      run: |
        set -e
        http_status=$(curl -s -w "%{http_code}" -o /tmp/mm_response.txt -X POST -H 'Content-Type: application/json' -d '{
          "text": "#### :rocket: *New atlasopenmagic release published!*\n\nVersion: ${{ github.event.release.tag_name }}\nRepository: https://github.com/${{ github.repository }}\n\nView on PyPI: https://pypi.org/project/atlasopenmagic/\nChangelog: ${{ github.event.release.html_url }}\n\n:tada: Thank you to all contributors!"
        }' "${{ secrets.MATTERMOST_WEBHOOK_URL }}")

        if [ "$http_status" -lt 200 ] || [ "$http_status" -ge 300 ]; then
          echo "Error: Failed to send notification to Mattermost. HTTP status: $http_status"
          cat /tmp/mm_response.txt
          exit 1
        else
          echo "Notification sent successfully. HTTP status: $http_status"
        fi
