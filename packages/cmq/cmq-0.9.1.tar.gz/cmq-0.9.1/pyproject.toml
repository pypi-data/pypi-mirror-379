[project]
name = "cmq"
version = "0.9.1"
license = "Apache-2.0"
description = "Cloud Multi Query is a library & CLI tool that allows you to run queries across multiple cloud accounts in parallel."
authors = [
    {name = "Daniel Isla Cruz", email= "daniel.islacruz@ocado.com"}
]
readme = "README.md"
packages = [{include = "cmq", from = "src"}]

[project.urls]
Homepage = "https://github.com/ocadotechnology/cmq"
Repository = "https://github.com/ocadotechnology/cmq.git"
Issues = "https://github.com/ocadotechnology/cmq/issues"
Changelog = "https://github.com/ocadotechnology/cmq/blob/main/CHANGELOG.md"

[project.entry-points."cmq.provider.aws"]

## Sessions
profile = "cmq.aws.session.profile:profile"

## Resources
address                         = "cmq.aws.resource.address:address"
alarm                           = "cmq.aws.resource.alarm:alarm"
cloudformation                  = "cmq.aws.resource.cloudformation:cloudformation"
cloudtrail                      = "cmq.aws.resource.cloudtrail:cloudtrail"
dynamodb                        = "cmq.aws.resource.dynamodb:dynamodb"
ec2                             = "cmq.aws.resource.ec2:ec2"
elasticache_parameter_group     = "cmq.aws.resource.elasticache_parameter_group:elasticache_parameter_group"
elasticache_replication_group   = "cmq.aws.resource.elasticache_replication_group:elasticache_replication_group"
elasticache_subnet_group        = "cmq.aws.resource.elasticache_subnet_group:elasticache_subnet_group"
elasticache                     = "cmq.aws.resource.elasticache:elasticache"
function                        = "cmq.aws.resource.function:function"
kinesis                         = "cmq.aws.resource.kinesis:kinesis"
kms_alias                       = "cmq.aws.resource.kms_alias:kms_alias"
kms                             = "cmq.aws.resource.kms:kms"
keyspace                        = "cmq.aws.resource.keyspace:keyspace"
keyspace_table                  = "cmq.aws.resource.keyspace_table:keyspace_table"
log_event                       = "cmq.aws.resource.log_event:log_event"
log_stream                      = "cmq.aws.resource.log_stream:log_stream"
log                             = "cmq.aws.resource.log:log"
metric                          = "cmq.aws.resource.metric:metric"
rds_parameter_group             = "cmq.aws.resource.rds_parameter_group:rds_parameter_group"
rds                             = "cmq.aws.resource.rds:rds"
region                          = "cmq.aws.resource.region:region"
resource_explorer               = "cmq.aws.resource.resource_explorer:resource_explorer"
resource_group                  = "cmq.aws.resource.resource_group:resource_group"
role                            = "cmq.aws.resource.role:role"
route53                         = "cmq.aws.resource.route53:route53"
s3_object                       = "cmq.aws.resource.s3_object:s3_object"
s3                              = "cmq.aws.resource.s3:s3"
secret                          = "cmq.aws.resource.secret:secret"
security_group                  = "cmq.aws.resource.security_group:security_group"
sns                             = "cmq.aws.resource.sns:sns"
sqs                             = "cmq.aws.resource.sqs:sqs"
user_key                        = "cmq.aws.resource.user_key:user_key"
user                            = "cmq.aws.resource.user:user"
vpc                             = "cmq.aws.resource.vpc:vpc"

[project.scripts]
cmq = "cmq.cli:main"

[tool.poetry.dependencies]
python = "^3.10"
requests = "^2.31.0"
boto3 = "^1.34.80"
rich = "^13.7.1"
atpbar = "2.0.4"
matplotlib = "^3.9.0"
python-benedict = "^0.33.2"
click = "^8.1.7"

[tool.poetry.group.dev.dependencies]
mypy = "^1.9.0"
black = "^24.3.0"
isort = "^5.13.2"
pylama = "^8.4.1"
mkdocs = "^1.6.0"
ruff = "^0.4.4"
pytest = "^8.2.1"
moto = "^5.0.7"
requests = "^2.32.1"
setuptools = "^69.5.1"
pytest-cov = "^5.0.0"
mkdocstrings = {extras = ["python"], version = "^0.26.1"}
mkdocs-material = "^9.5.27"
mkdocs-video = "^1.5.0"
mkdocs-autorefs = "^1.2.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-s -v --durations=0 --cov-report=term --cov-report=xml:coverage.xml --cov=cmq"

[tool.coverage.run]
branch = true
source = ["cmq"]
command_line = "-m pytest"

[tool.coverage.report]
show_missing = true

[tool.coverage.xml]
output = "coverage.xml"

[tool.semantic_release]
version_variables = [
    "src/cmq/__init__.py:__version__",
    "pyproject.toml:version"
]
version_toml = ["pyproject.toml:project.version"]
branch = "main"
