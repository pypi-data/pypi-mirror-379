[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jhlogger"
version = "1.0.1"
authors = [
    {name = "JH Dev", email = "dev@jacarandahealth.org"}
]
description = "A feature-rich, configurable logging module with structured JSON output"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Logging",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
]
keywords = [
    "logging",
    "json",
    "structured",
    "cloudwatch",
    "sentry",
    "configurable",
    "traceback",
    "debug",
    "monitoring",
]
dependencies = [
    "structlog>=23.0.0",
    "watchtower>=3.0.0",
    "sentry-sdk>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "black>=24.8.0",
    "flake8>=5.0.4",
    "flake8-simplify>=0.22.0",
    "isort>=5.13.2",
    "pre-commit>=3.5.0",
    "pytest>=8.3.5",
    "pytest-cov>=4.0.0",
    "mypy>=1.14.1"
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
]

[project.urls]
"Homepage" = "https://github.com/Jacaranda-Health/jhlogger"
"Bug Tracker" = "https://github.com/Jacaranda-Health/jhlogger/issues"
"Documentation" = "https://github.com/Jacaranda-Health/jhlogger/blob/main/README.md"
"Source Code" = "https://github.com/Jacaranda-Health/jhlogger"

[tool.setuptools.packages.find]
include = ["jhlogger*"]

[tool.setuptools.package-data]
jhlogger = ["py.typed"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=jhlogger --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]

[tool.coverage.run]
source = ["jhlogger"]
omit = ["tests/*", "setup.py"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
per-file-ignores = [
    "__init__.py:F401",
]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
