[project]
name = "telegram-multi-account-sender"
version = "1.2.3"
description = "Professional-grade desktop application for managing and sending messages across multiple Telegram accounts"
readme = "README.md"
license = {text = "BSD 3-Clause License"}
authors = [
    {name = "VoxHash", email = "contact@voxhash.dev"}
]
maintainers = [
    {name = "VoxHash", email = "contact@voxhash.dev"}
]
keywords = ["telegram", "messaging", "multi-account", "automation", "campaign", "spintax", "scheduling", "pyqt5", "desktop", "gui"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: BSD License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Operating System :: Microsoft :: Windows",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Environment :: X11 Applications :: Qt",
    "Environment :: Win32 (MS Windows)",
    "Environment :: MacOS X",
]
requires-python = ">=3.10"
dependencies = [
    "PyQt5>=5.15.0",
    "telethon>=1.24.0",
    "sqlmodel>=0.0.8",
    "pydantic>=1.10.0",
    "pydantic-settings>=2.0.0",
    "rich>=13.0.0",
    "python-dotenv>=1.0.0",
    "cryptography>=3.4.8",
    "pillow>=9.0.0",
    "qrcode>=7.3.0",
    "python-dateutil>=2.8.0",
    "pytz>=2022.1",
    "tzdata>=2022.1",
    "click>=8.0.0",
    "typer>=0.7.0",
    "colorama>=0.4.4",
    "tqdm>=4.64.0",
    "psutil>=5.9.0",
    "schedule>=1.2.0",
    "sqlalchemy>=1.4.0",
    "alembic>=1.8.0",
    "aiosqlite>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-qt>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
    "twine>=4.0.0",
    "build>=0.10.0",
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "myst-parser>=1.0.0",
]

[project.urls]
Homepage = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender"
Documentation = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender/wiki"
Repository = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender"
"Bug Tracker" = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender/issues"
Changelog = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender/blob/main/CHANGELOG.md"
Download = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender/releases"
"Source Code" = "https://github.com/VoxHash/Telegram-Multi-Account-Message-Sender"

[project.scripts]
telegram-sender = "app.cli:main"
telegram-multi-account-sender = "app.cli:main"

[project.gui-scripts]
telegram-sender-gui = "app.cli:main"
telegram-multi-account-sender-gui = "app.cli:main"

[tool.setuptools]
include-package-data = true
zip-safe = false

[tool.setuptools.packages.find]
where = ["."]
include = ["app*"]
exclude = ["tests*", "docs*", "example_files*"]

[tool.setuptools.package-data]
app = ["translations/*.json", "assets/icons/*.ico", "assets/icons/*.png"]

[tool.setuptools.data-files]
"example_files" = [
    "example_files/env_template.txt",
    "example_files/recipients_example.csv",
    "example_files/templates_example.csv",
    "example_files/accounts_example.csv",
    "example_files/campaigns_example.csv",
    "example_files/README.md",
    "example_files/sample_media_urls.txt",
    "example_files/spintax_examples.txt",
    "example_files/configurations.md",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "ui: marks tests as UI tests",
]

[tool.coverage.run]
source = ["app"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "*/build/*",
    "*/dist/*",
    "*/.pytest_cache/*",
    "*/.coverage*",
    "*/htmlcov/*",
    "*/.mypy_cache/*",
    "*/.tox/*",
    "*/.cache/*",
    "*/.vscode/*",
    "*/.idea/*",
    "*/.swp",
    "*/.swo",
    "*/~",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]