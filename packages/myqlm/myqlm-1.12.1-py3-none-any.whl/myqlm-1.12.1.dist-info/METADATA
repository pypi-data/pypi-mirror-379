Metadata-Version: 2.4
Name: myqlm
Version: 1.12.1
Summary: myQLM package
Home-page: https://atos.net/en/lp/myqlm
Author: Atos Quantum Lab
Author-email: myqlm@atos.net
License: Atos myQLM EULA
Project-URL: Documentation, https://myqlm.github.io
Project-URL: Bug Tracker, https://github.com/myQLM/myqlm-issues/issues
Project-URL: Community, https://myqlmworkspace.slack.com
Keywords: Quantum,myQLM,QLM,Qaptiva,Atos
Classifier: Programming Language :: Python :: 3
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: qat-comm==1.8.0
Requires-Dist: qat-core==1.12.0
Requires-Dist: qat-analog==0.7.0
Requires-Dist: qat-devices==0.5.0
Requires-Dist: qat-fusion==0.3.0
Requires-Dist: qat-lang==3.3.0
Requires-Dist: qat-anapli==0.2.0
Requires-Dist: qat-variational==1.7.0
Requires-Dist: qat-pbo==1.6.0
Requires-Dist: qat-nnize==1.4.0
Requires-Dist: qat-synthopline==0.5.0
Requires-Dist: qlmaas==1.12.0
Requires-Dist: myqlm-clinalg==0.4.0
Requires-Dist: myqlm-contrib==1.10.1
Requires-Dist: myqlm-fermion==1.3.0
Requires-Dist: myqlm-simulators==1.10.2
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: license
Dynamic: project-url
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Module myQLM

**myQLM** is the quantum software stack developed by Eviden, for writing, simulating, optimizing, and executing quantum programs.
Through a Python interface, it provides:

 - a **powerful semantic** for [writing quantum algorithms](https://myqlm.github.io/02_user_guide/01_write.html) (gate-based
   programing, analog programing, or quantum annealing programing).
 - a **versatile execution stack** for [running quantum jobs](https://myqlm.github.io/02_user_guide/02_execute.html), including an easy
   handling of [observables](https://myqlm.github.io/02_user_guide/01_write/03_observable.html), special tools for carrying NISQ-oriented
   [variational methods](https://myqlm.github.io/02_user_guide/02_execute/05_variational.html) (such as VQE, QAOA), an easy API
   for [designing custom plugins](https://myqlm.github.io/02_user_guide/02_execute/04_plugin.html) (e.g. compilation), as well as for
   connecting to any Quantum Processing Unit (QPU).
 - a **seamless interface** to [available quantum processors and major quantum programming frameworks](https://myqlm.github.io/%3Amyqlm%3Ainteroperability.html).

myQLM also interfaces with the [Qaptiva Appliance](https://atos.net/en/solutions/high-performance-computing-hpc/quantum-computing-qaptiva)
(ex QLM), the quantum programming appliance of Eviden.


## Prerequisites
This version of myQLM works on both Windows, macOS and Linux for different versions of Python 3. Please look at the
[compatibility matrix](https://myqlm.github.io/01_getting_started/%3Amyqlm%3A01_install.html#compatibility-matrix) to ensure myQLM
is installable on your computer.

This module can be installed by typing the following command:

```
pip install myqlm
```

## License
[myQLM EULA](https://myqlm.github.io/01_getting_started/%3Amyqlm%3Alicense.html)
