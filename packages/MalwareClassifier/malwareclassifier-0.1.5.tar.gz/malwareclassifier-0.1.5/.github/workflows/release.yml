name: Publish to PyPI

on:
  workflow_dispatch:
    inputs:
      target:
        description: "Where to publish (auto/testpypi/pypi)"
        required: false
        default: "auto"
        type: choice
        options: ["auto", "testpypi", "pypi"]
  push:
    tags:
      - "v*"

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # needed if using setuptools-scm

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install build tooling
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Build sdist and wheel
        run: python -m build

      - name: Verify the distribution
        run: |
          python -m twine check dist/*

      - name: Decide publish target
        id: where
        run: |
          # Determine target: auto -> infer from tag or branch; else honor manual input
          INPUT="${{ github.event.inputs.target || 'auto' }}"
          REF="${GITHUB_REF##*/}"  # tag name or branch name
          TARGET=""
          if [ "$INPUT" = "pypi" ]; then
            TARGET="pypi"
          elif [ "$INPUT" = "testpypi" ]; then
            TARGET="testpypi"
          else
            # auto mode: if this is a tag with pre-release markers -> testpypi
            # examples: v1.2.3-rc1, v1.2.3a1, v1.2.3b2, v1.2.3.dev3
            if [[ "$GITHUB_REF" == refs/tags/* ]]; then
              if [[ "$REF" =~ .*(rc|a|b|dev).* ]]; then
                TARGET="testpypi"
              else
                TARGET="pypi"
              fi
            else
              TARGET="testpypi"
            fi
          fi
          echo "target=$TARGET" >> $GITHUB_OUTPUT

      - name: Publish to TestPyPI
        if: steps.where.outputs.target == 'testpypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
        run: |
          python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*

      - name: Publish to PyPI
        if: steps.where.outputs.target == 'pypi'
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/*
