name: Security Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run daily security scans at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: 1
  PYTHONDONTWRITEBYTECODE: 1

jobs:
  dependency-security:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Set up Python 3.12
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]

    - name: Run safety check
      run: |
        safety check --output json > safety-report.json || true
        safety check

    - name: Run pip-audit
      run: |
        pip install pip-audit
        pip-audit --desc --format=json --output=pip-audit-report.json || true
        pip-audit --desc

    - name: Upload security reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports
        path: |
          safety-report.json
          pip-audit-report.json

  static-security:
    name: Static Security Analysis
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Set up Python 3.12
      uses: actions/setup-python@v6
      with:
        python-version: '3.12'
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] semgrep

    - name: Run bandit security linter
      run: |
        bandit -r xraylabtool/ -f json -o bandit-report.json || true
        bandit -r xraylabtool/ --skip B101,B110,B112,B404,B603,B604,B607 -v

    - name: Run semgrep security analysis
      run: |
        semgrep --config=auto --json --output=semgrep-report.json xraylabtool/ || true
        semgrep --config=auto xraylabtool/

    - name: Upload static analysis reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: static-security-reports
        path: |
          bandit-report.json
          semgrep-report.json

  supply-chain-security:
    name: Supply Chain Security
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v5
      with:
        fetch-depth: 1

    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

    - name: Upload Trivy scan results to GitHub Security tab
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      continue-on-error: true
      with:
        sarif_file: 'trivy-results.sarif'

  security-summary:
    name: Security Summary
    if: always()
    needs: [dependency-security, static-security, supply-chain-security]
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Check security scan results
      run: |
        echo "Dependency Security: ${{ needs.dependency-security.result }}"
        echo "Static Security: ${{ needs.static-security.result }}"
        echo "Supply Chain Security: ${{ needs.supply-chain-security.result }}"

        if [[ "${{ needs.dependency-security.result }}" == "failure" || \
              "${{ needs.static-security.result }}" == "failure" || \
              "${{ needs.supply-chain-security.result }}" == "failure" ]]; then
          echo "❌ Security scans detected issues"
          exit 1
        else
          echo "✅ All security scans passed"
        fi
