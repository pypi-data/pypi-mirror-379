[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning>=1.0.0,<2.0.0"]
build-backend = "poetry_dynamic_versioning.backend"

[tool.poetry-dynamic-versioning]
enable = true

[tool.poetry]
exclude = ["examples", "benchmark"]

[project]
name = "panoptica"
version = "0.0.0"
description = "Panoptic Quality (PQ) computation for binary masks."
authors = [
    { name = "Hendrik MÃ¶ller", email = "hendrik.moeller@tum.de" },
    { name = "Florian Kofler", email = "florian.kofler@tum.de" },
]
readme = "README.md"
requires-python = ">=3.10,<4.0"
license = { file = "LICENSE" }
keywords = ["panoptic", "quality", "segmentation", "medical imaging"]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
]
dependencies = [
    "numpy>=1.22,<2.3",
    "connected-components-3d>=3.12.3,<4.0.0",
    "scipy>=1.7.0,<2.0.0",
    "rich>=13.6.0,<14.0.0",
    "scikit-image>=0.22.0,<1.0.0",
    "ruamel.yaml>=0.18.6,<1.0.0",
    "plotly>=5.16.1,<6.0.0",
    "pandas>=2.1.0,<3.0.0",
    "typer>=0.15.0,<1.0.0",
    "tqdm>=4.62.3",
]

[project.urls]
repository = "https://github.com/BrainLesion/panoptica"
homepage = "https://github.com/BrainLesion/panoptica"
documentation = "https://panoptica.readthedocs.io/"

[dependency-groups]
nifti = [
    "nibabel>=5.1.0,<6.0.0",
    "pynrrd>=1.1.3,<2.0.0",
    "SimpleITK>=2.2.2,<3.0.0",
]
test = [
    { include-group = "nifti" },
    "pytest>=8.1.1",
    "joblib>=1.3.2,<2.0.0",
    "coverage>=7.0.1",
    "pytest-mock>=3.6.0,<4.0.0",
    "future>=0.18.3, <1.0.0",
    "flake8>=4.0.1",
]
docs = [
    "Sphinx>=7.0.0",
    "sphinx-copybutton>=0.5.2,<1.0.0",
    "furo>=2024.8.6",
    "myst-parser>=2.0.0",
]
dev = [
    { include-group = "test" },
    { include-group = "docs" },
    "pre-commit>=2.20.0,<3.0.0",
    "torch>=2.1.0,<3.0.0",
    "cupy>=12.0.0",
]

[tool.poetry.group.nifti]
optional = true

[tool.poetry.group.test]
optional = true

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.dev]
optional = true


[project.optional-dependencies]
gpu = ["torch>=2.1.0,<3.0.0", "cupy>=12.0.0"]

[tool.poetry.scripts]
panopticacli = "panoptica.cli:app"
