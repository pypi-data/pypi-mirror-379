[build-system]
requires = ["setuptools>=64", "setuptools-scm>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "louieai"
dynamic = ["version"]
description = "Python client for Louie.ai (Graphistry's AI investigation platform)"
authors = [
  { name = "Graphistry, Inc.", email = "support@graphistry.com" }
]
readme = "README.md"
license = "Apache-2.0"
requires-python = ">=3.10"
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: Scientific/Engineering :: Information Analysis"
]
keywords = ["Louie.ai", "Graphistry", "AI", "client", "investigation"]

dependencies = [
  "graphistry>=0.41.0",
  "httpx>=0.28.0",
  "pandas>=2.0.0",
  "pillow>=11.3.0",
  "pyarrow>=14.0.0",
]
# Note: graphistry on PyPI is named 'graphistry'. We ensure a minimal version that likely includes Louie support.

[project.urls]
Documentation = "https://louieai.readthedocs.io"
Repository = "https://github.com/graphistry/louie-py"
"Issue Tracker" = "https://github.com/graphistry/louie-py/issues"
Changelog = "https://github.com/graphistry/louie-py/blob/main/CHANGELOG.md"

[project.optional-dependencies]
dev = [
  "ruff>=0.12.0",
  "mypy>=1.17.0",
  "pyarrow-stubs",
  "pytest>=8.4.0",
  "pytest-cov>=5.0.0",
  "pytest-xdist>=3.6.0",
  "pre-commit>=4.2.0",
  "detect-secrets>=1.5.0",
  "mkdocs>=1.6.0",
  "mkdocs-material>=9.6.0",
  "mkdocs-jupyter>=0.24.0",
  "nbclient>=0.10.2",
  "python-dotenv>=1.0.0",
  "ipython>=8.0.0"
]
docs = [
  "mkdocs>=1.6.0",
  "mkdocs-material>=9.6.0",
  "mkdocstrings[python]>=0.24.0",
  "mkdocs-jupyter>=0.24.0",
  "nbclient>=0.10.2",
  "ipykernel>=6.0.0"
]
# We define a separate "docs" extra in case readthedocs needs to install just docs requirements.

[tool.setuptools.packages.find]
where = ["src"]
include = ["louieai*"]

[tool.setuptools.package-data]
louieai = ["py.typed"]

[tool.setuptools_scm]
version_file = "src/louieai/_version.py"

[tool.ruff]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "W", "I", "B", "C4", "UP", "PYI", "SIM", "RUF"]
# Enforce no ignore comments
extend-select = ["RUF100"]  # Detects unnecessary # noqa comments
ignore = []

[tool.ruff.lint.per-file-ignores]
# Ignore style issues in generated files
"src/louieai/_version.py" = ["UP035", "UP006", "UP007", "I001"]
# Can't combine nested with statements when second depends on first
"src/louieai/_client.py" = ["SIM117"]
# Tutorial notebooks have intentional placeholders and long example prompts
"docs/getting-started/notebooks/*.ipynb" = ["F821", "E501"]

[tool.ruff.format]
# Exclude generated files from formatting
exclude = ["src/louieai/_version.py"]

[tool.mypy]
python_version = "3.10"
strict = false
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
# Disallow all forms of ignoring type errors
warn_unused_ignores = true
disallow_any_unimported = false  # Cannot be true when using untyped dependencies
disallow_any_expr = false  # Would be too restrictive
disallow_any_decorated = false  # Would be too restrictive
exclude = [
    "templates/",
    "tests/",
    "docs/"
]
disallow_any_explicit = false  # Would be too restrictive
disallow_any_generics = true
disallow_subclassing_any = true

# Allow imports from graphistry which doesn't ship with type information
[[tool.mypy.overrides]]
module = "graphistry.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "graphistry"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pandas"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pyarrow"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "httpx"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "IPython.*"
ignore_missing_imports = true

# Ignore mypy issues in test files for complex mocking
[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true