Metadata-Version: 2.4
Name: forensic-cli
Version: 1.4.3
Summary: DevKit Forense - CLI para an√°lise de navegadores e rede
Home-page: https://github.com/ErickG123/devkit_forense
Author: Erick Gabriel dos Santos Alves
Author-email: Erick Gabriel dos Santos Alves <erickgabrielalves0@gmail.com>
License: MIT
Project-URL: Changelog, https://erickg123.github.io/devkit_forense/
Project-URL: Source, https://github.com/ErickG123/devkit_forense
Project-URL: Issues, https://github.com/ErickG123/devkit_forense/issues
Keywords: forensics,cli,network,browser
Requires-Python: >=3.11
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: LICENSE-GPL
Requires-Dist: altgraph==0.17.4
Requires-Dist: annotated-types==0.7.0
Requires-Dist: anyio==4.10.0
Requires-Dist: attrs==25.3.0
Requires-Dist: certifi==2025.8.3
Requires-Dist: cffi==1.17.1
Requires-Dist: charset-normalizer==3.4.3
Requires-Dist: click==8.2.1
Requires-Dist: colorama==0.4.6
Requires-Dist: contourpy==1.3.3
Requires-Dist: cryptography==45.0.6
Requires-Dist: cycler==0.12.1
Requires-Dist: defusedxml==0.7.1
Requires-Dist: dnspython==2.7.0
Requires-Dist: docopt==0.6.2
Requires-Dist: docutils==0.22
Requires-Dist: fonttools==4.59.1
Requires-Dist: greenlet==3.2.4
Requires-Dist: h11==0.16.0
Requires-Dist: id==1.5.0
Requires-Dist: idna==3.10
Requires-Dist: ipwhois==1.3.0
Requires-Dist: jaraco.classes==3.4.0
Requires-Dist: jaraco.context==6.0.1
Requires-Dist: jaraco.functools==4.3.0
Requires-Dist: keyring==25.6.0
Requires-Dist: kiwisolver==1.4.9
Requires-Dist: markdown-it-py==4.0.0
Requires-Dist: matplotlib==3.10.5
Requires-Dist: mdurl==0.1.2
Requires-Dist: more-itertools==10.7.0
Requires-Dist: nh3==0.3.0
Requires-Dist: numpy==2.3.2
Requires-Dist: outcome==1.3.0.post0
Requires-Dist: packaging==25.0
Requires-Dist: pandas==2.3.2
Requires-Dist: pefile==2023.2.7
Requires-Dist: pillow==11.3.0
Requires-Dist: pyasn1==0.6.1
Requires-Dist: pycparser==2.22
Requires-Dist: pycryptodome==3.23.0
Requires-Dist: pydantic==2.11.7
Requires-Dist: pydantic_core==2.33.2
Requires-Dist: pyinstaller==6.15.0
Requires-Dist: pyinstaller-hooks-contrib==2025.8
Requires-Dist: pyparsing==3.2.3
Requires-Dist: pysnmp==7.1.21
Requires-Dist: PySocks==1.7.1
Requires-Dist: pyspnego==0.11.2
Requires-Dist: python-dateutil==2.9.0.post0
Requires-Dist: pytz==2025.2
Requires-Dist: pywin32==311
Requires-Dist: pywin32-ctypes==0.2.3
Requires-Dist: requests==2.32.5
Requires-Dist: requests-toolbelt==1.0.0
Requires-Dist: rfc3986==2.0.0
Requires-Dist: rich==14.1.0
Requires-Dist: scapy==2.6.1
Requires-Dist: selenium==4.35.0
Requires-Dist: six==1.17.0
Requires-Dist: smbprotocol==1.15.0
Requires-Dist: sniffio==1.3.1
Requires-Dist: sortedcontainers==2.4.0
Requires-Dist: starlette==0.47.2
Requires-Dist: trio==0.30.0
Requires-Dist: trio-websocket==0.12.2
Requires-Dist: typer==0.16.1
Requires-Dist: typing-inspection==0.4.1
Requires-Dist: typing_extensions==4.14.1
Requires-Dist: tzdata==2025.2
Requires-Dist: urllib3==2.5.0
Requires-Dist: websocket-client==1.8.0
Requires-Dist: wsproto==1.2.0
Requires-Dist: yarg==0.1.10
Dynamic: author
Dynamic: home-page
Dynamic: license-file
Dynamic: requires-python

# DevKit Forense ‚Äì Ferramenta Educacional de Per√≠cia Digital

![Python](https://img.shields.io/badge/Python-3.11-blue.svg) ![Typer](https://img.shields.io/badge/Typer-0.7-orange.svg) ![SQLite](https://img.shields.io/badge/SQLite-3.41.2-lightgrey.svg)

**ForenseLab** √© um toolkit modular de an√°lise forense digital, desenvolvido como um Trabalho de Conclus√£o de Curso em Engenharia da Computa√ß√£o. Seu principal objetivo √© servir como uma ponte educacional para estudantes, educadores e entusiastas da √°rea de seguran√ßa da informa√ß√£o.

## Sum√°rio
1. [Introdu√ß√£o](#introdu√ß√£o)  
2. [Estrutura do Projeto](#estrutura-do-projeto)  
3. [M√≥dulos Forenses](#m√≥dulos-forenses)  
   - [Network](#network)
   - [Browser](#browser)
   - [Email](#email)
4. [Tecnologias Utilizadas](#tecnologias-utilizadas)  
5. [Planejamento e Futuras Extens√µes](#planejamento-e-futuras-extens√µes)  
6. [Instala√ß√£o](#instala√ß√£o)  
7. [Exemplos de Execu√ß√£o](#exemplos-de-execu√ß√£o)  

---

## üéØ O Problema
O ensino pr√°tico de computa√ß√£o forense enfrenta uma barreira significativa. Ferramentas comerciais padr√£o de mercado, como EnCase e FTK, s√£o robustas, mas possuem um custo proibitivo para ambientes acad√™micos. Por outro lado, alternativas open-source consolidadas, como Autopsy e Volatility Framework, embora poderosas e gratuitas, apresentam uma curva de aprendizado √≠ngreme que pode intimidar e frustrar iniciantes.

Essa dualidade cria uma lacuna educacional: falta uma plataforma que permita ao estudante focar na **metodologia investigativa**, sem se perder na complexidade operacional da ferramenta.

## üí° A Proposta do ForenseLab
O **ForenseLab** nasce para preencher essa lacuna, atuando como um "laborat√≥rio digital" introdut√≥rio. Ele n√£o busca competir em funcionalidades com as su√≠tes profissionais, mas sim oferecer um ambiente controlado, simplificado e did√°tico para a aplica√ß√£o de conceitos te√≥ricos.

Este projeto √© destinado a **estudantes e professores da √°rea de Seguran√ßa da Informa√ß√£o e Per√≠cia Digital**, servindo como uma ponte entre a teoria e a pr√°tica.

## ‚ú® Recursos Principais

* **üíª Interface de Linha de Comando (CLI) Intuitiva:** Todas as an√°lises s√£o executadas atrav√©s de uma CLI clara e bem documentada, ideal para automa√ß√£o, scripts e para quem busca agilidade no terminal.
* **üß© Arquitetura Modular e Extens√≠vel:** O toolkit √© organizado em m√≥dulos independentes (Navegadores, Rede, E-mails), o que permite que a comunidade adicione facilmente novas capacidades de an√°lise sem alterar o n√∫cleo do sistema.
* **üéì Foco Did√°tico:** Ao abstrair complexidades desnecess√°rias, a ferramenta permite que o aluno se concentre em entender os artefatos digitais e desenvolver o racioc√≠nio investigativo.

## üèõÔ∏è Arquitetura do Projeto

Para garantir a manutenibilidade e a clareza do c√≥digo, o ForenseLab adota uma arquitetura de duas camadas principais, organizada em um monoreposit√≥rio:

1.  **`Core`**
    * **O que faz:** √â o c√©rebro do projeto. Cont√©m toda a l√≥gica de neg√≥cio, as classes de an√°lise forense e as fun√ß√µes utilit√°rias. Centralizar a l√≥gica no Core garante que as regras sejam consistentes e o c√≥digo seja reutiliz√°vel.

2.  **`CLI (Command-Line Interface)`**
    * **O que faz:** √â a interface do usu√°rio e o ponto de entrada para todas as funcionalidades. Constru√≠da com Typer, ela invoca a l√≥gica do `Core` para executar as an√°lises e apresentar os resultados de forma estruturada no terminal.

## 3. M√≥dulos Forenses

### Network
| Fun√ß√£o | Descri√ß√£o |
|--------|-----------|
| `ipinfo` | Consulta informa√ß√µes detalhadas sobre um endere√ßo IP. |
| `arpscan` | Varre a rede para identificar dispositivos conectados via ARP. |
| `dnscan` | Realiza levantamento de informa√ß√µes de DNS de dom√≠nios e hosts. |
| `snmpscan` | Realiza varredura SNMP em dispositivos de rede. |
| `smbscan` | Verifica servi√ßos SMB ativos em um host . |
| `sweep` | Verifica quais hosts est√£o ativos em uma faixa de IP. |
| `traceroute` | Tra√ßa o caminho percorrido por pacotes at√© um host alvo. |
| `map` | Gera mapa visual de hosts e conex√µes detectadas. |
| `scan` | Identifica portas abertas e servi√ßos ativos em hosts. |
| `fingerprinting` | Identifica sistemas, servi√ßos e vers√µes na rede. |

### Browser
| Fun√ß√£o | Descri√ß√£o |
|--------|-----------|
| `logins` | Extra√ß√£o de credenciais armazenadas no Chrome e Edge. |
| `favscreen` | Captura e organiza screenshots de sites favoritos ou acessados. |
| `words` | Identifica palavras mais comuns em hist√≥rico de navega√ß√£o e downloads. |
| `history` | Coleta hist√≥rico de navega√ß√£o de diferentes browsers. |
| `patterns` | Identifica padr√µes suspeitos em hist√≥rico de navega√ß√£o ou downloads. |
| `downloads` | Lista arquivos baixados pelos usu√°rios. |

### Email
| Fun√ß√£o | Descri√ß√£o |
|--------|-----------|
| `email_parser` | Extrai e organiza informa√ß√µes de emails. |
| `header_analysis` | Analisa cabe√ßalhos para identificar origem, roteamento e poss√≠veis fraudes. |

## 4. Tecnologias Utilizadas

* **Python:** Linguagem principal do projeto, escolhida por sua simplicidade e pelo vasto ecossistema de bibliotecas para manipula√ß√£o de dados.
* **Typer:** Utilizado para criar a interface de linha de comando (CLI) de forma robusta e intuitiva.
* **SQLite:** V√°rias an√°lises, como a de hist√≥ricos de navegadores, interagem diretamente com bancos de dados SQLite.

## 5. Planejamento e Futuras Extens√µes

| Aplica√ß√£o / M√≥dulo | Objetivo | Poss√≠veis Extens√µes |
|-------------------|----------|------------------|
| Dashboard | Painel central para visualiza√ß√£o e execu√ß√£o de m√≥dulos | Filtros avan√ßados, alertas em tempo real, integra√ß√£o direta com relat√≥rios |
| Visualizadores | Transformar dados da CLI em gr√°ficos, mapas e tabelas | Timeline interativa, heatmaps de rede, gr√°ficos de comportamento de usu√°rios |
| Wizard | Guiar o usu√°rio passo a passo | Templates de an√°lise r√°pida, integra√ß√£o autom√°tica com m√≥dulos de email e data, relat√≥rios PDF/HTML |
| Novos m√≥dulos CLI | Expans√£o da an√°lise forense | Logs de sistemas, recupera√ß√£o de dispositivos m√≥veis, an√°lise de m√≠dia, detec√ß√£o de malware, integra√ß√£o com threat intelligence |
| Ferramentas auxiliares | Suporte a m√≥dulos existentes e novos | Exporta√ß√£o avan√ßada de relat√≥rios, dashboards customiz√°veis, notifica√ß√µes em tempo real |

## 6. Instala√ß√£o
A forma mais simples de instalar a CLI √© utilizando o **PyPI**.  
Execute o seguinte comando no terminal:

```bash
pip install forensic-cli
```

## 7. Exemplos de Execu√ß√£o da CLI

### Comandos de Rede (`network`)

Utilit√°rios para escanear, mapear e analisar redes e dispositivos.

### `map`
Mapeia dispositivos ativos na rede e salva os resultados em arquivos JSON e CSV.

**Sintaxe:**
```bash
forensic-cli network map --network <RANGE_IP> [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --network | -n | Range de IPs da rede. Ex: 192.168.1.1-254 | Obrigat√≥rio |
| --ports | -p | Portas para escanear em cada host. | 21,22,80,443,445,8080 |
| --output | -o | Diret√≥rio para salvar os resultados. | ./output |

### `scan`
Realiza um scan de portas em um host espec√≠fico e exibe os resultados em uma tabela.

**Sintaxe:**
```bash
forensic-cli network scan --target <ALVO> [OP√á√ïES]
```

Op√ß√µes:
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --target | -t | Alvo do scan (IP ou hostname). | Obrigat√≥rio |
| --ports | -p | Portas para escanear. Ex: '22,80,100-200'. | 21,22,53,80,443,445,3306,8080 |

### `sweep`
Verifica hosts ativos em um range de IPs via ping.

**Sintaxe:**
```bash
forensic-cli network sweep --network <RANGE_IP>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --network | N/A | Range de IPs da rede. Ex: 192.168.1.1-254 | Obrigat√≥rio |

### `fingerprinting`
Detecta o sistema operacional, servi√ßos e portas abertas em um host.

**Sintaxe:**
```bash
forensic-cli network fingerprinting --ip <IP_HOST>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --ip | N/A | Endere√ßo IP do host. Ex: 192.168.0.10 | Obrigat√≥rio |

### `traceroute`
Exibe o caminho (hops) e a lat√™ncia (RTT) at√© um dom√≠nio ou host.

**Sintaxe:**
```bash
forensic-cli network traceroute --domain <DOMINIO>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --domain | N/A | Informe um dom√≠nio ou hostname. Ex: google.com | Obrigat√≥rio |

### `arpscan`
Realiza uma varredura ARP para identificar dispositivos na rede local.

**Sintaxe:**
```bash
forensic-cli network arpscan --network <RANGE_IP>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --network | N/A | Range de IPs da rede. Ex: 192.168.1.1-254 | Obrigat√≥rio |

### `dnscan`
Realiza reconhecimento DNS em um dom√≠nio ou IP, com op√ß√£o de buscar subdom√≠nios.

**Sintaxe:**
```bash
forensic-cli network dnscan --target <ALVO> [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --target | N/A | Dom√≠nio ou IP alvo. Ex: exemplo.com | Obrigat√≥rio |
| --output-dir | N/A | Diret√≥rio para salvar os resultados (JSON e CSV). | Nenhum |
| --with-subdomains | N/A | Tenta descobrir subdom√≠nios comuns. | False |

### `ipinfo`
Obt√©m informa√ß√µes detalhadas (geolocaliza√ß√£o, ASN) sobre um IP ou hostname.

**Sintaxe:**
```bash
forensic-cli network ipinfo --ip <IP_HOST>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --ip | N/A | IP ou hostname do destino. Ex: 8.8.8.8 | Obrigat√≥rio |

### `smbscan`
Verifica servi√ßos SMB (Server Message Block) ativos em um host.

**Sintaxe:**
```bash
forensic-cli network smbscan --ip <IP_HOST>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --ip | N/A | IP ou hostname do destino. Ex: 192.168.0.10 | Obrigat√≥rio |

### `snmpscan`
Executa uma varredura SNMP (Simple Network Management Protocol) para obter informa√ß√µes de um dispositivo.

**Sintaxe:**
```bash
forensic-cli network snmpscan --ip <IP_HOST>
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --ip | N/A | IP ou hostname do destino. Ex: 192.168.0.10 | Obrigat√≥rio |

### Comandos de Navegador (`browser`)
Ferramentas para extrair e analisar artefatos de navegadores web como Chrome, Edge e Firefox.

### `history`
Extrai o hist√≥rico de navega√ß√£o dos navegadores instalados.

**Sintaxe:**
```bash
forensic-cli browser history [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --chrome | N/A | Extrair hist√≥rico do Google Chrome. | False |
| --edge | N/A | Extrair hist√≥rico do Microsoft Edge. | False |
| --firefox | N/A | Extrair hist√≥rico do Mozilla Firefox. | False |
| --all | N/A | Extrair de todos os navegadores suportados. | False |

### `downloads`
Extrai o hist√≥rico de downloads dos navegadores.

**Sintaxe:**
```bash
forensic-cli browser downloads [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --output-dir | -o | Diret√≥rio para salvar os artefatos. | artefatos/downloads |
| --chrome | N/A | Extrair downloads do Chrome. | False |
| --edge | N/A | Extrair downloads do Edge. | False |
| --firefox | N/A | Extrair downloads do Firefox. | False |
| --all | N/A | Extrair de todos os navegadores. | False |

### `favscreen`
Processa arquivos de hist√≥rico (.json), captura favicons e screenshots das URLs encontradas.

**Sintaxe:**
```bash
forensic-cli browser favscreen [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --input-dir | -i | Diret√≥rio contendo os JSONs de hist√≥rico. | artefatos/historico |
| --output-dir | -o | Diret√≥rio para salvar favicons e prints. | artefatos/favscreen |

### `logins`
Extrai senhas e logins salvos no Chrome e Edge.

**Sintaxe:**
```bash
forensic-cli browser logins [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --output-dir | -o | Diret√≥rio para salvar os logins em JSON. | artefatos/logins |
| --chrome | N/A | Extrair logins do Chrome. | False |
| --edge | N/A | Extrair logins do Edge. | False |
| --all | N/A | Extrair de todos os navegadores. | False |

### `patterns`
Analisa arquivos de hist√≥rico (.json) para encontrar padr√µes de navega√ß√£o e gera gr√°ficos.

**Sintaxe:**
```bash
forensic-cli browser patterns [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --input-dir | -i | Diret√≥rio com os JSONs de hist√≥rico. | artefatos/historico |
| --output-dir | -o | Diret√≥rio para salvar gr√°ficos e relat√≥rios. | artefatos/patterns_output |

### `words`
Extrai as palavras mais pesquisadas do hist√≥rico do navegador.

**Sintaxe:**
```bash
forensic-cli browser words [OP√á√ïES]
```

**Op√ß√µes:**
| Op√ß√£o | Atalho | Descri√ß√£o | Padr√£o |
| :--- | :---: | :--- | :--- |
| --output-dir | -o | Diret√≥rio para salvar o JSON com as palavras. | artefatos/words_output |
| --chrome | N/A | Extrair palavras do Chrome. | True |
