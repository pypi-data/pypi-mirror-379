# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class McpServerToolCallResponse(UniversalBaseModel):
    success: typing.Optional[bool] = pydantic.Field(default=None)
    """
    Whether the MCP server tool was called successfully
    """

    message: typing.Optional[str] = pydantic.Field(default=None)
    """
    Status message
    """

    result: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = pydantic.Field(default=None)
    """
    Result of the MCP server tool call
    """

    error: typing.Optional[str] = pydantic.Field(default=None)
    """
    Error message if the call failed
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
