# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel


class ChatSessionTemplate(UniversalBaseModel):
    id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session ID
    """

    user_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    User ID
    """

    session_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session ID
    """

    status: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session status
    """

    system_prompt: typing.Optional[str] = pydantic.Field(default=None)
    """
    System prompt
    """

    title: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session title
    """

    agent_id: typing.Optional[str] = pydantic.Field(default=None)
    """
    Agent ID
    """

    created: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session created time
    """

    last_message_at: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session last message time
    """

    updated: typing.Optional[str] = pydantic.Field(default=None)
    """
    Chat session updated time
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
