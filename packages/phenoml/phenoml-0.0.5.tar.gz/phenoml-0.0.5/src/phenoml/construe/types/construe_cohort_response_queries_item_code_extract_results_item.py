# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .construe_cohort_response_queries_item_code_extract_results_item_codes_item import (
    ConstrueCohortResponseQueriesItemCodeExtractResultsItemCodesItem,
)


class ConstrueCohortResponseQueriesItemCodeExtractResultsItem(UniversalBaseModel):
    system_name: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="systemName")] = pydantic.Field(
        default=None
    )
    """
    Name of the coding system (e.g., "SNOMED_CT_US_LITE").
    """

    codes: typing.Optional[typing.List[ConstrueCohortResponseQueriesItemCodeExtractResultsItemCodesItem]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
