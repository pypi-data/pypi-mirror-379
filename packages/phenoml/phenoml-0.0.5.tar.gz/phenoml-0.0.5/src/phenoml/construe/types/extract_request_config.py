# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .extract_request_config_chunking_method import ExtractRequestConfigChunkingMethod


class ExtractRequestConfig(UniversalBaseModel):
    chunking_method: typing.Optional[ExtractRequestConfigChunkingMethod] = None
    max_codes_per_chunk: typing.Optional[int] = None
    code_similarity_filter: typing.Optional[float] = None
    include_rationale: typing.Optional[bool] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
