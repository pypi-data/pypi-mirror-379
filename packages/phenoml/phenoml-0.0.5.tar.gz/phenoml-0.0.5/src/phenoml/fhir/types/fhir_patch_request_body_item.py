# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .fhir_patch_request_body_item_op import FhirPatchRequestBodyItemOp


class FhirPatchRequestBodyItem(UniversalBaseModel):
    op: FhirPatchRequestBodyItemOp = pydantic.Field()
    """
    The operation to perform
    """

    path: str = pydantic.Field()
    """
    JSON Pointer to the target location
    """

    value: typing.Optional[typing.Optional[typing.Any]] = None
    from_: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="from")] = pydantic.Field(default=None)
    """
    Source location for move and copy operations (JSON Pointer)
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
