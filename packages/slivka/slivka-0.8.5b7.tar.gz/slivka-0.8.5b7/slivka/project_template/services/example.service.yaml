# This is an example service configuration.
# Services are specified in the <name>.service.yaml files
# which are automatically detected by slivka when placed
# in the services directory.

---
slivka-version: "0.8.3"
name: Example Service
description: The service description that can even span
  multiple lines. It should provide all necessary details
  about the service and its purpose.
author: Author name
version: "1.3"
license: Apache 2.0
classifiers:
  - Topic=Example
  - Category=Tutorials
  - Show=False

parameters:
  input-file:
    type: file
    name: Input file
    description: File whose first line is copied to the output file.
    required: no

  opt:
    type: text
    name: Text
    description: Some optional text.
    required: no
    # different parameter types have unique properties such as
    # max-length limit for text type
    max-length: 24

  rep:
    # arrays can be specified using square brackets
    type: text[]
    name: Repeatable
    description: Option that can take multiple comma-separated values.
      A file rep.N.txt is created for each value.
    required: yes

  delay:
    type: integer
    name: Sleep time
    description: Duration the program pauses for.
    required: no
    default: 0
    # integer parameter type allow to define min and max bounds
    min: 0
    max: 10

  letter:
    type: choice
    name: Pick letter
    description: Select a letter from the available choices.
      A word will be converter to a letter.
    required: no
    # keys are presented as available choices and are converted
    # to their corresponding value.
    choices:
      alpha: A
      bravo: B
      charlie: C
      delta: D

  flag:
    type: flag
    name: Flag
    description: Flag parameter that can be toggled on.
    # usually, you want flags to be non-required, otherwise the value
    # must be true to pass the validation
    required: no

  arg:
    type: text
    name: Text argument
    description: Required command line argument
    required: yes

# run the script with python; environment variables are supported
command: python ${SLIVKA_HOME}/scripts/example.py

args:
  # create a symlink and pass its name instead of the real path
  input-file:
    arg: --infile $(value)
    symlink: input.txt

  opt:
    arg: --opt $(value)

  # join provided values with comma
  rep:
    arg: --rep $(value)
    join: ","

  delay:
    arg: --delay $(value)

  letter:
    arg: --letter $(value)

  # the value is either "true" or None and shouldn't be included in the argument
  flag:
    arg: --flag

  # this argument does not map to any input, but is populated from the
  # runner defined constants
  cpucount:
    arg: --threads $(value)

  # to add a fixed argument which is not present in the inputs
  # give it a dummy default value, so that it's not skipped
  _separator:
    arg: --
    default: present

  # use the value as an argument directly
  arg:
    arg: $(value)

env:
  # customize environment variables
  # only variables defined here plus PATH and SLIVKA_HOME are available
  # during command execution
  PYTHON: /usr/bin/env python
  PATH: ${SLIVKA_HOME}/bin:${PATH}

outputs:
  log:
    # standard output and error streams are automatically redirected
    # to stdout and stderr files respectively
    path: stdout
    name: Standard Log
    media-type: text/plain
  error-log:
    path: stderr
    name: Error Log
    media-type: text/plain
  output:
    path: output.txt
    name: Output file
    media-type: text/plain
  rep-output:
    # you can use glob pattern to match multiple files
    path: rep.?.txt
    name: Rep parameter output
    media-type: text/plain

execution:
  runners:
    # runners contain instruction for the execution of the command.
    # the type is either one of the built-in runners or a python path to
    # a custom runner class.
    local-queue:
      type: SlivkaQueueRunner
      # if an argument depends on the runner used, its value can be specified  here
      consts:
        cpucount: "1"
    grid-engine:
      type: GridEngineRunner
      # if the runner's __init__ takes extra arguments, they can be specified here
      parameters:
        qargs: -P webservice -q debug -l ram=2048M
      consts:
        cpucount: "4"
      # runner-specific environment variables can be specified here
      env:
        SGE_USER: slivka-www
    default:
      type: SlivkaQueueRunner
      consts:
        cpucount: "1"
  # if no selector is given, the runner with the "default" id is used
  selector: scripts.selectors.example_selector

tests:
  # you can define service tests to be run periodically
  # specify runners the test applies to and input parameters.
  # the parameters are passed to the runner raw. unlike user input,
  # they don't pass through validation and conversion to string
  - applicable-runners: ['local-queue', 'default']
    parameters:
      input-file: "${SLIVKA_HOME}/testdata/example-input.txt"  # env variables are allowed
      rep: ["0", "1", "2", "3"]
      arg: "foobar"
    timeout: 1  # timeout in seconds
  - applicable-runners: ['grid-engine']
    parameters:
      intput-file: "${SLIVKA_HOME}/testdata/example-input.txt"
      rep: ["0", "1", "2"]
      delay: "5"
      letter: "C"
      arg: "foobar"
...
