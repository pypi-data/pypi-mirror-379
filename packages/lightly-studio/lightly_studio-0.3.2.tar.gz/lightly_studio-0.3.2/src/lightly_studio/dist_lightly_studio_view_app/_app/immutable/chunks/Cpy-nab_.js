var q=Object.defineProperty;var R=(e,t,r)=>t in e?q(e,t,{enumerable:!0,configurable:!0,writable:!0,value:r}):e[t]=r;var T=(e,t,r)=>R(e,typeof t!="symbol"?t+"":t,r);const E={bodySerializer:e=>JSON.stringify(e,(t,r)=>typeof r=="bigint"?r.toString():r)},U=async(e,t)=>{const r=typeof t=="function"?await t(e):t;if(r)return e.scheme==="bearer"?`Bearer ${r}`:e.scheme==="basic"?`Basic ${btoa(r)}`:r},V=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},P=e=>{switch(e){case"form":return",";case"pipeDelimited":return"|";case"spaceDelimited":return"%20";default:return","}},W=e=>{switch(e){case"label":return".";case"matrix":return";";case"simple":return",";default:return"&"}},C=({allowReserved:e,explode:t,name:r,style:o,value:a})=>{if(!t){const s=(e?a:a.map(c=>encodeURIComponent(c))).join(P(o));switch(o){case"label":return`.${s}`;case"matrix":return`;${r}=${s}`;case"simple":return s;default:return`${r}=${s}`}}const i=V(o),n=a.map(s=>o==="label"||o==="simple"?e?s:encodeURIComponent(s):g({allowReserved:e,name:r,value:s})).join(i);return o==="label"||o==="matrix"?i+n:n},g=({allowReserved:e,name:t,value:r})=>{if(r==null)return"";if(typeof r=="object")throw new Error("Deeply-nested arrays/objects arenâ€™t supported. Provide your own `querySerializer()` to handle these.");return`${t}=${e?r:encodeURIComponent(r)}`},$=({allowReserved:e,explode:t,name:r,style:o,value:a,valueOnly:i})=>{if(a instanceof Date)return i?a.toISOString():`${r}=${a.toISOString()}`;if(o!=="deepObject"&&!t){let c=[];Object.entries(a).forEach(([p,y])=>{c=[...c,p,e?y:encodeURIComponent(y)]});const d=c.join(",");switch(o){case"form":return`${r}=${d}`;case"label":return`.${d}`;case"matrix":return`;${r}=${d}`;default:return d}}const n=W(o),s=Object.entries(a).map(([c,d])=>g({allowReserved:e,name:o==="deepObject"?`${r}[${c}]`:c,value:d})).join(n);return o==="label"||o==="matrix"?n+s:s},k=/\{[^{}]+\}/g,H=({path:e,url:t})=>{let r=t;const o=t.match(k);if(o)for(const a of o){let i=!1,n=a.substring(1,a.length-1),s="simple";n.endsWith("*")&&(i=!0,n=n.substring(0,n.length-1)),n.startsWith(".")?(n=n.substring(1),s="label"):n.startsWith(";")&&(n=n.substring(1),s="matrix");const c=e[n];if(c==null)continue;if(Array.isArray(c)){r=r.replace(a,C({explode:i,name:n,style:s,value:c}));continue}if(typeof c=="object"){r=r.replace(a,$({explode:i,name:n,style:s,value:c,valueOnly:!0}));continue}if(s==="matrix"){r=r.replace(a,`;${g({name:n,value:c})}`);continue}const d=encodeURIComponent(s==="label"?`.${c}`:c);r=r.replace(a,d)}return r},z=({allowReserved:e,array:t,object:r}={})=>a=>{const i=[];if(a&&typeof a=="object")for(const n in a){const s=a[n];if(s!=null)if(Array.isArray(s)){const c=C({allowReserved:e,explode:!0,name:n,style:"form",value:s,...t});c&&i.push(c)}else if(typeof s=="object"){const c=$({allowReserved:e,explode:!0,name:n,style:"deepObject",value:s,...r});c&&i.push(c)}else{const c=g({allowReserved:e,name:n,value:s});c&&i.push(c)}}return i.join("&")},N=e=>{var r;if(!e)return"stream";const t=(r=e.split(";")[0])==null?void 0:r.trim();if(t){if(t.startsWith("application/json")||t.endsWith("+json"))return"json";if(t==="multipart/form-data")return"formData";if(["application/","audio/","image/","video/"].some(o=>t.startsWith(o)))return"blob";if(t.startsWith("text/"))return"text"}},B=async({security:e,...t})=>{for(const r of e){const o=await U(r,t.auth);if(!o)continue;const a=r.name??"Authorization";switch(r.in){case"query":t.query||(t.query={}),t.query[a]=o;break;case"cookie":t.headers.append("Cookie",`${a}=${o}`);break;case"header":default:t.headers.set(a,o);break}return}},x=e=>J({baseUrl:e.baseUrl,path:e.path,query:e.query,querySerializer:typeof e.querySerializer=="function"?e.querySerializer:z(e.querySerializer),url:e.url}),J=({baseUrl:e,path:t,query:r,querySerializer:o,url:a})=>{const i=a.startsWith("/")?a:`/${a}`;let n=(e??"")+i;t&&(n=H({path:t,url:n}));let s=r?o(r):"";return s.startsWith("?")&&(s=s.substring(1)),s&&(n+=`?${s}`),n},A=(e,t)=>{var o;const r={...e,...t};return(o=r.baseUrl)!=null&&o.endsWith("/")&&(r.baseUrl=r.baseUrl.substring(0,r.baseUrl.length-1)),r.headers=D(e.headers,t.headers),r},D=(...e)=>{const t=new Headers;for(const r of e){if(!r||typeof r!="object")continue;const o=r instanceof Headers?r.entries():Object.entries(r);for(const[a,i]of o)if(i===null)t.delete(a);else if(Array.isArray(i))for(const n of i)t.append(a,n);else i!==void 0&&t.set(a,typeof i=="object"?JSON.stringify(i):i)}return t};class _{constructor(){T(this,"_fns");this._fns=[]}clear(){this._fns=[]}getInterceptorIndex(t){return typeof t=="number"?this._fns[t]?t:-1:this._fns.indexOf(t)}exists(t){const r=this.getInterceptorIndex(t);return!!this._fns[r]}eject(t){const r=this.getInterceptorIndex(t);this._fns[r]&&(this._fns[r]=null)}update(t,r){const o=this.getInterceptorIndex(t);return this._fns[o]?(this._fns[o]=r,t):!1}use(t){return this._fns=[...this._fns,t],this._fns.length-1}}const L=()=>({error:new _,request:new _,response:new _}),M=z({allowReserved:!1,array:{explode:!0,style:"form"},object:{explode:!0,style:"deepObject"}}),Q={"Content-Type":"application/json"},O=(e={})=>({...E,headers:Q,parseAs:"auto",querySerializer:M,...e}),G=(e={})=>{let t=A(O(),e);const r=()=>({...t}),o=n=>(t=A(t,n),r()),a=L(),i=async n=>{const s={...t,...n,fetch:n.fetch??t.fetch??globalThis.fetch,headers:D(t.headers,n.headers)};s.security&&await B({...s,security:s.security}),s.requestValidator&&await s.requestValidator(s),s.body&&s.bodySerializer&&(s.body=s.bodySerializer(s.body)),(s.body===void 0||s.body==="")&&s.headers.delete("Content-Type");const c=x(s),d={redirect:"follow",...s};let p=new Request(c,d);for(const l of a.request._fns)l&&(p=await l(p,s));const y=s.fetch;let u=await y(p);for(const l of a.response._fns)l&&(u=await l(u,p,s));const b={request:p,response:u};if(u.ok){if(u.status===204||u.headers.get("Content-Length")==="0")return s.responseStyle==="data"?{}:{data:{},...b};const l=(s.parseAs==="auto"?N(u.headers.get("Content-Type")):s.parseAs)??"json";let h;switch(l){case"arrayBuffer":case"blob":case"formData":case"json":case"text":h=await u[l]();break;case"stream":return s.responseStyle==="data"?u.body:{data:u.body,...b}}return l==="json"&&(s.responseValidator&&await s.responseValidator(h),s.responseTransformer&&(h=await s.responseTransformer(h))),s.responseStyle==="data"?h:{data:h,...b}}const S=await u.text();let j;try{j=JSON.parse(S)}catch{}const w=j??S;let m=w;for(const l of a.error._fns)l&&(m=await l(w,u,p,s));if(m=m||{},s.throwOnError)throw m;return s.responseStyle==="data"?void 0:{error:m,...b}};return{buildUrl:x,connect:n=>i({...n,method:"CONNECT"}),delete:n=>i({...n,method:"DELETE"}),get:n=>i({...n,method:"GET"}),getConfig:r,head:n=>i({...n,method:"HEAD"}),interceptors:a,options:n=>i({...n,method:"OPTIONS"}),patch:n=>i({...n,method:"PATCH"}),post:n=>i({...n,method:"POST"}),put:n=>i({...n,method:"PUT"}),request:i,setConfig:o,trace:n=>i({...n,method:"TRACE"})}},F=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),K=async e=>(e=e.map(t=>F(t)),e),X=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e.updated_at&&(e.updated_at=new Date(e.updated_at)),e),Y=async e=>(e=X(e),e),Z=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),I=e=>(e.tags&&(e.tags=e.tags.map(t=>Z(t))),e),v=e=>(e.data=e.data.map(t=>I(t)),e),ee=async e=>(e=v(e),e),te=async e=>(e=I(e),e),re=e=>(e.created_at&&(e.created_at=new Date(e.created_at)),e),se=async e=>(e=e.map(t=>re(t)),e),ne=e=>(e.created_at=new Date(e.created_at),e.updated_at=new Date(e.updated_at),e),ae=async e=>(e=ne(e),e),f=G(O()),ie=e=>((e==null?void 0:e.client)??f).get({responseTransformer:K,url:"/api/datasets",...e}),ce=e=>(e.client??f).get({responseTransformer:Y,url:"/api/datasets/{dataset_id}",...e}),ue=e=>(e.client??f).post({responseTransformer:ee,url:"/api/datasets/{dataset_id}/samples/list",...e,headers:{"Content-Type":"application/json",...e.headers}}),le=e=>(e.client??f).get({responseTransformer:te,url:"/api/datasets/{dataset_id}/samples/{sample_id}",...e}),fe=e=>((e==null?void 0:e.client)??f).get({url:"/api/annotation_labels",...e}),de=e=>(e.client??f).get({url:"/api/datasets/{dataset_id}/annotations/count",...e,headers:{"Content-Type":"application/json",...e.headers}}),pe=e=>(e.client??f).get({url:"/api/datasets/{dataset_id}/annotations",...e}),he=e=>(e.client??f).put({responseTransformer:se,url:"/api/datasets/{dataset_id}/annotations",...e,headers:{"Content-Type":"application/json",...e.headers}}),me=e=>(e.client??f).get({url:"/api/datasets/{dataset_id}/annotations/{annotation_id}",...e}),ye=e=>((e==null?void 0:e.client)??f).get({responseTransformer:ae,url:"/api/settings",...e}),be=e=>(e.client??f).get({url:"/api/classifiers/{classifier_id}/sample_history",...e}),ge=e=>(e.client??f).get({url:"/api/datasets/{dataset_id}/metadata/info",...e});export{ce as a,ue as b,pe as c,f as d,fe as e,le as f,ge as g,de as h,me as i,ye as j,ie as r,be as s,he as u};
