Metadata-Version: 2.3
Name: solarius
Version: 0.1.2
Summary: Python library for calculating precise solar returns
Author: Chinmay Kakatkar
License: MIT License
         
         Copyright (c) 2025 Chinmay Kakatkar
         
         Permission is hereby granted, free of charge, to any person obtaining a copy
         of this software and associated documentation files (the "Software"), to deal
         in the Software without restriction, including without limitation the rights
         to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
         copies of the Software, and to permit persons to whom the Software is
         furnished to do so, subject to the following conditions:
         
         The above copyright notice and this permission notice shall be included in all
         copies or substantial portions of the Software.
         
         THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
         IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
         FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
         AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
         LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
         OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
         SOFTWARE.
Requires-Dist: geopy>=2.4.1
Requires-Dist: pytz>=2025.2
Requires-Dist: skyfield>=1.53
Requires-Dist: timezonefinder>=8.0.0
Requires-Python: >=3.12
Project-URL: Homepage, https://github.com/ckstash/solarius
Description-Content-Type: text/markdown

# Solarius

**Solarius** is a Python library for calculating your precise solar return â€” the exact moment the Sun returns to the same ecliptic longitude it occupied at your birth â€” according to the Gregorian calendar. This *real* birthday and can differ from your *civil* birthday in a given future year due to leap years, etc.

To give you accurate results anywhere in the world, Solarius uses:

- [skyfield](https://pypi.org/project/skyfield/) to compute precise positions of celestial bodies.
- [geopy](https://pypi.org/project/geopy/) to map the names of cities and countries to coordinates.
- [timezonefinder](https://pypi.org/project/timezonefinder/) for mapping geographical coordinates to timezones.
- [pytz](https://pypi.org/project/pytz/) to convert between UTC and local times using regional daylight-saving rules.

---

## ðŸ“¦ Installation

```bash
pip install solarius
```

Built for Python 3.12 or above.

---

## ðŸš€ Quick Start

```Python
from solarius.model import SolarReturnCalculator

calculator = SolarReturnCalculator(ephemeris_file="de421.bsp")

# Predict without printing
date_str, time_str, tz_name = calculator.predict(
    official_birthday="18-01-1996",
    official_birth_time="02:30",
    birth_country="France",
    birth_city="Paris",
    current_country="France",
    current_city="Paris",
    target_year="2026"
)
print(date_str, time_str, tz_name)

# Or use the convenience printer
calculator.print_real_birthday(
    official_birthday="18-01-1996",
    official_birth_time="02:30",
    birth_country="France",
    birth_city="Paris",
    current_country="France",
    current_city="Paris",
    target_year="2026"
)
```

---

## ðŸ“š API Reference

See [here](https://github.com/ckstash/solarius/blob/main/API.md)
