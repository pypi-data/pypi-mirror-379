Metadata-Version: 2.4
Name: aws-blogs-mcp-server
Version: 1.0.0
Summary: MCP server for searching and retrieving AWS blog content
Project-URL: Homepage, https://github.com/chundiv/aws-blogs-mcp-server
Project-URL: Repository, https://github.com/chundiv/aws-blogs-mcp-server
Project-URL: Issues, https://github.com/chundiv/aws-blogs-mcp-server/issues
Author-email: Vinod Chundiv <chundiv@amazon.com>
License: MIT
License-File: LICENSE
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.8
Requires-Dist: beautifulsoup4>=4.12.0
Requires-Dist: httpx>=0.24.0
Requires-Dist: lxml>=4.9.0
Requires-Dist: mcp>=1.0.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: mypy>=1.0.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Description-Content-Type: text/markdown

# AWS Blogs MCP Server - Universal Distribution

A Model Context Protocol (MCP) server that provides access to AWS blog content. Search and retrieve blog posts from aws.amazon.com directly in your AI assistant.

## üåç Cross-Platform Support

This distribution works on:
- ‚úÖ **macOS** (Intel & Apple Silicon)
- ‚úÖ **Linux** (Ubuntu, CentOS, etc.)
- ‚úÖ **Windows** (10, 11)

## üöÄ Quick Installation

### Prerequisites
- **Python 3.8+** (required on all platforms)
- **Kiro IDE** or any MCP-compatible client

### Step 1: Install Dependencies

**On macOS/Linux:**
```bash
./install.sh
```

**On Windows:**
```cmd
install.bat
```

**Manual installation (any platform):**
```bash
pip install -r requirements.txt
```

### Step 2: Configure MCP

Add the appropriate configuration to your `.kiro/settings/mcp.json`:

**For macOS/Linux:**
```json
{
  "mcpServers": {
    "aws-blogs": {
      "command": "/FULL/PATH/TO/aws-blogs-mcp-server/aws-blogs-mcp-server",
      "args": [],
      "env": {
        "FASTMCP_LOG_LEVEL": "ERROR"
      },
      "disabled": false,
      "autoApprove": [
        "search_aws_blogs",
        "find_similar_blogs",
        "find_blog_by_title",
        "get_blog_post",
        "get_blog_categories"
      ],
      "disabledTools": []
    }
  }
}
```

**For Windows:**
```json
{
  "mcpServers": {
    "aws-blogs": {
      "command": "python",
      "args": ["C:\\FULL\\PATH\\TO\\aws-blogs-mcp-server\\aws-blogs-mcp-server.py"],
      "env": {
        "FASTMCP_LOG_LEVEL": "ERROR"
      },
      "disabled": false,
      "autoApprove": [
        "search_aws_blogs",
        "find_similar_blogs", 
        "find_blog_by_title",
        "get_blog_post",
        "get_blog_categories"
      ],
      "disabledTools": []
    }
  }
}
```

**Universal Python approach (recommended):**
```json
{
  "mcpServers": {
    "aws-blogs": {
      "command": "python",
      "args": ["/FULL/PATH/TO/aws-blogs-mcp-server/aws-blogs-mcp-server.py"],
      "env": {
        "FASTMCP_LOG_LEVEL": "ERROR"
      },
      "disabled": false,
      "autoApprove": [
        "search_aws_blogs",
        "find_similar_blogs",
        "find_blog_by_title", 
        "get_blog_post",
        "get_blog_categories"
      ],
      "disabledTools": []
    }
  }
}
```

### Step 3: Update Paths

**IMPORTANT:** Replace `/FULL/PATH/TO/aws-blogs-mcp-server` with the actual path where you extracted this package.

**Examples:**
- macOS: `/Users/username/Downloads/aws-blogs-mcp-server`
- Linux: `/home/username/aws-blogs-mcp-server`
- Windows: `C:\Users\username\Downloads\aws-blogs-mcp-server`

### Step 4: Restart Kiro

Close and reopen Kiro to load the new MCP server.

### Step 5: Test

Try asking: "Search for AWS Lambda blogs"

## üõ†Ô∏è Available Features

- **search_aws_blogs**: Search for blog posts by keywords
- **find_similar_blogs**: Find related blog posts based on your idea
- **find_blog_by_title**: Locate specific blog posts by title
- **get_blog_post**: Retrieve full content of a blog post
- **get_blog_categories**: Browse available AWS blog categories

## üîß Troubleshooting

### Common Issues

**"Command not found" or "Module not found":**
1. Verify Python 3.8+ is installed: `python --version` or `python3 --version`
2. Install dependencies: `pip install -r requirements.txt`
3. Use the Python-based configuration (most reliable)

**"Permission denied" (macOS/Linux):**
```bash
chmod +x aws-blogs-mcp-server
chmod +x install.sh
```

**Path issues:**
- Use absolute paths in MCP configuration
- Avoid spaces in directory names
- On Windows, use double backslashes: `C:\\path\\to\\server`

### Testing the Server

You can test the server directly:

**macOS/Linux:**
```bash
./aws-blogs-mcp-server
```

**Windows:**
```cmd
python aws-blogs-mcp-server.py
```

The server should start and wait for connections (this is normal behavior).

## üìÅ File Structure

```
aws-blogs-mcp-server/
‚îú‚îÄ‚îÄ src/                          # Source code
‚îú‚îÄ‚îÄ mcp-config-examples/          # Configuration examples
‚îú‚îÄ‚îÄ aws-blogs-mcp-server          # Unix launcher
‚îú‚îÄ‚îÄ aws-blogs-mcp-server.bat      # Windows launcher  
‚îú‚îÄ‚îÄ aws-blogs-mcp-server.py       # Python launcher (universal)
‚îú‚îÄ‚îÄ install.sh                    # Unix install script
‚îú‚îÄ‚îÄ install.bat                   # Windows install script
‚îú‚îÄ‚îÄ requirements.txt              # Python dependencies
‚îî‚îÄ‚îÄ README.md                     # This file
```

## üÜò Support

If you encounter issues:

1. Check that Python 3.8+ is installed
2. Verify all dependencies are installed
3. Use absolute paths in MCP configuration
4. Try the Python-based launcher (most compatible)
5. Check Kiro's MCP server panel for error messages

## üìÑ License

MIT License - see LICENSE file for details.
