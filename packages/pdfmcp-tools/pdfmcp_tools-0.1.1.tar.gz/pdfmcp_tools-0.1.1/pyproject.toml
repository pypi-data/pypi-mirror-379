[project]
name = "pdfmcp-tools"
version = "0.1.1"
description = "MCP server for comprehensive PDF processing with 18 specialized tools"
readme = "README.md"
license = {text = "MIT"}
authors = [
    { name = "lihongwen", email = "1062316792@qq.com" }
]
maintainers = [
    { name = "lihongwen", email = "1062316792@qq.com" }
]
keywords = [
    "mcp", "pdf", "text-extraction", "ocr", "tesseract", 
    "pdf-processing", "document-processing", "fastmcp",
    "pdf-tools", "pdf-optimization", "image-conversion"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: General",
    "Topic :: Multimedia :: Graphics :: Graphics Conversion",
    "Topic :: Office/Business :: Office Suites",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Programming Language :: Python :: 3 :: Only",
    "Operating System :: OS Independent",
    "Framework :: AsyncIO",
    "Environment :: Console",
    "Natural Language :: Chinese (Simplified)",
    "Natural Language :: English"
]
requires-python = ">=3.11"
dependencies = [
    "mcp[cli]>=1.2.0",
    "pdfplumber>=0.11.0",
    "pypdf>=4.0.0",
    "pytesseract>=0.3.10",
    "pillow>=10.0.0",
    "pdf2image>=1.16.0"
]

[project.urls]
Homepage = "https://github.com/lihongwen/pdfreadermcp"
Repository = "https://github.com/lihongwen/pdfreadermcp.git"
Issues = "https://github.com/lihongwen/pdfreadermcp/issues"
Documentation = "https://github.com/lihongwen/pdfreadermcp#readme"
Changelog = "https://github.com/lihongwen/pdfreadermcp/releases"

[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-cov>=7.0.0", 
    "pytest-asyncio>=1.2.0",
    "pytest-mock>=3.15.0",
    "black>=25.0.0",
    "isort>=6.0.0",
    "mypy>=1.18.0",
    "ruff>=0.13.0"
]

[project.scripts]
pdfmcp-tools = "pdfreadermcp:main"
pdfreadermcp = "pdfreadermcp:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/pdfreadermcp"]

[tool.pytest.ini_options]
minversion = "8.0"
addopts = "-ra -q --tb=short --cov=pdfreadermcp --cov-report=term-missing --cov-report=html"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_functions = ["test_*"]
python_classes = ["Test*"]
markers = [
    "unit: marks tests as unit tests",
    "integration: marks tests as integration tests",
    "contract: marks tests as contract tests",
    "slow: marks tests as slow running"
]
asyncio_mode = "auto"
log_cli = true
log_cli_level = "INFO"
log_cli_format = "%(asctime)s [%(levelname)8s] %(name)s: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

[tool.coverage.run]
source = ["src/pdfreadermcp"]
omit = [
    "tests/*",
    "*/tests/*",
    "*/__pycache__/*",
    "*/.*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*Protocol.*:",
    "@(abc\\.)?abstractmethod"
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.black]
target-version = ["py311"]
line-length = 88
skip-string-normalization = true

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.uv]
index-url = "https://pypi.tuna.tsinghua.edu.cn/simple"
extra-index-url = [
    "https://mirrors.aliyun.com/pypi/simple/",
    "https://pypi.mirrors.ustc.edu.cn/simple/",
    "https://pypi.douban.com/simple/",
    "https://download.pytorch.org/whl/cpu"
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "isort>=6.0.1",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "pytest-mock>=3.15.1",
    "ruff>=0.13.1",
]

