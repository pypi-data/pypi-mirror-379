# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIOSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectReaderPython
else:
    import _itkSpatialObjectReaderPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMetaConverterBasePython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkAffineTransformPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkOptimizerParametersPython
import itk.itkTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkGroupSpatialObjectPython

def itkSpatialObjectReader2_New():
    return itkSpatialObjectReader2.New()

class itkSpatialObjectReader2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectReader2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectReader2_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectReader2_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_Update(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_GetMetaIOVersion(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_GetFileName(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkSpatialObject2_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_GetOutput(self)

    def GetGroup(self):
        r"""GetGroup(self) -> itkGroupSpatialObject2_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_GetGroup(self)

    def GetEvent(self):
        r"""GetEvent(self) -> itkMetaEvent"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_GetEvent(self)

    def SetEvent(self, event):
        r"""
        SetEvent(self, event)

        Parameters
        ----------
        event: itkMetaEvent *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_SetEvent(self, event)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase2 *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectReaderPython.delete_itkSpatialObjectReader2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectReader2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectReader2

        Create a new object of the class itkSpatialObjectReader2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectReader2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectReader2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectReader2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectReader2 in _itkSpatialObjectReaderPython:
_itkSpatialObjectReaderPython.itkSpatialObjectReader2_swigregister(itkSpatialObjectReader2)

def itkSpatialObjectReader3_New():
    return itkSpatialObjectReader3.New()

class itkSpatialObjectReader3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectReader3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectReader3_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectReader3_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_Update(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_GetMetaIOVersion(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_GetFileName(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkSpatialObject3_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_GetOutput(self)

    def GetGroup(self):
        r"""GetGroup(self) -> itkGroupSpatialObject3_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_GetGroup(self)

    def GetEvent(self):
        r"""GetEvent(self) -> itkMetaEvent"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_GetEvent(self)

    def SetEvent(self, event):
        r"""
        SetEvent(self, event)

        Parameters
        ----------
        event: itkMetaEvent *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_SetEvent(self, event)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase3 *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectReaderPython.delete_itkSpatialObjectReader3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectReader3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectReader3

        Create a new object of the class itkSpatialObjectReader3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectReader3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectReader3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectReader3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectReader3 in _itkSpatialObjectReaderPython:
_itkSpatialObjectReaderPython.itkSpatialObjectReader3_swigregister(itkSpatialObjectReader3)

def itkSpatialObjectReader4_New():
    return itkSpatialObjectReader4.New()

class itkSpatialObjectReader4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectReader4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectReader4_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectReader4_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_Update(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_GetMetaIOVersion(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_GetFileName(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkSpatialObject4_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_GetOutput(self)

    def GetGroup(self):
        r"""GetGroup(self) -> itkGroupSpatialObject4_Pointer"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_GetGroup(self)

    def GetEvent(self):
        r"""GetEvent(self) -> itkMetaEvent"""
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_GetEvent(self)

    def SetEvent(self, event):
        r"""
        SetEvent(self, event)

        Parameters
        ----------
        event: itkMetaEvent *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_SetEvent(self, event)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase4 *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectReaderPython.delete_itkSpatialObjectReader4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectReader4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectReaderPython.itkSpatialObjectReader4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectReader4

        Create a new object of the class itkSpatialObjectReader4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectReader4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectReader4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectReader4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectReader4 in _itkSpatialObjectReaderPython:
_itkSpatialObjectReaderPython.itkSpatialObjectReader4_swigregister(itkSpatialObjectReader4)

