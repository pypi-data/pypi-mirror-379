# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIOSpatialObjectsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSpatialObjectWriterPython
else:
    import _itkSpatialObjectWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSpatialObjectBasePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkAffineTransformPython
import itk.itkTransformBasePython
import itk.itkDiffusionTensor3DPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkArray2DPython
import itk.itkVariableLengthVectorPython
import itk.itkOptimizerParametersPython
import itk.itkArrayPython
import itk.itkMatrixOffsetTransformBasePython
import itk.itkSpatialObjectPropertyPython
import itk.itkRGBAPixelPython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkMetaConverterBasePython

def itkSpatialObjectWriter2_New():
    return itkSpatialObjectWriter2.New()

class itkSpatialObjectWriter2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectWriter2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectWriter2_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectWriter2_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_Update(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetFileName(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkSpatialObject2 const *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetInput(self, input)

    def SetBinaryPoints(self, _arg):
        r"""
        SetBinaryPoints(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetBinaryPoints(self, _arg)

    def GetBinaryPoints(self):
        r"""GetBinaryPoints(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetBinaryPoints(self)

    def BinaryPointsOn(self):
        r"""BinaryPointsOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_BinaryPointsOn(self)

    def BinaryPointsOff(self):
        r"""BinaryPointsOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_BinaryPointsOff(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetMetaIOVersion(self)

    def SetTransformPrecision(self, precision):
        r"""
        SetTransformPrecision(self, precision)

        Parameters
        ----------
        precision: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetTransformPrecision(self, precision)

    def GetTransformPrecision(self):
        r"""GetTransformPrecision(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetTransformPrecision(self)

    def SetWriteImagesInSeparateFile(self, _arg):
        r"""
        SetWriteImagesInSeparateFile(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_SetWriteImagesInSeparateFile(self, _arg)

    def GetWriteImagesInSeparateFile(self):
        r"""GetWriteImagesInSeparateFile(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_GetWriteImagesInSeparateFile(self)

    def WriteImagesInSeparateFileOn(self):
        r"""WriteImagesInSeparateFileOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_WriteImagesInSeparateFileOn(self)

    def WriteImagesInSeparateFileOff(self):
        r"""WriteImagesInSeparateFileOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_WriteImagesInSeparateFileOff(self)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase2 *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectWriter2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter2

        Create a new object of the class itkSpatialObjectWriter2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter2 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter2_swigregister(itkSpatialObjectWriter2)

def itkSpatialObjectWriter3_New():
    return itkSpatialObjectWriter3.New()

class itkSpatialObjectWriter3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectWriter3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectWriter3_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectWriter3_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_Update(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetFileName(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkSpatialObject3 const *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetInput(self, input)

    def SetBinaryPoints(self, _arg):
        r"""
        SetBinaryPoints(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetBinaryPoints(self, _arg)

    def GetBinaryPoints(self):
        r"""GetBinaryPoints(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetBinaryPoints(self)

    def BinaryPointsOn(self):
        r"""BinaryPointsOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_BinaryPointsOn(self)

    def BinaryPointsOff(self):
        r"""BinaryPointsOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_BinaryPointsOff(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetMetaIOVersion(self)

    def SetTransformPrecision(self, precision):
        r"""
        SetTransformPrecision(self, precision)

        Parameters
        ----------
        precision: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetTransformPrecision(self, precision)

    def GetTransformPrecision(self):
        r"""GetTransformPrecision(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetTransformPrecision(self)

    def SetWriteImagesInSeparateFile(self, _arg):
        r"""
        SetWriteImagesInSeparateFile(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_SetWriteImagesInSeparateFile(self, _arg)

    def GetWriteImagesInSeparateFile(self):
        r"""GetWriteImagesInSeparateFile(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_GetWriteImagesInSeparateFile(self)

    def WriteImagesInSeparateFileOn(self):
        r"""WriteImagesInSeparateFileOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_WriteImagesInSeparateFileOn(self)

    def WriteImagesInSeparateFileOff(self):
        r"""WriteImagesInSeparateFileOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_WriteImagesInSeparateFileOff(self)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase3 *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectWriter3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter3

        Create a new object of the class itkSpatialObjectWriter3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter3 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter3_swigregister(itkSpatialObjectWriter3)

def itkSpatialObjectWriter4_New():
    return itkSpatialObjectWriter4.New()

class itkSpatialObjectWriter4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkSpatialObjectWriter4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkSpatialObjectWriter4_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkSpatialObjectWriter4_Pointer"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_Clone(self)

    def Update(self):
        r"""Update(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_Update(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetFileName(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkSpatialObject4 const *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetInput(self, input)

    def SetBinaryPoints(self, _arg):
        r"""
        SetBinaryPoints(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetBinaryPoints(self, _arg)

    def GetBinaryPoints(self):
        r"""GetBinaryPoints(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetBinaryPoints(self)

    def BinaryPointsOn(self):
        r"""BinaryPointsOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_BinaryPointsOn(self)

    def BinaryPointsOff(self):
        r"""BinaryPointsOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_BinaryPointsOff(self)

    def SetMetaIOVersion(self, ver):
        r"""
        SetMetaIOVersion(self, ver)

        Parameters
        ----------
        ver: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetMetaIOVersion(self, ver)

    def GetMetaIOVersion(self):
        r"""GetMetaIOVersion(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetMetaIOVersion(self)

    def SetTransformPrecision(self, precision):
        r"""
        SetTransformPrecision(self, precision)

        Parameters
        ----------
        precision: unsigned int

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetTransformPrecision(self, precision)

    def GetTransformPrecision(self):
        r"""GetTransformPrecision(self) -> unsigned int"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetTransformPrecision(self)

    def SetWriteImagesInSeparateFile(self, _arg):
        r"""
        SetWriteImagesInSeparateFile(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_SetWriteImagesInSeparateFile(self, _arg)

    def GetWriteImagesInSeparateFile(self):
        r"""GetWriteImagesInSeparateFile(self) -> bool"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_GetWriteImagesInSeparateFile(self)

    def WriteImagesInSeparateFileOn(self):
        r"""WriteImagesInSeparateFileOn(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_WriteImagesInSeparateFileOn(self)

    def WriteImagesInSeparateFileOff(self):
        r"""WriteImagesInSeparateFileOff(self)"""
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_WriteImagesInSeparateFileOff(self)

    def RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter):
        r"""
        RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)

        Parameters
        ----------
        metaTypeName: char const *
        spatialObjectTypeName: char const *
        converter: itkMetaConverterBase4 *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_RegisterMetaConverter(self, metaTypeName, spatialObjectTypeName, converter)
    __swig_destroy__ = _itkSpatialObjectWriterPython.delete_itkSpatialObjectWriter4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSpatialObjectWriter4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSpatialObjectWriterPython.itkSpatialObjectWriter4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkSpatialObjectWriter4

        Create a new object of the class itkSpatialObjectWriter4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkSpatialObjectWriter4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkSpatialObjectWriter4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkSpatialObjectWriter4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkSpatialObjectWriter4 in _itkSpatialObjectWriterPython:
_itkSpatialObjectWriterPython.itkSpatialObjectWriter4_swigregister(itkSpatialObjectWriter4)

