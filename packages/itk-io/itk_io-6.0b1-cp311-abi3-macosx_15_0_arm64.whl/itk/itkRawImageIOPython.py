# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIORAWPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRawImageIOPython
else:
    import _itkRawImageIOPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.ITKIOImageBaseBasePython

def itkRawImageIOD2_New():
    return itkRawImageIOD2.New()

class itkRawImageIOD2(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOD2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOD2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD2_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD2_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD2_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD2_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD2_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOD2_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD2_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOD2_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOD2

        Create a new object of the class itkRawImageIOD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOD2 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOD2_swigregister(itkRawImageIOD2)

def itkRawImageIOD3_New():
    return itkRawImageIOD3.New()

class itkRawImageIOD3(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOD3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOD3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD3_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD3_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD3_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD3_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD3_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOD3_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD3_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOD3_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOD3

        Create a new object of the class itkRawImageIOD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOD3 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOD3_swigregister(itkRawImageIOD3)

def itkRawImageIOD4_New():
    return itkRawImageIOD4.New()

class itkRawImageIOD4(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOD4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOD4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOD4_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD4_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD4_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD4_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOD4_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOD4_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOD4_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOD4_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOD4

        Create a new object of the class itkRawImageIOD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOD4 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOD4_swigregister(itkRawImageIOD4)

def itkRawImageIOF2_New():
    return itkRawImageIOF2.New()

class itkRawImageIOF2(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOF2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOF2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF2_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF2_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF2_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF2_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF2_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOF2_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF2_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOF2_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOF2

        Create a new object of the class itkRawImageIOF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOF2 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOF2_swigregister(itkRawImageIOF2)

def itkRawImageIOF3_New():
    return itkRawImageIOF3.New()

class itkRawImageIOF3(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOF3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOF3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF3_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF3_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF3_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF3_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF3_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOF3_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF3_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOF3_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOF3

        Create a new object of the class itkRawImageIOF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOF3 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOF3_swigregister(itkRawImageIOF3)

def itkRawImageIOF4_New():
    return itkRawImageIOF4.New()

class itkRawImageIOF4(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOF4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOF4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOF4_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF4_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF4_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF4_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOF4_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOF4_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOF4_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOF4_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOF4

        Create a new object of the class itkRawImageIOF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOF4 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOF4_swigregister(itkRawImageIOF4)

def itkRawImageIOSS2_New():
    return itkRawImageIOSS2.New()

class itkRawImageIOSS2(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOSS2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOSS2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS2_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS2_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS2_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS2_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS2_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOSS2_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS2_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOSS2_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOSS2

        Create a new object of the class itkRawImageIOSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOSS2 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOSS2_swigregister(itkRawImageIOSS2)

def itkRawImageIOSS3_New():
    return itkRawImageIOSS3.New()

class itkRawImageIOSS3(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOSS3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOSS3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS3_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS3_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS3_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS3_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS3_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOSS3_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS3_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOSS3_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOSS3

        Create a new object of the class itkRawImageIOSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOSS3 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOSS3_swigregister(itkRawImageIOSS3)

def itkRawImageIOSS4_New():
    return itkRawImageIOSS4.New()

class itkRawImageIOSS4(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOSS4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOSS4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOSS4_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS4_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS4_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS4_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOSS4_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOSS4_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOSS4_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOSS4_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOSS4

        Create a new object of the class itkRawImageIOSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOSS4 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOSS4_swigregister(itkRawImageIOSS4)

def itkRawImageIOUC2_New():
    return itkRawImageIOUC2.New()

class itkRawImageIOUC2(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUC2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUC2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC2_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC2_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC2_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC2_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC2_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUC2_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC2_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUC2_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUC2

        Create a new object of the class itkRawImageIOUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUC2 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUC2_swigregister(itkRawImageIOUC2)

def itkRawImageIOUC3_New():
    return itkRawImageIOUC3.New()

class itkRawImageIOUC3(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUC3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUC3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC3_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC3_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC3_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC3_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC3_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUC3_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC3_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUC3_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUC3

        Create a new object of the class itkRawImageIOUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUC3 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUC3_swigregister(itkRawImageIOUC3)

def itkRawImageIOUC4_New():
    return itkRawImageIOUC4.New()

class itkRawImageIOUC4(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUC4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUC4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUC4_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC4_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC4_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC4_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUC4_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUC4_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUC4_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUC4_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUC4

        Create a new object of the class itkRawImageIOUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUC4 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUC4_swigregister(itkRawImageIOUC4)

def itkRawImageIOUS2_New():
    return itkRawImageIOUS2.New()

class itkRawImageIOUS2(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUS2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUS2_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS2_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS2_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS2_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS2_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS2_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUS2_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS2_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUS2_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUS2

        Create a new object of the class itkRawImageIOUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUS2 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUS2_swigregister(itkRawImageIOUS2)

def itkRawImageIOUS3_New():
    return itkRawImageIOUS3.New()

class itkRawImageIOUS3(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUS3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUS3_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS3_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS3_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS3_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS3_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS3_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUS3_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS3_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUS3_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUS3

        Create a new object of the class itkRawImageIOUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUS3 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUS3_swigregister(itkRawImageIOUS3)

def itkRawImageIOUS4_New():
    return itkRawImageIOUS4.New()

class itkRawImageIOUS4(itk.ITKIOImageBaseBasePython.itkImageIOBase):
    r"""Proxy of C++ itkRawImageIOUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRawImageIOUS4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRawImageIOUS4_Pointer"""
        return _itkRawImageIOPython.itkRawImageIOUS4_Clone(self)

    def SetHeaderSize(self, size):
        r"""
        SetHeaderSize(self, size)

        Parameters
        ----------
        size: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS4_SetHeaderSize(self, size)

    def GetHeaderSize(self):
        r"""GetHeaderSize(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS4_GetHeaderSize(self)

    def SetFileDimensionality(self, _arg):
        r"""
        SetFileDimensionality(self, _arg)

        Parameters
        ----------
        _arg: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS4_SetFileDimensionality(self, _arg)

    def GetFileDimensionality(self):
        r"""GetFileDimensionality(self) -> unsigned long"""
        return _itkRawImageIOPython.itkRawImageIOUS4_GetFileDimensionality(self)

    def GetImageMask(self):
        r"""GetImageMask(self) -> unsigned short const &"""
        return _itkRawImageIOPython.itkRawImageIOUS4_GetImageMask(self)

    def SetImageMask(self, val):
        r"""
        SetImageMask(self, val)

        Parameters
        ----------
        val: unsigned long

        """
        return _itkRawImageIOPython.itkRawImageIOUS4_SetImageMask(self, val)

    def ReadHeader(self, *args):
        r"""
        ReadHeader(self, arg0=std::string())

        Parameters
        ----------
        arg0: std::string const

        """
        return _itkRawImageIOPython.itkRawImageIOUS4_ReadHeader(self, *args)
    __swig_destroy__ = _itkRawImageIOPython.delete_itkRawImageIOUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRawImageIOUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRawImageIOPython.itkRawImageIOUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRawImageIOUS4

        Create a new object of the class itkRawImageIOUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRawImageIOUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRawImageIOUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRawImageIOUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRawImageIOUS4 in _itkRawImageIOPython:
_itkRawImageIOPython.itkRawImageIOUS4_swigregister(itkRawImageIOUS4)

