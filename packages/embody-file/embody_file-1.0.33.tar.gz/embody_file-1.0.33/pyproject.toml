[project]
name = "embody-file"
version = "1.0.33"
description = "Embody file converter"
license = "MIT"
classifiers = ["Development Status :: 5 - Production/Stable"]
authors = [{ name = "Aidee Health", email = "hello@aidee.io" }]
requires-python = ">=3.11,<4.0"
readme = "README.md"

dependencies = [
    "embody-codec>=1.0.32",
    "pandas>=1.5.1",
    "pytz>=2024.1,<2026.0",
    "tables>=3.10.2,<4",
    "pyarrow>=19.0.1,<20",
]

[dependency-groups]
dev = [
    "pytest>=7.2.0",
    "h5py>=3.13.0,<4",
    "Pygments>=2.10.0",
    "ruff>=0.11.5",
    "mypy>=0.930",
    "pre-commit>=2.16.0",
    "pre-commit-hooks>=4.1.0",
    "types-pytz>=2024.1.0",
]

[project.urls]
Homepage = "https://github.com/aidee-health/embody-file"
Repository = "https://github.com/aidee-health/embody-file"
Changelog = "https://github.com/aidee-health/embody-file/releases"

[project.scripts]
embody-file = "embodyfile.cli:main"

[tool.setuptools.entry-points."console_scripts"]
embody-file = "embodyfile.cli:main"

[tool.hatch.build.targets.sdist]
include = ["src/embodyfile"]

[tool.hatch.build.targets.wheel]
include = ["src/embodyfile"]

[tool.hatch.build.targets.wheel.sources]
"src/embodyfile" = "embodyfile"

[tool.coverage.paths]
source = ["src", "*/site-packages"]
tests = ["tests", "*/tests"]

[tool.coverage.run]
branch = true
source = ["embodyfile", "tests"]

[tool.coverage.report]
show_missing = true
fail_under = 2

[tool.isort]
profile = "black"
force_single_line = true
lines_after_imports = 2

[tool.mypy]
strict = false
warn_unreachable = true
pretty = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
ignore_missing_imports = true

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
    "B",    # flake8-bugbear
    "C",    # flake8-comprehensions
    "D",    # pydocstyle
    "E",    # pycodestyle errors
    "F",    # pyflakes
    "N",    # pep8-naming
    "S",    # flake8-bandit
    "W",    # pycodestyle warnings
    "I",    # isort
    "UP",   # pyupgrade
    "RUF",  # Ruff-specific rules
    "PTH",  # use pathlib
    "PL",   # Pylint
]
ignore = [
    "E203",   # Whitespace before ':'
    "E501",   # Line too long
    "D107",   # Missing docstring in __init__
    "D415",   # First line should end with a period, question mark, or exclamation point
    "D102",   # Missing docstring in public method
    "S101",   # Use of assert detected
    "D105",   # Missing docstring in magic method
    "D103",   # Missing docstring in public function
    "D101",   # Missing docstring in public class
    "B905",   # zip() without an explicit strict= parameter
    "PLR2004", # Magic value used in comparison
    "PLR0913", # Too many arguments
    "I001",   # isort: skip
    "PTH123", # pathlib: skip
    "RUF012", # mutable-class-default
    "PLR0912", # Too many branches
    "PLR0915", # Too many statements
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.mccabe]
max-complexity = 50

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
