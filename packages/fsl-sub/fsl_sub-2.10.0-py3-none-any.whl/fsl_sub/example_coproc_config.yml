---
coproc_opts: # Example 'cuda' coprocessor - this will need modifying
  cuda: # A co-processor called 'cuda' - queues with this coprocessor
    # should be given a sub-dictionary, 'copros', containing a further dictionary
    # key 'cuda' containing entries, 'max_quantity' (most number of cards per node) and 'classes' (list)
    # of 'class_type' keys defined below
    uses_modules: True # Should we use Shell modules to load the environment settings for the hardware?
    module_parent: cuda # What is the name of the parent module for this co-processor?
    presence_test: nvidia-smi # Name of a script/binary (full path if unlikely to be in user's PATH) which confirms coprocessor is available
    resource: gpu # Which scheduler resource requests GPU facilities
    classes: False # Whether there are multiple coprocessor classes/types
    include_more_capable: True # Should we also allow running on more capable hardware? Requires constraints on SLURM
    class_types:
      G: # Short code for the types of coprocessors - used on command line and in queue definition
        resource: TitanX # Queue resource to request (on SLURM this may be a constraint or type)
        doc: TitanX. No-ECC, single-precision workloads # Documentation about this hardware
        capability: 1 # Capability level for this hardware, integer value that orders by features - higher = more capable
      K:
        resource: k80
        doc: >
          Kepler. ECC, double-, and single-precision workloads
        capability: 2
      P:
        resource: p100
        doc: >
          Pascal. ECC, double-, single, and half-precision workloads
        capability: 3
      V:
        resource: v100
        doc: >
          Volta. ECC, double-, single-, half-
          and quarter-precision workloads
        capability: 4
      A:
        resource: a100
        doc: >
          Ampere. ECC, double-, single-, half-
          and Tensor - single-, half-, quarter- and eigth-precision
          workloads
        capability: 5
    default_class: V # If classes are available and  a class is not specified, which class should we use?
