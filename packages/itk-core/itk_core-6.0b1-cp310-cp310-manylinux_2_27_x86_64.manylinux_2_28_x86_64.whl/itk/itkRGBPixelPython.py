# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRGBPixelPython
else:
    import _itkRGBPixelPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkFixedArrayPython
import itk.pyBasePython
class itkRGBPixelD(itk.itkFixedArrayPython.itkFixedArrayD3):
    r"""Proxy of C++ itkRGBPixelD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __add__(self, r):
        r"""
        __add__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___add__(self, r)

    def __sub__(self, r):
        r"""
        __sub__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___sub__(self, r)

    def __mul__(self, r):
        r"""
        __mul__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: double const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___mul__(self, r)

    def __truediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelD___truediv__(self, *args)
    __div__ = __truediv__



    def __iadd__(self, r):
        r"""
        __iadd__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___iadd__(self, r)

    def __isub__(self, r):
        r"""
        __isub__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___isub__(self, r)

    def __imul__(self, r):
        r"""
        __imul__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: double const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___imul__(self, r)

    def __itruediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelD___itruediv__(self, *args)
    __idiv__ = __itruediv__



    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___lt__(self, r)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelD const &

        """
        return _itkRGBPixelPython.itkRGBPixelD___eq__(self, r)

    @staticmethod
    def GetNumberOfComponents():
        r"""GetNumberOfComponents() -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelD_GetNumberOfComponents()

    def GetNthComponent(self, c):
        r"""
        GetNthComponent(self, c) -> double

        Parameters
        ----------
        c: int

        """
        return _itkRGBPixelPython.itkRGBPixelD_GetNthComponent(self, c)

    def GetScalarValue(self):
        r"""GetScalarValue(self) -> double"""
        return _itkRGBPixelPython.itkRGBPixelD_GetScalarValue(self)

    def SetNthComponent(self, c, v):
        r"""
        SetNthComponent(self, c, v)

        Parameters
        ----------
        c: int
        v: double const &

        """
        return _itkRGBPixelPython.itkRGBPixelD_SetNthComponent(self, c, v)

    def SetRed(self, red):
        r"""
        SetRed(self, red)

        Parameters
        ----------
        red: double

        """
        return _itkRGBPixelPython.itkRGBPixelD_SetRed(self, red)

    def SetGreen(self, green):
        r"""
        SetGreen(self, green)

        Parameters
        ----------
        green: double

        """
        return _itkRGBPixelPython.itkRGBPixelD_SetGreen(self, green)

    def SetBlue(self, blue):
        r"""
        SetBlue(self, blue)

        Parameters
        ----------
        blue: double

        """
        return _itkRGBPixelPython.itkRGBPixelD_SetBlue(self, blue)

    def Set(self, red, green, blue):
        r"""
        Set(self, red, green, blue)

        Parameters
        ----------
        red: double
        green: double
        blue: double

        """
        return _itkRGBPixelPython.itkRGBPixelD_Set(self, red, green, blue)

    def GetRed(self):
        r"""GetRed(self) -> double const &"""
        return _itkRGBPixelPython.itkRGBPixelD_GetRed(self)

    def GetGreen(self):
        r"""GetGreen(self) -> double const &"""
        return _itkRGBPixelPython.itkRGBPixelD_GetGreen(self)

    def GetBlue(self):
        r"""GetBlue(self) -> double const &"""
        return _itkRGBPixelPython.itkRGBPixelD_GetBlue(self)

    def GetLuminance(self):
        r"""GetLuminance(self) -> double"""
        return _itkRGBPixelPython.itkRGBPixelD_GetLuminance(self)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkRGBPixelD
        __init__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: double const &

        __init__(self, r) -> itkRGBPixelD

        Parameters
        ----------
        r: double const *

        __init__(self, arg0) -> itkRGBPixelD

        Parameters
        ----------
        arg0: itkRGBPixelD const &

        """
        _itkRGBPixelPython.itkRGBPixelD_swiginit(self, _itkRGBPixelPython.new_itkRGBPixelD(*args))
    __swig_destroy__ = _itkRGBPixelPython.delete_itkRGBPixelD

    def __getitem__(self, dim):
        r"""
        __getitem__(self, dim) -> double

        Parameters
        ----------
        dim: unsigned long

        """
        return _itkRGBPixelPython.itkRGBPixelD___getitem__(self, dim)

    def __setitem__(self, dim, v):
        r"""
        __setitem__(self, dim, v)

        Parameters
        ----------
        dim: unsigned long
        v: double

        """
        return _itkRGBPixelPython.itkRGBPixelD___setitem__(self, dim, v)

    def __len__(self):
        r"""__len__(self) -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelD___len__(self)

    def __repr__(self):
        r"""__repr__(self) -> std::string"""
        return _itkRGBPixelPython.itkRGBPixelD___repr__(self)

# Register itkRGBPixelD in _itkRGBPixelPython:
_itkRGBPixelPython.itkRGBPixelD_swigregister(itkRGBPixelD)
class itkRGBPixelF(itk.itkFixedArrayPython.itkFixedArrayF3):
    r"""Proxy of C++ itkRGBPixelF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __add__(self, r):
        r"""
        __add__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___add__(self, r)

    def __sub__(self, r):
        r"""
        __sub__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___sub__(self, r)

    def __mul__(self, r):
        r"""
        __mul__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: float const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___mul__(self, r)

    def __truediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelF___truediv__(self, *args)
    __div__ = __truediv__



    def __iadd__(self, r):
        r"""
        __iadd__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___iadd__(self, r)

    def __isub__(self, r):
        r"""
        __isub__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___isub__(self, r)

    def __imul__(self, r):
        r"""
        __imul__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: float const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___imul__(self, r)

    def __itruediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelF___itruediv__(self, *args)
    __idiv__ = __itruediv__



    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___lt__(self, r)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelF const &

        """
        return _itkRGBPixelPython.itkRGBPixelF___eq__(self, r)

    @staticmethod
    def GetNumberOfComponents():
        r"""GetNumberOfComponents() -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelF_GetNumberOfComponents()

    def GetNthComponent(self, c):
        r"""
        GetNthComponent(self, c) -> float

        Parameters
        ----------
        c: int

        """
        return _itkRGBPixelPython.itkRGBPixelF_GetNthComponent(self, c)

    def GetScalarValue(self):
        r"""GetScalarValue(self) -> float"""
        return _itkRGBPixelPython.itkRGBPixelF_GetScalarValue(self)

    def SetNthComponent(self, c, v):
        r"""
        SetNthComponent(self, c, v)

        Parameters
        ----------
        c: int
        v: float const &

        """
        return _itkRGBPixelPython.itkRGBPixelF_SetNthComponent(self, c, v)

    def SetRed(self, red):
        r"""
        SetRed(self, red)

        Parameters
        ----------
        red: float

        """
        return _itkRGBPixelPython.itkRGBPixelF_SetRed(self, red)

    def SetGreen(self, green):
        r"""
        SetGreen(self, green)

        Parameters
        ----------
        green: float

        """
        return _itkRGBPixelPython.itkRGBPixelF_SetGreen(self, green)

    def SetBlue(self, blue):
        r"""
        SetBlue(self, blue)

        Parameters
        ----------
        blue: float

        """
        return _itkRGBPixelPython.itkRGBPixelF_SetBlue(self, blue)

    def Set(self, red, green, blue):
        r"""
        Set(self, red, green, blue)

        Parameters
        ----------
        red: float
        green: float
        blue: float

        """
        return _itkRGBPixelPython.itkRGBPixelF_Set(self, red, green, blue)

    def GetRed(self):
        r"""GetRed(self) -> float const &"""
        return _itkRGBPixelPython.itkRGBPixelF_GetRed(self)

    def GetGreen(self):
        r"""GetGreen(self) -> float const &"""
        return _itkRGBPixelPython.itkRGBPixelF_GetGreen(self)

    def GetBlue(self):
        r"""GetBlue(self) -> float const &"""
        return _itkRGBPixelPython.itkRGBPixelF_GetBlue(self)

    def GetLuminance(self):
        r"""GetLuminance(self) -> double"""
        return _itkRGBPixelPython.itkRGBPixelF_GetLuminance(self)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkRGBPixelF
        __init__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: float const &

        __init__(self, r) -> itkRGBPixelF

        Parameters
        ----------
        r: float const *

        __init__(self, arg0) -> itkRGBPixelF

        Parameters
        ----------
        arg0: itkRGBPixelF const &

        """
        _itkRGBPixelPython.itkRGBPixelF_swiginit(self, _itkRGBPixelPython.new_itkRGBPixelF(*args))
    __swig_destroy__ = _itkRGBPixelPython.delete_itkRGBPixelF

    def __getitem__(self, dim):
        r"""
        __getitem__(self, dim) -> float

        Parameters
        ----------
        dim: unsigned long

        """
        return _itkRGBPixelPython.itkRGBPixelF___getitem__(self, dim)

    def __setitem__(self, dim, v):
        r"""
        __setitem__(self, dim, v)

        Parameters
        ----------
        dim: unsigned long
        v: float

        """
        return _itkRGBPixelPython.itkRGBPixelF___setitem__(self, dim, v)

    def __len__(self):
        r"""__len__(self) -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelF___len__(self)

    def __repr__(self):
        r"""__repr__(self) -> std::string"""
        return _itkRGBPixelPython.itkRGBPixelF___repr__(self)

# Register itkRGBPixelF in _itkRGBPixelPython:
_itkRGBPixelPython.itkRGBPixelF_swigregister(itkRGBPixelF)
class itkRGBPixelUC(itk.itkFixedArrayPython.itkFixedArrayUC3):
    r"""Proxy of C++ itkRGBPixelUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __add__(self, r):
        r"""
        __add__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___add__(self, r)

    def __sub__(self, r):
        r"""
        __sub__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___sub__(self, r)

    def __mul__(self, r):
        r"""
        __mul__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: unsigned char const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___mul__(self, r)

    def __truediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelUC___truediv__(self, *args)
    __div__ = __truediv__



    def __iadd__(self, r):
        r"""
        __iadd__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___iadd__(self, r)

    def __isub__(self, r):
        r"""
        __isub__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___isub__(self, r)

    def __imul__(self, r):
        r"""
        __imul__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: unsigned char const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___imul__(self, r)

    def __itruediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelUC___itruediv__(self, *args)
    __idiv__ = __itruediv__



    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___lt__(self, r)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelUC const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC___eq__(self, r)

    @staticmethod
    def GetNumberOfComponents():
        r"""GetNumberOfComponents() -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetNumberOfComponents()

    def GetNthComponent(self, c):
        r"""
        GetNthComponent(self, c) -> unsigned char

        Parameters
        ----------
        c: int

        """
        return _itkRGBPixelPython.itkRGBPixelUC_GetNthComponent(self, c)

    def GetScalarValue(self):
        r"""GetScalarValue(self) -> unsigned char"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetScalarValue(self)

    def SetNthComponent(self, c, v):
        r"""
        SetNthComponent(self, c, v)

        Parameters
        ----------
        c: int
        v: unsigned char const &

        """
        return _itkRGBPixelPython.itkRGBPixelUC_SetNthComponent(self, c, v)

    def SetRed(self, red):
        r"""
        SetRed(self, red)

        Parameters
        ----------
        red: unsigned char

        """
        return _itkRGBPixelPython.itkRGBPixelUC_SetRed(self, red)

    def SetGreen(self, green):
        r"""
        SetGreen(self, green)

        Parameters
        ----------
        green: unsigned char

        """
        return _itkRGBPixelPython.itkRGBPixelUC_SetGreen(self, green)

    def SetBlue(self, blue):
        r"""
        SetBlue(self, blue)

        Parameters
        ----------
        blue: unsigned char

        """
        return _itkRGBPixelPython.itkRGBPixelUC_SetBlue(self, blue)

    def Set(self, red, green, blue):
        r"""
        Set(self, red, green, blue)

        Parameters
        ----------
        red: unsigned char
        green: unsigned char
        blue: unsigned char

        """
        return _itkRGBPixelPython.itkRGBPixelUC_Set(self, red, green, blue)

    def GetRed(self):
        r"""GetRed(self) -> unsigned char const &"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetRed(self)

    def GetGreen(self):
        r"""GetGreen(self) -> unsigned char const &"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetGreen(self)

    def GetBlue(self):
        r"""GetBlue(self) -> unsigned char const &"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetBlue(self)

    def GetLuminance(self):
        r"""GetLuminance(self) -> double"""
        return _itkRGBPixelPython.itkRGBPixelUC_GetLuminance(self)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkRGBPixelUC
        __init__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: unsigned char const &

        __init__(self, r) -> itkRGBPixelUC

        Parameters
        ----------
        r: unsigned char const *

        __init__(self, arg0) -> itkRGBPixelUC

        Parameters
        ----------
        arg0: itkRGBPixelUC const &

        """
        _itkRGBPixelPython.itkRGBPixelUC_swiginit(self, _itkRGBPixelPython.new_itkRGBPixelUC(*args))
    __swig_destroy__ = _itkRGBPixelPython.delete_itkRGBPixelUC

    def __getitem__(self, dim):
        r"""
        __getitem__(self, dim) -> unsigned char

        Parameters
        ----------
        dim: unsigned long

        """
        return _itkRGBPixelPython.itkRGBPixelUC___getitem__(self, dim)

    def __setitem__(self, dim, v):
        r"""
        __setitem__(self, dim, v)

        Parameters
        ----------
        dim: unsigned long
        v: unsigned char

        """
        return _itkRGBPixelPython.itkRGBPixelUC___setitem__(self, dim, v)

    def __len__(self):
        r"""__len__(self) -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelUC___len__(self)

    def __repr__(self):
        r"""__repr__(self) -> std::string"""
        return _itkRGBPixelPython.itkRGBPixelUC___repr__(self)

# Register itkRGBPixelUC in _itkRGBPixelPython:
_itkRGBPixelPython.itkRGBPixelUC_swigregister(itkRGBPixelUC)
class itkRGBPixelUS(itk.itkFixedArrayPython.itkFixedArrayUS3):
    r"""Proxy of C++ itkRGBPixelUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __add__(self, r):
        r"""
        __add__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___add__(self, r)

    def __sub__(self, r):
        r"""
        __sub__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___sub__(self, r)

    def __mul__(self, r):
        r"""
        __mul__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: unsigned short const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___mul__(self, r)

    def __truediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelUS___truediv__(self, *args)
    __div__ = __truediv__



    def __iadd__(self, r):
        r"""
        __iadd__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___iadd__(self, r)

    def __isub__(self, r):
        r"""
        __isub__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___isub__(self, r)

    def __imul__(self, r):
        r"""
        __imul__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: unsigned short const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___imul__(self, r)

    def __itruediv__(self, *args):
        return _itkRGBPixelPython.itkRGBPixelUS___itruediv__(self, *args)
    __idiv__ = __itruediv__



    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___lt__(self, r)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkRGBPixelUS const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS___eq__(self, r)

    @staticmethod
    def GetNumberOfComponents():
        r"""GetNumberOfComponents() -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetNumberOfComponents()

    def GetNthComponent(self, c):
        r"""
        GetNthComponent(self, c) -> unsigned short

        Parameters
        ----------
        c: int

        """
        return _itkRGBPixelPython.itkRGBPixelUS_GetNthComponent(self, c)

    def GetScalarValue(self):
        r"""GetScalarValue(self) -> unsigned short"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetScalarValue(self)

    def SetNthComponent(self, c, v):
        r"""
        SetNthComponent(self, c, v)

        Parameters
        ----------
        c: int
        v: unsigned short const &

        """
        return _itkRGBPixelPython.itkRGBPixelUS_SetNthComponent(self, c, v)

    def SetRed(self, red):
        r"""
        SetRed(self, red)

        Parameters
        ----------
        red: unsigned short

        """
        return _itkRGBPixelPython.itkRGBPixelUS_SetRed(self, red)

    def SetGreen(self, green):
        r"""
        SetGreen(self, green)

        Parameters
        ----------
        green: unsigned short

        """
        return _itkRGBPixelPython.itkRGBPixelUS_SetGreen(self, green)

    def SetBlue(self, blue):
        r"""
        SetBlue(self, blue)

        Parameters
        ----------
        blue: unsigned short

        """
        return _itkRGBPixelPython.itkRGBPixelUS_SetBlue(self, blue)

    def Set(self, red, green, blue):
        r"""
        Set(self, red, green, blue)

        Parameters
        ----------
        red: unsigned short
        green: unsigned short
        blue: unsigned short

        """
        return _itkRGBPixelPython.itkRGBPixelUS_Set(self, red, green, blue)

    def GetRed(self):
        r"""GetRed(self) -> unsigned short const &"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetRed(self)

    def GetGreen(self):
        r"""GetGreen(self) -> unsigned short const &"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetGreen(self)

    def GetBlue(self):
        r"""GetBlue(self) -> unsigned short const &"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetBlue(self)

    def GetLuminance(self):
        r"""GetLuminance(self) -> double"""
        return _itkRGBPixelPython.itkRGBPixelUS_GetLuminance(self)

    def __init__(self, *args):
        r"""
        __init__(self) -> itkRGBPixelUS
        __init__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: unsigned short const &

        __init__(self, r) -> itkRGBPixelUS

        Parameters
        ----------
        r: unsigned short const *

        __init__(self, arg0) -> itkRGBPixelUS

        Parameters
        ----------
        arg0: itkRGBPixelUS const &

        """
        _itkRGBPixelPython.itkRGBPixelUS_swiginit(self, _itkRGBPixelPython.new_itkRGBPixelUS(*args))
    __swig_destroy__ = _itkRGBPixelPython.delete_itkRGBPixelUS

    def __getitem__(self, dim):
        r"""
        __getitem__(self, dim) -> unsigned short

        Parameters
        ----------
        dim: unsigned long

        """
        return _itkRGBPixelPython.itkRGBPixelUS___getitem__(self, dim)

    def __setitem__(self, dim, v):
        r"""
        __setitem__(self, dim, v)

        Parameters
        ----------
        dim: unsigned long
        v: unsigned short

        """
        return _itkRGBPixelPython.itkRGBPixelUS___setitem__(self, dim, v)

    def __len__(self):
        r"""__len__(self) -> unsigned int"""
        return _itkRGBPixelPython.itkRGBPixelUS___len__(self)

    def __repr__(self):
        r"""__repr__(self) -> std::string"""
        return _itkRGBPixelPython.itkRGBPixelUS___repr__(self)

# Register itkRGBPixelUS in _itkRGBPixelPython:
_itkRGBPixelPython.itkRGBPixelUS_swigregister(itkRGBPixelUS)

