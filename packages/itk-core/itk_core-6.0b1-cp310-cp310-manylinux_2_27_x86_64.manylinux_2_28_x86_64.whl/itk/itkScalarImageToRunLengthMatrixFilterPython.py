# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkScalarImageToRunLengthMatrixFilterPython
else:
    import _itkScalarImageToRunLengthMatrixFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkHistogramPython
import itk.itkSamplePython

def itkScalarImageToRunLengthMatrixFilterID2_New():
    return itkScalarImageToRunLengthMatrixFilterID2.New()

class itkScalarImageToRunLengthMatrixFilterID2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterID2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterID2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageD2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterID2

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterID2 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID2_swigregister(itkScalarImageToRunLengthMatrixFilterID2)

def itkScalarImageToRunLengthMatrixFilterID3_New():
    return itkScalarImageToRunLengthMatrixFilterID3.New()

class itkScalarImageToRunLengthMatrixFilterID3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterID3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterID3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageD3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterID3

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterID3 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID3_swigregister(itkScalarImageToRunLengthMatrixFilterID3)

def itkScalarImageToRunLengthMatrixFilterID4_New():
    return itkScalarImageToRunLengthMatrixFilterID4.New()

class itkScalarImageToRunLengthMatrixFilterID4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterID4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterID4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageD4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterID4

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterID4 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterID4_swigregister(itkScalarImageToRunLengthMatrixFilterID4)

def itkScalarImageToRunLengthMatrixFilterIF2_New():
    return itkScalarImageToRunLengthMatrixFilterIF2.New()

class itkScalarImageToRunLengthMatrixFilterIF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIF2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIF2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageF2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIF2

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIF2 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF2_swigregister(itkScalarImageToRunLengthMatrixFilterIF2)

def itkScalarImageToRunLengthMatrixFilterIF3_New():
    return itkScalarImageToRunLengthMatrixFilterIF3.New()

class itkScalarImageToRunLengthMatrixFilterIF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIF3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIF3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageF3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIF3

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIF3 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF3_swigregister(itkScalarImageToRunLengthMatrixFilterIF3)

def itkScalarImageToRunLengthMatrixFilterIF4_New():
    return itkScalarImageToRunLengthMatrixFilterIF4.New()

class itkScalarImageToRunLengthMatrixFilterIF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIF4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIF4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: float
        max: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageF4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> float"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIF4

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIF4 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIF4_swigregister(itkScalarImageToRunLengthMatrixFilterIF4)

def itkScalarImageToRunLengthMatrixFilterISS2_New():
    return itkScalarImageToRunLengthMatrixFilterISS2.New()

class itkScalarImageToRunLengthMatrixFilterISS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterISS2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterISS2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageSS2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterISS2

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterISS2 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS2_swigregister(itkScalarImageToRunLengthMatrixFilterISS2)

def itkScalarImageToRunLengthMatrixFilterISS3_New():
    return itkScalarImageToRunLengthMatrixFilterISS3.New()

class itkScalarImageToRunLengthMatrixFilterISS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterISS3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterISS3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterISS3

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterISS3 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS3_swigregister(itkScalarImageToRunLengthMatrixFilterISS3)

def itkScalarImageToRunLengthMatrixFilterISS4_New():
    return itkScalarImageToRunLengthMatrixFilterISS4.New()

class itkScalarImageToRunLengthMatrixFilterISS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterISS4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterISS4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: short
        max: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageSS4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterISS4

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterISS4 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterISS4_swigregister(itkScalarImageToRunLengthMatrixFilterISS4)

def itkScalarImageToRunLengthMatrixFilterIUC2_New():
    return itkScalarImageToRunLengthMatrixFilterIUC2.New()

class itkScalarImageToRunLengthMatrixFilterIUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUC2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUC2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUC2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUC2

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUC2 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC2_swigregister(itkScalarImageToRunLengthMatrixFilterIUC2)

def itkScalarImageToRunLengthMatrixFilterIUC3_New():
    return itkScalarImageToRunLengthMatrixFilterIUC3.New()

class itkScalarImageToRunLengthMatrixFilterIUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUC3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUC3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUC3

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUC3 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC3_swigregister(itkScalarImageToRunLengthMatrixFilterIUC3)

def itkScalarImageToRunLengthMatrixFilterIUC4_New():
    return itkScalarImageToRunLengthMatrixFilterIUC4.New()

class itkScalarImageToRunLengthMatrixFilterIUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUC4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUC4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned char
        max: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUC4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned char"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUC4

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUC4 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUC4_swigregister(itkScalarImageToRunLengthMatrixFilterIUC4)

def itkScalarImageToRunLengthMatrixFilterIUS2_New():
    return itkScalarImageToRunLengthMatrixFilterIUS2.New()

class itkScalarImageToRunLengthMatrixFilterIUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUS2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUS2_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO2 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset2 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO2
        GetOffsets(self) -> itkVectorContainerUCO2
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUS2 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUS2

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUS2 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS2_swigregister(itkScalarImageToRunLengthMatrixFilterIUS2)

def itkScalarImageToRunLengthMatrixFilterIUS3_New():
    return itkScalarImageToRunLengthMatrixFilterIUS3.New()

class itkScalarImageToRunLengthMatrixFilterIUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUS3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUS3_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO3 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset3 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO3
        GetOffsets(self) -> itkVectorContainerUCO3
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUS3

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUS3 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS3_swigregister(itkScalarImageToRunLengthMatrixFilterIUS3)

def itkScalarImageToRunLengthMatrixFilterIUS4_New():
    return itkScalarImageToRunLengthMatrixFilterIUS4.New()

class itkScalarImageToRunLengthMatrixFilterIUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkScalarImageToRunLengthMatrixFilterIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkScalarImageToRunLengthMatrixFilterIUS4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkScalarImageToRunLengthMatrixFilterIUS4_Pointer"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_Clone(self)

    def SetOffsets(self, _arg):
        r"""
        SetOffsets(self, _arg)

        Parameters
        ----------
        _arg: itkVectorContainerUCO4 *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetOffsets(self, _arg)

    def SetOffset(self, offset):
        r"""
        SetOffset(self, offset)

        Parameters
        ----------
        offset: itkOffset4 const

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetOffset(self, offset)

    def GetModifiableOffsets(self):
        r"""GetModifiableOffsets(self) -> itkVectorContainerUCO4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetModifiableOffsets(self)

    def GetOffsets(self, *args):
        r"""
        GetOffsets(self) -> itkVectorContainerUCO4
        GetOffsets(self) -> itkVectorContainerUCO4
        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetOffsets(self, *args)

    def SetNumberOfBinsPerAxis(self, _arg):
        r"""
        SetNumberOfBinsPerAxis(self, _arg)

        Parameters
        ----------
        _arg: unsigned int

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetNumberOfBinsPerAxis(self, _arg)

    def GetNumberOfBinsPerAxis(self):
        r"""GetNumberOfBinsPerAxis(self) -> unsigned int"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetNumberOfBinsPerAxis(self)

    def SetPixelValueMinMax(self, min, max):
        r"""
        SetPixelValueMinMax(self, min, max)

        Parameters
        ----------
        min: unsigned short
        max: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetPixelValueMinMax(self, min, max)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetMin(self)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetMax(self)

    def SetDistanceValueMinMax(self, min, max):
        r"""
        SetDistanceValueMinMax(self, min, max)

        Parameters
        ----------
        min: double
        max: double

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetDistanceValueMinMax(self, min, max)

    def GetMinDistance(self):
        r"""GetMinDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetMinDistance(self)

    def GetMaxDistance(self):
        r"""GetMaxDistance(self) -> double"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetMaxDistance(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetInput(self, image)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetInput(self)

    def SetMaskImage(self, image):
        r"""
        SetMaskImage(self, image)

        Parameters
        ----------
        image: itkImageUS4 const *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetMaskImage(self, image)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetMaskImage(self)

    def GetOutput(self):
        r"""GetOutput(self) -> itkHistogramD"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetOutput(self)

    def SetInsidePixelValue(self, _arg):
        r"""
        SetInsidePixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_SetInsidePixelValue(self, _arg)

    def GetInsidePixelValue(self):
        r"""GetInsidePixelValue(self) -> unsigned short"""
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_GetInsidePixelValue(self)
    __swig_destroy__ = _itkScalarImageToRunLengthMatrixFilterPython.delete_itkScalarImageToRunLengthMatrixFilterIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkScalarImageToRunLengthMatrixFilterIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkScalarImageToRunLengthMatrixFilterIUS4

        Create a new object of the class itkScalarImageToRunLengthMatrixFilterIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkScalarImageToRunLengthMatrixFilterIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkScalarImageToRunLengthMatrixFilterIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkScalarImageToRunLengthMatrixFilterIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkScalarImageToRunLengthMatrixFilterIUS4 in _itkScalarImageToRunLengthMatrixFilterPython:
_itkScalarImageToRunLengthMatrixFilterPython.itkScalarImageToRunLengthMatrixFilterIUS4_swigregister(itkScalarImageToRunLengthMatrixFilterIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def scalar_image_to_run_length_matrix_filter(*args,  offsets=..., offset: Sequence[int]=..., number_of_bins_per_axis: int=..., pixel_value_min_max: float=..., distance_value_min_max: float=..., mask_image: itkt.Image=..., inside_pixel_value: float=...,**kwargs):
    """Functional interface for ScalarImageToRunLengthMatrixFilter"""
    import itk

    kwarg_typehints = { 'offsets':offsets,'offset':offset,'number_of_bins_per_axis':number_of_bins_per_axis,'pixel_value_min_max':pixel_value_min_max,'distance_value_min_max':distance_value_min_max,'mask_image':mask_image,'inside_pixel_value':inside_pixel_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ScalarImageToRunLengthMatrixFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def scalar_image_to_run_length_matrix_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKStatistics.ScalarImageToRunLengthMatrixFilter
    scalar_image_to_run_length_matrix_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    scalar_image_to_run_length_matrix_filter.__doc__ = filter_object.__doc__



