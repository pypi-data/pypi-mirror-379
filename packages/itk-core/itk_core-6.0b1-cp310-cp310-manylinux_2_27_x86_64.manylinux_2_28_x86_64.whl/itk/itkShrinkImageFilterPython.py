# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkShrinkImageFilterPython
else:
    import _itkShrinkImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterBPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkShrinkImageFilterICD2ICD2_New():
    return itkShrinkImageFilterICD2ICD2.New()

class itkShrinkImageFilterICD2ICD2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD2ICD2):
    r"""Proxy of C++ itkShrinkImageFilterICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICD2ICD2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICD2ICD2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICD2ICD2

        Create a new object of the class itkShrinkImageFilterICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICD2ICD2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICD2ICD2_swigregister(itkShrinkImageFilterICD2ICD2)

def itkShrinkImageFilterICD3ICD3_New():
    return itkShrinkImageFilterICD3ICD3.New()

class itkShrinkImageFilterICD3ICD3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD3ICD3):
    r"""Proxy of C++ itkShrinkImageFilterICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICD3ICD3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICD3ICD3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICD3ICD3

        Create a new object of the class itkShrinkImageFilterICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICD3ICD3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICD3ICD3_swigregister(itkShrinkImageFilterICD3ICD3)

def itkShrinkImageFilterICD4ICD4_New():
    return itkShrinkImageFilterICD4ICD4.New()

class itkShrinkImageFilterICD4ICD4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICD4ICD4):
    r"""Proxy of C++ itkShrinkImageFilterICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICD4ICD4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICD4ICD4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICD4ICD4

        Create a new object of the class itkShrinkImageFilterICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICD4ICD4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICD4ICD4_swigregister(itkShrinkImageFilterICD4ICD4)

def itkShrinkImageFilterICF2ICF2_New():
    return itkShrinkImageFilterICF2ICF2.New()

class itkShrinkImageFilterICF2ICF2(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF2ICF2):
    r"""Proxy of C++ itkShrinkImageFilterICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICF2ICF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICF2ICF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICF2ICF2

        Create a new object of the class itkShrinkImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICF2ICF2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICF2ICF2_swigregister(itkShrinkImageFilterICF2ICF2)

def itkShrinkImageFilterICF3ICF3_New():
    return itkShrinkImageFilterICF3ICF3.New()

class itkShrinkImageFilterICF3ICF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF3ICF3):
    r"""Proxy of C++ itkShrinkImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICF3ICF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICF3ICF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICF3ICF3

        Create a new object of the class itkShrinkImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICF3ICF3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICF3ICF3_swigregister(itkShrinkImageFilterICF3ICF3)

def itkShrinkImageFilterICF4ICF4_New():
    return itkShrinkImageFilterICF4ICF4.New()

class itkShrinkImageFilterICF4ICF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterICF4ICF4):
    r"""Proxy of C++ itkShrinkImageFilterICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICF4ICF4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICF4ICF4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICF4ICF4

        Create a new object of the class itkShrinkImageFilterICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICF4ICF4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICF4ICF4_swigregister(itkShrinkImageFilterICF4ICF4)

def itkShrinkImageFilterICVF22ICVF22_New():
    return itkShrinkImageFilterICVF22ICVF22.New()

class itkShrinkImageFilterICVF22ICVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkShrinkImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF22ICVF22_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF22ICVF22_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF22ICVF22

        Create a new object of the class itkShrinkImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF22ICVF22 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF22ICVF22_swigregister(itkShrinkImageFilterICVF22ICVF22)

def itkShrinkImageFilterICVF23ICVF23_New():
    return itkShrinkImageFilterICVF23ICVF23.New()

class itkShrinkImageFilterICVF23ICVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkShrinkImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF23ICVF23_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF23ICVF23_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF23ICVF23

        Create a new object of the class itkShrinkImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF23ICVF23 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF23ICVF23_swigregister(itkShrinkImageFilterICVF23ICVF23)

def itkShrinkImageFilterICVF24ICVF24_New():
    return itkShrinkImageFilterICVF24ICVF24.New()

class itkShrinkImageFilterICVF24ICVF24(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkShrinkImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF24ICVF24_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF24ICVF24_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF24ICVF24

        Create a new object of the class itkShrinkImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF24ICVF24 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF24ICVF24_swigregister(itkShrinkImageFilterICVF24ICVF24)

def itkShrinkImageFilterICVF32ICVF32_New():
    return itkShrinkImageFilterICVF32ICVF32.New()

class itkShrinkImageFilterICVF32ICVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkShrinkImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF32ICVF32_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF32ICVF32_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF32ICVF32

        Create a new object of the class itkShrinkImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF32ICVF32 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF32ICVF32_swigregister(itkShrinkImageFilterICVF32ICVF32)

def itkShrinkImageFilterICVF33ICVF33_New():
    return itkShrinkImageFilterICVF33ICVF33.New()

class itkShrinkImageFilterICVF33ICVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkShrinkImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF33ICVF33_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF33ICVF33_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF33ICVF33

        Create a new object of the class itkShrinkImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF33ICVF33 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF33ICVF33_swigregister(itkShrinkImageFilterICVF33ICVF33)

def itkShrinkImageFilterICVF34ICVF34_New():
    return itkShrinkImageFilterICVF34ICVF34.New()

class itkShrinkImageFilterICVF34ICVF34(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkShrinkImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF34ICVF34_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF34ICVF34_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF34ICVF34

        Create a new object of the class itkShrinkImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF34ICVF34 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF34ICVF34_swigregister(itkShrinkImageFilterICVF34ICVF34)

def itkShrinkImageFilterICVF42ICVF42_New():
    return itkShrinkImageFilterICVF42ICVF42.New()

class itkShrinkImageFilterICVF42ICVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkShrinkImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF42ICVF42_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF42ICVF42_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF42ICVF42

        Create a new object of the class itkShrinkImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF42ICVF42 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF42ICVF42_swigregister(itkShrinkImageFilterICVF42ICVF42)

def itkShrinkImageFilterICVF43ICVF43_New():
    return itkShrinkImageFilterICVF43ICVF43.New()

class itkShrinkImageFilterICVF43ICVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkShrinkImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF43ICVF43_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF43ICVF43_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF43ICVF43

        Create a new object of the class itkShrinkImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF43ICVF43 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF43ICVF43_swigregister(itkShrinkImageFilterICVF43ICVF43)

def itkShrinkImageFilterICVF44ICVF44_New():
    return itkShrinkImageFilterICVF44ICVF44.New()

class itkShrinkImageFilterICVF44ICVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkShrinkImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterICVF44ICVF44_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterICVF44ICVF44_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterICVF44ICVF44

        Create a new object of the class itkShrinkImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterICVF44ICVF44 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterICVF44ICVF44_swigregister(itkShrinkImageFilterICVF44ICVF44)

def itkShrinkImageFilterID2ID2_New():
    return itkShrinkImageFilterID2ID2.New()

class itkShrinkImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkShrinkImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterID2ID2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterID2ID2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID2ID2

        Create a new object of the class itkShrinkImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterID2ID2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterID2ID2_swigregister(itkShrinkImageFilterID2ID2)

def itkShrinkImageFilterID3ID3_New():
    return itkShrinkImageFilterID3ID3.New()

class itkShrinkImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkShrinkImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterID3ID3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterID3ID3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID3ID3

        Create a new object of the class itkShrinkImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterID3ID3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterID3ID3_swigregister(itkShrinkImageFilterID3ID3)

def itkShrinkImageFilterID4ID4_New():
    return itkShrinkImageFilterID4ID4.New()

class itkShrinkImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkShrinkImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterID4ID4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterID4ID4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterID4ID4

        Create a new object of the class itkShrinkImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterID4ID4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterID4ID4_swigregister(itkShrinkImageFilterID4ID4)

def itkShrinkImageFilterIF2IF2_New():
    return itkShrinkImageFilterIF2IF2.New()

class itkShrinkImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkShrinkImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIF2IF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIF2IF2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF2IF2

        Create a new object of the class itkShrinkImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIF2IF2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIF2IF2_swigregister(itkShrinkImageFilterIF2IF2)

def itkShrinkImageFilterIF3IF3_New():
    return itkShrinkImageFilterIF3IF3.New()

class itkShrinkImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkShrinkImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIF3IF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIF3IF3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF3IF3

        Create a new object of the class itkShrinkImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIF3IF3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIF3IF3_swigregister(itkShrinkImageFilterIF3IF3)

def itkShrinkImageFilterIF4IF4_New():
    return itkShrinkImageFilterIF4IF4.New()

class itkShrinkImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkShrinkImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIF4IF4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIF4IF4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIF4IF4

        Create a new object of the class itkShrinkImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIF4IF4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIF4IF4_swigregister(itkShrinkImageFilterIF4IF4)

def itkShrinkImageFilterIRGBAUC2IRGBAUC2_New():
    return itkShrinkImageFilterIRGBAUC2IRGBAUC2.New()

class itkShrinkImageFilterIRGBAUC2IRGBAUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkShrinkImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkShrinkImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBAUC2IRGBAUC2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC2IRGBAUC2_swigregister(itkShrinkImageFilterIRGBAUC2IRGBAUC2)

def itkShrinkImageFilterIRGBAUC3IRGBAUC3_New():
    return itkShrinkImageFilterIRGBAUC3IRGBAUC3.New()

class itkShrinkImageFilterIRGBAUC3IRGBAUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkShrinkImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkShrinkImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBAUC3IRGBAUC3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC3IRGBAUC3_swigregister(itkShrinkImageFilterIRGBAUC3IRGBAUC3)

def itkShrinkImageFilterIRGBAUC4IRGBAUC4_New():
    return itkShrinkImageFilterIRGBAUC4IRGBAUC4.New()

class itkShrinkImageFilterIRGBAUC4IRGBAUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkShrinkImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBAUC4IRGBAUC4

        Create a new object of the class itkShrinkImageFilterIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBAUC4IRGBAUC4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBAUC4IRGBAUC4_swigregister(itkShrinkImageFilterIRGBAUC4IRGBAUC4)

def itkShrinkImageFilterIRGBUC2IRGBUC2_New():
    return itkShrinkImageFilterIRGBUC2IRGBUC2.New()

class itkShrinkImageFilterIRGBUC2IRGBUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkShrinkImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkShrinkImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBUC2IRGBUC2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC2IRGBUC2_swigregister(itkShrinkImageFilterIRGBUC2IRGBUC2)

def itkShrinkImageFilterIRGBUC3IRGBUC3_New():
    return itkShrinkImageFilterIRGBUC3IRGBUC3.New()

class itkShrinkImageFilterIRGBUC3IRGBUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkShrinkImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkShrinkImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBUC3IRGBUC3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC3IRGBUC3_swigregister(itkShrinkImageFilterIRGBUC3IRGBUC3)

def itkShrinkImageFilterIRGBUC4IRGBUC4_New():
    return itkShrinkImageFilterIRGBUC4IRGBUC4.New()

class itkShrinkImageFilterIRGBUC4IRGBUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkShrinkImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIRGBUC4IRGBUC4

        Create a new object of the class itkShrinkImageFilterIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIRGBUC4IRGBUC4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIRGBUC4IRGBUC4_swigregister(itkShrinkImageFilterIRGBUC4IRGBUC4)

def itkShrinkImageFilterISS2ISS2_New():
    return itkShrinkImageFilterISS2ISS2.New()

class itkShrinkImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkShrinkImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterISS2ISS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterISS2ISS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS2ISS2

        Create a new object of the class itkShrinkImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterISS2ISS2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterISS2ISS2_swigregister(itkShrinkImageFilterISS2ISS2)

def itkShrinkImageFilterISS3ISS3_New():
    return itkShrinkImageFilterISS3ISS3.New()

class itkShrinkImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkShrinkImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterISS3ISS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterISS3ISS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS3ISS3

        Create a new object of the class itkShrinkImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterISS3ISS3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterISS3ISS3_swigregister(itkShrinkImageFilterISS3ISS3)

def itkShrinkImageFilterISS4ISS4_New():
    return itkShrinkImageFilterISS4ISS4.New()

class itkShrinkImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkShrinkImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterISS4ISS4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterISS4ISS4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterISS4ISS4

        Create a new object of the class itkShrinkImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterISS4ISS4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterISS4ISS4_swigregister(itkShrinkImageFilterISS4ISS4)

def itkShrinkImageFilterIUC2IUC2_New():
    return itkShrinkImageFilterIUC2IUC2.New()

class itkShrinkImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkShrinkImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUC2IUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUC2IUC2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC2IUC2

        Create a new object of the class itkShrinkImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUC2IUC2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUC2IUC2_swigregister(itkShrinkImageFilterIUC2IUC2)

def itkShrinkImageFilterIUC3IUC3_New():
    return itkShrinkImageFilterIUC3IUC3.New()

class itkShrinkImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkShrinkImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUC3IUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUC3IUC3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC3IUC3

        Create a new object of the class itkShrinkImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUC3IUC3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUC3IUC3_swigregister(itkShrinkImageFilterIUC3IUC3)

def itkShrinkImageFilterIUC4IUC4_New():
    return itkShrinkImageFilterIUC4IUC4.New()

class itkShrinkImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkShrinkImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUC4IUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUC4IUC4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUC4IUC4

        Create a new object of the class itkShrinkImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUC4IUC4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUC4IUC4_swigregister(itkShrinkImageFilterIUC4IUC4)

def itkShrinkImageFilterIUS2IUS2_New():
    return itkShrinkImageFilterIUS2IUS2.New()

class itkShrinkImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkShrinkImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUS2IUS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUS2IUS2_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS2IUS2

        Create a new object of the class itkShrinkImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUS2IUS2 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUS2IUS2_swigregister(itkShrinkImageFilterIUS2IUS2)

def itkShrinkImageFilterIUS3IUS3_New():
    return itkShrinkImageFilterIUS3IUS3.New()

class itkShrinkImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkShrinkImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUS3IUS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUS3IUS3_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS3IUS3

        Create a new object of the class itkShrinkImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUS3IUS3 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUS3IUS3_swigregister(itkShrinkImageFilterIUS3IUS3)

def itkShrinkImageFilterIUS4IUS4_New():
    return itkShrinkImageFilterIUS4IUS4.New()

class itkShrinkImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkShrinkImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIUS4IUS4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIUS4IUS4_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIUS4IUS4

        Create a new object of the class itkShrinkImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIUS4IUS4 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIUS4IUS4_swigregister(itkShrinkImageFilterIUS4IUS4)

def itkShrinkImageFilterIVF22IVF22_New():
    return itkShrinkImageFilterIVF22IVF22.New()

class itkShrinkImageFilterIVF22IVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkShrinkImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF22IVF22_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF22IVF22_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF22IVF22

        Create a new object of the class itkShrinkImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF22IVF22 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF22IVF22_swigregister(itkShrinkImageFilterIVF22IVF22)

def itkShrinkImageFilterIVF23IVF23_New():
    return itkShrinkImageFilterIVF23IVF23.New()

class itkShrinkImageFilterIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ itkShrinkImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF23IVF23_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF23IVF23_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF23IVF23

        Create a new object of the class itkShrinkImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF23IVF23 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF23IVF23_swigregister(itkShrinkImageFilterIVF23IVF23)

def itkShrinkImageFilterIVF24IVF24_New():
    return itkShrinkImageFilterIVF24IVF24.New()

class itkShrinkImageFilterIVF24IVF24(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24):
    r"""Proxy of C++ itkShrinkImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF24IVF24_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF24IVF24_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF24IVF24

        Create a new object of the class itkShrinkImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF24IVF24 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF24IVF24_swigregister(itkShrinkImageFilterIVF24IVF24)

def itkShrinkImageFilterIVF32IVF32_New():
    return itkShrinkImageFilterIVF32IVF32.New()

class itkShrinkImageFilterIVF32IVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""Proxy of C++ itkShrinkImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF32IVF32_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF32IVF32_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF32IVF32

        Create a new object of the class itkShrinkImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF32IVF32 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF32IVF32_swigregister(itkShrinkImageFilterIVF32IVF32)

def itkShrinkImageFilterIVF33IVF33_New():
    return itkShrinkImageFilterIVF33IVF33.New()

class itkShrinkImageFilterIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkShrinkImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF33IVF33_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF33IVF33_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF33IVF33

        Create a new object of the class itkShrinkImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF33IVF33 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF33IVF33_swigregister(itkShrinkImageFilterIVF33IVF33)

def itkShrinkImageFilterIVF34IVF34_New():
    return itkShrinkImageFilterIVF34IVF34.New()

class itkShrinkImageFilterIVF34IVF34(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34):
    r"""Proxy of C++ itkShrinkImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF34IVF34_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF34IVF34_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF34IVF34

        Create a new object of the class itkShrinkImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF34IVF34 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF34IVF34_swigregister(itkShrinkImageFilterIVF34IVF34)

def itkShrinkImageFilterIVF42IVF42_New():
    return itkShrinkImageFilterIVF42IVF42.New()

class itkShrinkImageFilterIVF42IVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""Proxy of C++ itkShrinkImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF42IVF42_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF42IVF42_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI2"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF42IVF42

        Create a new object of the class itkShrinkImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF42IVF42 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF42IVF42_swigregister(itkShrinkImageFilterIVF42IVF42)

def itkShrinkImageFilterIVF43IVF43_New():
    return itkShrinkImageFilterIVF43IVF43.New()

class itkShrinkImageFilterIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ itkShrinkImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF43IVF43_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF43IVF43_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI3"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF43IVF43

        Create a new object of the class itkShrinkImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF43IVF43 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF43IVF43_swigregister(itkShrinkImageFilterIVF43IVF43)

def itkShrinkImageFilterIVF44IVF44_New():
    return itkShrinkImageFilterIVF44IVF44.New()

class itkShrinkImageFilterIVF44IVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44):
    r"""Proxy of C++ itkShrinkImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkShrinkImageFilterIVF44IVF44_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkShrinkImageFilterIVF44IVF44_Pointer"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_Clone(self)

    def SetShrinkFactors(self, *args):
        r"""
        SetShrinkFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetShrinkFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_SetShrinkFactors(self, *args)

    def SetShrinkFactor(self, i, factor):
        r"""
        SetShrinkFactor(self, i, factor)

        Parameters
        ----------
        i: unsigned int
        factor: unsigned int

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_SetShrinkFactor(self, i, factor)

    def GetShrinkFactors(self):
        r"""GetShrinkFactors(self) -> itkFixedArrayUI4"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_GetShrinkFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_GenerateInputRequestedRegion(self)
    InputConvertibleToOutputCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_SameDimensionCheck
    
    __swig_destroy__ = _itkShrinkImageFilterPython.delete_itkShrinkImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkShrinkImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkShrinkImageFilterIVF44IVF44

        Create a new object of the class itkShrinkImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkShrinkImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkShrinkImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkShrinkImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkShrinkImageFilterIVF44IVF44 in _itkShrinkImageFilterPython:
_itkShrinkImageFilterPython.itkShrinkImageFilterIVF44IVF44_swigregister(itkShrinkImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def shrink_image_filter(*args: itkt.ImageLike,  shrink_factors: Union[int, Sequence[int]]=..., shrink_factor: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ShrinkImageFilter"""
    import itk

    kwarg_typehints = { 'shrink_factors':shrink_factors,'shrink_factor':shrink_factor }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ShrinkImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def shrink_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.ShrinkImageFilter
    shrink_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    shrink_image_filter.__doc__ = filter_object.__doc__



