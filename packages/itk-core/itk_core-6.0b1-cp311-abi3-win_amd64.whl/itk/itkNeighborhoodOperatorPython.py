# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkNeighborhoodOperatorPython
else:
    import _itkNeighborhoodOperatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkNeighborhoodPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
class itkNeighborhoodOperatorD2(itk.itkNeighborhoodPython.itkNeighborhoodD2):
    r"""Proxy of C++ itkNeighborhoodOperatorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize2 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorD2

# Register itkNeighborhoodOperatorD2 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2_swigregister(itkNeighborhoodOperatorD2)
class itkNeighborhoodOperatorD3(itk.itkNeighborhoodPython.itkNeighborhoodD3):
    r"""Proxy of C++ itkNeighborhoodOperatorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize3 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorD3

# Register itkNeighborhoodOperatorD3 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3_swigregister(itkNeighborhoodOperatorD3)
class itkNeighborhoodOperatorD4(itk.itkNeighborhoodPython.itkNeighborhoodD4):
    r"""Proxy of C++ itkNeighborhoodOperatorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize4 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorD4

# Register itkNeighborhoodOperatorD4 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4_swigregister(itkNeighborhoodOperatorD4)
class itkNeighborhoodOperatorF2(itk.itkNeighborhoodPython.itkNeighborhoodF2):
    r"""Proxy of C++ itkNeighborhoodOperatorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize2 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorF2

# Register itkNeighborhoodOperatorF2 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2_swigregister(itkNeighborhoodOperatorF2)
class itkNeighborhoodOperatorF3(itk.itkNeighborhoodPython.itkNeighborhoodF3):
    r"""Proxy of C++ itkNeighborhoodOperatorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize3 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorF3

# Register itkNeighborhoodOperatorF3 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3_swigregister(itkNeighborhoodOperatorF3)
class itkNeighborhoodOperatorF4(itk.itkNeighborhoodPython.itkNeighborhoodF4):
    r"""Proxy of C++ itkNeighborhoodOperatorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def SetDirection(self, direction):
        r"""
        SetDirection(self, direction)

        Parameters
        ----------
        direction: unsigned int const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_SetDirection(self, direction)

    def GetDirection(self):
        r"""GetDirection(self) -> unsigned int"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_GetDirection(self)

    def CreateDirectional(self):
        r"""CreateDirectional(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_CreateDirectional(self)

    def CreateToRadius(self, *args):
        r"""
        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: itkSize4 const &

        CreateToRadius(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long const

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_CreateToRadius(self, *args)

    def FlipAxes(self):
        r"""FlipAxes(self)"""
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_FlipAxes(self)

    def PrintSelf(self, os, indent):
        r"""
        PrintSelf(self, os, indent)

        Parameters
        ----------
        os: std::basic_ostream< char,std::char_traits< char > > &
        indent: itkIndent

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_PrintSelf(self, os, indent)

    def ScaleCoefficients(self, arg0):
        r"""
        ScaleCoefficients(self, arg0)

        Parameters
        ----------
        arg0: double

        """
        return _itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_ScaleCoefficients(self, arg0)
    __swig_destroy__ = _itkNeighborhoodOperatorPython.delete_itkNeighborhoodOperatorF4

# Register itkNeighborhoodOperatorF4 in _itkNeighborhoodOperatorPython:
_itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4_swigregister(itkNeighborhoodOperatorF4)

