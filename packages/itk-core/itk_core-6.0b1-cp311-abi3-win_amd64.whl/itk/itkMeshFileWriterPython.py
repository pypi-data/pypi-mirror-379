# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIOMeshBasePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshFileWriterPython
else:
    import _itkMeshFileWriterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkMeshBasePython
import itk.itkPointSetPython
import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkFixedArrayPython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMapContainerPython
import itk.itkBoundingBoxPython
import itk.itkMeshIOBasePython

def itkMeshFileWriterMD2_New():
    return itkMeshFileWriterMD2.New()

class itkMeshFileWriterMD2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMD2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMD2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD2 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD2
        GetInput(self, idx) -> itkMeshD2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMD2

        Create a new object of the class itkMeshFileWriterMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMD2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMD2_swigregister(itkMeshFileWriterMD2)

def itkMeshFileWriterMD3_New():
    return itkMeshFileWriterMD3.New()

class itkMeshFileWriterMD3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMD3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMD3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD3 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD3
        GetInput(self, idx) -> itkMeshD3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMD3

        Create a new object of the class itkMeshFileWriterMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMD3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMD3_swigregister(itkMeshFileWriterMD3)

def itkMeshFileWriterMD4_New():
    return itkMeshFileWriterMD4.New()

class itkMeshFileWriterMD4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMD4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMD4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshD4 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshD4
        GetInput(self, idx) -> itkMeshD4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMD4

        Create a new object of the class itkMeshFileWriterMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMD4 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMD4_swigregister(itkMeshFileWriterMD4)

def itkMeshFileWriterMF2_New():
    return itkMeshFileWriterMF2.New()

class itkMeshFileWriterMF2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMF2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMF2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF2 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF2
        GetInput(self, idx) -> itkMeshF2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMF2

        Create a new object of the class itkMeshFileWriterMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMF2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMF2_swigregister(itkMeshFileWriterMF2)

def itkMeshFileWriterMF3_New():
    return itkMeshFileWriterMF3.New()

class itkMeshFileWriterMF3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMF3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMF3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF3 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF3
        GetInput(self, idx) -> itkMeshF3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMF3

        Create a new object of the class itkMeshFileWriterMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMF3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMF3_swigregister(itkMeshFileWriterMF3)

def itkMeshFileWriterMF4_New():
    return itkMeshFileWriterMF4.New()

class itkMeshFileWriterMF4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMF4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMF4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshF4 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshF4
        GetInput(self, idx) -> itkMeshF4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMF4

        Create a new object of the class itkMeshFileWriterMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMF4 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMF4_swigregister(itkMeshFileWriterMF4)

def itkMeshFileWriterMSS2_New():
    return itkMeshFileWriterMSS2.New()

class itkMeshFileWriterMSS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMSS2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMSS2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS2 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS2
        GetInput(self, idx) -> itkMeshSS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMSS2

        Create a new object of the class itkMeshFileWriterMSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMSS2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMSS2_swigregister(itkMeshFileWriterMSS2)

def itkMeshFileWriterMSS3_New():
    return itkMeshFileWriterMSS3.New()

class itkMeshFileWriterMSS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMSS3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMSS3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS3 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS3
        GetInput(self, idx) -> itkMeshSS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMSS3

        Create a new object of the class itkMeshFileWriterMSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMSS3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMSS3_swigregister(itkMeshFileWriterMSS3)

def itkMeshFileWriterMSS4_New():
    return itkMeshFileWriterMSS4.New()

class itkMeshFileWriterMSS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMSS4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMSS4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshSS4 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshSS4
        GetInput(self, idx) -> itkMeshSS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMSS4

        Create a new object of the class itkMeshFileWriterMSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMSS4 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMSS4_swigregister(itkMeshFileWriterMSS4)

def itkMeshFileWriterMUC2_New():
    return itkMeshFileWriterMUC2.New()

class itkMeshFileWriterMUC2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUC2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUC2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC2 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC2
        GetInput(self, idx) -> itkMeshUC2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUC2

        Create a new object of the class itkMeshFileWriterMUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUC2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUC2_swigregister(itkMeshFileWriterMUC2)

def itkMeshFileWriterMUC3_New():
    return itkMeshFileWriterMUC3.New()

class itkMeshFileWriterMUC3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUC3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUC3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC3 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC3
        GetInput(self, idx) -> itkMeshUC3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUC3

        Create a new object of the class itkMeshFileWriterMUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUC3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUC3_swigregister(itkMeshFileWriterMUC3)

def itkMeshFileWriterMUC4_New():
    return itkMeshFileWriterMUC4.New()

class itkMeshFileWriterMUC4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUC4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUC4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUC4 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUC4
        GetInput(self, idx) -> itkMeshUC4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUC4

        Create a new object of the class itkMeshFileWriterMUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUC4 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUC4_swigregister(itkMeshFileWriterMUC4)

def itkMeshFileWriterMUS2_New():
    return itkMeshFileWriterMUS2.New()

class itkMeshFileWriterMUS2(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUS2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUS2_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS2 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS2
        GetInput(self, idx) -> itkMeshUS2

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUS2

        Create a new object of the class itkMeshFileWriterMUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUS2 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUS2_swigregister(itkMeshFileWriterMUS2)

def itkMeshFileWriterMUS3_New():
    return itkMeshFileWriterMUS3.New()

class itkMeshFileWriterMUS3(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUS3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUS3_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS3 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS3
        GetInput(self, idx) -> itkMeshUS3

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUS3

        Create a new object of the class itkMeshFileWriterMUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUS3 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUS3_swigregister(itkMeshFileWriterMUS3)

def itkMeshFileWriterMUS4_New():
    return itkMeshFileWriterMUS4.New()

class itkMeshFileWriterMUS4(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkMeshFileWriterMUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileWriterMUS4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileWriterMUS4_Pointer"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_Clone(self)

    def SetInput(self, input):
        r"""
        SetInput(self, input)

        Parameters
        ----------
        input: itkMeshUS4 const *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetInput(self, input)

    def GetInput(self, *args):
        r"""
        GetInput(self) -> itkMeshUS4
        GetInput(self, idx) -> itkMeshUS4

        Parameters
        ----------
        idx: unsigned int

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_GetInput(self, *args)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_GetFileName(self)

    def SetMeshIO(self, io):
        r"""
        SetMeshIO(self, io)

        Parameters
        ----------
        io: itkMeshIOBase *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetMeshIO(self, io)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_GetMeshIO(self, *args)

    def SetFileTypeAsASCII(self):
        r"""SetFileTypeAsASCII(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetFileTypeAsASCII(self)

    def SetFileTypeAsBINARY(self):
        r"""SetFileTypeAsBINARY(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetFileTypeAsBINARY(self)

    def Write(self):
        r"""Write(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_Write(self)

    def SetUseCompression(self, _arg):
        r"""
        SetUseCompression(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_SetUseCompression(self, _arg)

    def GetUseCompression(self):
        r"""GetUseCompression(self) -> bool const &"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_GetUseCompression(self)

    def UseCompressionOn(self):
        r"""UseCompressionOn(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_UseCompressionOn(self)

    def UseCompressionOff(self):
        r"""UseCompressionOff(self)"""
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_UseCompressionOff(self)
    __swig_destroy__ = _itkMeshFileWriterPython.delete_itkMeshFileWriterMUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileWriterMUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileWriterPython.itkMeshFileWriterMUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileWriterMUS4

        Create a new object of the class itkMeshFileWriterMUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileWriterMUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileWriterMUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileWriterMUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileWriterMUS4 in _itkMeshFileWriterPython:
_itkMeshFileWriterPython.itkMeshFileWriterMUS4_swigregister(itkMeshFileWriterMUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mesh_file_writer(*args,  file_name: str=..., mesh_io=..., use_compression: bool=...,**kwargs):
    """Functional interface for MeshFileWriter"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'mesh_io':mesh_io,'use_compression':use_compression }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshFileWriter.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_file_writer_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKIOMeshBase.MeshFileWriter
    mesh_file_writer.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_file_writer.__doc__ = filter_object.__doc__



