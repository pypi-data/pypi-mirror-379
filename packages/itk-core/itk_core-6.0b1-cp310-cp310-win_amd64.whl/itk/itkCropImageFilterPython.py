# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkCropImageFilterPython
else:
    import _itkCropImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkExtractImageFilterPython
import itk.itkInPlaceImageFilterBPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.itkImageToImageFilterBPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkInPlaceImageFilterAPython
import itk.itkImageToImageFilterAPython

def itkCropImageFilterICD2ICD2_New():
    return itkCropImageFilterICD2ICD2.New()

class itkCropImageFilterICD2ICD2(itk.itkExtractImageFilterPython.itkExtractImageFilterICD2ICD2):
    r"""Proxy of C++ itkCropImageFilterICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICD2ICD2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICD2ICD2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICD2ICD2

        Create a new object of the class itkCropImageFilterICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICD2ICD2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICD2ICD2_swigregister(itkCropImageFilterICD2ICD2)

def itkCropImageFilterICD3ICD3_New():
    return itkCropImageFilterICD3ICD3.New()

class itkCropImageFilterICD3ICD3(itk.itkExtractImageFilterPython.itkExtractImageFilterICD3ICD3):
    r"""Proxy of C++ itkCropImageFilterICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICD3ICD3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICD3ICD3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICD3ICD3

        Create a new object of the class itkCropImageFilterICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICD3ICD3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICD3ICD3_swigregister(itkCropImageFilterICD3ICD3)

def itkCropImageFilterICD4ICD4_New():
    return itkCropImageFilterICD4ICD4.New()

class itkCropImageFilterICD4ICD4(itk.itkExtractImageFilterPython.itkExtractImageFilterICD4ICD4):
    r"""Proxy of C++ itkCropImageFilterICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICD4ICD4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICD4ICD4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICD4ICD4

        Create a new object of the class itkCropImageFilterICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICD4ICD4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICD4ICD4_swigregister(itkCropImageFilterICD4ICD4)

def itkCropImageFilterICF2ICF2_New():
    return itkCropImageFilterICF2ICF2.New()

class itkCropImageFilterICF2ICF2(itk.itkExtractImageFilterPython.itkExtractImageFilterICF2ICF2):
    r"""Proxy of C++ itkCropImageFilterICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICF2ICF2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICF2ICF2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICF2ICF2

        Create a new object of the class itkCropImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICF2ICF2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICF2ICF2_swigregister(itkCropImageFilterICF2ICF2)

def itkCropImageFilterICF3ICF3_New():
    return itkCropImageFilterICF3ICF3.New()

class itkCropImageFilterICF3ICF3(itk.itkExtractImageFilterPython.itkExtractImageFilterICF3ICF3):
    r"""Proxy of C++ itkCropImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICF3ICF3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICF3ICF3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICF3ICF3

        Create a new object of the class itkCropImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICF3ICF3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICF3ICF3_swigregister(itkCropImageFilterICF3ICF3)

def itkCropImageFilterICF4ICF4_New():
    return itkCropImageFilterICF4ICF4.New()

class itkCropImageFilterICF4ICF4(itk.itkExtractImageFilterPython.itkExtractImageFilterICF4ICF4):
    r"""Proxy of C++ itkCropImageFilterICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICF4ICF4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICF4ICF4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICF4ICF4

        Create a new object of the class itkCropImageFilterICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICF4ICF4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICF4ICF4_swigregister(itkCropImageFilterICF4ICF4)

def itkCropImageFilterICVF22ICVF22_New():
    return itkCropImageFilterICVF22ICVF22.New()

class itkCropImageFilterICVF22ICVF22(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkCropImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF22ICVF22_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF22ICVF22_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF22ICVF22

        Create a new object of the class itkCropImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF22ICVF22 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF22ICVF22_swigregister(itkCropImageFilterICVF22ICVF22)

def itkCropImageFilterICVF23ICVF23_New():
    return itkCropImageFilterICVF23ICVF23.New()

class itkCropImageFilterICVF23ICVF23(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkCropImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF23ICVF23_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF23ICVF23_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF23ICVF23

        Create a new object of the class itkCropImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF23ICVF23 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF23ICVF23_swigregister(itkCropImageFilterICVF23ICVF23)

def itkCropImageFilterICVF24ICVF24_New():
    return itkCropImageFilterICVF24ICVF24.New()

class itkCropImageFilterICVF24ICVF24(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkCropImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF24ICVF24_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF24ICVF24_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF24ICVF24

        Create a new object of the class itkCropImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF24ICVF24 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF24ICVF24_swigregister(itkCropImageFilterICVF24ICVF24)

def itkCropImageFilterICVF32ICVF32_New():
    return itkCropImageFilterICVF32ICVF32.New()

class itkCropImageFilterICVF32ICVF32(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkCropImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF32ICVF32_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF32ICVF32_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF32ICVF32

        Create a new object of the class itkCropImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF32ICVF32 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF32ICVF32_swigregister(itkCropImageFilterICVF32ICVF32)

def itkCropImageFilterICVF33ICVF33_New():
    return itkCropImageFilterICVF33ICVF33.New()

class itkCropImageFilterICVF33ICVF33(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkCropImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF33ICVF33_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF33ICVF33_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF33ICVF33

        Create a new object of the class itkCropImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF33ICVF33 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF33ICVF33_swigregister(itkCropImageFilterICVF33ICVF33)

def itkCropImageFilterICVF34ICVF34_New():
    return itkCropImageFilterICVF34ICVF34.New()

class itkCropImageFilterICVF34ICVF34(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkCropImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF34ICVF34_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF34ICVF34_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF34ICVF34

        Create a new object of the class itkCropImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF34ICVF34 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF34ICVF34_swigregister(itkCropImageFilterICVF34ICVF34)

def itkCropImageFilterICVF42ICVF42_New():
    return itkCropImageFilterICVF42ICVF42.New()

class itkCropImageFilterICVF42ICVF42(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkCropImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF42ICVF42_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF42ICVF42_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF42ICVF42

        Create a new object of the class itkCropImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF42ICVF42 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF42ICVF42_swigregister(itkCropImageFilterICVF42ICVF42)

def itkCropImageFilterICVF43ICVF43_New():
    return itkCropImageFilterICVF43ICVF43.New()

class itkCropImageFilterICVF43ICVF43(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkCropImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF43ICVF43_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF43ICVF43_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF43ICVF43

        Create a new object of the class itkCropImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF43ICVF43 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF43ICVF43_swigregister(itkCropImageFilterICVF43ICVF43)

def itkCropImageFilterICVF44ICVF44_New():
    return itkCropImageFilterICVF44ICVF44.New()

class itkCropImageFilterICVF44ICVF44(itk.itkExtractImageFilterPython.itkExtractImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkCropImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterICVF44ICVF44_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterICVF44ICVF44_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterICVF44ICVF44

        Create a new object of the class itkCropImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterICVF44ICVF44 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterICVF44ICVF44_swigregister(itkCropImageFilterICVF44ICVF44)

def itkCropImageFilterID2ID2_New():
    return itkCropImageFilterID2ID2.New()

class itkCropImageFilterID2ID2(itk.itkExtractImageFilterPython.itkExtractImageFilterID2ID2):
    r"""Proxy of C++ itkCropImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterID2ID2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterID2ID2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterID2ID2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterID2ID2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterID2ID2

        Create a new object of the class itkCropImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterID2ID2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterID2ID2_swigregister(itkCropImageFilterID2ID2)

def itkCropImageFilterID3ID3_New():
    return itkCropImageFilterID3ID3.New()

class itkCropImageFilterID3ID3(itk.itkExtractImageFilterPython.itkExtractImageFilterID3ID3):
    r"""Proxy of C++ itkCropImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterID3ID3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterID3ID3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterID3ID3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterID3ID3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterID3ID3

        Create a new object of the class itkCropImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterID3ID3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterID3ID3_swigregister(itkCropImageFilterID3ID3)

def itkCropImageFilterID4ID4_New():
    return itkCropImageFilterID4ID4.New()

class itkCropImageFilterID4ID4(itk.itkExtractImageFilterPython.itkExtractImageFilterID4ID4):
    r"""Proxy of C++ itkCropImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterID4ID4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterID4ID4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterID4ID4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterID4ID4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterID4ID4

        Create a new object of the class itkCropImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterID4ID4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterID4ID4_swigregister(itkCropImageFilterID4ID4)

def itkCropImageFilterIF2IF2_New():
    return itkCropImageFilterIF2IF2.New()

class itkCropImageFilterIF2IF2(itk.itkExtractImageFilterPython.itkExtractImageFilterIF2IF2):
    r"""Proxy of C++ itkCropImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIF2IF2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIF2IF2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIF2IF2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIF2IF2

        Create a new object of the class itkCropImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIF2IF2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIF2IF2_swigregister(itkCropImageFilterIF2IF2)

def itkCropImageFilterIF3IF3_New():
    return itkCropImageFilterIF3IF3.New()

class itkCropImageFilterIF3IF3(itk.itkExtractImageFilterPython.itkExtractImageFilterIF3IF3):
    r"""Proxy of C++ itkCropImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIF3IF3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIF3IF3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIF3IF3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIF3IF3

        Create a new object of the class itkCropImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIF3IF3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIF3IF3_swigregister(itkCropImageFilterIF3IF3)

def itkCropImageFilterIF4IF4_New():
    return itkCropImageFilterIF4IF4.New()

class itkCropImageFilterIF4IF4(itk.itkExtractImageFilterPython.itkExtractImageFilterIF4IF4):
    r"""Proxy of C++ itkCropImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIF4IF4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIF4IF4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIF4IF4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIF4IF4

        Create a new object of the class itkCropImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIF4IF4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIF4IF4_swigregister(itkCropImageFilterIF4IF4)

def itkCropImageFilterIRGBAUC2IRGBAUC2_New():
    return itkCropImageFilterIRGBAUC2IRGBAUC2.New()

class itkCropImageFilterIRGBAUC2IRGBAUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkCropImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkCropImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBAUC2IRGBAUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBAUC2IRGBAUC2_swigregister(itkCropImageFilterIRGBAUC2IRGBAUC2)

def itkCropImageFilterIRGBAUC3IRGBAUC3_New():
    return itkCropImageFilterIRGBAUC3IRGBAUC3.New()

class itkCropImageFilterIRGBAUC3IRGBAUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkCropImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkCropImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBAUC3IRGBAUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBAUC3IRGBAUC3_swigregister(itkCropImageFilterIRGBAUC3IRGBAUC3)

def itkCropImageFilterIRGBAUC4IRGBAUC4_New():
    return itkCropImageFilterIRGBAUC4IRGBAUC4.New()

class itkCropImageFilterIRGBAUC4IRGBAUC4(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkCropImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBAUC4IRGBAUC4

        Create a new object of the class itkCropImageFilterIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBAUC4IRGBAUC4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBAUC4IRGBAUC4_swigregister(itkCropImageFilterIRGBAUC4IRGBAUC4)

def itkCropImageFilterIRGBUC2IRGBUC2_New():
    return itkCropImageFilterIRGBUC2IRGBUC2.New()

class itkCropImageFilterIRGBUC2IRGBUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkCropImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkCropImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBUC2IRGBUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBUC2IRGBUC2_swigregister(itkCropImageFilterIRGBUC2IRGBUC2)

def itkCropImageFilterIRGBUC3IRGBUC3_New():
    return itkCropImageFilterIRGBUC3IRGBUC3.New()

class itkCropImageFilterIRGBUC3IRGBUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkCropImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkCropImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBUC3IRGBUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBUC3IRGBUC3_swigregister(itkCropImageFilterIRGBUC3IRGBUC3)

def itkCropImageFilterIRGBUC4IRGBUC4_New():
    return itkCropImageFilterIRGBUC4IRGBUC4.New()

class itkCropImageFilterIRGBUC4IRGBUC4(itk.itkExtractImageFilterPython.itkExtractImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkCropImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIRGBUC4IRGBUC4

        Create a new object of the class itkCropImageFilterIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIRGBUC4IRGBUC4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIRGBUC4IRGBUC4_swigregister(itkCropImageFilterIRGBUC4IRGBUC4)

def itkCropImageFilterISS2ISS2_New():
    return itkCropImageFilterISS2ISS2.New()

class itkCropImageFilterISS2ISS2(itk.itkExtractImageFilterPython.itkExtractImageFilterISS2ISS2):
    r"""Proxy of C++ itkCropImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterISS2ISS2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterISS2ISS2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterISS2ISS2

        Create a new object of the class itkCropImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterISS2ISS2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterISS2ISS2_swigregister(itkCropImageFilterISS2ISS2)

def itkCropImageFilterISS3ISS3_New():
    return itkCropImageFilterISS3ISS3.New()

class itkCropImageFilterISS3ISS3(itk.itkExtractImageFilterPython.itkExtractImageFilterISS3ISS3):
    r"""Proxy of C++ itkCropImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterISS3ISS3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterISS3ISS3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterISS3ISS3

        Create a new object of the class itkCropImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterISS3ISS3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterISS3ISS3_swigregister(itkCropImageFilterISS3ISS3)

def itkCropImageFilterISS4ISS4_New():
    return itkCropImageFilterISS4ISS4.New()

class itkCropImageFilterISS4ISS4(itk.itkExtractImageFilterPython.itkExtractImageFilterISS4ISS4):
    r"""Proxy of C++ itkCropImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterISS4ISS4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterISS4ISS4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterISS4ISS4

        Create a new object of the class itkCropImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterISS4ISS4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterISS4ISS4_swigregister(itkCropImageFilterISS4ISS4)

def itkCropImageFilterIUC2IUC2_New():
    return itkCropImageFilterIUC2IUC2.New()

class itkCropImageFilterIUC2IUC2(itk.itkExtractImageFilterPython.itkExtractImageFilterIUC2IUC2):
    r"""Proxy of C++ itkCropImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUC2IUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUC2IUC2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUC2IUC2

        Create a new object of the class itkCropImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUC2IUC2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUC2IUC2_swigregister(itkCropImageFilterIUC2IUC2)

def itkCropImageFilterIUC3IUC3_New():
    return itkCropImageFilterIUC3IUC3.New()

class itkCropImageFilterIUC3IUC3(itk.itkExtractImageFilterPython.itkExtractImageFilterIUC3IUC3):
    r"""Proxy of C++ itkCropImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUC3IUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUC3IUC3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUC3IUC3

        Create a new object of the class itkCropImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUC3IUC3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUC3IUC3_swigregister(itkCropImageFilterIUC3IUC3)

def itkCropImageFilterIUC4IUC4_New():
    return itkCropImageFilterIUC4IUC4.New()

class itkCropImageFilterIUC4IUC4(itk.itkExtractImageFilterPython.itkExtractImageFilterIUC4IUC4):
    r"""Proxy of C++ itkCropImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUC4IUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUC4IUC4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUC4IUC4

        Create a new object of the class itkCropImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUC4IUC4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUC4IUC4_swigregister(itkCropImageFilterIUC4IUC4)

def itkCropImageFilterIUS2IUS2_New():
    return itkCropImageFilterIUS2IUS2.New()

class itkCropImageFilterIUS2IUS2(itk.itkExtractImageFilterPython.itkExtractImageFilterIUS2IUS2):
    r"""Proxy of C++ itkCropImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUS2IUS2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUS2IUS2_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUS2IUS2

        Create a new object of the class itkCropImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUS2IUS2 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUS2IUS2_swigregister(itkCropImageFilterIUS2IUS2)

def itkCropImageFilterIUS3IUS3_New():
    return itkCropImageFilterIUS3IUS3.New()

class itkCropImageFilterIUS3IUS3(itk.itkExtractImageFilterPython.itkExtractImageFilterIUS3IUS3):
    r"""Proxy of C++ itkCropImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUS3IUS3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUS3IUS3_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUS3IUS3

        Create a new object of the class itkCropImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUS3IUS3 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUS3IUS3_swigregister(itkCropImageFilterIUS3IUS3)

def itkCropImageFilterIUS4IUS4_New():
    return itkCropImageFilterIUS4IUS4.New()

class itkCropImageFilterIUS4IUS4(itk.itkExtractImageFilterPython.itkExtractImageFilterIUS4IUS4):
    r"""Proxy of C++ itkCropImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIUS4IUS4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIUS4IUS4_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIUS4IUS4

        Create a new object of the class itkCropImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIUS4IUS4 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIUS4IUS4_swigregister(itkCropImageFilterIUS4IUS4)

def itkCropImageFilterIVF22IVF22_New():
    return itkCropImageFilterIVF22IVF22.New()

class itkCropImageFilterIVF22IVF22(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF22IVF22):
    r"""Proxy of C++ itkCropImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF22IVF22_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF22IVF22_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF22IVF22

        Create a new object of the class itkCropImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF22IVF22 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF22IVF22_swigregister(itkCropImageFilterIVF22IVF22)

def itkCropImageFilterIVF23IVF23_New():
    return itkCropImageFilterIVF23IVF23.New()

class itkCropImageFilterIVF23IVF23(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF23IVF23):
    r"""Proxy of C++ itkCropImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF23IVF23_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF23IVF23_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF23IVF23

        Create a new object of the class itkCropImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF23IVF23 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF23IVF23_swigregister(itkCropImageFilterIVF23IVF23)

def itkCropImageFilterIVF24IVF24_New():
    return itkCropImageFilterIVF24IVF24.New()

class itkCropImageFilterIVF24IVF24(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF24IVF24):
    r"""Proxy of C++ itkCropImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF24IVF24_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF24IVF24_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF24IVF24

        Create a new object of the class itkCropImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF24IVF24 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF24IVF24_swigregister(itkCropImageFilterIVF24IVF24)

def itkCropImageFilterIVF32IVF32_New():
    return itkCropImageFilterIVF32IVF32.New()

class itkCropImageFilterIVF32IVF32(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF32IVF32):
    r"""Proxy of C++ itkCropImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF32IVF32_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF32IVF32_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF32IVF32

        Create a new object of the class itkCropImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF32IVF32 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF32IVF32_swigregister(itkCropImageFilterIVF32IVF32)

def itkCropImageFilterIVF33IVF33_New():
    return itkCropImageFilterIVF33IVF33.New()

class itkCropImageFilterIVF33IVF33(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF33IVF33):
    r"""Proxy of C++ itkCropImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF33IVF33_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF33IVF33_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF33IVF33

        Create a new object of the class itkCropImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF33IVF33 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF33IVF33_swigregister(itkCropImageFilterIVF33IVF33)

def itkCropImageFilterIVF34IVF34_New():
    return itkCropImageFilterIVF34IVF34.New()

class itkCropImageFilterIVF34IVF34(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF34IVF34):
    r"""Proxy of C++ itkCropImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF34IVF34_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF34IVF34_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF34IVF34

        Create a new object of the class itkCropImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF34IVF34 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF34IVF34_swigregister(itkCropImageFilterIVF34IVF34)

def itkCropImageFilterIVF42IVF42_New():
    return itkCropImageFilterIVF42IVF42.New()

class itkCropImageFilterIVF42IVF42(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF42IVF42):
    r"""Proxy of C++ itkCropImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF42IVF42_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF42IVF42_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize2"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize2 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF42IVF42

        Create a new object of the class itkCropImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF42IVF42 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF42IVF42_swigregister(itkCropImageFilterIVF42IVF42)

def itkCropImageFilterIVF43IVF43_New():
    return itkCropImageFilterIVF43IVF43.New()

class itkCropImageFilterIVF43IVF43(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF43IVF43):
    r"""Proxy of C++ itkCropImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF43IVF43_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF43IVF43_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize3"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize3 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF43IVF43

        Create a new object of the class itkCropImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF43IVF43 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF43IVF43_swigregister(itkCropImageFilterIVF43IVF43)

def itkCropImageFilterIVF44IVF44_New():
    return itkCropImageFilterIVF44IVF44.New()

class itkCropImageFilterIVF44IVF44(itk.itkExtractImageFilterPython.itkExtractImageFilterIVF44IVF44):
    r"""Proxy of C++ itkCropImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkCropImageFilterIVF44IVF44_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkCropImageFilterIVF44IVF44_Pointer"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_Clone(self)

    def SetUpperBoundaryCropSize(self, _arg):
        r"""
        SetUpperBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_SetUpperBoundaryCropSize(self, _arg)

    def GetUpperBoundaryCropSize(self):
        r"""GetUpperBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_GetUpperBoundaryCropSize(self)

    def SetLowerBoundaryCropSize(self, _arg):
        r"""
        SetLowerBoundaryCropSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_SetLowerBoundaryCropSize(self, _arg)

    def GetLowerBoundaryCropSize(self):
        r"""GetLowerBoundaryCropSize(self) -> itkSize4"""
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_GetLowerBoundaryCropSize(self)

    def SetBoundaryCropSize(self, s):
        r"""
        SetBoundaryCropSize(self, s)

        Parameters
        ----------
        s: itkSize4 const &

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_SetBoundaryCropSize(self, s)
    InputConvertibleToOutputCheck = _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_InputConvertibleToOutputCheck
    
    SameDimensionCheck = _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_SameDimensionCheck
    
    __swig_destroy__ = _itkCropImageFilterPython.delete_itkCropImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCropImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkCropImageFilterIVF44IVF44

        Create a new object of the class itkCropImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkCropImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkCropImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkCropImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkCropImageFilterIVF44IVF44 in _itkCropImageFilterPython:
_itkCropImageFilterPython.itkCropImageFilterIVF44IVF44_swigregister(itkCropImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def crop_image_filter(*args: itkt.ImageLike,  upper_boundary_crop_size: Sequence[int]=..., lower_boundary_crop_size: Sequence[int]=..., boundary_crop_size: Sequence[int]=..., direction_collapse_to_strategy=..., extraction_region: itkt.ImageRegion=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for CropImageFilter"""
    import itk

    kwarg_typehints = { 'upper_boundary_crop_size':upper_boundary_crop_size,'lower_boundary_crop_size':lower_boundary_crop_size,'boundary_crop_size':boundary_crop_size,'direction_collapse_to_strategy':direction_collapse_to_strategy,'extraction_region':extraction_region }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.CropImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def crop_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.CropImageFilter
    crop_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    crop_image_filter.__doc__ = filter_object.__doc__



