# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshBasePython
else:
    import _itkMeshBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointSetPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.itkPointPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkCovariantVectorPython
import itk.ITKCommonBasePython
import itk.itkArrayPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkMapContainerPython
import itk.itkBoundingBoxPython
class itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2

# Register itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2_AutoPointer)
class itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3

# Register itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3_AutoPointer)
class itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4

# Register itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4_AutoPointer)
class itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2

# Register itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2_AutoPointer)
class itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3

# Register itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3_AutoPointer)
class itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4

# Register itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4_AutoPointer)
class itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2

# Register itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer)
class itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3

# Register itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer)
class itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4

# Register itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer)
class itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2

# Register itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2_AutoPointer)
class itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3

# Register itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3_AutoPointer)
class itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4

# Register itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4_AutoPointer)
class itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2

# Register itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2_AutoPointer)
class itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2

# Register itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2)
class itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer)
class itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3

# Register itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3_AutoPointer)
class itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3

# Register itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3)
class itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer)
class itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4

# Register itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4_AutoPointer)
class itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4

# Register itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4)
class itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long long const *
        last: unsigned long long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long long
        PointIdsBegin(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long long
        PointIdsEnd(self) -> unsigned long long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayULL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayULL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULLPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer)
class itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

# Register itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceVisitorDCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

# Register itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceVisitorDCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

# Register itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceVisitorDCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

# Register itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceVisitorFCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

# Register itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceVisitorFCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

# Register itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceVisitorFCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

# Register itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceVisitorSSCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

# Register itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceVisitorSSCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

# Register itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceVisitorSSCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

# Register itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceVisitorUCCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

# Register itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceVisitorUCCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

# Register itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceVisitorUCCTI4FFULLULLULLPF4MCULLPF4)
class itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

# Register itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkCellInterfaceVisitorUSCTI2FFULLULLULLPF2MCULLPF2)
class itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

# Register itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkCellInterfaceVisitorUSCTI3FFULLULLULLPF3MCULLPF3)
class itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

# Register itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkCellInterfaceVisitorUSCTI4FFULLULLULLPF4MCULLPF4)
class itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2

# Register itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2_swigregister(itkCellTraitsInfo2FFULLULLULLPF2MCULLPF2)
class itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2

# Register itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2_swigregister(itkCellTraitsInfo2FFULLULLULLPF2VCULLPF2)
class itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3

# Register itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3_swigregister(itkCellTraitsInfo3FFULLULLULLPF3MCULLPF3)
class itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3

# Register itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3_swigregister(itkCellTraitsInfo3FFULLULLULLPF3VCULLPF3)
class itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4

# Register itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4_swigregister(itkCellTraitsInfo4FFULLULLULLPF4MCULLPF4)
class itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4

# Register itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4_swigregister(itkCellTraitsInfo4FFULLULLULLPF4VCULLPF4)

def itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_New():
    return itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2.New()

class itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2
        __init__(self, comp) -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2MCULLPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2

        Create a new object of the class itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkMapContainerULLCIDCTI2FFULLULLULLPF2MCULLPF2)

def itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_New():
    return itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3.New()

class itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3
        __init__(self, comp) -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3MCULLPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3

        Create a new object of the class itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkMapContainerULLCIDCTI3FFULLULLULLPF3MCULLPF3)

def itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_New():
    return itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4.New()

class itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4
        __init__(self, comp) -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4MCULLPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4

        Create a new object of the class itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkMapContainerULLCIDCTI4FFULLULLULLPF4MCULLPF4)

def itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_New():
    return itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2.New()

class itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2
        __init__(self, comp) -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2MCULLPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2

        Create a new object of the class itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkMapContainerULLCIFCTI2FFULLULLULLPF2MCULLPF2)

def itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_New():
    return itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3.New()

class itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3
        __init__(self, comp) -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3MCULLPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3

        Create a new object of the class itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkMapContainerULLCIFCTI3FFULLULLULLPF3MCULLPF3)

def itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_New():
    return itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4.New()

class itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4
        __init__(self, comp) -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4MCULLPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4

        Create a new object of the class itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkMapContainerULLCIFCTI4FFULLULLULLPF4MCULLPF4)

def itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_New():
    return itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2.New()

class itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2
        __init__(self, comp) -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2MCULLPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2

        Create a new object of the class itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkMapContainerULLCISSCTI2FFULLULLULLPF2MCULLPF2)

def itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_New():
    return itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3.New()

class itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3
        __init__(self, comp) -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3MCULLPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3

        Create a new object of the class itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkMapContainerULLCISSCTI3FFULLULLULLPF3MCULLPF3)

def itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_New():
    return itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4.New()

class itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4
        __init__(self, comp) -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4MCULLPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4

        Create a new object of the class itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkMapContainerULLCISSCTI4FFULLULLULLPF4MCULLPF4)

def itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_New():
    return itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2.New()

class itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2
        __init__(self, comp) -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2MCULLPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2

        Create a new object of the class itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkMapContainerULLCIUCCTI2FFULLULLULLPF2MCULLPF2)

def itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_New():
    return itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3.New()

class itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3
        __init__(self, comp) -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3MCULLPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3

        Create a new object of the class itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkMapContainerULLCIUCCTI3FFULLULLULLPF3MCULLPF3)

def itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_New():
    return itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4.New()

class itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4
        __init__(self, comp) -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4MCULLPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4

        Create a new object of the class itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkMapContainerULLCIUCCTI4FFULLULLULLPF4MCULLPF4)

def itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_New():
    return itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2.New()

class itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2
        __init__(self, comp) -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2MCULLPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2

        Create a new object of the class itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2_swigregister(itkMapContainerULLCIUSCTI2FFULLULLULLPF2MCULLPF2)

def itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_New():
    return itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3.New()

class itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3
        __init__(self, comp) -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3MCULLPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3

        Create a new object of the class itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3_swigregister(itkMapContainerULLCIUSCTI3FFULLULLULLPF3MCULLPF3)

def itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_New():
    return itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4.New()

class itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4
        __init__(self, comp) -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        comp: std::less< unsigned long long > const &

        """
        _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long long,itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *,std::less< unsigned long long >,std::allocator< std::pair< unsigned long long const,itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4MCULLPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4

        Create a new object of the class itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4_swigregister(itkMapContainerULLCIUSCTI4FFULLULLULLPF4MCULLPF4)

def itkMeshAD2_New():
    return itkMeshAD2.New()

class itkMeshAD2(itk.itkPointSetPython.itkPointSetAD2):
    r"""Proxy of C++ itkMeshAD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD2_Pointer"""
        return _itkMeshBasePython.itkMeshAD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD2_Pointer"""
        return _itkMeshBasePython.itkMeshAD2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshAD2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD2 *

        """
        return _itkMeshBasePython.itkMeshAD2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshAD2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshAD2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshAD2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshAD2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshAD2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshAD2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD2

        Create a new object of the class itkMeshAD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD2_swigregister(itkMeshAD2)

def itkMeshAD3_New():
    return itkMeshAD3.New()

class itkMeshAD3(itk.itkPointSetPython.itkPointSetAD3):
    r"""Proxy of C++ itkMeshAD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD3_Pointer"""
        return _itkMeshBasePython.itkMeshAD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD3_Pointer"""
        return _itkMeshBasePython.itkMeshAD3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshAD3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD3 *

        """
        return _itkMeshBasePython.itkMeshAD3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshAD3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshAD3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshAD3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshAD3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshAD3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshAD3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD3

        Create a new object of the class itkMeshAD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD3_swigregister(itkMeshAD3)

def itkMeshAD4_New():
    return itkMeshAD4.New()

class itkMeshAD4(itk.itkPointSetPython.itkPointSetAD4):
    r"""Proxy of C++ itkMeshAD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD4_Pointer"""
        return _itkMeshBasePython.itkMeshAD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD4_Pointer"""
        return _itkMeshBasePython.itkMeshAD4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshAD4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD4 *

        """
        return _itkMeshBasePython.itkMeshAD4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshAD4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshAD4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshAD4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshAD4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshAD4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self) -> itkVectorContainerULLAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshAD4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshAD4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD4

        Create a new object of the class itkMeshAD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD4_swigregister(itkMeshAD4)

def itkMeshD2_New():
    return itkMeshD2.New()

class itkMeshD2(itk.itkPointSetPython.itkPointSetD2):
    r"""Proxy of C++ itkMeshD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD2_Pointer"""
        return _itkMeshBasePython.itkMeshD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD2_Pointer"""
        return _itkMeshBasePython.itkMeshD2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshD2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD2 *

        """
        return _itkMeshBasePython.itkMeshD2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshD2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshD2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshD2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshD2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshD2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshD2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshD2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD2

        Create a new object of the class itkMeshD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD2_swigregister(itkMeshD2)

def itkMeshD3_New():
    return itkMeshD3.New()

class itkMeshD3(itk.itkPointSetPython.itkPointSetD3):
    r"""Proxy of C++ itkMeshD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD3_Pointer"""
        return _itkMeshBasePython.itkMeshD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD3_Pointer"""
        return _itkMeshBasePython.itkMeshD3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshD3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD3 *

        """
        return _itkMeshBasePython.itkMeshD3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshD3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshD3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshD3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshD3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshD3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshD3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshD3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD3

        Create a new object of the class itkMeshD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD3_swigregister(itkMeshD3)

def itkMeshD4_New():
    return itkMeshD4.New()

class itkMeshD4(itk.itkPointSetPython.itkPointSetD4):
    r"""Proxy of C++ itkMeshD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD4_Pointer"""
        return _itkMeshBasePython.itkMeshD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD4_Pointer"""
        return _itkMeshBasePython.itkMeshD4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshD4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD4 *

        """
        return _itkMeshBasePython.itkMeshD4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshD4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshD4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshD4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshD4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshD4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshD4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self) -> itkVectorContainerULLD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshD4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshD4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD4

        Create a new object of the class itkMeshD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD4_swigregister(itkMeshD4)

def itkMeshF2_New():
    return itkMeshF2.New()

class itkMeshF2(itk.itkPointSetPython.itkPointSetF2):
    r"""Proxy of C++ itkMeshF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF2_Pointer"""
        return _itkMeshBasePython.itkMeshF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF2_Pointer"""
        return _itkMeshBasePython.itkMeshF2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshF2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF2 *

        """
        return _itkMeshBasePython.itkMeshF2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshF2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshF2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshF2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshF2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshF2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshF2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshF2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF2

        Create a new object of the class itkMeshF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF2_swigregister(itkMeshF2)

def itkMeshF3_New():
    return itkMeshF3.New()

class itkMeshF3(itk.itkPointSetPython.itkPointSetF3):
    r"""Proxy of C++ itkMeshF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF3_Pointer"""
        return _itkMeshBasePython.itkMeshF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF3_Pointer"""
        return _itkMeshBasePython.itkMeshF3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshF3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF3 *

        """
        return _itkMeshBasePython.itkMeshF3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshF3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshF3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshF3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshF3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshF3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshF3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshF3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF3

        Create a new object of the class itkMeshF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF3_swigregister(itkMeshF3)

def itkMeshF4_New():
    return itkMeshF4.New()

class itkMeshF4(itk.itkPointSetPython.itkPointSetF4):
    r"""Proxy of C++ itkMeshF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF4_Pointer"""
        return _itkMeshBasePython.itkMeshF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF4_Pointer"""
        return _itkMeshBasePython.itkMeshF4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshF4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF4 *

        """
        return _itkMeshBasePython.itkMeshF4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshF4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshF4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshF4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshF4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshF4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshF4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self) -> itkVectorContainerULLF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshF4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshF4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF4

        Create a new object of the class itkMeshF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF4_swigregister(itkMeshF4)

def itkMeshSS2_New():
    return itkMeshSS2.New()

class itkMeshSS2(itk.itkPointSetPython.itkPointSetSS2):
    r"""Proxy of C++ itkMeshSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS2_Pointer"""
        return _itkMeshBasePython.itkMeshSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS2_Pointer"""
        return _itkMeshBasePython.itkMeshSS2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshSS2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS2 *

        """
        return _itkMeshBasePython.itkMeshSS2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshSS2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshSS2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshSS2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshSS2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshSS2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshSS2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS2

        Create a new object of the class itkMeshSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS2_swigregister(itkMeshSS2)

def itkMeshSS3_New():
    return itkMeshSS3.New()

class itkMeshSS3(itk.itkPointSetPython.itkPointSetSS3):
    r"""Proxy of C++ itkMeshSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS3_Pointer"""
        return _itkMeshBasePython.itkMeshSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS3_Pointer"""
        return _itkMeshBasePython.itkMeshSS3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshSS3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS3 *

        """
        return _itkMeshBasePython.itkMeshSS3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshSS3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshSS3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshSS3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshSS3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshSS3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshSS3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS3

        Create a new object of the class itkMeshSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS3_swigregister(itkMeshSS3)

def itkMeshSS4_New():
    return itkMeshSS4.New()

class itkMeshSS4(itk.itkPointSetPython.itkPointSetSS4):
    r"""Proxy of C++ itkMeshSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS4_Pointer"""
        return _itkMeshBasePython.itkMeshSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS4_Pointer"""
        return _itkMeshBasePython.itkMeshSS4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshSS4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS4 *

        """
        return _itkMeshBasePython.itkMeshSS4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshSS4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshSS4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshSS4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshSS4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshSS4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self) -> itkVectorContainerULLSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshSS4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshSS4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS4

        Create a new object of the class itkMeshSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS4_swigregister(itkMeshSS4)

def itkMeshUC2_New():
    return itkMeshUC2.New()

class itkMeshUC2(itk.itkPointSetPython.itkPointSetUC2):
    r"""Proxy of C++ itkMeshUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC2_Pointer"""
        return _itkMeshBasePython.itkMeshUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC2_Pointer"""
        return _itkMeshBasePython.itkMeshUC2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUC2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC2 *

        """
        return _itkMeshBasePython.itkMeshUC2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshUC2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUC2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshUC2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUC2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshUC2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUC2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC2

        Create a new object of the class itkMeshUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC2_swigregister(itkMeshUC2)

def itkMeshUC3_New():
    return itkMeshUC3.New()

class itkMeshUC3(itk.itkPointSetPython.itkPointSetUC3):
    r"""Proxy of C++ itkMeshUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC3_Pointer"""
        return _itkMeshBasePython.itkMeshUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC3_Pointer"""
        return _itkMeshBasePython.itkMeshUC3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUC3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC3 *

        """
        return _itkMeshBasePython.itkMeshUC3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshUC3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUC3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshUC3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUC3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshUC3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUC3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC3

        Create a new object of the class itkMeshUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC3_swigregister(itkMeshUC3)

def itkMeshUC4_New():
    return itkMeshUC4.New()

class itkMeshUC4(itk.itkPointSetPython.itkPointSetUC4):
    r"""Proxy of C++ itkMeshUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC4_Pointer"""
        return _itkMeshBasePython.itkMeshUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC4_Pointer"""
        return _itkMeshBasePython.itkMeshUC4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUC4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC4 *

        """
        return _itkMeshBasePython.itkMeshUC4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshUC4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUC4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshUC4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUC4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshUC4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self) -> itkVectorContainerULLUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUC4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUC4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC4

        Create a new object of the class itkMeshUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC4_swigregister(itkMeshUC4)

def itkMeshUS2_New():
    return itkMeshUS2.New()

class itkMeshUS2(itk.itkPointSetPython.itkPointSetUS2):
    r"""Proxy of C++ itkMeshUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS2_Pointer"""
        return _itkMeshBasePython.itkMeshUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS2_Pointer"""
        return _itkMeshBasePython.itkMeshUS2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUS2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS2 *

        """
        return _itkMeshBasePython.itkMeshUS2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL2FVCULLPF2"""
        return _itkMeshBasePython.itkMeshUS2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUS2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkMeshUS2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUS2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2
        GetCells(self) -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2
        """
        return _itkMeshBasePython.itkMeshUS2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUS2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS2

        Create a new object of the class itkMeshUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS2_swigregister(itkMeshUS2)

def itkMeshUS3_New():
    return itkMeshUS3.New()

class itkMeshUS3(itk.itkPointSetPython.itkPointSetUS3):
    r"""Proxy of C++ itkMeshUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS3_Pointer"""
        return _itkMeshBasePython.itkMeshUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS3_Pointer"""
        return _itkMeshBasePython.itkMeshUS3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUS3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS3 *

        """
        return _itkMeshBasePython.itkMeshUS3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL3FVCULLPF3"""
        return _itkMeshBasePython.itkMeshUS3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUS3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkMeshUS3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUS3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3
        GetCells(self) -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3
        """
        return _itkMeshBasePython.itkMeshUS3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUS3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS3

        Create a new object of the class itkMeshUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS3_swigregister(itkMeshUS3)

def itkMeshUS4_New():
    return itkMeshUS4.New()

class itkMeshUS4(itk.itkPointSetPython.itkPointSetUS4):
    r"""Proxy of C++ itkMeshUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS4_Pointer"""
        return _itkMeshBasePython.itkMeshUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS4_Pointer"""
        return _itkMeshBasePython.itkMeshUS4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long long"""
        return _itkMeshBasePython.itkMeshUS4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS4 *

        """
        return _itkMeshBasePython.itkMeshUS4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxULL4FVCULLPF4"""
        return _itkMeshBasePython.itkMeshUS4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLSULL *

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULLSULL
        GetCellLinks(self) -> itkVectorContainerULLSULL
        """
        return _itkMeshBasePython.itkMeshUS4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkMeshUS4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULLULL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULLULL"""
        return _itkMeshBasePython.itkMeshUS4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4
        GetCells(self) -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4
        """
        return _itkMeshBasePython.itkMeshUS4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULLUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self) -> itkVectorContainerULLUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long
        boundaryId: unsigned long long *

        """
        return _itkMeshBasePython.itkMeshUS4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long long
        featureId: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long

        """
        return _itkMeshBasePython.itkMeshUS4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long long

        Parameters
        ----------
        cellId: unsigned long long
        cellSet: std::set< unsigned long long,std::less< unsigned long long >,std::allocator< unsigned long long > > *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long long
        arg2: unsigned long long
        arg3: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS4

        Create a new object of the class itkMeshUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS4_swigregister(itkMeshUS4)

def itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCIADCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCIADCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceADCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCIADCTI4FFULLULLULLPF4VCULLPF4)

def itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCIDCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCIDCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceDCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCIDCTI4FFULLULLULLPF4VCULLPF4)

def itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCIFCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCIFCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceFCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCIFCTI4FFULLULLULLPF4VCULLPF4)

def itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCISSCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCISSCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceSSCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCISSCTI4FFULLULLULLPF4VCULLPF4)

def itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCIUCCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCIUCCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUCCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCIUCCTI4FFULLULLULLPF4VCULLPF4)

def itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_New():
    return itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2.New()

class itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *,std::allocator< itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI2FFULLULLULLPF2VCULLPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2

        Create a new object of the class itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2_swigregister(itkVectorContainerULLCIUSCTI2FFULLULLULLPF2VCULLPF2)

def itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_New():
    return itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3.New()

class itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *,std::allocator< itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI3FFULLULLULLPF3VCULLPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3

        Create a new object of the class itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3_swigregister(itkVectorContainerULLCIUSCTI3FFULLULLULLPF3VCULLPF3)

def itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_New():
    return itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4.New()

class itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *,std::allocator< itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *&

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long long
        arg1: itkCellInterfaceUSCTI4FFULLULLULLPF4VCULLPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long long"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long long

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4

        Create a new object of the class itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4_swigregister(itkVectorContainerULLCIUSCTI4FFULLULLULLPF4VCULLPF4)

