# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMaskedImageToHistogramFilterPython
else:
    import _itkMaskedImageToHistogramFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToHistogramFilterPython
import itk.itkHistogramPython
import itk.itkSamplePython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkArrayPython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageSinkPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkSimpleDataObjectDecoratorPython

def itkMaskedImageToHistogramFilterICD2ISS2_New():
    return itkMaskedImageToHistogramFilterICD2ISS2.New()

class itkMaskedImageToHistogramFilterICD2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICD2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2ISS2_swigregister(itkMaskedImageToHistogramFilterICD2ISS2)

def itkMaskedImageToHistogramFilterICD2IUC2_New():
    return itkMaskedImageToHistogramFilterICD2IUC2.New()

class itkMaskedImageToHistogramFilterICD2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICD2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUC2_swigregister(itkMaskedImageToHistogramFilterICD2IUC2)

def itkMaskedImageToHistogramFilterICD2IUS2_New():
    return itkMaskedImageToHistogramFilterICD2IUS2.New()

class itkMaskedImageToHistogramFilterICD2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICD2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD2IUS2_swigregister(itkMaskedImageToHistogramFilterICD2IUS2)

def itkMaskedImageToHistogramFilterICD3ISS3_New():
    return itkMaskedImageToHistogramFilterICD3ISS3.New()

class itkMaskedImageToHistogramFilterICD3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICD3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3ISS3_swigregister(itkMaskedImageToHistogramFilterICD3ISS3)

def itkMaskedImageToHistogramFilterICD3IUC3_New():
    return itkMaskedImageToHistogramFilterICD3IUC3.New()

class itkMaskedImageToHistogramFilterICD3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICD3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUC3_swigregister(itkMaskedImageToHistogramFilterICD3IUC3)

def itkMaskedImageToHistogramFilterICD3IUS3_New():
    return itkMaskedImageToHistogramFilterICD3IUS3.New()

class itkMaskedImageToHistogramFilterICD3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICD3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD3IUS3_swigregister(itkMaskedImageToHistogramFilterICD3IUS3)

def itkMaskedImageToHistogramFilterICD4ISS4_New():
    return itkMaskedImageToHistogramFilterICD4ISS4.New()

class itkMaskedImageToHistogramFilterICD4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterICD4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4ISS4_swigregister(itkMaskedImageToHistogramFilterICD4ISS4)

def itkMaskedImageToHistogramFilterICD4IUC4_New():
    return itkMaskedImageToHistogramFilterICD4IUC4.New()

class itkMaskedImageToHistogramFilterICD4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterICD4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUC4_swigregister(itkMaskedImageToHistogramFilterICD4IUC4)

def itkMaskedImageToHistogramFilterICD4IUS4_New():
    return itkMaskedImageToHistogramFilterICD4IUS4.New()

class itkMaskedImageToHistogramFilterICD4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICD4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICD4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICD4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICD4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICD4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICD4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICD4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterICD4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICD4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICD4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICD4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICD4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICD4IUS4_swigregister(itkMaskedImageToHistogramFilterICD4IUS4)

def itkMaskedImageToHistogramFilterICF2ISS2_New():
    return itkMaskedImageToHistogramFilterICF2ISS2.New()

class itkMaskedImageToHistogramFilterICF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2ISS2_swigregister(itkMaskedImageToHistogramFilterICF2ISS2)

def itkMaskedImageToHistogramFilterICF2IUC2_New():
    return itkMaskedImageToHistogramFilterICF2IUC2.New()

class itkMaskedImageToHistogramFilterICF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUC2_swigregister(itkMaskedImageToHistogramFilterICF2IUC2)

def itkMaskedImageToHistogramFilterICF2IUS2_New():
    return itkMaskedImageToHistogramFilterICF2IUS2.New()

class itkMaskedImageToHistogramFilterICF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF2IUS2_swigregister(itkMaskedImageToHistogramFilterICF2IUS2)

def itkMaskedImageToHistogramFilterICF3ISS3_New():
    return itkMaskedImageToHistogramFilterICF3ISS3.New()

class itkMaskedImageToHistogramFilterICF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3ISS3_swigregister(itkMaskedImageToHistogramFilterICF3ISS3)

def itkMaskedImageToHistogramFilterICF3IUC3_New():
    return itkMaskedImageToHistogramFilterICF3IUC3.New()

class itkMaskedImageToHistogramFilterICF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUC3_swigregister(itkMaskedImageToHistogramFilterICF3IUC3)

def itkMaskedImageToHistogramFilterICF3IUS3_New():
    return itkMaskedImageToHistogramFilterICF3IUS3.New()

class itkMaskedImageToHistogramFilterICF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF3IUS3_swigregister(itkMaskedImageToHistogramFilterICF3IUS3)

def itkMaskedImageToHistogramFilterICF4ISS4_New():
    return itkMaskedImageToHistogramFilterICF4ISS4.New()

class itkMaskedImageToHistogramFilterICF4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterICF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4ISS4_swigregister(itkMaskedImageToHistogramFilterICF4ISS4)

def itkMaskedImageToHistogramFilterICF4IUC4_New():
    return itkMaskedImageToHistogramFilterICF4IUC4.New()

class itkMaskedImageToHistogramFilterICF4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterICF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUC4_swigregister(itkMaskedImageToHistogramFilterICF4IUC4)

def itkMaskedImageToHistogramFilterICF4IUS4_New():
    return itkMaskedImageToHistogramFilterICF4IUS4.New()

class itkMaskedImageToHistogramFilterICF4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICF4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterICF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICF4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICF4IUS4_swigregister(itkMaskedImageToHistogramFilterICF4IUS4)

def itkMaskedImageToHistogramFilterICVF22ISS2_New():
    return itkMaskedImageToHistogramFilterICVF22ISS2.New()

class itkMaskedImageToHistogramFilterICVF22ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF22ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF22ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22ISS2_swigregister(itkMaskedImageToHistogramFilterICVF22ISS2)

def itkMaskedImageToHistogramFilterICVF22IUC2_New():
    return itkMaskedImageToHistogramFilterICVF22IUC2.New()

class itkMaskedImageToHistogramFilterICVF22IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF22IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF22IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUC2_swigregister(itkMaskedImageToHistogramFilterICVF22IUC2)

def itkMaskedImageToHistogramFilterICVF22IUS2_New():
    return itkMaskedImageToHistogramFilterICVF22IUS2.New()

class itkMaskedImageToHistogramFilterICVF22IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF22IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF22IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF22IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF22IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF22IUS2_swigregister(itkMaskedImageToHistogramFilterICVF22IUS2)

def itkMaskedImageToHistogramFilterICVF23ISS3_New():
    return itkMaskedImageToHistogramFilterICVF23ISS3.New()

class itkMaskedImageToHistogramFilterICVF23ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF23ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF23ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF23ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF23ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23ISS3_swigregister(itkMaskedImageToHistogramFilterICVF23ISS3)

def itkMaskedImageToHistogramFilterICVF23IUC3_New():
    return itkMaskedImageToHistogramFilterICVF23IUC3.New()

class itkMaskedImageToHistogramFilterICVF23IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF23IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF23IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF23IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF23IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUC3_swigregister(itkMaskedImageToHistogramFilterICVF23IUC3)

def itkMaskedImageToHistogramFilterICVF23IUS3_New():
    return itkMaskedImageToHistogramFilterICVF23IUS3.New()

class itkMaskedImageToHistogramFilterICVF23IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF23IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF23IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF23IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF23IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF23IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF23IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF23IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF23IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF23IUS3_swigregister(itkMaskedImageToHistogramFilterICVF23IUS3)

def itkMaskedImageToHistogramFilterICVF24ISS4_New():
    return itkMaskedImageToHistogramFilterICVF24ISS4.New()

class itkMaskedImageToHistogramFilterICVF24ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF24ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF24ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF24ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF24ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF24ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF24ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF24ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF24ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF24ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF24ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF24ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24ISS4_swigregister(itkMaskedImageToHistogramFilterICVF24ISS4)

def itkMaskedImageToHistogramFilterICVF24IUC4_New():
    return itkMaskedImageToHistogramFilterICVF24IUC4.New()

class itkMaskedImageToHistogramFilterICVF24IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF24IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF24IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF24IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF24IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF24IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF24IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF24IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF24IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF24IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF24IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF24IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUC4_swigregister(itkMaskedImageToHistogramFilterICVF24IUC4)

def itkMaskedImageToHistogramFilterICVF24IUS4_New():
    return itkMaskedImageToHistogramFilterICVF24IUS4.New()

class itkMaskedImageToHistogramFilterICVF24IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF24IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF24IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF24IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF24IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF24IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF24IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF24IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF24IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF24IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF24IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF24IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF24IUS4_swigregister(itkMaskedImageToHistogramFilterICVF24IUS4)

def itkMaskedImageToHistogramFilterICVF32ISS2_New():
    return itkMaskedImageToHistogramFilterICVF32ISS2.New()

class itkMaskedImageToHistogramFilterICVF32ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF32ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF32ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF32ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF32ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32ISS2_swigregister(itkMaskedImageToHistogramFilterICVF32ISS2)

def itkMaskedImageToHistogramFilterICVF32IUC2_New():
    return itkMaskedImageToHistogramFilterICVF32IUC2.New()

class itkMaskedImageToHistogramFilterICVF32IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF32IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF32IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF32IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF32IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUC2_swigregister(itkMaskedImageToHistogramFilterICVF32IUC2)

def itkMaskedImageToHistogramFilterICVF32IUS2_New():
    return itkMaskedImageToHistogramFilterICVF32IUS2.New()

class itkMaskedImageToHistogramFilterICVF32IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF32IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF32IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF32IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF32IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF32IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF32IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF32IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF32IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF32IUS2_swigregister(itkMaskedImageToHistogramFilterICVF32IUS2)

def itkMaskedImageToHistogramFilterICVF33ISS3_New():
    return itkMaskedImageToHistogramFilterICVF33ISS3.New()

class itkMaskedImageToHistogramFilterICVF33ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF33ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF33ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33ISS3_swigregister(itkMaskedImageToHistogramFilterICVF33ISS3)

def itkMaskedImageToHistogramFilterICVF33IUC3_New():
    return itkMaskedImageToHistogramFilterICVF33IUC3.New()

class itkMaskedImageToHistogramFilterICVF33IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF33IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF33IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUC3_swigregister(itkMaskedImageToHistogramFilterICVF33IUC3)

def itkMaskedImageToHistogramFilterICVF33IUS3_New():
    return itkMaskedImageToHistogramFilterICVF33IUS3.New()

class itkMaskedImageToHistogramFilterICVF33IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF33IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF33IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF33IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF33IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF33IUS3_swigregister(itkMaskedImageToHistogramFilterICVF33IUS3)

def itkMaskedImageToHistogramFilterICVF34ISS4_New():
    return itkMaskedImageToHistogramFilterICVF34ISS4.New()

class itkMaskedImageToHistogramFilterICVF34ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF34ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF34ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF34ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF34ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF34ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF34ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF34ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF34ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF34ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF34ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF34ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34ISS4_swigregister(itkMaskedImageToHistogramFilterICVF34ISS4)

def itkMaskedImageToHistogramFilterICVF34IUC4_New():
    return itkMaskedImageToHistogramFilterICVF34IUC4.New()

class itkMaskedImageToHistogramFilterICVF34IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF34IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF34IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF34IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF34IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF34IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF34IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF34IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF34IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF34IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF34IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF34IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUC4_swigregister(itkMaskedImageToHistogramFilterICVF34IUC4)

def itkMaskedImageToHistogramFilterICVF34IUS4_New():
    return itkMaskedImageToHistogramFilterICVF34IUS4.New()

class itkMaskedImageToHistogramFilterICVF34IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF34IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF34IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF34IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF34IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF34IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF34IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF34IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF34IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF34IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF34IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF34IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF34IUS4_swigregister(itkMaskedImageToHistogramFilterICVF34IUS4)

def itkMaskedImageToHistogramFilterICVF42ISS2_New():
    return itkMaskedImageToHistogramFilterICVF42ISS2.New()

class itkMaskedImageToHistogramFilterICVF42ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF42ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF42ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF42ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF42ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42ISS2_swigregister(itkMaskedImageToHistogramFilterICVF42ISS2)

def itkMaskedImageToHistogramFilterICVF42IUC2_New():
    return itkMaskedImageToHistogramFilterICVF42IUC2.New()

class itkMaskedImageToHistogramFilterICVF42IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF42IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF42IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF42IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF42IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUC2_swigregister(itkMaskedImageToHistogramFilterICVF42IUC2)

def itkMaskedImageToHistogramFilterICVF42IUS2_New():
    return itkMaskedImageToHistogramFilterICVF42IUS2.New()

class itkMaskedImageToHistogramFilterICVF42IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF42IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF42IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF42IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF42IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF42IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF42IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterICVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF42IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF42IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF42IUS2_swigregister(itkMaskedImageToHistogramFilterICVF42IUS2)

def itkMaskedImageToHistogramFilterICVF43ISS3_New():
    return itkMaskedImageToHistogramFilterICVF43ISS3.New()

class itkMaskedImageToHistogramFilterICVF43ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF43ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF43ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF43ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF43ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43ISS3_swigregister(itkMaskedImageToHistogramFilterICVF43ISS3)

def itkMaskedImageToHistogramFilterICVF43IUC3_New():
    return itkMaskedImageToHistogramFilterICVF43IUC3.New()

class itkMaskedImageToHistogramFilterICVF43IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF43IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF43IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF43IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF43IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUC3_swigregister(itkMaskedImageToHistogramFilterICVF43IUC3)

def itkMaskedImageToHistogramFilterICVF43IUS3_New():
    return itkMaskedImageToHistogramFilterICVF43IUS3.New()

class itkMaskedImageToHistogramFilterICVF43IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF43IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF43IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF43IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF43IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF43IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF43IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterICVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF43IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF43IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF43IUS3_swigregister(itkMaskedImageToHistogramFilterICVF43IUS3)

def itkMaskedImageToHistogramFilterICVF44ISS4_New():
    return itkMaskedImageToHistogramFilterICVF44ISS4.New()

class itkMaskedImageToHistogramFilterICVF44ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF44ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF44ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF44ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF44ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44ISS4_swigregister(itkMaskedImageToHistogramFilterICVF44ISS4)

def itkMaskedImageToHistogramFilterICVF44IUC4_New():
    return itkMaskedImageToHistogramFilterICVF44IUC4.New()

class itkMaskedImageToHistogramFilterICVF44IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF44IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF44IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF44IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF44IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUC4_swigregister(itkMaskedImageToHistogramFilterICVF44IUC4)

def itkMaskedImageToHistogramFilterICVF44IUS4_New():
    return itkMaskedImageToHistogramFilterICVF44IUS4.New()

class itkMaskedImageToHistogramFilterICVF44IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterICVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterICVF44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterICVF44IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterICVF44IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterICVF44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterICVF44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterICVF44IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterICVF44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterICVF44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterICVF44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterICVF44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterICVF44IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterICVF44IUS4_swigregister(itkMaskedImageToHistogramFilterICVF44IUS4)

def itkMaskedImageToHistogramFilterID2ISS2_New():
    return itkMaskedImageToHistogramFilterID2ISS2.New()

class itkMaskedImageToHistogramFilterID2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2ISS2_swigregister(itkMaskedImageToHistogramFilterID2ISS2)

def itkMaskedImageToHistogramFilterID2IUC2_New():
    return itkMaskedImageToHistogramFilterID2IUC2.New()

class itkMaskedImageToHistogramFilterID2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUC2_swigregister(itkMaskedImageToHistogramFilterID2IUC2)

def itkMaskedImageToHistogramFilterID2IUS2_New():
    return itkMaskedImageToHistogramFilterID2IUS2.New()

class itkMaskedImageToHistogramFilterID2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID2IUS2_swigregister(itkMaskedImageToHistogramFilterID2IUS2)

def itkMaskedImageToHistogramFilterID3ISS3_New():
    return itkMaskedImageToHistogramFilterID3ISS3.New()

class itkMaskedImageToHistogramFilterID3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3ISS3_swigregister(itkMaskedImageToHistogramFilterID3ISS3)

def itkMaskedImageToHistogramFilterID3IUC3_New():
    return itkMaskedImageToHistogramFilterID3IUC3.New()

class itkMaskedImageToHistogramFilterID3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUC3_swigregister(itkMaskedImageToHistogramFilterID3IUC3)

def itkMaskedImageToHistogramFilterID3IUS3_New():
    return itkMaskedImageToHistogramFilterID3IUS3.New()

class itkMaskedImageToHistogramFilterID3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID3IUS3_swigregister(itkMaskedImageToHistogramFilterID3IUS3)

def itkMaskedImageToHistogramFilterID4ISS4_New():
    return itkMaskedImageToHistogramFilterID4ISS4.New()

class itkMaskedImageToHistogramFilterID4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4ISS4_swigregister(itkMaskedImageToHistogramFilterID4ISS4)

def itkMaskedImageToHistogramFilterID4IUC4_New():
    return itkMaskedImageToHistogramFilterID4IUC4.New()

class itkMaskedImageToHistogramFilterID4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUC4_swigregister(itkMaskedImageToHistogramFilterID4IUC4)

def itkMaskedImageToHistogramFilterID4IUS4_New():
    return itkMaskedImageToHistogramFilterID4IUS4.New()

class itkMaskedImageToHistogramFilterID4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterID4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterID4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterID4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterID4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterID4IUS4_swigregister(itkMaskedImageToHistogramFilterID4IUS4)

def itkMaskedImageToHistogramFilterIF2ISS2_New():
    return itkMaskedImageToHistogramFilterIF2ISS2.New()

class itkMaskedImageToHistogramFilterIF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2ISS2_swigregister(itkMaskedImageToHistogramFilterIF2ISS2)

def itkMaskedImageToHistogramFilterIF2IUC2_New():
    return itkMaskedImageToHistogramFilterIF2IUC2.New()

class itkMaskedImageToHistogramFilterIF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUC2_swigregister(itkMaskedImageToHistogramFilterIF2IUC2)

def itkMaskedImageToHistogramFilterIF2IUS2_New():
    return itkMaskedImageToHistogramFilterIF2IUS2.New()

class itkMaskedImageToHistogramFilterIF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF2IUS2_swigregister(itkMaskedImageToHistogramFilterIF2IUS2)

def itkMaskedImageToHistogramFilterIF3ISS3_New():
    return itkMaskedImageToHistogramFilterIF3ISS3.New()

class itkMaskedImageToHistogramFilterIF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3ISS3_swigregister(itkMaskedImageToHistogramFilterIF3ISS3)

def itkMaskedImageToHistogramFilterIF3IUC3_New():
    return itkMaskedImageToHistogramFilterIF3IUC3.New()

class itkMaskedImageToHistogramFilterIF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUC3_swigregister(itkMaskedImageToHistogramFilterIF3IUC3)

def itkMaskedImageToHistogramFilterIF3IUS3_New():
    return itkMaskedImageToHistogramFilterIF3IUS3.New()

class itkMaskedImageToHistogramFilterIF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF3IUS3_swigregister(itkMaskedImageToHistogramFilterIF3IUS3)

def itkMaskedImageToHistogramFilterIF4ISS4_New():
    return itkMaskedImageToHistogramFilterIF4ISS4.New()

class itkMaskedImageToHistogramFilterIF4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4ISS4_swigregister(itkMaskedImageToHistogramFilterIF4ISS4)

def itkMaskedImageToHistogramFilterIF4IUC4_New():
    return itkMaskedImageToHistogramFilterIF4IUC4.New()

class itkMaskedImageToHistogramFilterIF4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUC4_swigregister(itkMaskedImageToHistogramFilterIF4IUC4)

def itkMaskedImageToHistogramFilterIF4IUS4_New():
    return itkMaskedImageToHistogramFilterIF4IUS4.New()

class itkMaskedImageToHistogramFilterIF4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIF4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIF4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIF4IUS4_swigregister(itkMaskedImageToHistogramFilterIF4IUS4)

def itkMaskedImageToHistogramFilterIRGBAUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2ISS2)

def itkMaskedImageToHistogramFilterIRGBAUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2IUC2)

def itkMaskedImageToHistogramFilterIRGBAUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New()

class itkMaskedImageToHistogramFilterIRGBAUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIRGBAUC2IUS2)

def itkMaskedImageToHistogramFilterIRGBAUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3ISS3)

def itkMaskedImageToHistogramFilterIRGBAUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3IUC3)

def itkMaskedImageToHistogramFilterIRGBAUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New()

class itkMaskedImageToHistogramFilterIRGBAUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIRGBAUC3IUS3)

def itkMaskedImageToHistogramFilterIRGBAUC4ISS4_New():
    return itkMaskedImageToHistogramFilterIRGBAUC4ISS4.New()

class itkMaskedImageToHistogramFilterIRGBAUC4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4ISS4_swigregister(itkMaskedImageToHistogramFilterIRGBAUC4ISS4)

def itkMaskedImageToHistogramFilterIRGBAUC4IUC4_New():
    return itkMaskedImageToHistogramFilterIRGBAUC4IUC4.New()

class itkMaskedImageToHistogramFilterIRGBAUC4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUC4_swigregister(itkMaskedImageToHistogramFilterIRGBAUC4IUC4)

def itkMaskedImageToHistogramFilterIRGBAUC4IUS4_New():
    return itkMaskedImageToHistogramFilterIRGBAUC4IUS4.New()

class itkMaskedImageToHistogramFilterIRGBAUC4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBAUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBAUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBAUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBAUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBAUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBAUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBAUC4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBAUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBAUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBAUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBAUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBAUC4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBAUC4IUS4_swigregister(itkMaskedImageToHistogramFilterIRGBAUC4IUS4)

def itkMaskedImageToHistogramFilterIRGBUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2ISS2.New()

class itkMaskedImageToHistogramFilterIRGBUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2ISS2)

def itkMaskedImageToHistogramFilterIRGBUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2IUC2.New()

class itkMaskedImageToHistogramFilterIRGBUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2IUC2)

def itkMaskedImageToHistogramFilterIRGBUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIRGBUC2IUS2.New()

class itkMaskedImageToHistogramFilterIRGBUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIRGBUC2IUS2)

def itkMaskedImageToHistogramFilterIRGBUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3ISS3.New()

class itkMaskedImageToHistogramFilterIRGBUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3ISS3)

def itkMaskedImageToHistogramFilterIRGBUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3IUC3.New()

class itkMaskedImageToHistogramFilterIRGBUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3IUC3)

def itkMaskedImageToHistogramFilterIRGBUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIRGBUC3IUS3.New()

class itkMaskedImageToHistogramFilterIRGBUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIRGBUC3IUS3)

def itkMaskedImageToHistogramFilterIRGBUC4ISS4_New():
    return itkMaskedImageToHistogramFilterIRGBUC4ISS4.New()

class itkMaskedImageToHistogramFilterIRGBUC4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4ISS4_swigregister(itkMaskedImageToHistogramFilterIRGBUC4ISS4)

def itkMaskedImageToHistogramFilterIRGBUC4IUC4_New():
    return itkMaskedImageToHistogramFilterIRGBUC4IUC4.New()

class itkMaskedImageToHistogramFilterIRGBUC4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUC4_swigregister(itkMaskedImageToHistogramFilterIRGBUC4IUC4)

def itkMaskedImageToHistogramFilterIRGBUC4IUS4_New():
    return itkMaskedImageToHistogramFilterIRGBUC4IUS4.New()

class itkMaskedImageToHistogramFilterIRGBUC4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIRGBUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIRGBUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIRGBUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIRGBUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIRGBUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIRGBUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIRGBUC4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIRGBUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIRGBUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIRGBUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIRGBUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIRGBUC4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIRGBUC4IUS4_swigregister(itkMaskedImageToHistogramFilterIRGBUC4IUS4)

def itkMaskedImageToHistogramFilterISS2ISS2_New():
    return itkMaskedImageToHistogramFilterISS2ISS2.New()

class itkMaskedImageToHistogramFilterISS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2ISS2_swigregister(itkMaskedImageToHistogramFilterISS2ISS2)

def itkMaskedImageToHistogramFilterISS2IUC2_New():
    return itkMaskedImageToHistogramFilterISS2IUC2.New()

class itkMaskedImageToHistogramFilterISS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUC2_swigregister(itkMaskedImageToHistogramFilterISS2IUC2)

def itkMaskedImageToHistogramFilterISS2IUS2_New():
    return itkMaskedImageToHistogramFilterISS2IUS2.New()

class itkMaskedImageToHistogramFilterISS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS2IUS2_swigregister(itkMaskedImageToHistogramFilterISS2IUS2)

def itkMaskedImageToHistogramFilterISS3ISS3_New():
    return itkMaskedImageToHistogramFilterISS3ISS3.New()

class itkMaskedImageToHistogramFilterISS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3ISS3_swigregister(itkMaskedImageToHistogramFilterISS3ISS3)

def itkMaskedImageToHistogramFilterISS3IUC3_New():
    return itkMaskedImageToHistogramFilterISS3IUC3.New()

class itkMaskedImageToHistogramFilterISS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUC3_swigregister(itkMaskedImageToHistogramFilterISS3IUC3)

def itkMaskedImageToHistogramFilterISS3IUS3_New():
    return itkMaskedImageToHistogramFilterISS3IUS3.New()

class itkMaskedImageToHistogramFilterISS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS3IUS3_swigregister(itkMaskedImageToHistogramFilterISS3IUS3)

def itkMaskedImageToHistogramFilterISS4ISS4_New():
    return itkMaskedImageToHistogramFilterISS4ISS4.New()

class itkMaskedImageToHistogramFilterISS4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4ISS4_swigregister(itkMaskedImageToHistogramFilterISS4ISS4)

def itkMaskedImageToHistogramFilterISS4IUC4_New():
    return itkMaskedImageToHistogramFilterISS4IUC4.New()

class itkMaskedImageToHistogramFilterISS4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUC4_swigregister(itkMaskedImageToHistogramFilterISS4IUC4)

def itkMaskedImageToHistogramFilterISS4IUS4_New():
    return itkMaskedImageToHistogramFilterISS4IUS4.New()

class itkMaskedImageToHistogramFilterISS4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterISS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterISS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterISS4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterISS4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterISS4IUS4_swigregister(itkMaskedImageToHistogramFilterISS4IUS4)

def itkMaskedImageToHistogramFilterIUC2ISS2_New():
    return itkMaskedImageToHistogramFilterIUC2ISS2.New()

class itkMaskedImageToHistogramFilterIUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2ISS2_swigregister(itkMaskedImageToHistogramFilterIUC2ISS2)

def itkMaskedImageToHistogramFilterIUC2IUC2_New():
    return itkMaskedImageToHistogramFilterIUC2IUC2.New()

class itkMaskedImageToHistogramFilterIUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUC2_swigregister(itkMaskedImageToHistogramFilterIUC2IUC2)

def itkMaskedImageToHistogramFilterIUC2IUS2_New():
    return itkMaskedImageToHistogramFilterIUC2IUS2.New()

class itkMaskedImageToHistogramFilterIUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC2IUS2_swigregister(itkMaskedImageToHistogramFilterIUC2IUS2)

def itkMaskedImageToHistogramFilterIUC3ISS3_New():
    return itkMaskedImageToHistogramFilterIUC3ISS3.New()

class itkMaskedImageToHistogramFilterIUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3ISS3_swigregister(itkMaskedImageToHistogramFilterIUC3ISS3)

def itkMaskedImageToHistogramFilterIUC3IUC3_New():
    return itkMaskedImageToHistogramFilterIUC3IUC3.New()

class itkMaskedImageToHistogramFilterIUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUC3_swigregister(itkMaskedImageToHistogramFilterIUC3IUC3)

def itkMaskedImageToHistogramFilterIUC3IUS3_New():
    return itkMaskedImageToHistogramFilterIUC3IUS3.New()

class itkMaskedImageToHistogramFilterIUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC3IUS3_swigregister(itkMaskedImageToHistogramFilterIUC3IUS3)

def itkMaskedImageToHistogramFilterIUC4ISS4_New():
    return itkMaskedImageToHistogramFilterIUC4ISS4.New()

class itkMaskedImageToHistogramFilterIUC4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4ISS4_swigregister(itkMaskedImageToHistogramFilterIUC4ISS4)

def itkMaskedImageToHistogramFilterIUC4IUC4_New():
    return itkMaskedImageToHistogramFilterIUC4IUC4.New()

class itkMaskedImageToHistogramFilterIUC4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUC4_swigregister(itkMaskedImageToHistogramFilterIUC4IUC4)

def itkMaskedImageToHistogramFilterIUC4IUS4_New():
    return itkMaskedImageToHistogramFilterIUC4IUS4.New()

class itkMaskedImageToHistogramFilterIUC4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUC4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUC4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUC4IUS4_swigregister(itkMaskedImageToHistogramFilterIUC4IUS4)

def itkMaskedImageToHistogramFilterIUS2ISS2_New():
    return itkMaskedImageToHistogramFilterIUS2ISS2.New()

class itkMaskedImageToHistogramFilterIUS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2ISS2_swigregister(itkMaskedImageToHistogramFilterIUS2ISS2)

def itkMaskedImageToHistogramFilterIUS2IUC2_New():
    return itkMaskedImageToHistogramFilterIUS2IUC2.New()

class itkMaskedImageToHistogramFilterIUS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUC2_swigregister(itkMaskedImageToHistogramFilterIUS2IUC2)

def itkMaskedImageToHistogramFilterIUS2IUS2_New():
    return itkMaskedImageToHistogramFilterIUS2IUS2.New()

class itkMaskedImageToHistogramFilterIUS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS2IUS2_swigregister(itkMaskedImageToHistogramFilterIUS2IUS2)

def itkMaskedImageToHistogramFilterIUS3ISS3_New():
    return itkMaskedImageToHistogramFilterIUS3ISS3.New()

class itkMaskedImageToHistogramFilterIUS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3ISS3_swigregister(itkMaskedImageToHistogramFilterIUS3ISS3)

def itkMaskedImageToHistogramFilterIUS3IUC3_New():
    return itkMaskedImageToHistogramFilterIUS3IUC3.New()

class itkMaskedImageToHistogramFilterIUS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUC3_swigregister(itkMaskedImageToHistogramFilterIUS3IUC3)

def itkMaskedImageToHistogramFilterIUS3IUS3_New():
    return itkMaskedImageToHistogramFilterIUS3IUS3.New()

class itkMaskedImageToHistogramFilterIUS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS3IUS3_swigregister(itkMaskedImageToHistogramFilterIUS3IUS3)

def itkMaskedImageToHistogramFilterIUS4ISS4_New():
    return itkMaskedImageToHistogramFilterIUS4ISS4.New()

class itkMaskedImageToHistogramFilterIUS4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4ISS4_swigregister(itkMaskedImageToHistogramFilterIUS4ISS4)

def itkMaskedImageToHistogramFilterIUS4IUC4_New():
    return itkMaskedImageToHistogramFilterIUS4IUC4.New()

class itkMaskedImageToHistogramFilterIUS4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUC4_swigregister(itkMaskedImageToHistogramFilterIUS4IUC4)

def itkMaskedImageToHistogramFilterIUS4IUS4_New():
    return itkMaskedImageToHistogramFilterIUS4IUS4.New()

class itkMaskedImageToHistogramFilterIUS4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIUS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIUS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIUS4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIUS4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIUS4IUS4_swigregister(itkMaskedImageToHistogramFilterIUS4IUS4)

def itkMaskedImageToHistogramFilterIVF22ISS2_New():
    return itkMaskedImageToHistogramFilterIVF22ISS2.New()

class itkMaskedImageToHistogramFilterIVF22ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF22ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF22ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF22ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF22ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22ISS2_swigregister(itkMaskedImageToHistogramFilterIVF22ISS2)

def itkMaskedImageToHistogramFilterIVF22IUC2_New():
    return itkMaskedImageToHistogramFilterIVF22IUC2.New()

class itkMaskedImageToHistogramFilterIVF22IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF22IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF22IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF22IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF22IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUC2_swigregister(itkMaskedImageToHistogramFilterIVF22IUC2)

def itkMaskedImageToHistogramFilterIVF22IUS2_New():
    return itkMaskedImageToHistogramFilterIVF22IUS2.New()

class itkMaskedImageToHistogramFilterIVF22IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF22):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF22IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF22IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF22IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF22IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF22IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF22IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF22IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF22IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF22IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF22IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF22IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF22IUS2_swigregister(itkMaskedImageToHistogramFilterIVF22IUS2)

def itkMaskedImageToHistogramFilterIVF23ISS3_New():
    return itkMaskedImageToHistogramFilterIVF23ISS3.New()

class itkMaskedImageToHistogramFilterIVF23ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF23ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF23ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF23ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF23ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23ISS3_swigregister(itkMaskedImageToHistogramFilterIVF23ISS3)

def itkMaskedImageToHistogramFilterIVF23IUC3_New():
    return itkMaskedImageToHistogramFilterIVF23IUC3.New()

class itkMaskedImageToHistogramFilterIVF23IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF23IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF23IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF23IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF23IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUC3_swigregister(itkMaskedImageToHistogramFilterIVF23IUC3)

def itkMaskedImageToHistogramFilterIVF23IUS3_New():
    return itkMaskedImageToHistogramFilterIVF23IUS3.New()

class itkMaskedImageToHistogramFilterIVF23IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF23):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF23IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF23IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF23IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF23IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF23IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF23IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF23IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF23IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF23IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF23IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF23IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF23IUS3_swigregister(itkMaskedImageToHistogramFilterIVF23IUS3)

def itkMaskedImageToHistogramFilterIVF24ISS4_New():
    return itkMaskedImageToHistogramFilterIVF24ISS4.New()

class itkMaskedImageToHistogramFilterIVF24ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF24ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF24ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF24ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF24ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF24ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF24ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF24ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF24ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF24ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF24ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF24ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24ISS4_swigregister(itkMaskedImageToHistogramFilterIVF24ISS4)

def itkMaskedImageToHistogramFilterIVF24IUC4_New():
    return itkMaskedImageToHistogramFilterIVF24IUC4.New()

class itkMaskedImageToHistogramFilterIVF24IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF24IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF24IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF24IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF24IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF24IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF24IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF24IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF24IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF24IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF24IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF24IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUC4_swigregister(itkMaskedImageToHistogramFilterIVF24IUC4)

def itkMaskedImageToHistogramFilterIVF24IUS4_New():
    return itkMaskedImageToHistogramFilterIVF24IUS4.New()

class itkMaskedImageToHistogramFilterIVF24IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF24):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF24IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF24IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF24IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF24IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF24IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF24IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF24IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF24IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF24IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF24IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF24IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF24IUS4_swigregister(itkMaskedImageToHistogramFilterIVF24IUS4)

def itkMaskedImageToHistogramFilterIVF32ISS2_New():
    return itkMaskedImageToHistogramFilterIVF32ISS2.New()

class itkMaskedImageToHistogramFilterIVF32ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF32ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF32ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF32ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF32ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32ISS2_swigregister(itkMaskedImageToHistogramFilterIVF32ISS2)

def itkMaskedImageToHistogramFilterIVF32IUC2_New():
    return itkMaskedImageToHistogramFilterIVF32IUC2.New()

class itkMaskedImageToHistogramFilterIVF32IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF32IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF32IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF32IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF32IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUC2_swigregister(itkMaskedImageToHistogramFilterIVF32IUC2)

def itkMaskedImageToHistogramFilterIVF32IUS2_New():
    return itkMaskedImageToHistogramFilterIVF32IUS2.New()

class itkMaskedImageToHistogramFilterIVF32IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF32):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF32IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF32IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF32IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF32IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF32IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF32IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF32IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF32IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF32IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF32IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF32IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF32IUS2_swigregister(itkMaskedImageToHistogramFilterIVF32IUS2)

def itkMaskedImageToHistogramFilterIVF33ISS3_New():
    return itkMaskedImageToHistogramFilterIVF33ISS3.New()

class itkMaskedImageToHistogramFilterIVF33ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF33ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF33ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF33ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF33ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33ISS3_swigregister(itkMaskedImageToHistogramFilterIVF33ISS3)

def itkMaskedImageToHistogramFilterIVF33IUC3_New():
    return itkMaskedImageToHistogramFilterIVF33IUC3.New()

class itkMaskedImageToHistogramFilterIVF33IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF33IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF33IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF33IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF33IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUC3_swigregister(itkMaskedImageToHistogramFilterIVF33IUC3)

def itkMaskedImageToHistogramFilterIVF33IUS3_New():
    return itkMaskedImageToHistogramFilterIVF33IUS3.New()

class itkMaskedImageToHistogramFilterIVF33IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF33):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF33IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF33IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF33IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF33IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF33IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF33IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF33IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF33IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF33IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF33IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF33IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF33IUS3_swigregister(itkMaskedImageToHistogramFilterIVF33IUS3)

def itkMaskedImageToHistogramFilterIVF34ISS4_New():
    return itkMaskedImageToHistogramFilterIVF34ISS4.New()

class itkMaskedImageToHistogramFilterIVF34ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF34ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF34ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF34ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF34ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF34ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF34ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF34ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF34ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF34ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF34ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF34ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34ISS4_swigregister(itkMaskedImageToHistogramFilterIVF34ISS4)

def itkMaskedImageToHistogramFilterIVF34IUC4_New():
    return itkMaskedImageToHistogramFilterIVF34IUC4.New()

class itkMaskedImageToHistogramFilterIVF34IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF34IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF34IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF34IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF34IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF34IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF34IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF34IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF34IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF34IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF34IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF34IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUC4_swigregister(itkMaskedImageToHistogramFilterIVF34IUC4)

def itkMaskedImageToHistogramFilterIVF34IUS4_New():
    return itkMaskedImageToHistogramFilterIVF34IUS4.New()

class itkMaskedImageToHistogramFilterIVF34IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF34):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF34IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF34IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF34IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF34IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF34IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF34IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF34IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF34IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF34IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF34IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF34IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF34IUS4_swigregister(itkMaskedImageToHistogramFilterIVF34IUS4)

def itkMaskedImageToHistogramFilterIVF42ISS2_New():
    return itkMaskedImageToHistogramFilterIVF42ISS2.New()

class itkMaskedImageToHistogramFilterIVF42ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF42ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF42ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF42ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF42ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42ISS2_swigregister(itkMaskedImageToHistogramFilterIVF42ISS2)

def itkMaskedImageToHistogramFilterIVF42IUC2_New():
    return itkMaskedImageToHistogramFilterIVF42IUC2.New()

class itkMaskedImageToHistogramFilterIVF42IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF42IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF42IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF42IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF42IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUC2_swigregister(itkMaskedImageToHistogramFilterIVF42IUC2)

def itkMaskedImageToHistogramFilterIVF42IUS2_New():
    return itkMaskedImageToHistogramFilterIVF42IUS2.New()

class itkMaskedImageToHistogramFilterIVF42IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF42):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF42IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF42IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF42IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF42IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF42IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF42IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterIVF42IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF42IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF42IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF42IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF42IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF42IUS2_swigregister(itkMaskedImageToHistogramFilterIVF42IUS2)

def itkMaskedImageToHistogramFilterIVF43ISS3_New():
    return itkMaskedImageToHistogramFilterIVF43ISS3.New()

class itkMaskedImageToHistogramFilterIVF43ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF43ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF43ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF43ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF43ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43ISS3_swigregister(itkMaskedImageToHistogramFilterIVF43ISS3)

def itkMaskedImageToHistogramFilterIVF43IUC3_New():
    return itkMaskedImageToHistogramFilterIVF43IUC3.New()

class itkMaskedImageToHistogramFilterIVF43IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF43IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF43IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF43IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF43IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUC3_swigregister(itkMaskedImageToHistogramFilterIVF43IUC3)

def itkMaskedImageToHistogramFilterIVF43IUS3_New():
    return itkMaskedImageToHistogramFilterIVF43IUS3.New()

class itkMaskedImageToHistogramFilterIVF43IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF43):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF43IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF43IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF43IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF43IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF43IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF43IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterIVF43IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF43IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF43IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF43IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF43IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF43IUS3_swigregister(itkMaskedImageToHistogramFilterIVF43IUS3)

def itkMaskedImageToHistogramFilterIVF44ISS4_New():
    return itkMaskedImageToHistogramFilterIVF44ISS4.New()

class itkMaskedImageToHistogramFilterIVF44ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF44ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF44ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF44ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF44ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF44ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF44ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF44ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF44ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF44ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF44ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF44ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44ISS4_swigregister(itkMaskedImageToHistogramFilterIVF44ISS4)

def itkMaskedImageToHistogramFilterIVF44IUC4_New():
    return itkMaskedImageToHistogramFilterIVF44IUC4.New()

class itkMaskedImageToHistogramFilterIVF44IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF44IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF44IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF44IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF44IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF44IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF44IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF44IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF44IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF44IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF44IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF44IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUC4_swigregister(itkMaskedImageToHistogramFilterIVF44IUC4)

def itkMaskedImageToHistogramFilterIVF44IUS4_New():
    return itkMaskedImageToHistogramFilterIVF44IUS4.New()

class itkMaskedImageToHistogramFilterIVF44IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterIVF44):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterIVF44IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterIVF44IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterIVF44IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterIVF44IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterIVF44IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterIVF44IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterIVF44IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterIVF44IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterIVF44IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterIVF44IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterIVF44IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterIVF44IUS4_swigregister(itkMaskedImageToHistogramFilterIVF44IUS4)

def itkMaskedImageToHistogramFilterVID2ID2_New():
    return itkMaskedImageToHistogramFilterVID2ID2.New()

class itkMaskedImageToHistogramFilterVID2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ID2_swigregister(itkMaskedImageToHistogramFilterVID2ID2)

def itkMaskedImageToHistogramFilterVID2IF2_New():
    return itkMaskedImageToHistogramFilterVID2IF2.New()

class itkMaskedImageToHistogramFilterVID2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IF2_swigregister(itkMaskedImageToHistogramFilterVID2IF2)

def itkMaskedImageToHistogramFilterVID2ISS2_New():
    return itkMaskedImageToHistogramFilterVID2ISS2.New()

class itkMaskedImageToHistogramFilterVID2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2ISS2_swigregister(itkMaskedImageToHistogramFilterVID2ISS2)

def itkMaskedImageToHistogramFilterVID2IUC2_New():
    return itkMaskedImageToHistogramFilterVID2IUC2.New()

class itkMaskedImageToHistogramFilterVID2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUC2_swigregister(itkMaskedImageToHistogramFilterVID2IUC2)

def itkMaskedImageToHistogramFilterVID2IUS2_New():
    return itkMaskedImageToHistogramFilterVID2IUS2.New()

class itkMaskedImageToHistogramFilterVID2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVID2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID2IUS2_swigregister(itkMaskedImageToHistogramFilterVID2IUS2)

def itkMaskedImageToHistogramFilterVID3ID3_New():
    return itkMaskedImageToHistogramFilterVID3ID3.New()

class itkMaskedImageToHistogramFilterVID3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ID3_swigregister(itkMaskedImageToHistogramFilterVID3ID3)

def itkMaskedImageToHistogramFilterVID3IF3_New():
    return itkMaskedImageToHistogramFilterVID3IF3.New()

class itkMaskedImageToHistogramFilterVID3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IF3_swigregister(itkMaskedImageToHistogramFilterVID3IF3)

def itkMaskedImageToHistogramFilterVID3ISS3_New():
    return itkMaskedImageToHistogramFilterVID3ISS3.New()

class itkMaskedImageToHistogramFilterVID3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3ISS3_swigregister(itkMaskedImageToHistogramFilterVID3ISS3)

def itkMaskedImageToHistogramFilterVID3IUC3_New():
    return itkMaskedImageToHistogramFilterVID3IUC3.New()

class itkMaskedImageToHistogramFilterVID3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUC3_swigregister(itkMaskedImageToHistogramFilterVID3IUC3)

def itkMaskedImageToHistogramFilterVID3IUS3_New():
    return itkMaskedImageToHistogramFilterVID3IUS3.New()

class itkMaskedImageToHistogramFilterVID3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVID3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID3IUS3_swigregister(itkMaskedImageToHistogramFilterVID3IUS3)

def itkMaskedImageToHistogramFilterVID4ID4_New():
    return itkMaskedImageToHistogramFilterVID4ID4.New()

class itkMaskedImageToHistogramFilterVID4ID4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID4ID4

        Create a new object of the class itkMaskedImageToHistogramFilterVID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID4ID4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ID4_swigregister(itkMaskedImageToHistogramFilterVID4ID4)

def itkMaskedImageToHistogramFilterVID4IF4_New():
    return itkMaskedImageToHistogramFilterVID4IF4.New()

class itkMaskedImageToHistogramFilterVID4IF4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID4IF4

        Create a new object of the class itkMaskedImageToHistogramFilterVID4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID4IF4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IF4_swigregister(itkMaskedImageToHistogramFilterVID4IF4)

def itkMaskedImageToHistogramFilterVID4ISS4_New():
    return itkMaskedImageToHistogramFilterVID4ISS4.New()

class itkMaskedImageToHistogramFilterVID4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterVID4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4ISS4_swigregister(itkMaskedImageToHistogramFilterVID4ISS4)

def itkMaskedImageToHistogramFilterVID4IUC4_New():
    return itkMaskedImageToHistogramFilterVID4IUC4.New()

class itkMaskedImageToHistogramFilterVID4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterVID4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUC4_swigregister(itkMaskedImageToHistogramFilterVID4IUC4)

def itkMaskedImageToHistogramFilterVID4IUS4_New():
    return itkMaskedImageToHistogramFilterVID4IUS4.New()

class itkMaskedImageToHistogramFilterVID4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVID4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVID4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVID4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVID4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVID4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVID4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVID4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterVID4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVID4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVID4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVID4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVID4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVID4IUS4_swigregister(itkMaskedImageToHistogramFilterVID4IUS4)

def itkMaskedImageToHistogramFilterVIF2ID2_New():
    return itkMaskedImageToHistogramFilterVIF2ID2.New()

class itkMaskedImageToHistogramFilterVIF2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ID2_swigregister(itkMaskedImageToHistogramFilterVIF2ID2)

def itkMaskedImageToHistogramFilterVIF2IF2_New():
    return itkMaskedImageToHistogramFilterVIF2IF2.New()

class itkMaskedImageToHistogramFilterVIF2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IF2_swigregister(itkMaskedImageToHistogramFilterVIF2IF2)

def itkMaskedImageToHistogramFilterVIF2ISS2_New():
    return itkMaskedImageToHistogramFilterVIF2ISS2.New()

class itkMaskedImageToHistogramFilterVIF2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2ISS2_swigregister(itkMaskedImageToHistogramFilterVIF2ISS2)

def itkMaskedImageToHistogramFilterVIF2IUC2_New():
    return itkMaskedImageToHistogramFilterVIF2IUC2.New()

class itkMaskedImageToHistogramFilterVIF2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUC2_swigregister(itkMaskedImageToHistogramFilterVIF2IUC2)

def itkMaskedImageToHistogramFilterVIF2IUS2_New():
    return itkMaskedImageToHistogramFilterVIF2IUS2.New()

class itkMaskedImageToHistogramFilterVIF2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIF2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF2IUS2_swigregister(itkMaskedImageToHistogramFilterVIF2IUS2)

def itkMaskedImageToHistogramFilterVIF3ID3_New():
    return itkMaskedImageToHistogramFilterVIF3ID3.New()

class itkMaskedImageToHistogramFilterVIF3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ID3_swigregister(itkMaskedImageToHistogramFilterVIF3ID3)

def itkMaskedImageToHistogramFilterVIF3IF3_New():
    return itkMaskedImageToHistogramFilterVIF3IF3.New()

class itkMaskedImageToHistogramFilterVIF3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IF3_swigregister(itkMaskedImageToHistogramFilterVIF3IF3)

def itkMaskedImageToHistogramFilterVIF3ISS3_New():
    return itkMaskedImageToHistogramFilterVIF3ISS3.New()

class itkMaskedImageToHistogramFilterVIF3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3ISS3_swigregister(itkMaskedImageToHistogramFilterVIF3ISS3)

def itkMaskedImageToHistogramFilterVIF3IUC3_New():
    return itkMaskedImageToHistogramFilterVIF3IUC3.New()

class itkMaskedImageToHistogramFilterVIF3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUC3_swigregister(itkMaskedImageToHistogramFilterVIF3IUC3)

def itkMaskedImageToHistogramFilterVIF3IUS3_New():
    return itkMaskedImageToHistogramFilterVIF3IUS3.New()

class itkMaskedImageToHistogramFilterVIF3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIF3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF3IUS3_swigregister(itkMaskedImageToHistogramFilterVIF3IUS3)

def itkMaskedImageToHistogramFilterVIF4ID4_New():
    return itkMaskedImageToHistogramFilterVIF4ID4.New()

class itkMaskedImageToHistogramFilterVIF4ID4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF4ID4

        Create a new object of the class itkMaskedImageToHistogramFilterVIF4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF4ID4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ID4_swigregister(itkMaskedImageToHistogramFilterVIF4ID4)

def itkMaskedImageToHistogramFilterVIF4IF4_New():
    return itkMaskedImageToHistogramFilterVIF4IF4.New()

class itkMaskedImageToHistogramFilterVIF4IF4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF4IF4

        Create a new object of the class itkMaskedImageToHistogramFilterVIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF4IF4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IF4_swigregister(itkMaskedImageToHistogramFilterVIF4IF4)

def itkMaskedImageToHistogramFilterVIF4ISS4_New():
    return itkMaskedImageToHistogramFilterVIF4ISS4.New()

class itkMaskedImageToHistogramFilterVIF4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIF4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4ISS4_swigregister(itkMaskedImageToHistogramFilterVIF4ISS4)

def itkMaskedImageToHistogramFilterVIF4IUC4_New():
    return itkMaskedImageToHistogramFilterVIF4IUC4.New()

class itkMaskedImageToHistogramFilterVIF4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterVIF4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUC4_swigregister(itkMaskedImageToHistogramFilterVIF4IUC4)

def itkMaskedImageToHistogramFilterVIF4IUS4_New():
    return itkMaskedImageToHistogramFilterVIF4IUS4.New()

class itkMaskedImageToHistogramFilterVIF4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIF4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIF4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIF4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIF4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIF4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIF4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIF4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIF4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIF4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIF4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIF4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIF4IUS4_swigregister(itkMaskedImageToHistogramFilterVIF4IUS4)

def itkMaskedImageToHistogramFilterVISS2ID2_New():
    return itkMaskedImageToHistogramFilterVISS2ID2.New()

class itkMaskedImageToHistogramFilterVISS2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ID2_swigregister(itkMaskedImageToHistogramFilterVISS2ID2)

def itkMaskedImageToHistogramFilterVISS2IF2_New():
    return itkMaskedImageToHistogramFilterVISS2IF2.New()

class itkMaskedImageToHistogramFilterVISS2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IF2_swigregister(itkMaskedImageToHistogramFilterVISS2IF2)

def itkMaskedImageToHistogramFilterVISS2ISS2_New():
    return itkMaskedImageToHistogramFilterVISS2ISS2.New()

class itkMaskedImageToHistogramFilterVISS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2ISS2_swigregister(itkMaskedImageToHistogramFilterVISS2ISS2)

def itkMaskedImageToHistogramFilterVISS2IUC2_New():
    return itkMaskedImageToHistogramFilterVISS2IUC2.New()

class itkMaskedImageToHistogramFilterVISS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUC2_swigregister(itkMaskedImageToHistogramFilterVISS2IUC2)

def itkMaskedImageToHistogramFilterVISS2IUS2_New():
    return itkMaskedImageToHistogramFilterVISS2IUS2.New()

class itkMaskedImageToHistogramFilterVISS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVISS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS2IUS2_swigregister(itkMaskedImageToHistogramFilterVISS2IUS2)

def itkMaskedImageToHistogramFilterVISS3ID3_New():
    return itkMaskedImageToHistogramFilterVISS3ID3.New()

class itkMaskedImageToHistogramFilterVISS3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ID3_swigregister(itkMaskedImageToHistogramFilterVISS3ID3)

def itkMaskedImageToHistogramFilterVISS3IF3_New():
    return itkMaskedImageToHistogramFilterVISS3IF3.New()

class itkMaskedImageToHistogramFilterVISS3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IF3_swigregister(itkMaskedImageToHistogramFilterVISS3IF3)

def itkMaskedImageToHistogramFilterVISS3ISS3_New():
    return itkMaskedImageToHistogramFilterVISS3ISS3.New()

class itkMaskedImageToHistogramFilterVISS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3ISS3_swigregister(itkMaskedImageToHistogramFilterVISS3ISS3)

def itkMaskedImageToHistogramFilterVISS3IUC3_New():
    return itkMaskedImageToHistogramFilterVISS3IUC3.New()

class itkMaskedImageToHistogramFilterVISS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUC3_swigregister(itkMaskedImageToHistogramFilterVISS3IUC3)

def itkMaskedImageToHistogramFilterVISS3IUS3_New():
    return itkMaskedImageToHistogramFilterVISS3IUS3.New()

class itkMaskedImageToHistogramFilterVISS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVISS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS3IUS3_swigregister(itkMaskedImageToHistogramFilterVISS3IUS3)

def itkMaskedImageToHistogramFilterVISS4ID4_New():
    return itkMaskedImageToHistogramFilterVISS4ID4.New()

class itkMaskedImageToHistogramFilterVISS4ID4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS4ID4

        Create a new object of the class itkMaskedImageToHistogramFilterVISS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS4ID4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ID4_swigregister(itkMaskedImageToHistogramFilterVISS4ID4)

def itkMaskedImageToHistogramFilterVISS4IF4_New():
    return itkMaskedImageToHistogramFilterVISS4IF4.New()

class itkMaskedImageToHistogramFilterVISS4IF4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS4IF4

        Create a new object of the class itkMaskedImageToHistogramFilterVISS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS4IF4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IF4_swigregister(itkMaskedImageToHistogramFilterVISS4IF4)

def itkMaskedImageToHistogramFilterVISS4ISS4_New():
    return itkMaskedImageToHistogramFilterVISS4ISS4.New()

class itkMaskedImageToHistogramFilterVISS4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterVISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4ISS4_swigregister(itkMaskedImageToHistogramFilterVISS4ISS4)

def itkMaskedImageToHistogramFilterVISS4IUC4_New():
    return itkMaskedImageToHistogramFilterVISS4IUC4.New()

class itkMaskedImageToHistogramFilterVISS4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterVISS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUC4_swigregister(itkMaskedImageToHistogramFilterVISS4IUC4)

def itkMaskedImageToHistogramFilterVISS4IUS4_New():
    return itkMaskedImageToHistogramFilterVISS4IUS4.New()

class itkMaskedImageToHistogramFilterVISS4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVISS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVISS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVISS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVISS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVISS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVISS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVISS4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterVISS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVISS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVISS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVISS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVISS4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVISS4IUS4_swigregister(itkMaskedImageToHistogramFilterVISS4IUS4)

def itkMaskedImageToHistogramFilterVIUC2ID2_New():
    return itkMaskedImageToHistogramFilterVIUC2ID2.New()

class itkMaskedImageToHistogramFilterVIUC2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ID2_swigregister(itkMaskedImageToHistogramFilterVIUC2ID2)

def itkMaskedImageToHistogramFilterVIUC2IF2_New():
    return itkMaskedImageToHistogramFilterVIUC2IF2.New()

class itkMaskedImageToHistogramFilterVIUC2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IF2_swigregister(itkMaskedImageToHistogramFilterVIUC2IF2)

def itkMaskedImageToHistogramFilterVIUC2ISS2_New():
    return itkMaskedImageToHistogramFilterVIUC2ISS2.New()

class itkMaskedImageToHistogramFilterVIUC2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2ISS2_swigregister(itkMaskedImageToHistogramFilterVIUC2ISS2)

def itkMaskedImageToHistogramFilterVIUC2IUC2_New():
    return itkMaskedImageToHistogramFilterVIUC2IUC2.New()

class itkMaskedImageToHistogramFilterVIUC2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUC2_swigregister(itkMaskedImageToHistogramFilterVIUC2IUC2)

def itkMaskedImageToHistogramFilterVIUC2IUS2_New():
    return itkMaskedImageToHistogramFilterVIUC2IUS2.New()

class itkMaskedImageToHistogramFilterVIUC2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC2IUS2_swigregister(itkMaskedImageToHistogramFilterVIUC2IUS2)

def itkMaskedImageToHistogramFilterVIUC3ID3_New():
    return itkMaskedImageToHistogramFilterVIUC3ID3.New()

class itkMaskedImageToHistogramFilterVIUC3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ID3_swigregister(itkMaskedImageToHistogramFilterVIUC3ID3)

def itkMaskedImageToHistogramFilterVIUC3IF3_New():
    return itkMaskedImageToHistogramFilterVIUC3IF3.New()

class itkMaskedImageToHistogramFilterVIUC3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IF3_swigregister(itkMaskedImageToHistogramFilterVIUC3IF3)

def itkMaskedImageToHistogramFilterVIUC3ISS3_New():
    return itkMaskedImageToHistogramFilterVIUC3ISS3.New()

class itkMaskedImageToHistogramFilterVIUC3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3ISS3_swigregister(itkMaskedImageToHistogramFilterVIUC3ISS3)

def itkMaskedImageToHistogramFilterVIUC3IUC3_New():
    return itkMaskedImageToHistogramFilterVIUC3IUC3.New()

class itkMaskedImageToHistogramFilterVIUC3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUC3_swigregister(itkMaskedImageToHistogramFilterVIUC3IUC3)

def itkMaskedImageToHistogramFilterVIUC3IUS3_New():
    return itkMaskedImageToHistogramFilterVIUC3IUS3.New()

class itkMaskedImageToHistogramFilterVIUC3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC3IUS3_swigregister(itkMaskedImageToHistogramFilterVIUC3IUS3)

def itkMaskedImageToHistogramFilterVIUC4ID4_New():
    return itkMaskedImageToHistogramFilterVIUC4ID4.New()

class itkMaskedImageToHistogramFilterVIUC4ID4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC4ID4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC4ID4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ID4_swigregister(itkMaskedImageToHistogramFilterVIUC4ID4)

def itkMaskedImageToHistogramFilterVIUC4IF4_New():
    return itkMaskedImageToHistogramFilterVIUC4IF4.New()

class itkMaskedImageToHistogramFilterVIUC4IF4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC4IF4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC4IF4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IF4_swigregister(itkMaskedImageToHistogramFilterVIUC4IF4)

def itkMaskedImageToHistogramFilterVIUC4ISS4_New():
    return itkMaskedImageToHistogramFilterVIUC4ISS4.New()

class itkMaskedImageToHistogramFilterVIUC4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4ISS4_swigregister(itkMaskedImageToHistogramFilterVIUC4ISS4)

def itkMaskedImageToHistogramFilterVIUC4IUC4_New():
    return itkMaskedImageToHistogramFilterVIUC4IUC4.New()

class itkMaskedImageToHistogramFilterVIUC4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUC4_swigregister(itkMaskedImageToHistogramFilterVIUC4IUC4)

def itkMaskedImageToHistogramFilterVIUC4IUS4_New():
    return itkMaskedImageToHistogramFilterVIUC4IUS4.New()

class itkMaskedImageToHistogramFilterVIUC4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUC4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUC4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUC4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUC4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUC4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUC4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUC4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUC4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUC4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUC4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUC4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUC4IUS4_swigregister(itkMaskedImageToHistogramFilterVIUC4IUS4)

def itkMaskedImageToHistogramFilterVIUS2ID2_New():
    return itkMaskedImageToHistogramFilterVIUS2ID2.New()

class itkMaskedImageToHistogramFilterVIUS2ID2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS2ID2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2ID2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2ID2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ID2_swigregister(itkMaskedImageToHistogramFilterVIUS2ID2)

def itkMaskedImageToHistogramFilterVIUS2IF2_New():
    return itkMaskedImageToHistogramFilterVIUS2IF2.New()

class itkMaskedImageToHistogramFilterVIUS2IF2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS2IF2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IF2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IF2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IF2_swigregister(itkMaskedImageToHistogramFilterVIUS2IF2)

def itkMaskedImageToHistogramFilterVIUS2ISS2_New():
    return itkMaskedImageToHistogramFilterVIUS2ISS2.New()

class itkMaskedImageToHistogramFilterVIUS2ISS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS2ISS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2ISS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2ISS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2ISS2_swigregister(itkMaskedImageToHistogramFilterVIUS2ISS2)

def itkMaskedImageToHistogramFilterVIUS2IUC2_New():
    return itkMaskedImageToHistogramFilterVIUS2IUC2.New()

class itkMaskedImageToHistogramFilterVIUS2IUC2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS2IUC2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IUC2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IUC2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUC2_swigregister(itkMaskedImageToHistogramFilterVIUS2IUC2)

def itkMaskedImageToHistogramFilterVIUS2IUS2_New():
    return itkMaskedImageToHistogramFilterVIUS2IUS2.New()

class itkMaskedImageToHistogramFilterVIUS2IUS2(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS2):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS2IUS2_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS2"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS2IUS2

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS2IUS2 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS2IUS2_swigregister(itkMaskedImageToHistogramFilterVIUS2IUS2)

def itkMaskedImageToHistogramFilterVIUS3ID3_New():
    return itkMaskedImageToHistogramFilterVIUS3ID3.New()

class itkMaskedImageToHistogramFilterVIUS3ID3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS3ID3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3ID3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3ID3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ID3_swigregister(itkMaskedImageToHistogramFilterVIUS3ID3)

def itkMaskedImageToHistogramFilterVIUS3IF3_New():
    return itkMaskedImageToHistogramFilterVIUS3IF3.New()

class itkMaskedImageToHistogramFilterVIUS3IF3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS3IF3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IF3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IF3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IF3_swigregister(itkMaskedImageToHistogramFilterVIUS3IF3)

def itkMaskedImageToHistogramFilterVIUS3ISS3_New():
    return itkMaskedImageToHistogramFilterVIUS3ISS3.New()

class itkMaskedImageToHistogramFilterVIUS3ISS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS3ISS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3ISS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3ISS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3ISS3_swigregister(itkMaskedImageToHistogramFilterVIUS3ISS3)

def itkMaskedImageToHistogramFilterVIUS3IUC3_New():
    return itkMaskedImageToHistogramFilterVIUS3IUC3.New()

class itkMaskedImageToHistogramFilterVIUS3IUC3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS3IUC3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IUC3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IUC3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUC3_swigregister(itkMaskedImageToHistogramFilterVIUS3IUC3)

def itkMaskedImageToHistogramFilterVIUS3IUS3_New():
    return itkMaskedImageToHistogramFilterVIUS3IUS3.New()

class itkMaskedImageToHistogramFilterVIUS3IUS3(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS3):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS3IUS3_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS3"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS3IUS3

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS3IUS3 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS3IUS3_swigregister(itkMaskedImageToHistogramFilterVIUS3IUS3)

def itkMaskedImageToHistogramFilterVIUS4ID4_New():
    return itkMaskedImageToHistogramFilterVIUS4ID4.New()

class itkMaskedImageToHistogramFilterVIUS4ID4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS4ID4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageD4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorD const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: double const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorD"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> double const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS4ID4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS4ID4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ID4_swigregister(itkMaskedImageToHistogramFilterVIUS4ID4)

def itkMaskedImageToHistogramFilterVIUS4IF4_New():
    return itkMaskedImageToHistogramFilterVIUS4IF4.New()

class itkMaskedImageToHistogramFilterVIUS4IF4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS4IF4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageF4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorF const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: float const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorF"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> float const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS4IF4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS4IF4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IF4_swigregister(itkMaskedImageToHistogramFilterVIUS4IF4)

def itkMaskedImageToHistogramFilterVIUS4ISS4_New():
    return itkMaskedImageToHistogramFilterVIUS4ISS4.New()

class itkMaskedImageToHistogramFilterVIUS4ISS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS4ISS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageSS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorSS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorSS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS4ISS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS4ISS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4ISS4_swigregister(itkMaskedImageToHistogramFilterVIUS4ISS4)

def itkMaskedImageToHistogramFilterVIUS4IUC4_New():
    return itkMaskedImageToHistogramFilterVIUS4IUC4.New()

class itkMaskedImageToHistogramFilterVIUS4IUC4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS4IUC4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUC4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUC const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUC"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned char const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS4IUC4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS4IUC4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUC4_swigregister(itkMaskedImageToHistogramFilterVIUS4IUC4)

def itkMaskedImageToHistogramFilterVIUS4IUS4_New():
    return itkMaskedImageToHistogramFilterVIUS4IUS4.New()

class itkMaskedImageToHistogramFilterVIUS4IUS4(itk.itkImageToHistogramFilterPython.itkImageToHistogramFilterVIUS4):
    r"""Proxy of C++ itkMaskedImageToHistogramFilterVIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMaskedImageToHistogramFilterVIUS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMaskedImageToHistogramFilterVIUS4IUS4_Pointer"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_Clone(self)

    def SetMaskImage(self, _arg):
        r"""
        SetMaskImage(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_SetMaskImage(self, _arg)

    def GetMaskImage(self):
        r"""GetMaskImage(self) -> itkImageUS4"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_GetMaskImage(self)

    def SetMaskValueInput(self, _arg):
        r"""
        SetMaskValueInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_SetMaskValueInput(self, _arg)

    def SetMaskValue(self, *args):
        r"""
        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorUS const *

        SetMaskValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short const &

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_SetMaskValue(self, *args)

    def GetMaskValueInput(self):
        r"""GetMaskValueInput(self) -> itkSimpleDataObjectDecoratorUS"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_GetMaskValueInput(self)

    def GetMaskValue(self):
        r"""GetMaskValue(self) -> unsigned short const &"""
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_GetMaskValue(self)
    __swig_destroy__ = _itkMaskedImageToHistogramFilterPython.delete_itkMaskedImageToHistogramFilterVIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMaskedImageToHistogramFilterVIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMaskedImageToHistogramFilterVIUS4IUS4

        Create a new object of the class itkMaskedImageToHistogramFilterVIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMaskedImageToHistogramFilterVIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMaskedImageToHistogramFilterVIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMaskedImageToHistogramFilterVIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMaskedImageToHistogramFilterVIUS4IUS4 in _itkMaskedImageToHistogramFilterPython:
_itkMaskedImageToHistogramFilterPython.itkMaskedImageToHistogramFilterVIUS4IUS4_swigregister(itkMaskedImageToHistogramFilterVIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def masked_image_to_histogram_filter(*args: itkt.ImageLike,  mask_image: itkt.Image=..., mask_value_input=..., mask_value: int=..., histogram_size_input=..., histogram_size: Sequence[int]=..., marginal_scale_input=..., marginal_scale: float=..., histogram_bin_minimum_input=..., histogram_bin_minimum: Sequence[float]=..., histogram_bin_maximum_input=..., histogram_bin_maximum: Sequence[float]=..., auto_minimum_maximum_input=..., auto_minimum_maximum: bool=..., number_of_stream_divisions: int=...,**kwargs):
    """Functional interface for MaskedImageToHistogramFilter"""
    import itk

    kwarg_typehints = { 'mask_image':mask_image,'mask_value_input':mask_value_input,'mask_value':mask_value,'histogram_size_input':histogram_size_input,'histogram_size':histogram_size,'marginal_scale_input':marginal_scale_input,'marginal_scale':marginal_scale,'histogram_bin_minimum_input':histogram_bin_minimum_input,'histogram_bin_minimum':histogram_bin_minimum,'histogram_bin_maximum_input':histogram_bin_maximum_input,'histogram_bin_maximum':histogram_bin_maximum,'auto_minimum_maximum_input':auto_minimum_maximum_input,'auto_minimum_maximum':auto_minimum_maximum,'number_of_stream_divisions':number_of_stream_divisions }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MaskedImageToHistogramFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def masked_image_to_histogram_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKStatistics.MaskedImageToHistogramFilter
    masked_image_to_histogram_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    masked_image_to_histogram_filter.__doc__ = filter_object.__doc__



