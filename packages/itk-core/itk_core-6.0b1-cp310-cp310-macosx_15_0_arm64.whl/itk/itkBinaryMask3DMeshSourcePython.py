# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkBinaryMask3DMeshSourcePython
else:
    import _itkBinaryMask3DMeshSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.vnl_vector_refPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.ITKCommonBasePython
import itk.itkPointPython
import itk.itkCovariantVectorPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkRGBPixelPython
import itk.itkRGBAPixelPython
import itk.itkImageToMeshFilterPython
import itk.itkPointSetPython
import itk.itkVectorContainerPython
import itk.itkContinuousIndexPython
import itk.itkArrayPython
import itk.itkMeshSourcePython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython

def itkBinaryMask3DMeshSourceISS3MD3_New():
    return itkBinaryMask3DMeshSourceISS3MD3.New()

class itkBinaryMask3DMeshSourceISS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MD3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceISS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceISS3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceISS3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceISS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceISS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceISS3MD3

        Create a new object of the class itkBinaryMask3DMeshSourceISS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceISS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceISS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceISS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceISS3MD3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MD3_swigregister(itkBinaryMask3DMeshSourceISS3MD3)

def itkBinaryMask3DMeshSourceISS3MF3_New():
    return itkBinaryMask3DMeshSourceISS3MF3.New()

class itkBinaryMask3DMeshSourceISS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MF3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceISS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceISS3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceISS3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceISS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceISS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceISS3MF3

        Create a new object of the class itkBinaryMask3DMeshSourceISS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceISS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceISS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceISS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceISS3MF3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MF3_swigregister(itkBinaryMask3DMeshSourceISS3MF3)

def itkBinaryMask3DMeshSourceISS3MSS3_New():
    return itkBinaryMask3DMeshSourceISS3MSS3.New()

class itkBinaryMask3DMeshSourceISS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MSS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceISS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceISS3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceISS3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceISS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceISS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceISS3MSS3

        Create a new object of the class itkBinaryMask3DMeshSourceISS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceISS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceISS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceISS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceISS3MSS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MSS3_swigregister(itkBinaryMask3DMeshSourceISS3MSS3)

def itkBinaryMask3DMeshSourceISS3MUC3_New():
    return itkBinaryMask3DMeshSourceISS3MUC3.New()

class itkBinaryMask3DMeshSourceISS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUC3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceISS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceISS3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceISS3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceISS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceISS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceISS3MUC3

        Create a new object of the class itkBinaryMask3DMeshSourceISS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceISS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceISS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceISS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceISS3MUC3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUC3_swigregister(itkBinaryMask3DMeshSourceISS3MUC3)

def itkBinaryMask3DMeshSourceISS3MUS3_New():
    return itkBinaryMask3DMeshSourceISS3MUS3.New()

class itkBinaryMask3DMeshSourceISS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterISS3MUS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceISS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceISS3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceISS3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageSS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceISS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceISS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceISS3MUS3

        Create a new object of the class itkBinaryMask3DMeshSourceISS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceISS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceISS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceISS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceISS3MUS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceISS3MUS3_swigregister(itkBinaryMask3DMeshSourceISS3MUS3)

def itkBinaryMask3DMeshSourceIUC3MD3_New():
    return itkBinaryMask3DMeshSourceIUC3MD3.New()

class itkBinaryMask3DMeshSourceIUC3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MD3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUC3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUC3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUC3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUC3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUC3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUC3MD3

        Create a new object of the class itkBinaryMask3DMeshSourceIUC3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUC3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUC3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUC3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUC3MD3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MD3_swigregister(itkBinaryMask3DMeshSourceIUC3MD3)

def itkBinaryMask3DMeshSourceIUC3MF3_New():
    return itkBinaryMask3DMeshSourceIUC3MF3.New()

class itkBinaryMask3DMeshSourceIUC3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MF3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUC3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUC3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUC3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUC3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUC3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUC3MF3

        Create a new object of the class itkBinaryMask3DMeshSourceIUC3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUC3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUC3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUC3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUC3MF3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MF3_swigregister(itkBinaryMask3DMeshSourceIUC3MF3)

def itkBinaryMask3DMeshSourceIUC3MSS3_New():
    return itkBinaryMask3DMeshSourceIUC3MSS3.New()

class itkBinaryMask3DMeshSourceIUC3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MSS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUC3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUC3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUC3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUC3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUC3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUC3MSS3

        Create a new object of the class itkBinaryMask3DMeshSourceIUC3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUC3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUC3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUC3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUC3MSS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MSS3_swigregister(itkBinaryMask3DMeshSourceIUC3MSS3)

def itkBinaryMask3DMeshSourceIUC3MUC3_New():
    return itkBinaryMask3DMeshSourceIUC3MUC3.New()

class itkBinaryMask3DMeshSourceIUC3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUC3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUC3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUC3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUC3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUC3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUC3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUC3MUC3

        Create a new object of the class itkBinaryMask3DMeshSourceIUC3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUC3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUC3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUC3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUC3MUC3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUC3_swigregister(itkBinaryMask3DMeshSourceIUC3MUC3)

def itkBinaryMask3DMeshSourceIUC3MUS3_New():
    return itkBinaryMask3DMeshSourceIUC3MUS3.New()

class itkBinaryMask3DMeshSourceIUC3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUC3MUS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUC3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUC3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUC3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUC3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUC3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUC3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUC3MUS3

        Create a new object of the class itkBinaryMask3DMeshSourceIUC3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUC3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUC3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUC3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUC3MUS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUC3MUS3_swigregister(itkBinaryMask3DMeshSourceIUC3MUS3)

def itkBinaryMask3DMeshSourceIUS3MD3_New():
    return itkBinaryMask3DMeshSourceIUS3MD3.New()

class itkBinaryMask3DMeshSourceIUS3MD3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MD3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUS3MD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUS3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUS3MD3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUS3MD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUS3MD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUS3MD3

        Create a new object of the class itkBinaryMask3DMeshSourceIUS3MD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUS3MD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUS3MD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUS3MD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUS3MD3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MD3_swigregister(itkBinaryMask3DMeshSourceIUS3MD3)

def itkBinaryMask3DMeshSourceIUS3MF3_New():
    return itkBinaryMask3DMeshSourceIUS3MF3.New()

class itkBinaryMask3DMeshSourceIUS3MF3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MF3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUS3MF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUS3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUS3MF3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUS3MF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUS3MF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUS3MF3

        Create a new object of the class itkBinaryMask3DMeshSourceIUS3MF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUS3MF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUS3MF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUS3MF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUS3MF3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MF3_swigregister(itkBinaryMask3DMeshSourceIUS3MF3)

def itkBinaryMask3DMeshSourceIUS3MSS3_New():
    return itkBinaryMask3DMeshSourceIUS3MSS3.New()

class itkBinaryMask3DMeshSourceIUS3MSS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MSS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUS3MSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUS3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUS3MSS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUS3MSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUS3MSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUS3MSS3

        Create a new object of the class itkBinaryMask3DMeshSourceIUS3MSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUS3MSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUS3MSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUS3MSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUS3MSS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MSS3_swigregister(itkBinaryMask3DMeshSourceIUS3MSS3)

def itkBinaryMask3DMeshSourceIUS3MUC3_New():
    return itkBinaryMask3DMeshSourceIUS3MUC3.New()

class itkBinaryMask3DMeshSourceIUS3MUC3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUC3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUS3MUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUS3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUS3MUC3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUS3MUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUS3MUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUS3MUC3

        Create a new object of the class itkBinaryMask3DMeshSourceIUS3MUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUS3MUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUS3MUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUS3MUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUS3MUC3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUC3_swigregister(itkBinaryMask3DMeshSourceIUS3MUC3)

def itkBinaryMask3DMeshSourceIUS3MUS3_New():
    return itkBinaryMask3DMeshSourceIUS3MUS3.New()

class itkBinaryMask3DMeshSourceIUS3MUS3(itk.itkImageToMeshFilterPython.itkImageToMeshFilterIUS3MUS3):
    r"""Proxy of C++ itkBinaryMask3DMeshSourceIUS3MUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkBinaryMask3DMeshSourceIUS3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkBinaryMask3DMeshSourceIUS3MUS3_Pointer"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_Clone(self)

    def SetObjectValue(self, _arg):
        r"""
        SetObjectValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_SetObjectValue(self, _arg)

    def GetNumberOfNodes(self):
        r"""GetNumberOfNodes(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_GetNumberOfNodes(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_GetNumberOfCells(self)

    def SetInput(self, image):
        r"""
        SetInput(self, image)

        Parameters
        ----------
        image: itkImageUS3 const *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_SetInput(self, image)

    def SetRegionOfInterest(self, iRegion):
        r"""
        SetRegionOfInterest(self, iRegion)

        Parameters
        ----------
        iRegion: itkImageRegion3 const &

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_SetRegionOfInterest(self, iRegion)

    def GetRegionOfInterest(self):
        r"""GetRegionOfInterest(self) -> itkImageRegion3"""
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_GetRegionOfInterest(self)
    __swig_destroy__ = _itkBinaryMask3DMeshSourcePython.delete_itkBinaryMask3DMeshSourceIUS3MUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkBinaryMask3DMeshSourceIUS3MUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkBinaryMask3DMeshSourceIUS3MUS3

        Create a new object of the class itkBinaryMask3DMeshSourceIUS3MUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkBinaryMask3DMeshSourceIUS3MUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkBinaryMask3DMeshSourceIUS3MUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkBinaryMask3DMeshSourceIUS3MUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkBinaryMask3DMeshSourceIUS3MUS3 in _itkBinaryMask3DMeshSourcePython:
_itkBinaryMask3DMeshSourcePython.itkBinaryMask3DMeshSourceIUS3MUS3_swigregister(itkBinaryMask3DMeshSourceIUS3MUS3)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def binary_mask3_d_mesh_source(*args: itkt.ImageLike,  object_value: int=..., region_of_interest: itkt.ImageRegion=..., output: itkt.Mesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for BinaryMask3DMeshSource"""
    import itk

    kwarg_typehints = { 'object_value':object_value,'region_of_interest':region_of_interest,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.BinaryMask3DMeshSource.New(*args, **kwargs)

    return instance.__internal_call__()

def binary_mask3_d_mesh_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKMesh.BinaryMask3DMeshSource
    binary_mask3_d_mesh_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    binary_mask3_d_mesh_source.__doc__ = filter_object.__doc__



