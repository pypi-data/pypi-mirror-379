# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkPhasedArray3DSpecialCoordinatesImagePython
else:
    import _itkPhasedArray3DSpecialCoordinatesImagePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython

def itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageCD_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageCD_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageCD_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: stdcomplexD const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: stdcomplexD const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> stdcomplexD

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> stdcomplexD

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> stdcomplexD
        GetBufferPointer(self) -> stdcomplexD
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,std::complex< double > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,std::complex< double > > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,std::complex< double > > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< double > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< double > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageCD_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageCD_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageCD_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageCD_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageCD_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageCD_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageCD_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageCD_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageCD_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageCF_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageCF_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageCF_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: stdcomplexF const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: stdcomplexF const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> stdcomplexF

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> stdcomplexF

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> stdcomplexF
        GetBufferPointer(self) -> stdcomplexF
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,std::complex< float > >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,std::complex< float > > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,std::complex< float > > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< float > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< float > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageCF_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageCF_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageCF_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageCF_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageCF_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageCF_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageCF_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageCF_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageCF_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageD_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageD_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageD_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageD_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageD_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageD_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: double const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: double const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> double const

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> double &

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> double
        GetBufferPointer(self) -> double const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,double >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,double > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,double > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< double >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< double > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageD_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageD_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageD_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageD_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageD_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageD_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageD_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageD_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageD_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageF_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageF_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageF_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageF_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageF_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageF_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: float const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: float const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> float const

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> float &

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> float
        GetBufferPointer(self) -> float const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,float >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,float > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,float > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< float >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< float > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageF_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageF_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageF_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageF_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageF_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageF_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageF_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageF_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageF_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageSS_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageSS_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageSS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: short const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: short const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> short const

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> short &

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> short
        GetBufferPointer(self) -> short const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,short >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,short > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,short > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< short >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< short > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageSS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageSS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageSS_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageSS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageSS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageSS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageSS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageSS_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageSS_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageUC_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageUC_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageUC_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: unsigned char const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: unsigned char const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> unsigned char const

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> unsigned char &

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> unsigned char
        GetBufferPointer(self) -> unsigned char const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,unsigned char >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,unsigned char > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,unsigned char > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned char >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned char > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageUC_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageUC_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageUC_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageUC_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageUC_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageUC_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageUC_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageUC_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageUC_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_New():
    return itkPhasedArray3DSpecialCoordinatesImageUS_Superclass.New()

class itkPhasedArray3DSpecialCoordinatesImageUS_Superclass(itk.itkImagePython.itkImageBase3):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageUS_Superclass class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_Clone(self)

    def Allocate(self, initialize=False):
        r"""
        Allocate(self, initialize=False)

        Parameters
        ----------
        initialize: bool

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_Allocate(self, initialize)

    def FillBuffer(self, value):
        r"""
        FillBuffer(self, value)

        Parameters
        ----------
        value: unsigned short const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_FillBuffer(self, value)

    def SetPixel(self, index, value):
        r"""
        SetPixel(self, index, value)

        Parameters
        ----------
        index: itkIndex3 const &
        value: unsigned short const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_SetPixel(self, index, value)

    def GetPixel(self, *args):
        r"""
        GetPixel(self, index) -> unsigned short const

        Parameters
        ----------
        index: itkIndex3 const &

        GetPixel(self, index) -> unsigned short &

        Parameters
        ----------
        index: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_GetPixel(self, *args)

    def GetBufferPointer(self, *args):
        r"""
        GetBufferPointer(self) -> unsigned short
        GetBufferPointer(self) -> unsigned short const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_GetBufferPointer(self, *args)

    def GetPixelContainer(self, *args):
        r"""
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,unsigned short >
        GetPixelContainer(self) -> itk::ImportImageContainer< unsigned long,unsigned short > const *
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_GetPixelContainer(self, *args)

    def SetPixelContainer(self, container):
        r"""
        SetPixelContainer(self, container)

        Parameters
        ----------
        container: itk::ImportImageContainer< unsigned long,unsigned short > *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_SetPixelContainer(self, container)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned short >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned short > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_GetPixelAccessor(self, *args)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: itkVectorD3 const &

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetSpacing(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_SetSpacing(self, *args)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: itkPointD3 const

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: double const *

        SetOrigin(self, arg0)

        Parameters
        ----------
        arg0: float const *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_SetOrigin(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageUS_Superclass

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageUS_Superclass

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_cast(obj)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageUS_Superclass

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageUS_Superclass and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageUS_Superclass.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageUS_Superclass.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageUS_Superclass.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageUS_Superclass in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Superclass_swigregister(itkPhasedArray3DSpecialCoordinatesImageUS_Superclass)

def itkPhasedArray3DSpecialCoordinatesImageCD_New():
    return itkPhasedArray3DSpecialCoordinatesImageCD.New()

class itkPhasedArray3DSpecialCoordinatesImageCD(itkPhasedArray3DSpecialCoordinatesImageCD_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageCD_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageCD_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< double > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< double > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< std::complex< double > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< std::complex< double > > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageCD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageCD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageCD

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageCD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageCD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageCD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageCD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageCD in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCD_swigregister(itkPhasedArray3DSpecialCoordinatesImageCD)

def itkPhasedArray3DSpecialCoordinatesImageCF_New():
    return itkPhasedArray3DSpecialCoordinatesImageCF.New()

class itkPhasedArray3DSpecialCoordinatesImageCF(itkPhasedArray3DSpecialCoordinatesImageCF_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageCF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageCF_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageCF_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< float > >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< std::complex< float > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< std::complex< float > > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< std::complex< float > > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageCF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageCF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageCF

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageCF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageCF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageCF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageCF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageCF in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageCF_swigregister(itkPhasedArray3DSpecialCoordinatesImageCF)

def itkPhasedArray3DSpecialCoordinatesImageD_New():
    return itkPhasedArray3DSpecialCoordinatesImageD.New()

class itkPhasedArray3DSpecialCoordinatesImageD(itkPhasedArray3DSpecialCoordinatesImageD_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageD_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageD_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< double >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< double > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< double > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< double > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageD

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageD and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageD.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageD.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageD.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageD in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageD_swigregister(itkPhasedArray3DSpecialCoordinatesImageD)

def itkPhasedArray3DSpecialCoordinatesImageF_New():
    return itkPhasedArray3DSpecialCoordinatesImageF.New()

class itkPhasedArray3DSpecialCoordinatesImageF(itkPhasedArray3DSpecialCoordinatesImageF_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageF_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageF_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< float >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< float > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< float > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< float > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageF

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageF in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageF_swigregister(itkPhasedArray3DSpecialCoordinatesImageF)

def itkPhasedArray3DSpecialCoordinatesImageSS_New():
    return itkPhasedArray3DSpecialCoordinatesImageSS.New()

class itkPhasedArray3DSpecialCoordinatesImageSS(itkPhasedArray3DSpecialCoordinatesImageSS_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageSS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageSS_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageSS_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< short >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< short > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< short > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< short > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageSS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageSS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageSS

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageSS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageSS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageSS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageSS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageSS in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageSS_swigregister(itkPhasedArray3DSpecialCoordinatesImageSS)

def itkPhasedArray3DSpecialCoordinatesImageUC_New():
    return itkPhasedArray3DSpecialCoordinatesImageUC.New()

class itkPhasedArray3DSpecialCoordinatesImageUC(itkPhasedArray3DSpecialCoordinatesImageUC_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageUC_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageUC_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned char >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned char > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< unsigned char > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< unsigned char > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageUC

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageUC in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUC_swigregister(itkPhasedArray3DSpecialCoordinatesImageUC)

def itkPhasedArray3DSpecialCoordinatesImageUS_New():
    return itkPhasedArray3DSpecialCoordinatesImageUS.New()

class itkPhasedArray3DSpecialCoordinatesImageUS(itkPhasedArray3DSpecialCoordinatesImageUS_Superclass):
    r"""Proxy of C++ itkPhasedArray3DSpecialCoordinatesImageUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkPhasedArray3DSpecialCoordinatesImageUS_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkPhasedArray3DSpecialCoordinatesImageUS_Pointer"""
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_Clone(self)

    def SetAzimuthAngularSeparation(self, _arg):
        r"""
        SetAzimuthAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_SetAzimuthAngularSeparation(self, _arg)

    def SetElevationAngularSeparation(self, _arg):
        r"""
        SetElevationAngularSeparation(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_SetElevationAngularSeparation(self, _arg)

    def SetRadiusSampleSize(self, _arg):
        r"""
        SetRadiusSampleSize(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_SetRadiusSampleSize(self, _arg)

    def SetFirstSampleDistance(self, _arg):
        r"""
        SetFirstSampleDistance(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_SetFirstSampleDistance(self, _arg)

    def GetPixelAccessor(self, *args):
        r"""
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned short >
        GetPixelAccessor(self) -> itk::DefaultPixelAccessor< unsigned short > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_GetPixelAccessor(self, *args)

    def GetNeighborhoodAccessor(self, *args):
        r"""
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< unsigned short > >
        GetNeighborhoodAccessor(self) -> itk::NeighborhoodAccessorFunctor< itk::PhasedArray3DSpecialCoordinatesImage< unsigned short > > const
        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_GetNeighborhoodAccessor(self, *args)
    __swig_destroy__ = _itkPhasedArray3DSpecialCoordinatesImagePython.delete_itkPhasedArray3DSpecialCoordinatesImageUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkPhasedArray3DSpecialCoordinatesImageUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_cast(obj)

    def TransformPhysicalPointToIndex(self, point):
        r"""
        TransformPhysicalPointToIndex(self, point) -> itkIndex3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_TransformPhysicalPointToIndex(self, point)

    def TransformPhysicalPointToContinuousIndex(self, point):
        r"""
        TransformPhysicalPointToContinuousIndex(self, point) -> itkContinuousIndexD3

        Parameters
        ----------
        point: itkPointD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_TransformPhysicalPointToContinuousIndex(self, point)

    def TransformContinuousIndexToPhysicalPoint(self, idx):
        r"""
        TransformContinuousIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkContinuousIndexD3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_TransformContinuousIndexToPhysicalPoint(self, idx)

    def TransformIndexToPhysicalPoint(self, idx):
        r"""
        TransformIndexToPhysicalPoint(self, idx) -> itkPointD3

        Parameters
        ----------
        idx: itkIndex3 const &

        """
        return _itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_TransformIndexToPhysicalPoint(self, idx)

    def New(*args, **kargs):
        """New() -> itkPhasedArray3DSpecialCoordinatesImageUS

        Create a new object of the class itkPhasedArray3DSpecialCoordinatesImageUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkPhasedArray3DSpecialCoordinatesImageUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkPhasedArray3DSpecialCoordinatesImageUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkPhasedArray3DSpecialCoordinatesImageUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkPhasedArray3DSpecialCoordinatesImageUS in _itkPhasedArray3DSpecialCoordinatesImagePython:
_itkPhasedArray3DSpecialCoordinatesImagePython.itkPhasedArray3DSpecialCoordinatesImageUS_swigregister(itkPhasedArray3DSpecialCoordinatesImageUS)

