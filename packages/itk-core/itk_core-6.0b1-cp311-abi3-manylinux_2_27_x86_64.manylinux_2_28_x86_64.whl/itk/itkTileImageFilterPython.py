# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkTileImageFilterPython
else:
    import _itkTileImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageToImageFilterBPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterAPython

def itkTileImageFilterID2ID2_New():
    return itkTileImageFilterID2ID2.New()

class itkTileImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkTileImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID2ID2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID2ID2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI2"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID2_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID2_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID2ID2

        Create a new object of the class itkTileImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID2ID2 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID2ID2_swigregister(itkTileImageFilterID2ID2)

def itkTileImageFilterID2ID3_New():
    return itkTileImageFilterID2ID3.New()

class itkTileImageFilterID2ID3(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2ID3):
    r"""Proxy of C++ itkTileImageFilterID2ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID2ID3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID2ID3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID2ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID2ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID2ID3

        Create a new object of the class itkTileImageFilterID2ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID2ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID2ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID2ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID2ID3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID2ID3_swigregister(itkTileImageFilterID2ID3)

def itkTileImageFilterID2ID4_New():
    return itkTileImageFilterID2ID4.New()

class itkTileImageFilterID2ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID2ID4):
    r"""Proxy of C++ itkTileImageFilterID2ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID2ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID2ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID2ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID2ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID2ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID2ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID2ID4

        Create a new object of the class itkTileImageFilterID2ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID2ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID2ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID2ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID2ID4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID2ID4_swigregister(itkTileImageFilterID2ID4)

def itkTileImageFilterID3ID3_New():
    return itkTileImageFilterID3ID3.New()

class itkTileImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkTileImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID3ID3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID3ID3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID3ID3

        Create a new object of the class itkTileImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID3ID3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID3ID3_swigregister(itkTileImageFilterID3ID3)

def itkTileImageFilterID3ID4_New():
    return itkTileImageFilterID3ID4.New()

class itkTileImageFilterID3ID4(itk.itkImageToImageFilterBPython.itkImageToImageFilterID3ID4):
    r"""Proxy of C++ itkTileImageFilterID3ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID3ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID3ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID3ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID3ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID3ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID3ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID3ID4

        Create a new object of the class itkTileImageFilterID3ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID3ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID3ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID3ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID3ID4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID3ID4_swigregister(itkTileImageFilterID3ID4)

def itkTileImageFilterID4ID4_New():
    return itkTileImageFilterID4ID4.New()

class itkTileImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkTileImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterID4ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterID4ID4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> double"""
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterID4ID4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterID4ID4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterID4ID4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterID4ID4

        Create a new object of the class itkTileImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterID4ID4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterID4ID4_swigregister(itkTileImageFilterID4ID4)

def itkTileImageFilterIF2IF2_New():
    return itkTileImageFilterIF2IF2.New()

class itkTileImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkTileImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF2IF2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF2IF2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI2"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF2_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF2_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF2IF2

        Create a new object of the class itkTileImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF2IF2 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF2IF2_swigregister(itkTileImageFilterIF2IF2)

def itkTileImageFilterIF2IF3_New():
    return itkTileImageFilterIF2IF3.New()

class itkTileImageFilterIF2IF3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IF3):
    r"""Proxy of C++ itkTileImageFilterIF2IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF2IF3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF2IF3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF2IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF2IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF2IF3

        Create a new object of the class itkTileImageFilterIF2IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF2IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF2IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF2IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF2IF3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF2IF3_swigregister(itkTileImageFilterIF2IF3)

def itkTileImageFilterIF2IF4_New():
    return itkTileImageFilterIF2IF4.New()

class itkTileImageFilterIF2IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF2IF4):
    r"""Proxy of C++ itkTileImageFilterIF2IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF2IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF2IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF2IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF2IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF2IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF2IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF2IF4

        Create a new object of the class itkTileImageFilterIF2IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF2IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF2IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF2IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF2IF4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF2IF4_swigregister(itkTileImageFilterIF2IF4)

def itkTileImageFilterIF3IF3_New():
    return itkTileImageFilterIF3IF3.New()

class itkTileImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkTileImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF3IF3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF3IF3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF3IF3

        Create a new object of the class itkTileImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF3IF3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF3IF3_swigregister(itkTileImageFilterIF3IF3)

def itkTileImageFilterIF3IF4_New():
    return itkTileImageFilterIF3IF4.New()

class itkTileImageFilterIF3IF4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIF3IF4):
    r"""Proxy of C++ itkTileImageFilterIF3IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF3IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF3IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF3IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF3IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF3IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF3IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF3IF4

        Create a new object of the class itkTileImageFilterIF3IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF3IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF3IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF3IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF3IF4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF3IF4_swigregister(itkTileImageFilterIF3IF4)

def itkTileImageFilterIF4IF4_New():
    return itkTileImageFilterIF4IF4.New()

class itkTileImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkTileImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIF4IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIF4IF4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> float"""
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIF4IF4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIF4IF4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIF4IF4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIF4IF4

        Create a new object of the class itkTileImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIF4IF4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIF4IF4_swigregister(itkTileImageFilterIF4IF4)

def itkTileImageFilterISS2ISS2_New():
    return itkTileImageFilterISS2ISS2.New()

class itkTileImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkTileImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS2ISS2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS2ISS2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI2"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS2ISS2

        Create a new object of the class itkTileImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS2ISS2 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS2ISS2_swigregister(itkTileImageFilterISS2ISS2)

def itkTileImageFilterISS2ISS3_New():
    return itkTileImageFilterISS2ISS3.New()

class itkTileImageFilterISS2ISS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2ISS3):
    r"""Proxy of C++ itkTileImageFilterISS2ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS2ISS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS2ISS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS2ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS2ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS2ISS3

        Create a new object of the class itkTileImageFilterISS2ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS2ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS2ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS2ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS2ISS3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS2ISS3_swigregister(itkTileImageFilterISS2ISS3)

def itkTileImageFilterISS2ISS4_New():
    return itkTileImageFilterISS2ISS4.New()

class itkTileImageFilterISS2ISS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS2ISS4):
    r"""Proxy of C++ itkTileImageFilterISS2ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS2ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS2ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS2ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS2ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS2ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS2ISS4

        Create a new object of the class itkTileImageFilterISS2ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS2ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS2ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS2ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS2ISS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS2ISS4_swigregister(itkTileImageFilterISS2ISS4)

def itkTileImageFilterISS3ISS3_New():
    return itkTileImageFilterISS3ISS3.New()

class itkTileImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkTileImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS3ISS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS3ISS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS3ISS3

        Create a new object of the class itkTileImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS3ISS3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS3ISS3_swigregister(itkTileImageFilterISS3ISS3)

def itkTileImageFilterISS3ISS4_New():
    return itkTileImageFilterISS3ISS4.New()

class itkTileImageFilterISS3ISS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterISS3ISS4):
    r"""Proxy of C++ itkTileImageFilterISS3ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS3ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS3ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS3ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS3ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS3ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS3ISS4

        Create a new object of the class itkTileImageFilterISS3ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS3ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS3ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS3ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS3ISS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS3ISS4_swigregister(itkTileImageFilterISS3ISS4)

def itkTileImageFilterISS4ISS4_New():
    return itkTileImageFilterISS4ISS4.New()

class itkTileImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkTileImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterISS4ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterISS4ISS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> short"""
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterISS4ISS4

        Create a new object of the class itkTileImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterISS4ISS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterISS4ISS4_swigregister(itkTileImageFilterISS4ISS4)

def itkTileImageFilterIUC2IUC2_New():
    return itkTileImageFilterIUC2IUC2.New()

class itkTileImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkTileImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC2IUC2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC2IUC2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI2"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC2IUC2

        Create a new object of the class itkTileImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC2IUC2 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC2IUC2_swigregister(itkTileImageFilterIUC2IUC2)

def itkTileImageFilterIUC2IUC3_New():
    return itkTileImageFilterIUC2IUC3.New()

class itkTileImageFilterIUC2IUC3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC3):
    r"""Proxy of C++ itkTileImageFilterIUC2IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC2IUC3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC2IUC3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC2IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC2IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC2IUC3

        Create a new object of the class itkTileImageFilterIUC2IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC2IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC2IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC2IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC2IUC3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC2IUC3_swigregister(itkTileImageFilterIUC2IUC3)

def itkTileImageFilterIUC2IUC4_New():
    return itkTileImageFilterIUC2IUC4.New()

class itkTileImageFilterIUC2IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC2IUC4):
    r"""Proxy of C++ itkTileImageFilterIUC2IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC2IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC2IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC2IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC2IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC2IUC4

        Create a new object of the class itkTileImageFilterIUC2IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC2IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC2IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC2IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC2IUC4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC2IUC4_swigregister(itkTileImageFilterIUC2IUC4)

def itkTileImageFilterIUC3IUC3_New():
    return itkTileImageFilterIUC3IUC3.New()

class itkTileImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkTileImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC3IUC3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC3IUC3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC3IUC3

        Create a new object of the class itkTileImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC3IUC3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC3IUC3_swigregister(itkTileImageFilterIUC3IUC3)

def itkTileImageFilterIUC3IUC4_New():
    return itkTileImageFilterIUC3IUC4.New()

class itkTileImageFilterIUC3IUC4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUC3IUC4):
    r"""Proxy of C++ itkTileImageFilterIUC3IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC3IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC3IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC3IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC3IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC3IUC4

        Create a new object of the class itkTileImageFilterIUC3IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC3IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC3IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC3IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC3IUC4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC3IUC4_swigregister(itkTileImageFilterIUC3IUC4)

def itkTileImageFilterIUC4IUC4_New():
    return itkTileImageFilterIUC4IUC4.New()

class itkTileImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkTileImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUC4IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUC4IUC4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned char"""
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUC4IUC4

        Create a new object of the class itkTileImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUC4IUC4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUC4IUC4_swigregister(itkTileImageFilterIUC4IUC4)

def itkTileImageFilterIUS2IUS2_New():
    return itkTileImageFilterIUS2IUS2.New()

class itkTileImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkTileImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS2IUS2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS2IUS2_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI2"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS2IUS2

        Create a new object of the class itkTileImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS2IUS2 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS2IUS2_swigregister(itkTileImageFilterIUS2IUS2)

def itkTileImageFilterIUS2IUS3_New():
    return itkTileImageFilterIUS2IUS3.New()

class itkTileImageFilterIUS2IUS3(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS3):
    r"""Proxy of C++ itkTileImageFilterIUS2IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS2IUS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS2IUS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS2IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS2IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS2IUS3

        Create a new object of the class itkTileImageFilterIUS2IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS2IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS2IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS2IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS2IUS3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS2IUS3_swigregister(itkTileImageFilterIUS2IUS3)

def itkTileImageFilterIUS2IUS4_New():
    return itkTileImageFilterIUS2IUS4.New()

class itkTileImageFilterIUS2IUS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS2IUS4):
    r"""Proxy of C++ itkTileImageFilterIUS2IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS2IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS2IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS2IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS2IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS2IUS4

        Create a new object of the class itkTileImageFilterIUS2IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS2IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS2IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS2IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS2IUS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS2IUS4_swigregister(itkTileImageFilterIUS2IUS4)

def itkTileImageFilterIUS3IUS3_New():
    return itkTileImageFilterIUS3IUS3.New()

class itkTileImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkTileImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS3IUS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS3IUS3_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI3"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS3IUS3

        Create a new object of the class itkTileImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS3IUS3 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS3IUS3_swigregister(itkTileImageFilterIUS3IUS3)

def itkTileImageFilterIUS3IUS4_New():
    return itkTileImageFilterIUS3IUS4.New()

class itkTileImageFilterIUS3IUS4(itk.itkImageToImageFilterBPython.itkImageToImageFilterIUS3IUS4):
    r"""Proxy of C++ itkTileImageFilterIUS3IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS3IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS3IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS3IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS3IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS3IUS4

        Create a new object of the class itkTileImageFilterIUS3IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS3IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS3IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS3IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS3IUS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS3IUS4_swigregister(itkTileImageFilterIUS3IUS4)

def itkTileImageFilterIUS4IUS4_New():
    return itkTileImageFilterIUS4IUS4.New()

class itkTileImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkTileImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkTileImageFilterIUS4IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkTileImageFilterIUS4IUS4_Pointer"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_Clone(self)

    def SetLayout(self, _arg):
        r"""
        SetLayout(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_SetLayout(self, _arg)

    def GetLayout(self):
        r"""GetLayout(self) -> itkFixedArrayUI4"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_GetLayout(self)

    def SetDefaultPixelValue(self, _arg):
        r"""
        SetDefaultPixelValue(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_SetDefaultPixelValue(self, _arg)

    def GetDefaultPixelValue(self):
        r"""GetDefaultPixelValue(self) -> unsigned short"""
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_GetDefaultPixelValue(self)
    OutputEqualityComparableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_OutputEqualityComparableCheck
    
    SameTypeCheck = _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_SameTypeCheck
    
    OutputOStreamWritableCheck = _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_OutputOStreamWritableCheck
    
    __swig_destroy__ = _itkTileImageFilterPython.delete_itkTileImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkTileImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkTileImageFilterIUS4IUS4

        Create a new object of the class itkTileImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkTileImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkTileImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkTileImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkTileImageFilterIUS4IUS4 in _itkTileImageFilterPython:
_itkTileImageFilterPython.itkTileImageFilterIUS4IUS4_swigregister(itkTileImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def tile_image_filter(*args: itkt.ImageLike,  layout: Sequence[int]=..., default_pixel_value: float=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for TileImageFilter"""
    import itk

    kwarg_typehints = { 'layout':layout,'default_pixel_value':default_pixel_value }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.TileImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def tile_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.TileImageFilter
    tile_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    tile_image_filter.__doc__ = filter_object.__doc__



