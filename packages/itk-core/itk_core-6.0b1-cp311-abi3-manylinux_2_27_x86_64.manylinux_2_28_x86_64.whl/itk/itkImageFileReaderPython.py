# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIOImageBasePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkImageFileReaderPython
else:
    import _itkImageFileReaderPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageSourcePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkSimpleDataObjectDecoratorPython
import itk.itkArrayPython
import itk.ITKIOImageBaseBasePython

def itkImageFileReaderICD2_New():
    return itkImageFileReaderICD2.New()

class itkImageFileReaderICD2(itk.itkImageSourcePython.itkImageSourceICD2):
    r"""Proxy of C++ itkImageFileReaderICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICD2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICD2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICD2

        Create a new object of the class itkImageFileReaderICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICD2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICD2_swigregister(itkImageFileReaderICD2)

def itkImageFileReaderICD3_New():
    return itkImageFileReaderICD3.New()

class itkImageFileReaderICD3(itk.itkImageSourcePython.itkImageSourceICD3):
    r"""Proxy of C++ itkImageFileReaderICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICD3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICD3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICD3

        Create a new object of the class itkImageFileReaderICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICD3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICD3_swigregister(itkImageFileReaderICD3)

def itkImageFileReaderICD4_New():
    return itkImageFileReaderICD4.New()

class itkImageFileReaderICD4(itk.itkImageSourcePython.itkImageSourceICD4):
    r"""Proxy of C++ itkImageFileReaderICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICD4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICD4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICD4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICD4

        Create a new object of the class itkImageFileReaderICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICD4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICD4_swigregister(itkImageFileReaderICD4)

def itkImageFileReaderICF2_New():
    return itkImageFileReaderICF2.New()

class itkImageFileReaderICF2(itk.itkImageSourcePython.itkImageSourceICF2):
    r"""Proxy of C++ itkImageFileReaderICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICF2

        Create a new object of the class itkImageFileReaderICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICF2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICF2_swigregister(itkImageFileReaderICF2)

def itkImageFileReaderICF3_New():
    return itkImageFileReaderICF3.New()

class itkImageFileReaderICF3(itk.itkImageSourcePython.itkImageSourceICF3):
    r"""Proxy of C++ itkImageFileReaderICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICF3

        Create a new object of the class itkImageFileReaderICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICF3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICF3_swigregister(itkImageFileReaderICF3)

def itkImageFileReaderICF4_New():
    return itkImageFileReaderICF4.New()

class itkImageFileReaderICF4(itk.itkImageSourcePython.itkImageSourceICF4):
    r"""Proxy of C++ itkImageFileReaderICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICF4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICF4

        Create a new object of the class itkImageFileReaderICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICF4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICF4_swigregister(itkImageFileReaderICF4)

def itkImageFileReaderICVF22_New():
    return itkImageFileReaderICVF22.New()

class itkImageFileReaderICVF22(itk.itkImageSourcePython.itkImageSourceICVF22):
    r"""Proxy of C++ itkImageFileReaderICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF22_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF22_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF22

        Create a new object of the class itkImageFileReaderICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF22 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF22_swigregister(itkImageFileReaderICVF22)

def itkImageFileReaderICVF23_New():
    return itkImageFileReaderICVF23.New()

class itkImageFileReaderICVF23(itk.itkImageSourcePython.itkImageSourceICVF23):
    r"""Proxy of C++ itkImageFileReaderICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF23_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF23_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF23

        Create a new object of the class itkImageFileReaderICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF23 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF23_swigregister(itkImageFileReaderICVF23)

def itkImageFileReaderICVF24_New():
    return itkImageFileReaderICVF24.New()

class itkImageFileReaderICVF24(itk.itkImageSourcePython.itkImageSourceICVF24):
    r"""Proxy of C++ itkImageFileReaderICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF24_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF24_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF24

        Create a new object of the class itkImageFileReaderICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF24 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF24_swigregister(itkImageFileReaderICVF24)

def itkImageFileReaderICVF32_New():
    return itkImageFileReaderICVF32.New()

class itkImageFileReaderICVF32(itk.itkImageSourcePython.itkImageSourceICVF32):
    r"""Proxy of C++ itkImageFileReaderICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF32_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF32_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF32

        Create a new object of the class itkImageFileReaderICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF32 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF32_swigregister(itkImageFileReaderICVF32)

def itkImageFileReaderICVF33_New():
    return itkImageFileReaderICVF33.New()

class itkImageFileReaderICVF33(itk.itkImageSourcePython.itkImageSourceICVF33):
    r"""Proxy of C++ itkImageFileReaderICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF33_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF33_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF33

        Create a new object of the class itkImageFileReaderICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF33 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF33_swigregister(itkImageFileReaderICVF33)

def itkImageFileReaderICVF34_New():
    return itkImageFileReaderICVF34.New()

class itkImageFileReaderICVF34(itk.itkImageSourcePython.itkImageSourceICVF34):
    r"""Proxy of C++ itkImageFileReaderICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF34_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF34_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF34

        Create a new object of the class itkImageFileReaderICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF34 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF34_swigregister(itkImageFileReaderICVF34)

def itkImageFileReaderICVF42_New():
    return itkImageFileReaderICVF42.New()

class itkImageFileReaderICVF42(itk.itkImageSourcePython.itkImageSourceICVF42):
    r"""Proxy of C++ itkImageFileReaderICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF42_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF42_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF42

        Create a new object of the class itkImageFileReaderICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF42 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF42_swigregister(itkImageFileReaderICVF42)

def itkImageFileReaderICVF43_New():
    return itkImageFileReaderICVF43.New()

class itkImageFileReaderICVF43(itk.itkImageSourcePython.itkImageSourceICVF43):
    r"""Proxy of C++ itkImageFileReaderICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF43_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF43_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF43

        Create a new object of the class itkImageFileReaderICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF43 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF43_swigregister(itkImageFileReaderICVF43)

def itkImageFileReaderICVF44_New():
    return itkImageFileReaderICVF44.New()

class itkImageFileReaderICVF44(itk.itkImageSourcePython.itkImageSourceICVF44):
    r"""Proxy of C++ itkImageFileReaderICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderICVF44_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderICVF44_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderICVF44

        Create a new object of the class itkImageFileReaderICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderICVF44 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderICVF44_swigregister(itkImageFileReaderICVF44)

def itkImageFileReaderID2_New():
    return itkImageFileReaderID2.New()

class itkImageFileReaderID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkImageFileReaderID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderID2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderID2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderID2

        Create a new object of the class itkImageFileReaderID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderID2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderID2_swigregister(itkImageFileReaderID2)

def itkImageFileReaderID3_New():
    return itkImageFileReaderID3.New()

class itkImageFileReaderID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkImageFileReaderID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderID3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderID3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderID3

        Create a new object of the class itkImageFileReaderID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderID3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderID3_swigregister(itkImageFileReaderID3)

def itkImageFileReaderID4_New():
    return itkImageFileReaderID4.New()

class itkImageFileReaderID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkImageFileReaderID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderID4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderID4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderID4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderID4

        Create a new object of the class itkImageFileReaderID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderID4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderID4_swigregister(itkImageFileReaderID4)

def itkImageFileReaderIF2_New():
    return itkImageFileReaderIF2.New()

class itkImageFileReaderIF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkImageFileReaderIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIF2

        Create a new object of the class itkImageFileReaderIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIF2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIF2_swigregister(itkImageFileReaderIF2)

def itkImageFileReaderIF3_New():
    return itkImageFileReaderIF3.New()

class itkImageFileReaderIF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkImageFileReaderIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIF3

        Create a new object of the class itkImageFileReaderIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIF3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIF3_swigregister(itkImageFileReaderIF3)

def itkImageFileReaderIF4_New():
    return itkImageFileReaderIF4.New()

class itkImageFileReaderIF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkImageFileReaderIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIF4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIF4

        Create a new object of the class itkImageFileReaderIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIF4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIF4_swigregister(itkImageFileReaderIF4)

def itkImageFileReaderIRGBAUC2_New():
    return itkImageFileReaderIRGBAUC2.New()

class itkImageFileReaderIRGBAUC2(itk.itkImageSourcePython.itkImageSourceIRGBAUC2):
    r"""Proxy of C++ itkImageFileReaderIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBAUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBAUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBAUC2

        Create a new object of the class itkImageFileReaderIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBAUC2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBAUC2_swigregister(itkImageFileReaderIRGBAUC2)

def itkImageFileReaderIRGBAUC3_New():
    return itkImageFileReaderIRGBAUC3.New()

class itkImageFileReaderIRGBAUC3(itk.itkImageSourcePython.itkImageSourceIRGBAUC3):
    r"""Proxy of C++ itkImageFileReaderIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBAUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBAUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBAUC3

        Create a new object of the class itkImageFileReaderIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBAUC3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBAUC3_swigregister(itkImageFileReaderIRGBAUC3)

def itkImageFileReaderIRGBAUC4_New():
    return itkImageFileReaderIRGBAUC4.New()

class itkImageFileReaderIRGBAUC4(itk.itkImageSourcePython.itkImageSourceIRGBAUC4):
    r"""Proxy of C++ itkImageFileReaderIRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBAUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBAUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBAUC4

        Create a new object of the class itkImageFileReaderIRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBAUC4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBAUC4_swigregister(itkImageFileReaderIRGBAUC4)

def itkImageFileReaderIRGBUC2_New():
    return itkImageFileReaderIRGBUC2.New()

class itkImageFileReaderIRGBUC2(itk.itkImageSourcePython.itkImageSourceIRGBUC2):
    r"""Proxy of C++ itkImageFileReaderIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBUC2

        Create a new object of the class itkImageFileReaderIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBUC2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBUC2_swigregister(itkImageFileReaderIRGBUC2)

def itkImageFileReaderIRGBUC3_New():
    return itkImageFileReaderIRGBUC3.New()

class itkImageFileReaderIRGBUC3(itk.itkImageSourcePython.itkImageSourceIRGBUC3):
    r"""Proxy of C++ itkImageFileReaderIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBUC3

        Create a new object of the class itkImageFileReaderIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBUC3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBUC3_swigregister(itkImageFileReaderIRGBUC3)

def itkImageFileReaderIRGBUC4_New():
    return itkImageFileReaderIRGBUC4.New()

class itkImageFileReaderIRGBUC4(itk.itkImageSourcePython.itkImageSourceIRGBUC4):
    r"""Proxy of C++ itkImageFileReaderIRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIRGBUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIRGBUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIRGBUC4

        Create a new object of the class itkImageFileReaderIRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIRGBUC4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIRGBUC4_swigregister(itkImageFileReaderIRGBUC4)

def itkImageFileReaderISI2_New():
    return itkImageFileReaderISI2.New()

class itkImageFileReaderISI2(itk.itkImageSourcePython.itkImageSourceISI2):
    r"""Proxy of C++ itkImageFileReaderISI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISI2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISI2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISI2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISI2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISI2

        Create a new object of the class itkImageFileReaderISI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISI2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISI2_swigregister(itkImageFileReaderISI2)

def itkImageFileReaderISI3_New():
    return itkImageFileReaderISI3.New()

class itkImageFileReaderISI3(itk.itkImageSourcePython.itkImageSourceISI3):
    r"""Proxy of C++ itkImageFileReaderISI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISI3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISI3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISI3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISI3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISI3

        Create a new object of the class itkImageFileReaderISI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISI3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISI3_swigregister(itkImageFileReaderISI3)

def itkImageFileReaderISI4_New():
    return itkImageFileReaderISI4.New()

class itkImageFileReaderISI4(itk.itkImageSourcePython.itkImageSourceISI4):
    r"""Proxy of C++ itkImageFileReaderISI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISI4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISI4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISI4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISI4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISI4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISI4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISI4

        Create a new object of the class itkImageFileReaderISI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISI4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISI4_swigregister(itkImageFileReaderISI4)

def itkImageFileReaderISS2_New():
    return itkImageFileReaderISS2.New()

class itkImageFileReaderISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkImageFileReaderISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISS2

        Create a new object of the class itkImageFileReaderISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISS2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISS2_swigregister(itkImageFileReaderISS2)

def itkImageFileReaderISS3_New():
    return itkImageFileReaderISS3.New()

class itkImageFileReaderISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkImageFileReaderISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISS3

        Create a new object of the class itkImageFileReaderISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISS3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISS3_swigregister(itkImageFileReaderISS3)

def itkImageFileReaderISS4_New():
    return itkImageFileReaderISS4.New()

class itkImageFileReaderISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkImageFileReaderISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderISS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderISS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderISS4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderISS4

        Create a new object of the class itkImageFileReaderISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderISS4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderISS4_swigregister(itkImageFileReaderISS4)

def itkImageFileReaderIUC2_New():
    return itkImageFileReaderIUC2.New()

class itkImageFileReaderIUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkImageFileReaderIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUC2

        Create a new object of the class itkImageFileReaderIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUC2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUC2_swigregister(itkImageFileReaderIUC2)

def itkImageFileReaderIUC3_New():
    return itkImageFileReaderIUC3.New()

class itkImageFileReaderIUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkImageFileReaderIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUC3

        Create a new object of the class itkImageFileReaderIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUC3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUC3_swigregister(itkImageFileReaderIUC3)

def itkImageFileReaderIUC4_New():
    return itkImageFileReaderIUC4.New()

class itkImageFileReaderIUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkImageFileReaderIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUC4

        Create a new object of the class itkImageFileReaderIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUC4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUC4_swigregister(itkImageFileReaderIUC4)

def itkImageFileReaderIUI2_New():
    return itkImageFileReaderIUI2.New()

class itkImageFileReaderIUI2(itk.itkImageSourcePython.itkImageSourceIUI2):
    r"""Proxy of C++ itkImageFileReaderIUI2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUI2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUI2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUI2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUI2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUI2

        Create a new object of the class itkImageFileReaderIUI2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUI2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUI2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUI2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUI2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUI2_swigregister(itkImageFileReaderIUI2)

def itkImageFileReaderIUI3_New():
    return itkImageFileReaderIUI3.New()

class itkImageFileReaderIUI3(itk.itkImageSourcePython.itkImageSourceIUI3):
    r"""Proxy of C++ itkImageFileReaderIUI3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUI3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUI3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUI3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUI3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUI3

        Create a new object of the class itkImageFileReaderIUI3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUI3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUI3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUI3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUI3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUI3_swigregister(itkImageFileReaderIUI3)

def itkImageFileReaderIUI4_New():
    return itkImageFileReaderIUI4.New()

class itkImageFileReaderIUI4(itk.itkImageSourcePython.itkImageSourceIUI4):
    r"""Proxy of C++ itkImageFileReaderIUI4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUI4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUI4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUI4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUI4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUI4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUI4

        Create a new object of the class itkImageFileReaderIUI4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUI4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUI4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUI4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUI4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUI4_swigregister(itkImageFileReaderIUI4)

def itkImageFileReaderIULL2_New():
    return itkImageFileReaderIULL2.New()

class itkImageFileReaderIULL2(itk.itkImageSourcePython.itkImageSourceIULL2):
    r"""Proxy of C++ itkImageFileReaderIULL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIULL2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIULL2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIULL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIULL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIULL2

        Create a new object of the class itkImageFileReaderIULL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIULL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIULL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIULL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIULL2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIULL2_swigregister(itkImageFileReaderIULL2)

def itkImageFileReaderIULL3_New():
    return itkImageFileReaderIULL3.New()

class itkImageFileReaderIULL3(itk.itkImageSourcePython.itkImageSourceIULL3):
    r"""Proxy of C++ itkImageFileReaderIULL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIULL3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIULL3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIULL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIULL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIULL3

        Create a new object of the class itkImageFileReaderIULL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIULL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIULL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIULL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIULL3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIULL3_swigregister(itkImageFileReaderIULL3)

def itkImageFileReaderIULL4_New():
    return itkImageFileReaderIULL4.New()

class itkImageFileReaderIULL4(itk.itkImageSourcePython.itkImageSourceIULL4):
    r"""Proxy of C++ itkImageFileReaderIULL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIULL4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIULL4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIULL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIULL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIULL4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIULL4

        Create a new object of the class itkImageFileReaderIULL4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIULL4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIULL4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIULL4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIULL4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIULL4_swigregister(itkImageFileReaderIULL4)

def itkImageFileReaderIUS2_New():
    return itkImageFileReaderIUS2.New()

class itkImageFileReaderIUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkImageFileReaderIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUS2

        Create a new object of the class itkImageFileReaderIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUS2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUS2_swigregister(itkImageFileReaderIUS2)

def itkImageFileReaderIUS3_New():
    return itkImageFileReaderIUS3.New()

class itkImageFileReaderIUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkImageFileReaderIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUS3

        Create a new object of the class itkImageFileReaderIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUS3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUS3_swigregister(itkImageFileReaderIUS3)

def itkImageFileReaderIUS4_New():
    return itkImageFileReaderIUS4.New()

class itkImageFileReaderIUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkImageFileReaderIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIUS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIUS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIUS4

        Create a new object of the class itkImageFileReaderIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIUS4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIUS4_swigregister(itkImageFileReaderIUS4)

def itkImageFileReaderIVF22_New():
    return itkImageFileReaderIVF22.New()

class itkImageFileReaderIVF22(itk.itkImageSourcePython.itkImageSourceIVF22):
    r"""Proxy of C++ itkImageFileReaderIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF22_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF22_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF22

        Create a new object of the class itkImageFileReaderIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF22 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF22_swigregister(itkImageFileReaderIVF22)

def itkImageFileReaderIVF23_New():
    return itkImageFileReaderIVF23.New()

class itkImageFileReaderIVF23(itk.itkImageSourcePython.itkImageSourceIVF23):
    r"""Proxy of C++ itkImageFileReaderIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF23_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF23_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF23

        Create a new object of the class itkImageFileReaderIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF23 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF23_swigregister(itkImageFileReaderIVF23)

def itkImageFileReaderIVF24_New():
    return itkImageFileReaderIVF24.New()

class itkImageFileReaderIVF24(itk.itkImageSourcePython.itkImageSourceIVF24):
    r"""Proxy of C++ itkImageFileReaderIVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF24_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF24_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF24

        Create a new object of the class itkImageFileReaderIVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF24 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF24_swigregister(itkImageFileReaderIVF24)

def itkImageFileReaderIVF32_New():
    return itkImageFileReaderIVF32.New()

class itkImageFileReaderIVF32(itk.itkImageSourcePython.itkImageSourceIVF32):
    r"""Proxy of C++ itkImageFileReaderIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF32_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF32_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF32

        Create a new object of the class itkImageFileReaderIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF32 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF32_swigregister(itkImageFileReaderIVF32)

def itkImageFileReaderIVF33_New():
    return itkImageFileReaderIVF33.New()

class itkImageFileReaderIVF33(itk.itkImageSourcePython.itkImageSourceIVF33):
    r"""Proxy of C++ itkImageFileReaderIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF33_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF33_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF33

        Create a new object of the class itkImageFileReaderIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF33 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF33_swigregister(itkImageFileReaderIVF33)

def itkImageFileReaderIVF34_New():
    return itkImageFileReaderIVF34.New()

class itkImageFileReaderIVF34(itk.itkImageSourcePython.itkImageSourceIVF34):
    r"""Proxy of C++ itkImageFileReaderIVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF34_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF34_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF34

        Create a new object of the class itkImageFileReaderIVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF34 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF34_swigregister(itkImageFileReaderIVF34)

def itkImageFileReaderIVF42_New():
    return itkImageFileReaderIVF42.New()

class itkImageFileReaderIVF42(itk.itkImageSourcePython.itkImageSourceIVF42):
    r"""Proxy of C++ itkImageFileReaderIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF42_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF42_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF42

        Create a new object of the class itkImageFileReaderIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF42 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF42_swigregister(itkImageFileReaderIVF42)

def itkImageFileReaderIVF43_New():
    return itkImageFileReaderIVF43.New()

class itkImageFileReaderIVF43(itk.itkImageSourcePython.itkImageSourceIVF43):
    r"""Proxy of C++ itkImageFileReaderIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF43_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF43_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF43

        Create a new object of the class itkImageFileReaderIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF43 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF43_swigregister(itkImageFileReaderIVF43)

def itkImageFileReaderIVF44_New():
    return itkImageFileReaderIVF44.New()

class itkImageFileReaderIVF44(itk.itkImageSourcePython.itkImageSourceIVF44):
    r"""Proxy of C++ itkImageFileReaderIVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderIVF44_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderIVF44_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderIVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderIVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderIVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderIVF44

        Create a new object of the class itkImageFileReaderIVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderIVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderIVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderIVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderIVF44 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderIVF44_swigregister(itkImageFileReaderIVF44)

def itkImageFileReaderPA3DSCID_New():
    return itkImageFileReaderPA3DSCID.New()

class itkImageFileReaderPA3DSCID(itk.itkImageSourcePython.itkImageSourcePA3DSCID):
    r"""Proxy of C++ itkImageFileReaderPA3DSCID class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderPA3DSCID_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderPA3DSCID_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderPA3DSCID

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderPA3DSCID

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCID_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderPA3DSCID

        Create a new object of the class itkImageFileReaderPA3DSCID and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderPA3DSCID.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderPA3DSCID.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderPA3DSCID.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderPA3DSCID in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderPA3DSCID_swigregister(itkImageFileReaderPA3DSCID)

def itkImageFileReaderPA3DSCIF_New():
    return itkImageFileReaderPA3DSCIF.New()

class itkImageFileReaderPA3DSCIF(itk.itkImageSourcePython.itkImageSourcePA3DSCIF):
    r"""Proxy of C++ itkImageFileReaderPA3DSCIF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderPA3DSCIF_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderPA3DSCIF_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderPA3DSCIF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderPA3DSCIF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderPA3DSCIF

        Create a new object of the class itkImageFileReaderPA3DSCIF and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderPA3DSCIF.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderPA3DSCIF.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderPA3DSCIF.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderPA3DSCIF in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderPA3DSCIF_swigregister(itkImageFileReaderPA3DSCIF)

def itkImageFileReaderPA3DSCISS_New():
    return itkImageFileReaderPA3DSCISS.New()

class itkImageFileReaderPA3DSCISS(itk.itkImageSourcePython.itkImageSourcePA3DSCISS):
    r"""Proxy of C++ itkImageFileReaderPA3DSCISS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderPA3DSCISS_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderPA3DSCISS_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderPA3DSCISS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderPA3DSCISS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderPA3DSCISS

        Create a new object of the class itkImageFileReaderPA3DSCISS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderPA3DSCISS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderPA3DSCISS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderPA3DSCISS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderPA3DSCISS in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderPA3DSCISS_swigregister(itkImageFileReaderPA3DSCISS)

def itkImageFileReaderPA3DSCIUC_New():
    return itkImageFileReaderPA3DSCIUC.New()

class itkImageFileReaderPA3DSCIUC(itk.itkImageSourcePython.itkImageSourcePA3DSCIUC):
    r"""Proxy of C++ itkImageFileReaderPA3DSCIUC class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderPA3DSCIUC_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderPA3DSCIUC_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderPA3DSCIUC

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderPA3DSCIUC

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderPA3DSCIUC

        Create a new object of the class itkImageFileReaderPA3DSCIUC and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderPA3DSCIUC.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderPA3DSCIUC.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderPA3DSCIUC.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderPA3DSCIUC in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderPA3DSCIUC_swigregister(itkImageFileReaderPA3DSCIUC)

def itkImageFileReaderPA3DSCIUS_New():
    return itkImageFileReaderPA3DSCIUS.New()

class itkImageFileReaderPA3DSCIUS(itk.itkImageSourcePython.itkImageSourcePA3DSCIUS):
    r"""Proxy of C++ itkImageFileReaderPA3DSCIUS class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderPA3DSCIUS_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderPA3DSCIUS_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderPA3DSCIUS

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderPA3DSCIUS

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderPA3DSCIUS

        Create a new object of the class itkImageFileReaderPA3DSCIUS and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderPA3DSCIUS.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderPA3DSCIUS.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderPA3DSCIUS.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderPA3DSCIUS in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderPA3DSCIUS_swigregister(itkImageFileReaderPA3DSCIUS)

def itkImageFileReaderVID2_New():
    return itkImageFileReaderVID2.New()

class itkImageFileReaderVID2(itk.itkImageSourcePython.itkImageSourceVID2):
    r"""Proxy of C++ itkImageFileReaderVID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVID2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVID2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVID2

        Create a new object of the class itkImageFileReaderVID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVID2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVID2_swigregister(itkImageFileReaderVID2)

def itkImageFileReaderVID3_New():
    return itkImageFileReaderVID3.New()

class itkImageFileReaderVID3(itk.itkImageSourcePython.itkImageSourceVID3):
    r"""Proxy of C++ itkImageFileReaderVID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVID3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVID3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVID3

        Create a new object of the class itkImageFileReaderVID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVID3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVID3_swigregister(itkImageFileReaderVID3)

def itkImageFileReaderVID4_New():
    return itkImageFileReaderVID4.New()

class itkImageFileReaderVID4(itk.itkImageSourcePython.itkImageSourceVID4):
    r"""Proxy of C++ itkImageFileReaderVID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVID4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVID4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVID4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVID4

        Create a new object of the class itkImageFileReaderVID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVID4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVID4_swigregister(itkImageFileReaderVID4)

def itkImageFileReaderVIF2_New():
    return itkImageFileReaderVIF2.New()

class itkImageFileReaderVIF2(itk.itkImageSourcePython.itkImageSourceVIF2):
    r"""Proxy of C++ itkImageFileReaderVIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIF2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIF2

        Create a new object of the class itkImageFileReaderVIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIF2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIF2_swigregister(itkImageFileReaderVIF2)

def itkImageFileReaderVIF3_New():
    return itkImageFileReaderVIF3.New()

class itkImageFileReaderVIF3(itk.itkImageSourcePython.itkImageSourceVIF3):
    r"""Proxy of C++ itkImageFileReaderVIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIF3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIF3

        Create a new object of the class itkImageFileReaderVIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIF3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIF3_swigregister(itkImageFileReaderVIF3)

def itkImageFileReaderVIF4_New():
    return itkImageFileReaderVIF4.New()

class itkImageFileReaderVIF4(itk.itkImageSourcePython.itkImageSourceVIF4):
    r"""Proxy of C++ itkImageFileReaderVIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIF4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIF4

        Create a new object of the class itkImageFileReaderVIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIF4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIF4_swigregister(itkImageFileReaderVIF4)

def itkImageFileReaderVISS2_New():
    return itkImageFileReaderVISS2.New()

class itkImageFileReaderVISS2(itk.itkImageSourcePython.itkImageSourceVISS2):
    r"""Proxy of C++ itkImageFileReaderVISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVISS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVISS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVISS2

        Create a new object of the class itkImageFileReaderVISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVISS2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVISS2_swigregister(itkImageFileReaderVISS2)

def itkImageFileReaderVISS3_New():
    return itkImageFileReaderVISS3.New()

class itkImageFileReaderVISS3(itk.itkImageSourcePython.itkImageSourceVISS3):
    r"""Proxy of C++ itkImageFileReaderVISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVISS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVISS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVISS3

        Create a new object of the class itkImageFileReaderVISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVISS3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVISS3_swigregister(itkImageFileReaderVISS3)

def itkImageFileReaderVISS4_New():
    return itkImageFileReaderVISS4.New()

class itkImageFileReaderVISS4(itk.itkImageSourcePython.itkImageSourceVISS4):
    r"""Proxy of C++ itkImageFileReaderVISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVISS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVISS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVISS4

        Create a new object of the class itkImageFileReaderVISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVISS4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVISS4_swigregister(itkImageFileReaderVISS4)

def itkImageFileReaderVIUC2_New():
    return itkImageFileReaderVIUC2.New()

class itkImageFileReaderVIUC2(itk.itkImageSourcePython.itkImageSourceVIUC2):
    r"""Proxy of C++ itkImageFileReaderVIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUC2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUC2

        Create a new object of the class itkImageFileReaderVIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUC2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUC2_swigregister(itkImageFileReaderVIUC2)

def itkImageFileReaderVIUC3_New():
    return itkImageFileReaderVIUC3.New()

class itkImageFileReaderVIUC3(itk.itkImageSourcePython.itkImageSourceVIUC3):
    r"""Proxy of C++ itkImageFileReaderVIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUC3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUC3

        Create a new object of the class itkImageFileReaderVIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUC3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUC3_swigregister(itkImageFileReaderVIUC3)

def itkImageFileReaderVIUC4_New():
    return itkImageFileReaderVIUC4.New()

class itkImageFileReaderVIUC4(itk.itkImageSourcePython.itkImageSourceVIUC4):
    r"""Proxy of C++ itkImageFileReaderVIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUC4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUC4

        Create a new object of the class itkImageFileReaderVIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUC4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUC4_swigregister(itkImageFileReaderVIUC4)

def itkImageFileReaderVIUS2_New():
    return itkImageFileReaderVIUS2.New()

class itkImageFileReaderVIUS2(itk.itkImageSourcePython.itkImageSourceVIUS2):
    r"""Proxy of C++ itkImageFileReaderVIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUS2_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUS2

        Create a new object of the class itkImageFileReaderVIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUS2 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUS2_swigregister(itkImageFileReaderVIUS2)

def itkImageFileReaderVIUS3_New():
    return itkImageFileReaderVIUS3.New()

class itkImageFileReaderVIUS3(itk.itkImageSourcePython.itkImageSourceVIUS3):
    r"""Proxy of C++ itkImageFileReaderVIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUS3_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUS3

        Create a new object of the class itkImageFileReaderVIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUS3 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUS3_swigregister(itkImageFileReaderVIUS3)

def itkImageFileReaderVIUS4_New():
    return itkImageFileReaderVIUS4.New()

class itkImageFileReaderVIUS4(itk.itkImageSourcePython.itkImageSourceVIUS4):
    r"""Proxy of C++ itkImageFileReaderVIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkImageFileReaderVIUS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkImageFileReaderVIUS4_Pointer"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_Clone(self)

    def SetFileNameInput(self, _arg):
        r"""
        SetFileNameInput(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_SetFileNameInput(self, _arg)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: itkSimpleDataObjectDecoratorstring const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_SetFileName(self, *args)

    def GetFileNameInput(self):
        r"""GetFileNameInput(self) -> itkSimpleDataObjectDecoratorstring"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_GetFileNameInput(self)

    def GetFileName(self):
        r"""GetFileName(self) -> std::string const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_GetFileName(self)

    def SetImageIO(self, imageIO):
        r"""
        SetImageIO(self, imageIO)

        Parameters
        ----------
        imageIO: itkImageIOBase *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_SetImageIO(self, imageIO)

    def GetModifiableImageIO(self):
        r"""GetModifiableImageIO(self) -> itkImageIOBase"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_GetModifiableImageIO(self)

    def GetImageIO(self, *args):
        r"""
        GetImageIO(self) -> itkImageIOBase
        GetImageIO(self) -> itkImageIOBase
        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_GetImageIO(self, *args)

    def SetUseStreaming(self, _arg):
        r"""
        SetUseStreaming(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_SetUseStreaming(self, _arg)

    def GetUseStreaming(self):
        r"""GetUseStreaming(self) -> bool const &"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_GetUseStreaming(self)

    def UseStreamingOn(self):
        r"""UseStreamingOn(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_UseStreamingOn(self)

    def UseStreamingOff(self):
        r"""UseStreamingOff(self)"""
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_UseStreamingOff(self)
    __swig_destroy__ = _itkImageFileReaderPython.delete_itkImageFileReaderVIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkImageFileReaderVIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkImageFileReaderPython.itkImageFileReaderVIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkImageFileReaderVIUS4

        Create a new object of the class itkImageFileReaderVIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkImageFileReaderVIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkImageFileReaderVIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkImageFileReaderVIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkImageFileReaderVIUS4 in _itkImageFileReaderPython:
_itkImageFileReaderPython.itkImageFileReaderVIUS4_swigregister(itkImageFileReaderVIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def image_file_reader(*args,  file_name_input=..., file_name: str=..., image_io=..., use_streaming: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ImageFileReader"""
    import itk

    kwarg_typehints = { 'file_name_input':file_name_input,'file_name':file_name,'image_io':image_io,'use_streaming':use_streaming }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ImageFileReader.New(*args, **kwargs)

    return instance.__internal_call__()

def image_file_reader_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKIOImageBase.ImageFileReader
    image_file_reader.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    image_file_reader.__doc__ = filter_object.__doc__



