# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageFunctionPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkInterpolateImageFunctionPython
else:
    import _itkInterpolateImageFunctionPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageFunctionBasePython
import itk.itkRGBAPixelPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.itkCovariantVectorPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkRGBPixelPython
import itk.itkFunctionBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkArrayPython
import itk.itkImagePython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkContinuousIndexPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
class itkInterpolateImageFunctionICVF22D(itk.itkImageFunctionBasePython.itkImageFunctionICVF22CVD2D):
    r"""Proxy of C++ itkInterpolateImageFunctionICVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionICVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionICVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_cast(obj)

# Register itkInterpolateImageFunctionICVF22D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF22D_swigregister(itkInterpolateImageFunctionICVF22D)
class itkInterpolateImageFunctionICVF33D(itk.itkImageFunctionBasePython.itkImageFunctionICVF33CVD3D):
    r"""Proxy of C++ itkInterpolateImageFunctionICVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionICVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionICVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_cast(obj)

# Register itkInterpolateImageFunctionICVF33D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF33D_swigregister(itkInterpolateImageFunctionICVF33D)
class itkInterpolateImageFunctionICVF44D(itk.itkImageFunctionBasePython.itkImageFunctionICVF44CVD4D):
    r"""Proxy of C++ itkInterpolateImageFunctionICVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF44D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionICVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionICVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF44D_cast(obj)

# Register itkInterpolateImageFunctionICVF44D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionICVF44D_swigregister(itkInterpolateImageFunctionICVF44D)
class itkInterpolateImageFunctionID2D(itk.itkImageFunctionBasePython.itkImageFunctionID2DD):
    r"""Proxy of C++ itkInterpolateImageFunctionID2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_cast(obj)

# Register itkInterpolateImageFunctionID2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2D_swigregister(itkInterpolateImageFunctionID2D)
class itkInterpolateImageFunctionID2F(itk.itkImageFunctionBasePython.itkImageFunctionID2DF):
    r"""Proxy of C++ itkInterpolateImageFunctionID2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_cast(obj)

# Register itkInterpolateImageFunctionID2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID2F_swigregister(itkInterpolateImageFunctionID2F)
class itkInterpolateImageFunctionID3D(itk.itkImageFunctionBasePython.itkImageFunctionID3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionID3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_cast(obj)

# Register itkInterpolateImageFunctionID3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3D_swigregister(itkInterpolateImageFunctionID3D)
class itkInterpolateImageFunctionID3F(itk.itkImageFunctionBasePython.itkImageFunctionID3DF):
    r"""Proxy of C++ itkInterpolateImageFunctionID3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_cast(obj)

# Register itkInterpolateImageFunctionID3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID3F_swigregister(itkInterpolateImageFunctionID3F)
class itkInterpolateImageFunctionID4D(itk.itkImageFunctionBasePython.itkImageFunctionID4DD):
    r"""Proxy of C++ itkInterpolateImageFunctionID4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4D_cast(obj)

# Register itkInterpolateImageFunctionID4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4D_swigregister(itkInterpolateImageFunctionID4D)
class itkInterpolateImageFunctionID4F(itk.itkImageFunctionBasePython.itkImageFunctionID4DF):
    r"""Proxy of C++ itkInterpolateImageFunctionID4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionID4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionID4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4F_cast(obj)

# Register itkInterpolateImageFunctionID4F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionID4F_swigregister(itkInterpolateImageFunctionID4F)
class itkInterpolateImageFunctionIF2D(itk.itkImageFunctionBasePython.itkImageFunctionIF2DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIF2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_cast(obj)

# Register itkInterpolateImageFunctionIF2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2D_swigregister(itkInterpolateImageFunctionIF2D)
class itkInterpolateImageFunctionIF2F(itk.itkImageFunctionBasePython.itkImageFunctionIF2DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIF2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_cast(obj)

# Register itkInterpolateImageFunctionIF2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF2F_swigregister(itkInterpolateImageFunctionIF2F)
class itkInterpolateImageFunctionIF3D(itk.itkImageFunctionBasePython.itkImageFunctionIF3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIF3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_cast(obj)

# Register itkInterpolateImageFunctionIF3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3D_swigregister(itkInterpolateImageFunctionIF3D)
class itkInterpolateImageFunctionIF3F(itk.itkImageFunctionBasePython.itkImageFunctionIF3DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIF3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_cast(obj)

# Register itkInterpolateImageFunctionIF3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF3F_swigregister(itkInterpolateImageFunctionIF3F)
class itkInterpolateImageFunctionIF4D(itk.itkImageFunctionBasePython.itkImageFunctionIF4DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIF4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4D_cast(obj)

# Register itkInterpolateImageFunctionIF4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4D_swigregister(itkInterpolateImageFunctionIF4D)
class itkInterpolateImageFunctionIF4F(itk.itkImageFunctionBasePython.itkImageFunctionIF4DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIF4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIF4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIF4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4F_cast(obj)

# Register itkInterpolateImageFunctionIF4F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIF4F_swigregister(itkInterpolateImageFunctionIF4F)
class itkInterpolateImageFunctionIRGBAUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBAUC2RGBADD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBAUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBAUC2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBAUC2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_cast(obj)

# Register itkInterpolateImageFunctionIRGBAUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC2D_swigregister(itkInterpolateImageFunctionIRGBAUC2D)
class itkInterpolateImageFunctionIRGBAUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBAUC3RGBADD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBAUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBAUC3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBAUC3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_cast(obj)

# Register itkInterpolateImageFunctionIRGBAUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC3D_swigregister(itkInterpolateImageFunctionIRGBAUC3D)
class itkInterpolateImageFunctionIRGBAUC4D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBAUC4RGBADD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBAUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBAUC4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBAUC4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC4D_cast(obj)

# Register itkInterpolateImageFunctionIRGBAUC4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBAUC4D_swigregister(itkInterpolateImageFunctionIRGBAUC4D)
class itkInterpolateImageFunctionIRGBUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBUC2RGBDD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBUC2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBUC2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_cast(obj)

# Register itkInterpolateImageFunctionIRGBUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC2D_swigregister(itkInterpolateImageFunctionIRGBUC2D)
class itkInterpolateImageFunctionIRGBUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBUC3RGBDD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBUC3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBUC3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_cast(obj)

# Register itkInterpolateImageFunctionIRGBUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC3D_swigregister(itkInterpolateImageFunctionIRGBUC3D)
class itkInterpolateImageFunctionIRGBUC4D(itk.itkImageFunctionBasePython.itkImageFunctionIRGBUC4RGBDD):
    r"""Proxy of C++ itkInterpolateImageFunctionIRGBUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIRGBUC4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIRGBUC4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC4D_cast(obj)

# Register itkInterpolateImageFunctionIRGBUC4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIRGBUC4D_swigregister(itkInterpolateImageFunctionIRGBUC4D)
class itkInterpolateImageFunctionISS2D(itk.itkImageFunctionBasePython.itkImageFunctionISS2DD):
    r"""Proxy of C++ itkInterpolateImageFunctionISS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_cast(obj)

# Register itkInterpolateImageFunctionISS2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2D_swigregister(itkInterpolateImageFunctionISS2D)
class itkInterpolateImageFunctionISS2F(itk.itkImageFunctionBasePython.itkImageFunctionISS2DF):
    r"""Proxy of C++ itkInterpolateImageFunctionISS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_cast(obj)

# Register itkInterpolateImageFunctionISS2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS2F_swigregister(itkInterpolateImageFunctionISS2F)
class itkInterpolateImageFunctionISS3D(itk.itkImageFunctionBasePython.itkImageFunctionISS3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionISS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_cast(obj)

# Register itkInterpolateImageFunctionISS3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3D_swigregister(itkInterpolateImageFunctionISS3D)
class itkInterpolateImageFunctionISS3F(itk.itkImageFunctionBasePython.itkImageFunctionISS3DF):
    r"""Proxy of C++ itkInterpolateImageFunctionISS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_cast(obj)

# Register itkInterpolateImageFunctionISS3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS3F_swigregister(itkInterpolateImageFunctionISS3F)
class itkInterpolateImageFunctionISS4D(itk.itkImageFunctionBasePython.itkImageFunctionISS4DD):
    r"""Proxy of C++ itkInterpolateImageFunctionISS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4D_cast(obj)

# Register itkInterpolateImageFunctionISS4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4D_swigregister(itkInterpolateImageFunctionISS4D)
class itkInterpolateImageFunctionISS4F(itk.itkImageFunctionBasePython.itkImageFunctionISS4DF):
    r"""Proxy of C++ itkInterpolateImageFunctionISS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionISS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionISS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4F_cast(obj)

# Register itkInterpolateImageFunctionISS4F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionISS4F_swigregister(itkInterpolateImageFunctionISS4F)
class itkInterpolateImageFunctionIUC2D(itk.itkImageFunctionBasePython.itkImageFunctionIUC2DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_cast(obj)

# Register itkInterpolateImageFunctionIUC2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2D_swigregister(itkInterpolateImageFunctionIUC2D)
class itkInterpolateImageFunctionIUC2F(itk.itkImageFunctionBasePython.itkImageFunctionIUC2DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_cast(obj)

# Register itkInterpolateImageFunctionIUC2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC2F_swigregister(itkInterpolateImageFunctionIUC2F)
class itkInterpolateImageFunctionIUC3D(itk.itkImageFunctionBasePython.itkImageFunctionIUC3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_cast(obj)

# Register itkInterpolateImageFunctionIUC3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3D_swigregister(itkInterpolateImageFunctionIUC3D)
class itkInterpolateImageFunctionIUC3F(itk.itkImageFunctionBasePython.itkImageFunctionIUC3DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_cast(obj)

# Register itkInterpolateImageFunctionIUC3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC3F_swigregister(itkInterpolateImageFunctionIUC3F)
class itkInterpolateImageFunctionIUC4D(itk.itkImageFunctionBasePython.itkImageFunctionIUC4DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4D_cast(obj)

# Register itkInterpolateImageFunctionIUC4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4D_swigregister(itkInterpolateImageFunctionIUC4D)
class itkInterpolateImageFunctionIUC4F(itk.itkImageFunctionBasePython.itkImageFunctionIUC4DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUC4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUC4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUC4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4F_cast(obj)

# Register itkInterpolateImageFunctionIUC4F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUC4F_swigregister(itkInterpolateImageFunctionIUC4F)
class itkInterpolateImageFunctionIUS2D(itk.itkImageFunctionBasePython.itkImageFunctionIUS2DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS2D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS2D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS2D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_cast(obj)

# Register itkInterpolateImageFunctionIUS2D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2D_swigregister(itkInterpolateImageFunctionIUS2D)
class itkInterpolateImageFunctionIUS2F(itk.itkImageFunctionBasePython.itkImageFunctionIUS2DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS2F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS2F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS2F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_cast(obj)

# Register itkInterpolateImageFunctionIUS2F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS2F_swigregister(itkInterpolateImageFunctionIUS2F)
class itkInterpolateImageFunctionIUS3D(itk.itkImageFunctionBasePython.itkImageFunctionIUS3DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS3D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS3D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS3D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_cast(obj)

# Register itkInterpolateImageFunctionIUS3D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3D_swigregister(itkInterpolateImageFunctionIUS3D)
class itkInterpolateImageFunctionIUS3F(itk.itkImageFunctionBasePython.itkImageFunctionIUS3DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS3F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS3F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS3F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_cast(obj)

# Register itkInterpolateImageFunctionIUS3F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS3F_swigregister(itkInterpolateImageFunctionIUS3F)
class itkInterpolateImageFunctionIUS4D(itk.itkImageFunctionBasePython.itkImageFunctionIUS4DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS4D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS4D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS4D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4D_cast(obj)

# Register itkInterpolateImageFunctionIUS4D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4D_swigregister(itkInterpolateImageFunctionIUS4D)
class itkInterpolateImageFunctionIUS4F(itk.itkImageFunctionBasePython.itkImageFunctionIUS4DF):
    r"""Proxy of C++ itkInterpolateImageFunctionIUS4F class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4F_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIUS4F

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIUS4F

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4F_cast(obj)

# Register itkInterpolateImageFunctionIUS4F in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIUS4F_swigregister(itkInterpolateImageFunctionIUS4F)
class itkInterpolateImageFunctionIVF22D(itk.itkImageFunctionBasePython.itkImageFunctionIVF22DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIVF22D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize2"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIVF22D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIVF22D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_cast(obj)

# Register itkInterpolateImageFunctionIVF22D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF22D_swigregister(itkInterpolateImageFunctionIVF22D)
class itkInterpolateImageFunctionIVF33D(itk.itkImageFunctionBasePython.itkImageFunctionIVF33DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIVF33D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIVF33D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIVF33D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_cast(obj)

# Register itkInterpolateImageFunctionIVF33D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF33D_swigregister(itkInterpolateImageFunctionIVF33D)
class itkInterpolateImageFunctionIVF44D(itk.itkImageFunctionBasePython.itkImageFunctionIVF44DD):
    r"""Proxy of C++ itkInterpolateImageFunctionIVF44D class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize4"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF44D_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionIVF44D

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionIVF44D

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF44D_cast(obj)

# Register itkInterpolateImageFunctionIVF44D in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionIVF44D_swigregister(itkInterpolateImageFunctionIVF44D)
class itkInterpolateImageFunctionPA3DSCIFD(itk.itkImageFunctionBasePython.itkImageFunctionPA3DSCIFD):
    r"""Proxy of C++ itkInterpolateImageFunctionPA3DSCIFD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIFD_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionPA3DSCIFD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionPA3DSCIFD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIFD_cast(obj)

# Register itkInterpolateImageFunctionPA3DSCIFD in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIFD_swigregister(itkInterpolateImageFunctionPA3DSCIFD)
class itkInterpolateImageFunctionPA3DSCIUCD(itk.itkImageFunctionBasePython.itkImageFunctionPA3DSCIUCD):
    r"""Proxy of C++ itkInterpolateImageFunctionPA3DSCIUCD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetRadius(self):
        r"""GetRadius(self) -> itkSize3"""
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIUCD_GetRadius(self)
    __swig_destroy__ = _itkInterpolateImageFunctionPython.delete_itkInterpolateImageFunctionPA3DSCIUCD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkInterpolateImageFunctionPA3DSCIUCD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIUCD_cast(obj)

# Register itkInterpolateImageFunctionPA3DSCIUCD in _itkInterpolateImageFunctionPython:
_itkInterpolateImageFunctionPython.itkInterpolateImageFunctionPA3DSCIUCD_swigregister(itkInterpolateImageFunctionPA3DSCIUCD)

