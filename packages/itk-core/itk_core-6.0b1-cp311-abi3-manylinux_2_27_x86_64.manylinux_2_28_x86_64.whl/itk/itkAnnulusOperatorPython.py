# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKCommonPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkAnnulusOperatorPython
else:
    import _itkAnnulusOperatorPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkNeighborhoodOperatorPython
import itk.itkNeighborhoodPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkSizePython
import itk.itkRGBPixelPython
import itk.itkOffsetPython
class itkAnnulusOperatorD2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD2):
    r"""Proxy of C++ itkAnnulusOperatorD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD2 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD2"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD2_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorD2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorD2
        __init__(self, arg0) -> itkAnnulusOperatorD2

        Parameters
        ----------
        arg0: itkAnnulusOperatorD2 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorD2_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorD2(*args))

# Register itkAnnulusOperatorD2 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorD2_swigregister(itkAnnulusOperatorD2)
class itkAnnulusOperatorD3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD3):
    r"""Proxy of C++ itkAnnulusOperatorD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD3 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD3"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD3_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorD3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorD3
        __init__(self, arg0) -> itkAnnulusOperatorD3

        Parameters
        ----------
        arg0: itkAnnulusOperatorD3 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorD3_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorD3(*args))

# Register itkAnnulusOperatorD3 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorD3_swigregister(itkAnnulusOperatorD3)
class itkAnnulusOperatorD4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorD4):
    r"""Proxy of C++ itkAnnulusOperatorD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD4 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD4"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorD4_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorD4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorD4
        __init__(self, arg0) -> itkAnnulusOperatorD4

        Parameters
        ----------
        arg0: itkAnnulusOperatorD4 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorD4_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorD4(*args))

# Register itkAnnulusOperatorD4 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorD4_swigregister(itkAnnulusOperatorD4)
class itkAnnulusOperatorF2(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF2):
    r"""Proxy of C++ itkAnnulusOperatorF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD2 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD2"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF2_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorF2

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorF2
        __init__(self, arg0) -> itkAnnulusOperatorF2

        Parameters
        ----------
        arg0: itkAnnulusOperatorF2 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorF2_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorF2(*args))

# Register itkAnnulusOperatorF2 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorF2_swigregister(itkAnnulusOperatorF2)
class itkAnnulusOperatorF3(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF3):
    r"""Proxy of C++ itkAnnulusOperatorF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD3 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD3"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF3_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorF3

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorF3
        __init__(self, arg0) -> itkAnnulusOperatorF3

        Parameters
        ----------
        arg0: itkAnnulusOperatorF3 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorF3_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorF3(*args))

# Register itkAnnulusOperatorF3 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorF3_swigregister(itkAnnulusOperatorF3)
class itkAnnulusOperatorF4(itk.itkNeighborhoodOperatorPython.itkNeighborhoodOperatorF4):
    r"""Proxy of C++ itkAnnulusOperatorF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def CreateOperator(self):
        r"""CreateOperator(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_CreateOperator(self)

    def SetInnerRadius(self, r):
        r"""
        SetInnerRadius(self, r)

        Parameters
        ----------
        r: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetInnerRadius(self, r)

    def GetInnerRadius(self):
        r"""GetInnerRadius(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetInnerRadius(self)

    def SetThickness(self, t):
        r"""
        SetThickness(self, t)

        Parameters
        ----------
        t: double

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetThickness(self, t)

    def GetThickness(self):
        r"""GetThickness(self) -> double"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetThickness(self)

    def SetSpacing(self, s):
        r"""
        SetSpacing(self, s)

        Parameters
        ----------
        s: itkVectorD4 &

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetSpacing(self, s)

    def GetSpacing(self):
        r"""GetSpacing(self) -> itkVectorD4"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetSpacing(self)

    def SetNormalize(self, b):
        r"""
        SetNormalize(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetNormalize(self, b)

    def GetNormalize(self):
        r"""GetNormalize(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetNormalize(self)

    def NormalizeOn(self):
        r"""NormalizeOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_NormalizeOn(self)

    def NormalizeOff(self):
        r"""NormalizeOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_NormalizeOff(self)

    def SetBrightCenter(self, b):
        r"""
        SetBrightCenter(self, b)

        Parameters
        ----------
        b: bool

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetBrightCenter(self, b)

    def GetBrightCenter(self):
        r"""GetBrightCenter(self) -> bool"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetBrightCenter(self)

    def BrightCenterOn(self):
        r"""BrightCenterOn(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_BrightCenterOn(self)

    def BrightCenterOff(self):
        r"""BrightCenterOff(self)"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_BrightCenterOff(self)

    def SetInteriorValue(self, v):
        r"""
        SetInteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetInteriorValue(self, v)

    def GetInteriorValue(self):
        r"""GetInteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetInteriorValue(self)

    def SetAnnulusValue(self, v):
        r"""
        SetAnnulusValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetAnnulusValue(self, v)

    def GetAnnulusValue(self):
        r"""GetAnnulusValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetAnnulusValue(self)

    def SetExteriorValue(self, v):
        r"""
        SetExteriorValue(self, v)

        Parameters
        ----------
        v: float

        """
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_SetExteriorValue(self, v)

    def GetExteriorValue(self):
        r"""GetExteriorValue(self) -> float"""
        return _itkAnnulusOperatorPython.itkAnnulusOperatorF4_GetExteriorValue(self)
    __swig_destroy__ = _itkAnnulusOperatorPython.delete_itkAnnulusOperatorF4

    def __init__(self, *args):
        r"""
        __init__(self) -> itkAnnulusOperatorF4
        __init__(self, arg0) -> itkAnnulusOperatorF4

        Parameters
        ----------
        arg0: itkAnnulusOperatorF4 const &

        """
        _itkAnnulusOperatorPython.itkAnnulusOperatorF4_swiginit(self, _itkAnnulusOperatorPython.new_itkAnnulusOperatorF4(*args))

# Register itkAnnulusOperatorF4 in _itkAnnulusOperatorPython:
_itkAnnulusOperatorPython.itkAnnulusOperatorF4_swigregister(itkAnnulusOperatorF4)

