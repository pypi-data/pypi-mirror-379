# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKTestKernelPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkComparisonImageFilterPython
else:
    import _itkComparisonImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkComparisonImageFilterID2ID2_New():
    return itkComparisonImageFilterID2ID2.New()

class itkComparisonImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkComparisonImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterID2ID2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterID2ID2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterID2ID2

        Create a new object of the class itkComparisonImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterID2ID2 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterID2ID2_swigregister(itkComparisonImageFilterID2ID2)

def itkComparisonImageFilterID3ID3_New():
    return itkComparisonImageFilterID3ID3.New()

class itkComparisonImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkComparisonImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterID3ID3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterID3ID3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterID3ID3

        Create a new object of the class itkComparisonImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterID3ID3 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterID3ID3_swigregister(itkComparisonImageFilterID3ID3)

def itkComparisonImageFilterID4ID4_New():
    return itkComparisonImageFilterID4ID4.New()

class itkComparisonImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkComparisonImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterID4ID4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterID4ID4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageD4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterID4ID4

        Create a new object of the class itkComparisonImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterID4ID4 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterID4ID4_swigregister(itkComparisonImageFilterID4ID4)

def itkComparisonImageFilterIF2IF2_New():
    return itkComparisonImageFilterIF2IF2.New()

class itkComparisonImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkComparisonImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIF2IF2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIF2IF2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIF2IF2

        Create a new object of the class itkComparisonImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIF2IF2 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIF2IF2_swigregister(itkComparisonImageFilterIF2IF2)

def itkComparisonImageFilterIF3IF3_New():
    return itkComparisonImageFilterIF3IF3.New()

class itkComparisonImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkComparisonImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIF3IF3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIF3IF3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIF3IF3

        Create a new object of the class itkComparisonImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIF3IF3 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIF3IF3_swigregister(itkComparisonImageFilterIF3IF3)

def itkComparisonImageFilterIF4IF4_New():
    return itkComparisonImageFilterIF4IF4.New()

class itkComparisonImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkComparisonImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIF4IF4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIF4IF4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageF4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> float"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIF4IF4

        Create a new object of the class itkComparisonImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIF4IF4 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIF4IF4_swigregister(itkComparisonImageFilterIF4IF4)

def itkComparisonImageFilterISS2ISS2_New():
    return itkComparisonImageFilterISS2ISS2.New()

class itkComparisonImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkComparisonImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterISS2ISS2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterISS2ISS2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterISS2ISS2

        Create a new object of the class itkComparisonImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterISS2ISS2 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterISS2ISS2_swigregister(itkComparisonImageFilterISS2ISS2)

def itkComparisonImageFilterISS3ISS3_New():
    return itkComparisonImageFilterISS3ISS3.New()

class itkComparisonImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkComparisonImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterISS3ISS3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterISS3ISS3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterISS3ISS3

        Create a new object of the class itkComparisonImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterISS3ISS3 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterISS3ISS3_swigregister(itkComparisonImageFilterISS3ISS3)

def itkComparisonImageFilterISS4ISS4_New():
    return itkComparisonImageFilterISS4ISS4.New()

class itkComparisonImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkComparisonImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterISS4ISS4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterISS4ISS4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageSS4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterISS4ISS4

        Create a new object of the class itkComparisonImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterISS4ISS4 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterISS4ISS4_swigregister(itkComparisonImageFilterISS4ISS4)

def itkComparisonImageFilterIUC2IUC2_New():
    return itkComparisonImageFilterIUC2IUC2.New()

class itkComparisonImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkComparisonImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUC2IUC2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUC2IUC2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUC2IUC2

        Create a new object of the class itkComparisonImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUC2IUC2 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUC2IUC2_swigregister(itkComparisonImageFilterIUC2IUC2)

def itkComparisonImageFilterIUC3IUC3_New():
    return itkComparisonImageFilterIUC3IUC3.New()

class itkComparisonImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkComparisonImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUC3IUC3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUC3IUC3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUC3IUC3

        Create a new object of the class itkComparisonImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUC3IUC3 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUC3IUC3_swigregister(itkComparisonImageFilterIUC3IUC3)

def itkComparisonImageFilterIUC4IUC4_New():
    return itkComparisonImageFilterIUC4IUC4.New()

class itkComparisonImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkComparisonImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUC4IUC4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUC4IUC4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUC4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned char"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUC4IUC4

        Create a new object of the class itkComparisonImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUC4IUC4 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUC4IUC4_swigregister(itkComparisonImageFilterIUC4IUC4)

def itkComparisonImageFilterIUS2IUS2_New():
    return itkComparisonImageFilterIUS2IUS2.New()

class itkComparisonImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkComparisonImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUS2IUS2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUS2IUS2_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS2 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUS2IUS2

        Create a new object of the class itkComparisonImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUS2IUS2 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUS2IUS2_swigregister(itkComparisonImageFilterIUS2IUS2)

def itkComparisonImageFilterIUS3IUS3_New():
    return itkComparisonImageFilterIUS3IUS3.New()

class itkComparisonImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkComparisonImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUS3IUS3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUS3IUS3_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS3 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUS3IUS3

        Create a new object of the class itkComparisonImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUS3IUS3 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUS3IUS3_swigregister(itkComparisonImageFilterIUS3IUS3)

def itkComparisonImageFilterIUS4IUS4_New():
    return itkComparisonImageFilterIUS4IUS4.New()

class itkComparisonImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkComparisonImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkComparisonImageFilterIUS4IUS4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkComparisonImageFilterIUS4IUS4_Pointer"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_Clone(self)

    def SetValidInput(self, _arg):
        r"""
        SetValidInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetValidInput(self, _arg)

    def SetTestInput(self, _arg):
        r"""
        SetTestInput(self, _arg)

        Parameters
        ----------
        _arg: itkImageUS4 const *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetTestInput(self, _arg)

    def SetVerifyInputInformation(self, _arg):
        r"""
        SetVerifyInputInformation(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetVerifyInputInformation(self, _arg)

    def GetVerifyInputInformation(self):
        r"""GetVerifyInputInformation(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetVerifyInputInformation(self)

    def VerifyInputInformationOn(self):
        r"""VerifyInputInformationOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_VerifyInputInformationOn(self)

    def VerifyInputInformationOff(self):
        r"""VerifyInputInformationOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_VerifyInputInformationOff(self)

    def SetToleranceRadius(self, _arg):
        r"""
        SetToleranceRadius(self, _arg)

        Parameters
        ----------
        _arg: int

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetToleranceRadius(self, _arg)

    def GetToleranceRadius(self):
        r"""GetToleranceRadius(self) -> int"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetToleranceRadius(self)

    def SetDifferenceThreshold(self, _arg):
        r"""
        SetDifferenceThreshold(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetDifferenceThreshold(self, _arg)

    def GetDifferenceThreshold(self):
        r"""GetDifferenceThreshold(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetDifferenceThreshold(self)

    def SetIgnoreBoundaryPixels(self, _arg):
        r"""
        SetIgnoreBoundaryPixels(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_SetIgnoreBoundaryPixels(self, _arg)

    def GetIgnoreBoundaryPixels(self):
        r"""GetIgnoreBoundaryPixels(self) -> bool"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetIgnoreBoundaryPixels(self)

    def IgnoreBoundaryPixelsOn(self):
        r"""IgnoreBoundaryPixelsOn(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_IgnoreBoundaryPixelsOn(self)

    def IgnoreBoundaryPixelsOff(self):
        r"""IgnoreBoundaryPixelsOff(self)"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_IgnoreBoundaryPixelsOff(self)

    def GetMinimumDifference(self):
        r"""GetMinimumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetMinimumDifference(self)

    def GetMaximumDifference(self):
        r"""GetMaximumDifference(self) -> unsigned short"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetMaximumDifference(self)

    def GetMeanDifference(self):
        r"""GetMeanDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetMeanDifference(self)

    def GetTotalDifference(self):
        r"""GetTotalDifference(self) -> double"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetTotalDifference(self)

    def GetNumberOfPixelsWithDifferences(self):
        r"""GetNumberOfPixelsWithDifferences(self) -> unsigned long"""
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_GetNumberOfPixelsWithDifferences(self)
    __swig_destroy__ = _itkComparisonImageFilterPython.delete_itkComparisonImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkComparisonImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkComparisonImageFilterIUS4IUS4

        Create a new object of the class itkComparisonImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkComparisonImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkComparisonImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkComparisonImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkComparisonImageFilterIUS4IUS4 in _itkComparisonImageFilterPython:
_itkComparisonImageFilterPython.itkComparisonImageFilterIUS4IUS4_swigregister(itkComparisonImageFilterIUS4IUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def comparison_image_filter(*args: itkt.ImageLike,  valid_input: itkt.Image=..., test_input: itkt.Image=..., verify_input_information: bool=..., tolerance_radius: int=..., difference_threshold: int=..., ignore_boundary_pixels: bool=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ComparisonImageFilter"""
    import itk

    kwarg_typehints = { 'valid_input':valid_input,'test_input':test_input,'verify_input_information':verify_input_information,'tolerance_radius':tolerance_radius,'difference_threshold':difference_threshold,'ignore_boundary_pixels':ignore_boundary_pixels }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ComparisonImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def comparison_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKTestKernel.ComparisonImageFilter
    comparison_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    comparison_image_filter.__doc__ = filter_object.__doc__



