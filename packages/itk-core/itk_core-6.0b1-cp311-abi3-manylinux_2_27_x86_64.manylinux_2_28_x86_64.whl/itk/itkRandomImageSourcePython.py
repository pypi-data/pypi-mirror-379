# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKTestKernelPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkRandomImageSourcePython
else:
    import _itkRandomImageSourcePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vector_refPython
import itk.itkVectorPython
import itk.itkFixedArrayPython
import itk.itkImageSourcePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.itkCovariantVectorPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkRGBPixelPython
import itk.itkImageRegionPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython

def itkRandomImageSourceID2_New():
    return itkRandomImageSourceID2.New()

class itkRandomImageSourceID2(itk.itkImageSourcePython.itkImageSourceID2):
    r"""Proxy of C++ itkRandomImageSourceID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceID2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceID2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID2

        Create a new object of the class itkRandomImageSourceID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID2_swigregister(itkRandomImageSourceID2)

def itkRandomImageSourceID3_New():
    return itkRandomImageSourceID3.New()

class itkRandomImageSourceID3(itk.itkImageSourcePython.itkImageSourceID3):
    r"""Proxy of C++ itkRandomImageSourceID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceID3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceID3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID3

        Create a new object of the class itkRandomImageSourceID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID3_swigregister(itkRandomImageSourceID3)

def itkRandomImageSourceID4_New():
    return itkRandomImageSourceID4.New()

class itkRandomImageSourceID4(itk.itkImageSourcePython.itkImageSourceID4):
    r"""Proxy of C++ itkRandomImageSourceID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceID4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceID4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> double"""
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceID4

        Create a new object of the class itkRandomImageSourceID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceID4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceID4_swigregister(itkRandomImageSourceID4)

def itkRandomImageSourceIF2_New():
    return itkRandomImageSourceIF2.New()

class itkRandomImageSourceIF2(itk.itkImageSourcePython.itkImageSourceIF2):
    r"""Proxy of C++ itkRandomImageSourceIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIF2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIF2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF2

        Create a new object of the class itkRandomImageSourceIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF2_swigregister(itkRandomImageSourceIF2)

def itkRandomImageSourceIF3_New():
    return itkRandomImageSourceIF3.New()

class itkRandomImageSourceIF3(itk.itkImageSourcePython.itkImageSourceIF3):
    r"""Proxy of C++ itkRandomImageSourceIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIF3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIF3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF3

        Create a new object of the class itkRandomImageSourceIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF3_swigregister(itkRandomImageSourceIF3)

def itkRandomImageSourceIF4_New():
    return itkRandomImageSourceIF4.New()

class itkRandomImageSourceIF4(itk.itkImageSourcePython.itkImageSourceIF4):
    r"""Proxy of C++ itkRandomImageSourceIF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIF4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIF4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: float

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> float"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIF4

        Create a new object of the class itkRandomImageSourceIF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIF4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIF4_swigregister(itkRandomImageSourceIF4)

def itkRandomImageSourceISS2_New():
    return itkRandomImageSourceISS2.New()

class itkRandomImageSourceISS2(itk.itkImageSourcePython.itkImageSourceISS2):
    r"""Proxy of C++ itkRandomImageSourceISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceISS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceISS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS2

        Create a new object of the class itkRandomImageSourceISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS2_swigregister(itkRandomImageSourceISS2)

def itkRandomImageSourceISS3_New():
    return itkRandomImageSourceISS3.New()

class itkRandomImageSourceISS3(itk.itkImageSourcePython.itkImageSourceISS3):
    r"""Proxy of C++ itkRandomImageSourceISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceISS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceISS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS3

        Create a new object of the class itkRandomImageSourceISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS3_swigregister(itkRandomImageSourceISS3)

def itkRandomImageSourceISS4_New():
    return itkRandomImageSourceISS4.New()

class itkRandomImageSourceISS4(itk.itkImageSourcePython.itkImageSourceISS4):
    r"""Proxy of C++ itkRandomImageSourceISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceISS4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceISS4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceISS4

        Create a new object of the class itkRandomImageSourceISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceISS4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceISS4_swigregister(itkRandomImageSourceISS4)

def itkRandomImageSourceIUC2_New():
    return itkRandomImageSourceIUC2.New()

class itkRandomImageSourceIUC2(itk.itkImageSourcePython.itkImageSourceIUC2):
    r"""Proxy of C++ itkRandomImageSourceIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUC2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUC2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC2

        Create a new object of the class itkRandomImageSourceIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC2_swigregister(itkRandomImageSourceIUC2)

def itkRandomImageSourceIUC3_New():
    return itkRandomImageSourceIUC3.New()

class itkRandomImageSourceIUC3(itk.itkImageSourcePython.itkImageSourceIUC3):
    r"""Proxy of C++ itkRandomImageSourceIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUC3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUC3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC3

        Create a new object of the class itkRandomImageSourceIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC3_swigregister(itkRandomImageSourceIUC3)

def itkRandomImageSourceIUC4_New():
    return itkRandomImageSourceIUC4.New()

class itkRandomImageSourceIUC4(itk.itkImageSourcePython.itkImageSourceIUC4):
    r"""Proxy of C++ itkRandomImageSourceIUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUC4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUC4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned char

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned char"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUC4

        Create a new object of the class itkRandomImageSourceIUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUC4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUC4_swigregister(itkRandomImageSourceIUC4)

def itkRandomImageSourceIUS2_New():
    return itkRandomImageSourceIUS2.New()

class itkRandomImageSourceIUS2(itk.itkImageSourcePython.itkImageSourceIUS2):
    r"""Proxy of C++ itkRandomImageSourceIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUS2_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize2

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD2

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD2

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD22

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD22"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS2

        Create a new object of the class itkRandomImageSourceIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS2 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS2_swigregister(itkRandomImageSourceIUS2)

def itkRandomImageSourceIUS3_New():
    return itkRandomImageSourceIUS3.New()

class itkRandomImageSourceIUS3(itk.itkImageSourcePython.itkImageSourceIUS3):
    r"""Proxy of C++ itkRandomImageSourceIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUS3_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize3

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD3

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD3

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD33

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD33"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS3

        Create a new object of the class itkRandomImageSourceIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS3 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS3_swigregister(itkRandomImageSourceIUS3)

def itkRandomImageSourceIUS4_New():
    return itkRandomImageSourceIUS4.New()

class itkRandomImageSourceIUS4(itk.itkImageSourcePython.itkImageSourceIUS4):
    r"""Proxy of C++ itkRandomImageSourceIUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkRandomImageSourceIUS4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkRandomImageSourceIUS4_Pointer"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_Clone(self)

    def SetSize(self, *args):
        r"""
        SetSize(self, _arg)

        Parameters
        ----------
        _arg: itkSize4

        SetSize(self, sizeArray)

        Parameters
        ----------
        sizeArray: unsigned long *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetSize(self, *args)

    def GetSize(self):
        r"""GetSize(self) -> unsigned long const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetSize(self)

    def SetSpacing(self, *args):
        r"""
        SetSpacing(self, _arg)

        Parameters
        ----------
        _arg: itkVectorD4

        SetSpacing(self, spacingArray)

        Parameters
        ----------
        spacingArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetSpacing(self, *args)

    def GetSpacing(self):
        r"""GetSpacing(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetSpacing(self)

    def SetOrigin(self, *args):
        r"""
        SetOrigin(self, _arg)

        Parameters
        ----------
        _arg: itkPointD4

        SetOrigin(self, originArray)

        Parameters
        ----------
        originArray: double *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetOrigin(self, *args)

    def GetOrigin(self):
        r"""GetOrigin(self) -> double const *"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetOrigin(self)

    def SetDirection(self, _arg):
        r"""
        SetDirection(self, _arg)

        Parameters
        ----------
        _arg: itkMatrixD44

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetDirection(self, _arg)

    def GetDirection(self):
        r"""GetDirection(self) -> itkMatrixD44"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetDirection(self)

    def SetMin(self, _arg):
        r"""
        SetMin(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetMin(self, _arg)

    def GetMin(self):
        r"""GetMin(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetMin(self)

    def SetMax(self, _arg):
        r"""
        SetMax(self, _arg)

        Parameters
        ----------
        _arg: unsigned short

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_SetMax(self, _arg)

    def GetMax(self):
        r"""GetMax(self) -> unsigned short"""
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_GetMax(self)
    __swig_destroy__ = _itkRandomImageSourcePython.delete_itkRandomImageSourceIUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkRandomImageSourceIUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkRandomImageSourcePython.itkRandomImageSourceIUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkRandomImageSourceIUS4

        Create a new object of the class itkRandomImageSourceIUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkRandomImageSourceIUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkRandomImageSourceIUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkRandomImageSourceIUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkRandomImageSourceIUS4 in _itkRandomImageSourcePython:
_itkRandomImageSourcePython.itkRandomImageSourceIUS4_swigregister(itkRandomImageSourceIUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def random_image_source(*args,  size: Sequence[int]=..., spacing: Sequence[float]=..., origin: Sequence[float]=..., direction=..., min: int=..., max: int=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for RandomImageSource"""
    import itk

    kwarg_typehints = { 'size':size,'spacing':spacing,'origin':origin,'direction':direction,'min':min,'max':max }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.RandomImageSource.New(*args, **kwargs)

    return instance.__internal_call__()

def random_image_source_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKTestKernel.RandomImageSource
    random_image_source.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    random_image_source.__doc__ = filter_object.__doc__



