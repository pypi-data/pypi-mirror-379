# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKFFTPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkFFTShiftImageFilterPython
else:
    import _itkFFTShiftImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkCyclicShiftImageFilterPython
import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrix_fixedPython
import itk.vnl_vectorPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.itkImageToImageFilterAPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterBPython

def itkFFTShiftImageFilterICD2ICD2_New():
    return itkFFTShiftImageFilterICD2ICD2.New()

class itkFFTShiftImageFilterICD2ICD2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICD2ICD2):
    r"""Proxy of C++ itkFFTShiftImageFilterICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICD2ICD2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICD2ICD2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICD2ICD2

        Create a new object of the class itkFFTShiftImageFilterICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICD2ICD2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD2ICD2_swigregister(itkFFTShiftImageFilterICD2ICD2)

def itkFFTShiftImageFilterICD3ICD3_New():
    return itkFFTShiftImageFilterICD3ICD3.New()

class itkFFTShiftImageFilterICD3ICD3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICD3ICD3):
    r"""Proxy of C++ itkFFTShiftImageFilterICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICD3ICD3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICD3ICD3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICD3ICD3

        Create a new object of the class itkFFTShiftImageFilterICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICD3ICD3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD3ICD3_swigregister(itkFFTShiftImageFilterICD3ICD3)

def itkFFTShiftImageFilterICD4ICD4_New():
    return itkFFTShiftImageFilterICD4ICD4.New()

class itkFFTShiftImageFilterICD4ICD4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICD4ICD4):
    r"""Proxy of C++ itkFFTShiftImageFilterICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICD4ICD4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICD4ICD4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICD4ICD4

        Create a new object of the class itkFFTShiftImageFilterICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICD4ICD4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICD4ICD4_swigregister(itkFFTShiftImageFilterICD4ICD4)

def itkFFTShiftImageFilterICF2ICF2_New():
    return itkFFTShiftImageFilterICF2ICF2.New()

class itkFFTShiftImageFilterICF2ICF2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF2ICF2):
    r"""Proxy of C++ itkFFTShiftImageFilterICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICF2ICF2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICF2ICF2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICF2ICF2

        Create a new object of the class itkFFTShiftImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICF2ICF2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF2ICF2_swigregister(itkFFTShiftImageFilterICF2ICF2)

def itkFFTShiftImageFilterICF3ICF3_New():
    return itkFFTShiftImageFilterICF3ICF3.New()

class itkFFTShiftImageFilterICF3ICF3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF3ICF3):
    r"""Proxy of C++ itkFFTShiftImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICF3ICF3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICF3ICF3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICF3ICF3

        Create a new object of the class itkFFTShiftImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICF3ICF3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF3ICF3_swigregister(itkFFTShiftImageFilterICF3ICF3)

def itkFFTShiftImageFilterICF4ICF4_New():
    return itkFFTShiftImageFilterICF4ICF4.New()

class itkFFTShiftImageFilterICF4ICF4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICF4ICF4):
    r"""Proxy of C++ itkFFTShiftImageFilterICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICF4ICF4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICF4ICF4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICF4ICF4

        Create a new object of the class itkFFTShiftImageFilterICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICF4ICF4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICF4ICF4_swigregister(itkFFTShiftImageFilterICF4ICF4)

def itkFFTShiftImageFilterICVF22ICVF22_New():
    return itkFFTShiftImageFilterICVF22ICVF22.New()

class itkFFTShiftImageFilterICVF22ICVF22(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF22ICVF22_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF22ICVF22_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF22ICVF22

        Create a new object of the class itkFFTShiftImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF22ICVF22 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF22ICVF22_swigregister(itkFFTShiftImageFilterICVF22ICVF22)

def itkFFTShiftImageFilterICVF23ICVF23_New():
    return itkFFTShiftImageFilterICVF23ICVF23.New()

class itkFFTShiftImageFilterICVF23ICVF23(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF23ICVF23_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF23ICVF23_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF23ICVF23

        Create a new object of the class itkFFTShiftImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF23ICVF23 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF23ICVF23_swigregister(itkFFTShiftImageFilterICVF23ICVF23)

def itkFFTShiftImageFilterICVF24ICVF24_New():
    return itkFFTShiftImageFilterICVF24ICVF24.New()

class itkFFTShiftImageFilterICVF24ICVF24(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF24ICVF24_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF24ICVF24_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF24ICVF24

        Create a new object of the class itkFFTShiftImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF24ICVF24 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF24ICVF24_swigregister(itkFFTShiftImageFilterICVF24ICVF24)

def itkFFTShiftImageFilterICVF32ICVF32_New():
    return itkFFTShiftImageFilterICVF32ICVF32.New()

class itkFFTShiftImageFilterICVF32ICVF32(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF32ICVF32_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF32ICVF32_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF32ICVF32

        Create a new object of the class itkFFTShiftImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF32ICVF32 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF32ICVF32_swigregister(itkFFTShiftImageFilterICVF32ICVF32)

def itkFFTShiftImageFilterICVF33ICVF33_New():
    return itkFFTShiftImageFilterICVF33ICVF33.New()

class itkFFTShiftImageFilterICVF33ICVF33(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF33ICVF33_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF33ICVF33_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF33ICVF33

        Create a new object of the class itkFFTShiftImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF33ICVF33 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF33ICVF33_swigregister(itkFFTShiftImageFilterICVF33ICVF33)

def itkFFTShiftImageFilterICVF34ICVF34_New():
    return itkFFTShiftImageFilterICVF34ICVF34.New()

class itkFFTShiftImageFilterICVF34ICVF34(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF34ICVF34_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF34ICVF34_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF34ICVF34

        Create a new object of the class itkFFTShiftImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF34ICVF34 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF34ICVF34_swigregister(itkFFTShiftImageFilterICVF34ICVF34)

def itkFFTShiftImageFilterICVF42ICVF42_New():
    return itkFFTShiftImageFilterICVF42ICVF42.New()

class itkFFTShiftImageFilterICVF42ICVF42(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF42ICVF42_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF42ICVF42_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF42ICVF42

        Create a new object of the class itkFFTShiftImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF42ICVF42 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF42ICVF42_swigregister(itkFFTShiftImageFilterICVF42ICVF42)

def itkFFTShiftImageFilterICVF43ICVF43_New():
    return itkFFTShiftImageFilterICVF43ICVF43.New()

class itkFFTShiftImageFilterICVF43ICVF43(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF43ICVF43_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF43ICVF43_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF43ICVF43

        Create a new object of the class itkFFTShiftImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF43ICVF43 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF43ICVF43_swigregister(itkFFTShiftImageFilterICVF43ICVF43)

def itkFFTShiftImageFilterICVF44ICVF44_New():
    return itkFFTShiftImageFilterICVF44ICVF44.New()

class itkFFTShiftImageFilterICVF44ICVF44(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkFFTShiftImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterICVF44ICVF44_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterICVF44ICVF44_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterICVF44ICVF44

        Create a new object of the class itkFFTShiftImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterICVF44ICVF44 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterICVF44ICVF44_swigregister(itkFFTShiftImageFilterICVF44ICVF44)

def itkFFTShiftImageFilterID2ID2_New():
    return itkFFTShiftImageFilterID2ID2.New()

class itkFFTShiftImageFilterID2ID2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID2ID2):
    r"""Proxy of C++ itkFFTShiftImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterID2ID2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterID2ID2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterID2ID2

        Create a new object of the class itkFFTShiftImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterID2ID2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID2ID2_swigregister(itkFFTShiftImageFilterID2ID2)

def itkFFTShiftImageFilterID3ID3_New():
    return itkFFTShiftImageFilterID3ID3.New()

class itkFFTShiftImageFilterID3ID3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID3ID3):
    r"""Proxy of C++ itkFFTShiftImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterID3ID3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterID3ID3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterID3ID3

        Create a new object of the class itkFFTShiftImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterID3ID3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID3ID3_swigregister(itkFFTShiftImageFilterID3ID3)

def itkFFTShiftImageFilterID4ID4_New():
    return itkFFTShiftImageFilterID4ID4.New()

class itkFFTShiftImageFilterID4ID4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterID4ID4):
    r"""Proxy of C++ itkFFTShiftImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterID4ID4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterID4ID4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterID4ID4

        Create a new object of the class itkFFTShiftImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterID4ID4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterID4ID4_swigregister(itkFFTShiftImageFilterID4ID4)

def itkFFTShiftImageFilterIF2IF2_New():
    return itkFFTShiftImageFilterIF2IF2.New()

class itkFFTShiftImageFilterIF2IF2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF2IF2):
    r"""Proxy of C++ itkFFTShiftImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIF2IF2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIF2IF2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIF2IF2

        Create a new object of the class itkFFTShiftImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIF2IF2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF2IF2_swigregister(itkFFTShiftImageFilterIF2IF2)

def itkFFTShiftImageFilterIF3IF3_New():
    return itkFFTShiftImageFilterIF3IF3.New()

class itkFFTShiftImageFilterIF3IF3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF3IF3):
    r"""Proxy of C++ itkFFTShiftImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIF3IF3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIF3IF3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIF3IF3

        Create a new object of the class itkFFTShiftImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIF3IF3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF3IF3_swigregister(itkFFTShiftImageFilterIF3IF3)

def itkFFTShiftImageFilterIF4IF4_New():
    return itkFFTShiftImageFilterIF4IF4.New()

class itkFFTShiftImageFilterIF4IF4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIF4IF4):
    r"""Proxy of C++ itkFFTShiftImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIF4IF4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIF4IF4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIF4IF4

        Create a new object of the class itkFFTShiftImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIF4IF4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIF4IF4_swigregister(itkFFTShiftImageFilterIF4IF4)

def itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_New():
    return itkFFTShiftImageFilterIRGBAUC2IRGBAUC2.New()

class itkFFTShiftImageFilterIRGBAUC2IRGBAUC2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkFFTShiftImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBAUC2IRGBAUC2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC2IRGBAUC2_swigregister(itkFFTShiftImageFilterIRGBAUC2IRGBAUC2)

def itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_New():
    return itkFFTShiftImageFilterIRGBAUC3IRGBAUC3.New()

class itkFFTShiftImageFilterIRGBAUC3IRGBAUC3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkFFTShiftImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBAUC3IRGBAUC3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC3IRGBAUC3_swigregister(itkFFTShiftImageFilterIRGBAUC3IRGBAUC3)

def itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_New():
    return itkFFTShiftImageFilterIRGBAUC4IRGBAUC4.New()

class itkFFTShiftImageFilterIRGBAUC4IRGBAUC4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBAUC4IRGBAUC4

        Create a new object of the class itkFFTShiftImageFilterIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBAUC4IRGBAUC4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBAUC4IRGBAUC4_swigregister(itkFFTShiftImageFilterIRGBAUC4IRGBAUC4)

def itkFFTShiftImageFilterIRGBUC2IRGBUC2_New():
    return itkFFTShiftImageFilterIRGBUC2IRGBUC2.New()

class itkFFTShiftImageFilterIRGBUC2IRGBUC2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkFFTShiftImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBUC2IRGBUC2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC2IRGBUC2_swigregister(itkFFTShiftImageFilterIRGBUC2IRGBUC2)

def itkFFTShiftImageFilterIRGBUC3IRGBUC3_New():
    return itkFFTShiftImageFilterIRGBUC3IRGBUC3.New()

class itkFFTShiftImageFilterIRGBUC3IRGBUC3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkFFTShiftImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBUC3IRGBUC3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC3IRGBUC3_swigregister(itkFFTShiftImageFilterIRGBUC3IRGBUC3)

def itkFFTShiftImageFilterIRGBUC4IRGBUC4_New():
    return itkFFTShiftImageFilterIRGBUC4IRGBUC4.New()

class itkFFTShiftImageFilterIRGBUC4IRGBUC4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkFFTShiftImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIRGBUC4IRGBUC4

        Create a new object of the class itkFFTShiftImageFilterIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIRGBUC4IRGBUC4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIRGBUC4IRGBUC4_swigregister(itkFFTShiftImageFilterIRGBUC4IRGBUC4)

def itkFFTShiftImageFilterISS2ISS2_New():
    return itkFFTShiftImageFilterISS2ISS2.New()

class itkFFTShiftImageFilterISS2ISS2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS2ISS2):
    r"""Proxy of C++ itkFFTShiftImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterISS2ISS2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterISS2ISS2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterISS2ISS2

        Create a new object of the class itkFFTShiftImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterISS2ISS2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS2ISS2_swigregister(itkFFTShiftImageFilterISS2ISS2)

def itkFFTShiftImageFilterISS3ISS3_New():
    return itkFFTShiftImageFilterISS3ISS3.New()

class itkFFTShiftImageFilterISS3ISS3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS3ISS3):
    r"""Proxy of C++ itkFFTShiftImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterISS3ISS3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterISS3ISS3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterISS3ISS3

        Create a new object of the class itkFFTShiftImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterISS3ISS3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS3ISS3_swigregister(itkFFTShiftImageFilterISS3ISS3)

def itkFFTShiftImageFilterISS4ISS4_New():
    return itkFFTShiftImageFilterISS4ISS4.New()

class itkFFTShiftImageFilterISS4ISS4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterISS4ISS4):
    r"""Proxy of C++ itkFFTShiftImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterISS4ISS4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterISS4ISS4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterISS4ISS4

        Create a new object of the class itkFFTShiftImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterISS4ISS4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterISS4ISS4_swigregister(itkFFTShiftImageFilterISS4ISS4)

def itkFFTShiftImageFilterIUC2IUC2_New():
    return itkFFTShiftImageFilterIUC2IUC2.New()

class itkFFTShiftImageFilterIUC2IUC2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC2IUC2):
    r"""Proxy of C++ itkFFTShiftImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUC2IUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUC2IUC2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUC2IUC2

        Create a new object of the class itkFFTShiftImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUC2IUC2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC2IUC2_swigregister(itkFFTShiftImageFilterIUC2IUC2)

def itkFFTShiftImageFilterIUC3IUC3_New():
    return itkFFTShiftImageFilterIUC3IUC3.New()

class itkFFTShiftImageFilterIUC3IUC3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC3IUC3):
    r"""Proxy of C++ itkFFTShiftImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUC3IUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUC3IUC3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUC3IUC3

        Create a new object of the class itkFFTShiftImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUC3IUC3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC3IUC3_swigregister(itkFFTShiftImageFilterIUC3IUC3)

def itkFFTShiftImageFilterIUC4IUC4_New():
    return itkFFTShiftImageFilterIUC4IUC4.New()

class itkFFTShiftImageFilterIUC4IUC4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUC4IUC4):
    r"""Proxy of C++ itkFFTShiftImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUC4IUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUC4IUC4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUC4IUC4

        Create a new object of the class itkFFTShiftImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUC4IUC4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUC4IUC4_swigregister(itkFFTShiftImageFilterIUC4IUC4)

def itkFFTShiftImageFilterIUS2IUS2_New():
    return itkFFTShiftImageFilterIUS2IUS2.New()

class itkFFTShiftImageFilterIUS2IUS2(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS2IUS2):
    r"""Proxy of C++ itkFFTShiftImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUS2IUS2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUS2IUS2_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUS2IUS2

        Create a new object of the class itkFFTShiftImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUS2IUS2 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS2IUS2_swigregister(itkFFTShiftImageFilterIUS2IUS2)

def itkFFTShiftImageFilterIUS3IUS3_New():
    return itkFFTShiftImageFilterIUS3IUS3.New()

class itkFFTShiftImageFilterIUS3IUS3(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS3IUS3):
    r"""Proxy of C++ itkFFTShiftImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUS3IUS3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUS3IUS3_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUS3IUS3

        Create a new object of the class itkFFTShiftImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUS3IUS3 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS3IUS3_swigregister(itkFFTShiftImageFilterIUS3IUS3)

def itkFFTShiftImageFilterIUS4IUS4_New():
    return itkFFTShiftImageFilterIUS4IUS4.New()

class itkFFTShiftImageFilterIUS4IUS4(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIUS4IUS4):
    r"""Proxy of C++ itkFFTShiftImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIUS4IUS4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIUS4IUS4_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIUS4IUS4

        Create a new object of the class itkFFTShiftImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIUS4IUS4 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIUS4IUS4_swigregister(itkFFTShiftImageFilterIUS4IUS4)

def itkFFTShiftImageFilterIVF22IVF22_New():
    return itkFFTShiftImageFilterIVF22IVF22.New()

class itkFFTShiftImageFilterIVF22IVF22(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF22IVF22):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF22IVF22_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF22IVF22_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF22IVF22

        Create a new object of the class itkFFTShiftImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF22IVF22 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF22IVF22_swigregister(itkFFTShiftImageFilterIVF22IVF22)

def itkFFTShiftImageFilterIVF23IVF23_New():
    return itkFFTShiftImageFilterIVF23IVF23.New()

class itkFFTShiftImageFilterIVF23IVF23(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF23IVF23):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF23IVF23_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF23IVF23_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF23IVF23

        Create a new object of the class itkFFTShiftImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF23IVF23 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF23IVF23_swigregister(itkFFTShiftImageFilterIVF23IVF23)

def itkFFTShiftImageFilterIVF24IVF24_New():
    return itkFFTShiftImageFilterIVF24IVF24.New()

class itkFFTShiftImageFilterIVF24IVF24(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF24IVF24):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF24IVF24_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF24IVF24_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF24IVF24

        Create a new object of the class itkFFTShiftImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF24IVF24 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF24IVF24_swigregister(itkFFTShiftImageFilterIVF24IVF24)

def itkFFTShiftImageFilterIVF32IVF32_New():
    return itkFFTShiftImageFilterIVF32IVF32.New()

class itkFFTShiftImageFilterIVF32IVF32(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF32IVF32):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF32IVF32_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF32IVF32_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF32IVF32

        Create a new object of the class itkFFTShiftImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF32IVF32 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF32IVF32_swigregister(itkFFTShiftImageFilterIVF32IVF32)

def itkFFTShiftImageFilterIVF33IVF33_New():
    return itkFFTShiftImageFilterIVF33IVF33.New()

class itkFFTShiftImageFilterIVF33IVF33(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF33IVF33):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF33IVF33_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF33IVF33_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF33IVF33

        Create a new object of the class itkFFTShiftImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF33IVF33 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF33IVF33_swigregister(itkFFTShiftImageFilterIVF33IVF33)

def itkFFTShiftImageFilterIVF34IVF34_New():
    return itkFFTShiftImageFilterIVF34IVF34.New()

class itkFFTShiftImageFilterIVF34IVF34(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF34IVF34):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF34IVF34_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF34IVF34_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF34IVF34

        Create a new object of the class itkFFTShiftImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF34IVF34 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF34IVF34_swigregister(itkFFTShiftImageFilterIVF34IVF34)

def itkFFTShiftImageFilterIVF42IVF42_New():
    return itkFFTShiftImageFilterIVF42IVF42.New()

class itkFFTShiftImageFilterIVF42IVF42(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF42IVF42):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF42IVF42_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF42IVF42_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF42IVF42

        Create a new object of the class itkFFTShiftImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF42IVF42 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF42IVF42_swigregister(itkFFTShiftImageFilterIVF42IVF42)

def itkFFTShiftImageFilterIVF43IVF43_New():
    return itkFFTShiftImageFilterIVF43IVF43.New()

class itkFFTShiftImageFilterIVF43IVF43(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF43IVF43):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF43IVF43_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF43IVF43_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF43IVF43

        Create a new object of the class itkFFTShiftImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF43IVF43 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF43IVF43_swigregister(itkFFTShiftImageFilterIVF43IVF43)

def itkFFTShiftImageFilterIVF44IVF44_New():
    return itkFFTShiftImageFilterIVF44IVF44.New()

class itkFFTShiftImageFilterIVF44IVF44(itk.itkCyclicShiftImageFilterPython.itkCyclicShiftImageFilterIVF44IVF44):
    r"""Proxy of C++ itkFFTShiftImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkFFTShiftImageFilterIVF44IVF44_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkFFTShiftImageFilterIVF44IVF44_Pointer"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_Clone(self)

    def SetInverse(self, _arg):
        r"""
        SetInverse(self, _arg)

        Parameters
        ----------
        _arg: bool

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_SetInverse(self, _arg)

    def GetInverse(self):
        r"""GetInverse(self) -> bool const &"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_GetInverse(self)

    def InverseOn(self):
        r"""InverseOn(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_InverseOn(self)

    def InverseOff(self):
        r"""InverseOff(self)"""
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_InverseOff(self)
    __swig_destroy__ = _itkFFTShiftImageFilterPython.delete_itkFFTShiftImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkFFTShiftImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkFFTShiftImageFilterIVF44IVF44

        Create a new object of the class itkFFTShiftImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkFFTShiftImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkFFTShiftImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkFFTShiftImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkFFTShiftImageFilterIVF44IVF44 in _itkFFTShiftImageFilterPython:
_itkFFTShiftImageFilterPython.itkFFTShiftImageFilterIVF44IVF44_swigregister(itkFFTShiftImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def fft_shift_image_filter(*args: itkt.ImageLike,  inverse: bool=..., shift: Sequence[int]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for FFTShiftImageFilter"""
    import itk

    kwarg_typehints = { 'inverse':inverse,'shift':shift }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.FFTShiftImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def fft_shift_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKFFT.FFTShiftImageFilter
    fft_shift_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    fft_shift_image_filter.__doc__ = filter_object.__doc__



