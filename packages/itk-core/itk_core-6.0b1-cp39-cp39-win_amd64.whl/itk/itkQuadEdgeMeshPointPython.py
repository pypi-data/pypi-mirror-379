# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKQuadEdgeMeshPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkQuadEdgeMeshPointPython
else:
    import _itkQuadEdgeMeshPointPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkGeometricalQuadEdgePython
import itk.itkQuadEdgePython
class itkQuadEdgeMeshPointF2GQEULLULLBBT(itk.itkPointPython.itkPointF2):
    r"""Proxy of C++ itkQuadEdgeMeshPointF2GQEULLULLBBT class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF2GQEULLULLBBT

    def __init__(self, *args):
        r"""
        __init__(self) -> itkQuadEdgeMeshPointF2GQEULLULLBBT
        __init__(self, arg0) -> itkQuadEdgeMeshPointF2GQEULLULLBBT

        Parameters
        ----------
        arg0: itkQuadEdgeMeshPointF2GQEULLULLBBT const &

        __init__(self, r) -> itkQuadEdgeMeshPointF2GQEULLULLBBT

        Parameters
        ----------
        r: itkPointF2 const &

        __init__(self, r) -> itkQuadEdgeMeshPointF2GQEULLULLBBT

        Parameters
        ----------
        r: float const *

        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_swiginit(self, _itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF2GQEULLULLBBT(*args))

    def SetEdge(self, inputEdge):
        r"""
        SetEdge(self, inputEdge)

        Parameters
        ----------
        inputEdge: itkGeometricalQuadEdgeULLULLBBF *

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_SetEdge(self, inputEdge)

    def SetPoint(self, point):
        r"""
        SetPoint(self, point)

        Parameters
        ----------
        point: itkPointF2 const &

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_SetPoint(self, point)

    def GetEdge(self, *args):
        r"""
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_GetEdge(self, *args)

    def IsInternal(self):
        r"""IsInternal(self) -> bool"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_IsInternal(self)

    def GetValence(self):
        r"""GetValence(self) -> int"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_GetValence(self)

# Register itkQuadEdgeMeshPointF2GQEULLULLBBT in _itkQuadEdgeMeshPointPython:
_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF2GQEULLULLBBT_swigregister(itkQuadEdgeMeshPointF2GQEULLULLBBT)
class itkQuadEdgeMeshPointF3GQEULLULLBBT(itk.itkPointPython.itkPointF3):
    r"""Proxy of C++ itkQuadEdgeMeshPointF3GQEULLULLBBT class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF3GQEULLULLBBT

    def __init__(self, *args):
        r"""
        __init__(self) -> itkQuadEdgeMeshPointF3GQEULLULLBBT
        __init__(self, arg0) -> itkQuadEdgeMeshPointF3GQEULLULLBBT

        Parameters
        ----------
        arg0: itkQuadEdgeMeshPointF3GQEULLULLBBT const &

        __init__(self, r) -> itkQuadEdgeMeshPointF3GQEULLULLBBT

        Parameters
        ----------
        r: itkPointF3 const &

        __init__(self, r) -> itkQuadEdgeMeshPointF3GQEULLULLBBT

        Parameters
        ----------
        r: float const *

        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_swiginit(self, _itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF3GQEULLULLBBT(*args))

    def SetEdge(self, inputEdge):
        r"""
        SetEdge(self, inputEdge)

        Parameters
        ----------
        inputEdge: itkGeometricalQuadEdgeULLULLBBF *

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_SetEdge(self, inputEdge)

    def SetPoint(self, point):
        r"""
        SetPoint(self, point)

        Parameters
        ----------
        point: itkPointF3 const &

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_SetPoint(self, point)

    def GetEdge(self, *args):
        r"""
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_GetEdge(self, *args)

    def IsInternal(self):
        r"""IsInternal(self) -> bool"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_IsInternal(self)

    def GetValence(self):
        r"""GetValence(self) -> int"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_GetValence(self)

# Register itkQuadEdgeMeshPointF3GQEULLULLBBT in _itkQuadEdgeMeshPointPython:
_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF3GQEULLULLBBT_swigregister(itkQuadEdgeMeshPointF3GQEULLULLBBT)
class itkQuadEdgeMeshPointF4GQEULLULLBBT(itk.itkPointPython.itkPointF4):
    r"""Proxy of C++ itkQuadEdgeMeshPointF4GQEULLULLBBT class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    __swig_destroy__ = _itkQuadEdgeMeshPointPython.delete_itkQuadEdgeMeshPointF4GQEULLULLBBT

    def __init__(self, *args):
        r"""
        __init__(self) -> itkQuadEdgeMeshPointF4GQEULLULLBBT
        __init__(self, arg0) -> itkQuadEdgeMeshPointF4GQEULLULLBBT

        Parameters
        ----------
        arg0: itkQuadEdgeMeshPointF4GQEULLULLBBT const &

        __init__(self, r) -> itkQuadEdgeMeshPointF4GQEULLULLBBT

        Parameters
        ----------
        r: itkPointF4 const &

        __init__(self, r) -> itkQuadEdgeMeshPointF4GQEULLULLBBT

        Parameters
        ----------
        r: float const *

        """
        _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_swiginit(self, _itkQuadEdgeMeshPointPython.new_itkQuadEdgeMeshPointF4GQEULLULLBBT(*args))

    def SetEdge(self, inputEdge):
        r"""
        SetEdge(self, inputEdge)

        Parameters
        ----------
        inputEdge: itkGeometricalQuadEdgeULLULLBBF *

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_SetEdge(self, inputEdge)

    def SetPoint(self, point):
        r"""
        SetPoint(self, point)

        Parameters
        ----------
        point: itkPointF4 const &

        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_SetPoint(self, point)

    def GetEdge(self, *args):
        r"""
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        GetEdge(self) -> itkGeometricalQuadEdgeULLULLBBF
        """
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_GetEdge(self, *args)

    def IsInternal(self):
        r"""IsInternal(self) -> bool"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_IsInternal(self)

    def GetValence(self):
        r"""GetValence(self) -> int"""
        return _itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_GetValence(self)

# Register itkQuadEdgeMeshPointF4GQEULLULLBBT in _itkQuadEdgeMeshPointPython:
_itkQuadEdgeMeshPointPython.itkQuadEdgeMeshPointF4GQEULLULLBBT_swigregister(itkQuadEdgeMeshPointF4GQEULLULLBBT)

