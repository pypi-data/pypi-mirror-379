# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKIOMeshBasePython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshFileReaderPython
else:
    import _itkMeshFileReaderPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkMeshIOBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkMeshSourcePython
import itk.itkMeshBasePython
import itk.itkBoundingBoxPython
import itk.itkMapContainerPython
import itk.itkVectorContainerPython
import itk.itkOffsetPython
import itk.itkSizePython
import itk.itkArrayPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkPointSetPython

def itkMeshFileReaderMD2_New():
    return itkMeshFileReaderMD2.New()

class itkMeshFileReaderMD2(itk.itkMeshSourcePython.itkMeshSourceMD2):
    r"""Proxy of C++ itkMeshFileReaderMD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMD2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMD2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMD2

        Create a new object of the class itkMeshFileReaderMD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMD2 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMD2_swigregister(itkMeshFileReaderMD2)

def itkMeshFileReaderMD3_New():
    return itkMeshFileReaderMD3.New()

class itkMeshFileReaderMD3(itk.itkMeshSourcePython.itkMeshSourceMD3):
    r"""Proxy of C++ itkMeshFileReaderMD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMD3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMD3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMD3

        Create a new object of the class itkMeshFileReaderMD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMD3 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMD3_swigregister(itkMeshFileReaderMD3)

def itkMeshFileReaderMD4_New():
    return itkMeshFileReaderMD4.New()

class itkMeshFileReaderMD4(itk.itkMeshSourcePython.itkMeshSourceMD4):
    r"""Proxy of C++ itkMeshFileReaderMD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMD4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMD4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMD4

        Create a new object of the class itkMeshFileReaderMD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMD4 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMD4_swigregister(itkMeshFileReaderMD4)

def itkMeshFileReaderMF2_New():
    return itkMeshFileReaderMF2.New()

class itkMeshFileReaderMF2(itk.itkMeshSourcePython.itkMeshSourceMF2):
    r"""Proxy of C++ itkMeshFileReaderMF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMF2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMF2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMF2

        Create a new object of the class itkMeshFileReaderMF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMF2 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMF2_swigregister(itkMeshFileReaderMF2)

def itkMeshFileReaderMF3_New():
    return itkMeshFileReaderMF3.New()

class itkMeshFileReaderMF3(itk.itkMeshSourcePython.itkMeshSourceMF3):
    r"""Proxy of C++ itkMeshFileReaderMF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMF3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMF3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMF3

        Create a new object of the class itkMeshFileReaderMF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMF3 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMF3_swigregister(itkMeshFileReaderMF3)

def itkMeshFileReaderMF4_New():
    return itkMeshFileReaderMF4.New()

class itkMeshFileReaderMF4(itk.itkMeshSourcePython.itkMeshSourceMF4):
    r"""Proxy of C++ itkMeshFileReaderMF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMF4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMF4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMF4

        Create a new object of the class itkMeshFileReaderMF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMF4 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMF4_swigregister(itkMeshFileReaderMF4)

def itkMeshFileReaderMSS2_New():
    return itkMeshFileReaderMSS2.New()

class itkMeshFileReaderMSS2(itk.itkMeshSourcePython.itkMeshSourceMSS2):
    r"""Proxy of C++ itkMeshFileReaderMSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMSS2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMSS2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMSS2

        Create a new object of the class itkMeshFileReaderMSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMSS2 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMSS2_swigregister(itkMeshFileReaderMSS2)

def itkMeshFileReaderMSS3_New():
    return itkMeshFileReaderMSS3.New()

class itkMeshFileReaderMSS3(itk.itkMeshSourcePython.itkMeshSourceMSS3):
    r"""Proxy of C++ itkMeshFileReaderMSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMSS3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMSS3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMSS3

        Create a new object of the class itkMeshFileReaderMSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMSS3 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMSS3_swigregister(itkMeshFileReaderMSS3)

def itkMeshFileReaderMSS4_New():
    return itkMeshFileReaderMSS4.New()

class itkMeshFileReaderMSS4(itk.itkMeshSourcePython.itkMeshSourceMSS4):
    r"""Proxy of C++ itkMeshFileReaderMSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMSS4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMSS4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMSS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMSS4

        Create a new object of the class itkMeshFileReaderMSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMSS4 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMSS4_swigregister(itkMeshFileReaderMSS4)

def itkMeshFileReaderMUC2_New():
    return itkMeshFileReaderMUC2.New()

class itkMeshFileReaderMUC2(itk.itkMeshSourcePython.itkMeshSourceMUC2):
    r"""Proxy of C++ itkMeshFileReaderMUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUC2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUC2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUC2

        Create a new object of the class itkMeshFileReaderMUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUC2 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUC2_swigregister(itkMeshFileReaderMUC2)

def itkMeshFileReaderMUC3_New():
    return itkMeshFileReaderMUC3.New()

class itkMeshFileReaderMUC3(itk.itkMeshSourcePython.itkMeshSourceMUC3):
    r"""Proxy of C++ itkMeshFileReaderMUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUC3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUC3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUC3

        Create a new object of the class itkMeshFileReaderMUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUC3 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUC3_swigregister(itkMeshFileReaderMUC3)

def itkMeshFileReaderMUC4_New():
    return itkMeshFileReaderMUC4.New()

class itkMeshFileReaderMUC4(itk.itkMeshSourcePython.itkMeshSourceMUC4):
    r"""Proxy of C++ itkMeshFileReaderMUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUC4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUC4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUC4

        Create a new object of the class itkMeshFileReaderMUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUC4 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUC4_swigregister(itkMeshFileReaderMUC4)

def itkMeshFileReaderMUS2_New():
    return itkMeshFileReaderMUS2.New()

class itkMeshFileReaderMUS2(itk.itkMeshSourcePython.itkMeshSourceMUS2):
    r"""Proxy of C++ itkMeshFileReaderMUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUS2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUS2_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUS2

        Create a new object of the class itkMeshFileReaderMUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUS2 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUS2_swigregister(itkMeshFileReaderMUS2)

def itkMeshFileReaderMUS3_New():
    return itkMeshFileReaderMUS3.New()

class itkMeshFileReaderMUS3(itk.itkMeshSourcePython.itkMeshSourceMUS3):
    r"""Proxy of C++ itkMeshFileReaderMUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUS3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUS3_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUS3

        Create a new object of the class itkMeshFileReaderMUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUS3 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUS3_swigregister(itkMeshFileReaderMUS3)

def itkMeshFileReaderMUS4_New():
    return itkMeshFileReaderMUS4.New()

class itkMeshFileReaderMUS4(itk.itkMeshSourcePython.itkMeshSourceMUS4):
    r"""Proxy of C++ itkMeshFileReaderMUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshFileReaderMUS4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshFileReaderMUS4_Pointer"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_Clone(self)

    def SetFileName(self, *args):
        r"""
        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: char const *

        SetFileName(self, _arg)

        Parameters
        ----------
        _arg: std::string const &

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_SetFileName(self, *args)

    def GetFileName(self):
        r"""GetFileName(self) -> char const *"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_GetFileName(self)

    def SetMeshIO(self, meshIO):
        r"""
        SetMeshIO(self, meshIO)

        Parameters
        ----------
        meshIO: itkMeshIOBase *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_SetMeshIO(self, meshIO)

    def GetModifiableMeshIO(self):
        r"""GetModifiableMeshIO(self) -> itkMeshIOBase"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_GetModifiableMeshIO(self)

    def GetMeshIO(self, *args):
        r"""
        GetMeshIO(self) -> itkMeshIOBase
        GetMeshIO(self) -> itkMeshIOBase
        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_GetMeshIO(self, *args)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_GenerateOutputInformation(self)

    def ReadPointData(self):
        r"""ReadPointData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_ReadPointData(self)

    def ReadCellData(self):
        r"""ReadCellData(self)"""
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_ReadCellData(self)
    __swig_destroy__ = _itkMeshFileReaderPython.delete_itkMeshFileReaderMUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshFileReaderMUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshFileReaderPython.itkMeshFileReaderMUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMeshFileReaderMUS4

        Create a new object of the class itkMeshFileReaderMUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshFileReaderMUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshFileReaderMUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshFileReaderMUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshFileReaderMUS4 in _itkMeshFileReaderPython:
_itkMeshFileReaderPython.itkMeshFileReaderMUS4_swigregister(itkMeshFileReaderMUS4)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mesh_file_reader(*args,  file_name: str=..., mesh_io=..., output: itkt.Mesh=...,**kwargs)-> itkt.MeshSourceReturn:
    """Functional interface for MeshFileReader"""
    import itk

    kwarg_typehints = { 'file_name':file_name,'mesh_io':mesh_io,'output':output }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MeshFileReader.New(*args, **kwargs)

    return instance.__internal_call__()

def mesh_file_reader_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKIOMeshBase.MeshFileReader
    mesh_file_reader.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mesh_file_reader.__doc__ = filter_object.__doc__



