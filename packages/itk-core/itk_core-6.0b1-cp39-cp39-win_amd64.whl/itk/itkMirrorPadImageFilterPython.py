# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMirrorPadImageFilterPython
else:
    import _itkMirrorPadImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImageRegionPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.pyBasePython
import itk.itkOffsetPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_matrixPython
import itk.stdcomplexPython
import itk.vnl_vectorPython
import itk.vnl_matrix_fixedPython
import itk.itkPointPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.itkCovariantVectorPython
import itk.itkPadImageFilterPython
import itk.itkPadImageFilterBasePython
import itk.itkImageBoundaryConditionPython
import itk.itkImagePython
import itk.itkRGBAPixelPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterBPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkImageToImageFilterCommonPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkImageToImageFilterAPython

def itkMirrorPadImageFilterICD2ICD2_New():
    return itkMirrorPadImageFilterICD2ICD2.New()

class itkMirrorPadImageFilterICD2ICD2(itk.itkPadImageFilterPython.itkPadImageFilterICD2ICD2):
    r"""Proxy of C++ itkMirrorPadImageFilterICD2ICD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICD2ICD2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICD2ICD2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICD2ICD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICD2ICD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICD2ICD2

        Create a new object of the class itkMirrorPadImageFilterICD2ICD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICD2ICD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICD2ICD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICD2ICD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICD2ICD2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD2ICD2_swigregister(itkMirrorPadImageFilterICD2ICD2)

def itkMirrorPadImageFilterICD3ICD3_New():
    return itkMirrorPadImageFilterICD3ICD3.New()

class itkMirrorPadImageFilterICD3ICD3(itk.itkPadImageFilterPython.itkPadImageFilterICD3ICD3):
    r"""Proxy of C++ itkMirrorPadImageFilterICD3ICD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICD3ICD3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICD3ICD3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICD3ICD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICD3ICD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICD3ICD3

        Create a new object of the class itkMirrorPadImageFilterICD3ICD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICD3ICD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICD3ICD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICD3ICD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICD3ICD3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD3ICD3_swigregister(itkMirrorPadImageFilterICD3ICD3)

def itkMirrorPadImageFilterICD4ICD4_New():
    return itkMirrorPadImageFilterICD4ICD4.New()

class itkMirrorPadImageFilterICD4ICD4(itk.itkPadImageFilterPython.itkPadImageFilterICD4ICD4):
    r"""Proxy of C++ itkMirrorPadImageFilterICD4ICD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICD4ICD4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICD4ICD4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICD4ICD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICD4ICD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICD4ICD4

        Create a new object of the class itkMirrorPadImageFilterICD4ICD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICD4ICD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICD4ICD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICD4ICD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICD4ICD4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICD4ICD4_swigregister(itkMirrorPadImageFilterICD4ICD4)

def itkMirrorPadImageFilterICF2ICF2_New():
    return itkMirrorPadImageFilterICF2ICF2.New()

class itkMirrorPadImageFilterICF2ICF2(itk.itkPadImageFilterPython.itkPadImageFilterICF2ICF2):
    r"""Proxy of C++ itkMirrorPadImageFilterICF2ICF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICF2ICF2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICF2ICF2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICF2ICF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICF2ICF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICF2ICF2

        Create a new object of the class itkMirrorPadImageFilterICF2ICF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICF2ICF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICF2ICF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICF2ICF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICF2ICF2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF2ICF2_swigregister(itkMirrorPadImageFilterICF2ICF2)

def itkMirrorPadImageFilterICF3ICF3_New():
    return itkMirrorPadImageFilterICF3ICF3.New()

class itkMirrorPadImageFilterICF3ICF3(itk.itkPadImageFilterPython.itkPadImageFilterICF3ICF3):
    r"""Proxy of C++ itkMirrorPadImageFilterICF3ICF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICF3ICF3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICF3ICF3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICF3ICF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICF3ICF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICF3ICF3

        Create a new object of the class itkMirrorPadImageFilterICF3ICF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICF3ICF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICF3ICF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICF3ICF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICF3ICF3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF3ICF3_swigregister(itkMirrorPadImageFilterICF3ICF3)

def itkMirrorPadImageFilterICF4ICF4_New():
    return itkMirrorPadImageFilterICF4ICF4.New()

class itkMirrorPadImageFilterICF4ICF4(itk.itkPadImageFilterPython.itkPadImageFilterICF4ICF4):
    r"""Proxy of C++ itkMirrorPadImageFilterICF4ICF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICF4ICF4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICF4ICF4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICF4ICF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICF4ICF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICF4ICF4

        Create a new object of the class itkMirrorPadImageFilterICF4ICF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICF4ICF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICF4ICF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICF4ICF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICF4ICF4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICF4ICF4_swigregister(itkMirrorPadImageFilterICF4ICF4)

def itkMirrorPadImageFilterICVF22ICVF22_New():
    return itkMirrorPadImageFilterICVF22ICVF22.New()

class itkMirrorPadImageFilterICVF22ICVF22(itk.itkPadImageFilterPython.itkPadImageFilterICVF22ICVF22):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF22ICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF22ICVF22_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF22ICVF22_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF22ICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF22ICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF22ICVF22

        Create a new object of the class itkMirrorPadImageFilterICVF22ICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF22ICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF22ICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF22ICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF22ICVF22 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF22ICVF22_swigregister(itkMirrorPadImageFilterICVF22ICVF22)

def itkMirrorPadImageFilterICVF23ICVF23_New():
    return itkMirrorPadImageFilterICVF23ICVF23.New()

class itkMirrorPadImageFilterICVF23ICVF23(itk.itkPadImageFilterPython.itkPadImageFilterICVF23ICVF23):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF23ICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF23ICVF23_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF23ICVF23_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF23ICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF23ICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF23ICVF23

        Create a new object of the class itkMirrorPadImageFilterICVF23ICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF23ICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF23ICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF23ICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF23ICVF23 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF23ICVF23_swigregister(itkMirrorPadImageFilterICVF23ICVF23)

def itkMirrorPadImageFilterICVF24ICVF24_New():
    return itkMirrorPadImageFilterICVF24ICVF24.New()

class itkMirrorPadImageFilterICVF24ICVF24(itk.itkPadImageFilterPython.itkPadImageFilterICVF24ICVF24):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF24ICVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF24ICVF24_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF24ICVF24_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF24ICVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF24ICVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF24ICVF24

        Create a new object of the class itkMirrorPadImageFilterICVF24ICVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF24ICVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF24ICVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF24ICVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF24ICVF24 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF24ICVF24_swigregister(itkMirrorPadImageFilterICVF24ICVF24)

def itkMirrorPadImageFilterICVF32ICVF32_New():
    return itkMirrorPadImageFilterICVF32ICVF32.New()

class itkMirrorPadImageFilterICVF32ICVF32(itk.itkPadImageFilterPython.itkPadImageFilterICVF32ICVF32):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF32ICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF32ICVF32_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF32ICVF32_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF32ICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF32ICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF32ICVF32

        Create a new object of the class itkMirrorPadImageFilterICVF32ICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF32ICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF32ICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF32ICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF32ICVF32 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF32ICVF32_swigregister(itkMirrorPadImageFilterICVF32ICVF32)

def itkMirrorPadImageFilterICVF33ICVF33_New():
    return itkMirrorPadImageFilterICVF33ICVF33.New()

class itkMirrorPadImageFilterICVF33ICVF33(itk.itkPadImageFilterPython.itkPadImageFilterICVF33ICVF33):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF33ICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF33ICVF33_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF33ICVF33_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF33ICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF33ICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF33ICVF33

        Create a new object of the class itkMirrorPadImageFilterICVF33ICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF33ICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF33ICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF33ICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF33ICVF33 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF33ICVF33_swigregister(itkMirrorPadImageFilterICVF33ICVF33)

def itkMirrorPadImageFilterICVF34ICVF34_New():
    return itkMirrorPadImageFilterICVF34ICVF34.New()

class itkMirrorPadImageFilterICVF34ICVF34(itk.itkPadImageFilterPython.itkPadImageFilterICVF34ICVF34):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF34ICVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF34ICVF34_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF34ICVF34_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF34ICVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF34ICVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF34ICVF34

        Create a new object of the class itkMirrorPadImageFilterICVF34ICVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF34ICVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF34ICVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF34ICVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF34ICVF34 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF34ICVF34_swigregister(itkMirrorPadImageFilterICVF34ICVF34)

def itkMirrorPadImageFilterICVF42ICVF42_New():
    return itkMirrorPadImageFilterICVF42ICVF42.New()

class itkMirrorPadImageFilterICVF42ICVF42(itk.itkPadImageFilterPython.itkPadImageFilterICVF42ICVF42):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF42ICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF42ICVF42_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF42ICVF42_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF42ICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF42ICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF42ICVF42

        Create a new object of the class itkMirrorPadImageFilterICVF42ICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF42ICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF42ICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF42ICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF42ICVF42 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF42ICVF42_swigregister(itkMirrorPadImageFilterICVF42ICVF42)

def itkMirrorPadImageFilterICVF43ICVF43_New():
    return itkMirrorPadImageFilterICVF43ICVF43.New()

class itkMirrorPadImageFilterICVF43ICVF43(itk.itkPadImageFilterPython.itkPadImageFilterICVF43ICVF43):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF43ICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF43ICVF43_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF43ICVF43_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF43ICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF43ICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF43ICVF43

        Create a new object of the class itkMirrorPadImageFilterICVF43ICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF43ICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF43ICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF43ICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF43ICVF43 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF43ICVF43_swigregister(itkMirrorPadImageFilterICVF43ICVF43)

def itkMirrorPadImageFilterICVF44ICVF44_New():
    return itkMirrorPadImageFilterICVF44ICVF44.New()

class itkMirrorPadImageFilterICVF44ICVF44(itk.itkPadImageFilterPython.itkPadImageFilterICVF44ICVF44):
    r"""Proxy of C++ itkMirrorPadImageFilterICVF44ICVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterICVF44ICVF44_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterICVF44ICVF44_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterICVF44ICVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterICVF44ICVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterICVF44ICVF44

        Create a new object of the class itkMirrorPadImageFilterICVF44ICVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterICVF44ICVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterICVF44ICVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterICVF44ICVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterICVF44ICVF44 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterICVF44ICVF44_swigregister(itkMirrorPadImageFilterICVF44ICVF44)

def itkMirrorPadImageFilterID2ID2_New():
    return itkMirrorPadImageFilterID2ID2.New()

class itkMirrorPadImageFilterID2ID2(itk.itkPadImageFilterPython.itkPadImageFilterID2ID2):
    r"""Proxy of C++ itkMirrorPadImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterID2ID2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterID2ID2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterID2ID2

        Create a new object of the class itkMirrorPadImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterID2ID2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID2ID2_swigregister(itkMirrorPadImageFilterID2ID2)

def itkMirrorPadImageFilterID3ID3_New():
    return itkMirrorPadImageFilterID3ID3.New()

class itkMirrorPadImageFilterID3ID3(itk.itkPadImageFilterPython.itkPadImageFilterID3ID3):
    r"""Proxy of C++ itkMirrorPadImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterID3ID3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterID3ID3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterID3ID3

        Create a new object of the class itkMirrorPadImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterID3ID3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID3ID3_swigregister(itkMirrorPadImageFilterID3ID3)

def itkMirrorPadImageFilterID4ID4_New():
    return itkMirrorPadImageFilterID4ID4.New()

class itkMirrorPadImageFilterID4ID4(itk.itkPadImageFilterPython.itkPadImageFilterID4ID4):
    r"""Proxy of C++ itkMirrorPadImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterID4ID4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterID4ID4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterID4ID4

        Create a new object of the class itkMirrorPadImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterID4ID4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterID4ID4_swigregister(itkMirrorPadImageFilterID4ID4)

def itkMirrorPadImageFilterIF2IF2_New():
    return itkMirrorPadImageFilterIF2IF2.New()

class itkMirrorPadImageFilterIF2IF2(itk.itkPadImageFilterPython.itkPadImageFilterIF2IF2):
    r"""Proxy of C++ itkMirrorPadImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIF2IF2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIF2IF2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIF2IF2

        Create a new object of the class itkMirrorPadImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIF2IF2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF2IF2_swigregister(itkMirrorPadImageFilterIF2IF2)

def itkMirrorPadImageFilterIF3IF3_New():
    return itkMirrorPadImageFilterIF3IF3.New()

class itkMirrorPadImageFilterIF3IF3(itk.itkPadImageFilterPython.itkPadImageFilterIF3IF3):
    r"""Proxy of C++ itkMirrorPadImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIF3IF3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIF3IF3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIF3IF3

        Create a new object of the class itkMirrorPadImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIF3IF3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF3IF3_swigregister(itkMirrorPadImageFilterIF3IF3)

def itkMirrorPadImageFilterIF4IF4_New():
    return itkMirrorPadImageFilterIF4IF4.New()

class itkMirrorPadImageFilterIF4IF4(itk.itkPadImageFilterPython.itkPadImageFilterIF4IF4):
    r"""Proxy of C++ itkMirrorPadImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIF4IF4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIF4IF4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIF4IF4

        Create a new object of the class itkMirrorPadImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIF4IF4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIF4IF4_swigregister(itkMirrorPadImageFilterIF4IF4)

def itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_New():
    return itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New()

class itkMirrorPadImageFilterIRGBAUC2IRGBAUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC2IRGBAUC2):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBAUC2IRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBAUC2IRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBAUC2IRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBAUC2IRGBAUC2

        Create a new object of the class itkMirrorPadImageFilterIRGBAUC2IRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBAUC2IRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBAUC2IRGBAUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC2IRGBAUC2_swigregister(itkMirrorPadImageFilterIRGBAUC2IRGBAUC2)

def itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_New():
    return itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New()

class itkMirrorPadImageFilterIRGBAUC3IRGBAUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC3IRGBAUC3):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBAUC3IRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBAUC3IRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBAUC3IRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBAUC3IRGBAUC3

        Create a new object of the class itkMirrorPadImageFilterIRGBAUC3IRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBAUC3IRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBAUC3IRGBAUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC3IRGBAUC3_swigregister(itkMirrorPadImageFilterIRGBAUC3IRGBAUC3)

def itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_New():
    return itkMirrorPadImageFilterIRGBAUC4IRGBAUC4.New()

class itkMirrorPadImageFilterIRGBAUC4IRGBAUC4(itk.itkPadImageFilterPython.itkPadImageFilterIRGBAUC4IRGBAUC4):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBAUC4IRGBAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBAUC4IRGBAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBAUC4IRGBAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBAUC4IRGBAUC4

        Create a new object of the class itkMirrorPadImageFilterIRGBAUC4IRGBAUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBAUC4IRGBAUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBAUC4IRGBAUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBAUC4IRGBAUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBAUC4IRGBAUC4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBAUC4IRGBAUC4_swigregister(itkMirrorPadImageFilterIRGBAUC4IRGBAUC4)

def itkMirrorPadImageFilterIRGBUC2IRGBUC2_New():
    return itkMirrorPadImageFilterIRGBUC2IRGBUC2.New()

class itkMirrorPadImageFilterIRGBUC2IRGBUC2(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC2IRGBUC2):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBUC2IRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBUC2IRGBUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBUC2IRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBUC2IRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBUC2IRGBUC2

        Create a new object of the class itkMirrorPadImageFilterIRGBUC2IRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBUC2IRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBUC2IRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBUC2IRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBUC2IRGBUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC2IRGBUC2_swigregister(itkMirrorPadImageFilterIRGBUC2IRGBUC2)

def itkMirrorPadImageFilterIRGBUC3IRGBUC3_New():
    return itkMirrorPadImageFilterIRGBUC3IRGBUC3.New()

class itkMirrorPadImageFilterIRGBUC3IRGBUC3(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC3IRGBUC3):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBUC3IRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBUC3IRGBUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBUC3IRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBUC3IRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBUC3IRGBUC3

        Create a new object of the class itkMirrorPadImageFilterIRGBUC3IRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBUC3IRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBUC3IRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBUC3IRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBUC3IRGBUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC3IRGBUC3_swigregister(itkMirrorPadImageFilterIRGBUC3IRGBUC3)

def itkMirrorPadImageFilterIRGBUC4IRGBUC4_New():
    return itkMirrorPadImageFilterIRGBUC4IRGBUC4.New()

class itkMirrorPadImageFilterIRGBUC4IRGBUC4(itk.itkPadImageFilterPython.itkPadImageFilterIRGBUC4IRGBUC4):
    r"""Proxy of C++ itkMirrorPadImageFilterIRGBUC4IRGBUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIRGBUC4IRGBUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIRGBUC4IRGBUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIRGBUC4IRGBUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIRGBUC4IRGBUC4

        Create a new object of the class itkMirrorPadImageFilterIRGBUC4IRGBUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIRGBUC4IRGBUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIRGBUC4IRGBUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIRGBUC4IRGBUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIRGBUC4IRGBUC4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIRGBUC4IRGBUC4_swigregister(itkMirrorPadImageFilterIRGBUC4IRGBUC4)

def itkMirrorPadImageFilterISS2ISS2_New():
    return itkMirrorPadImageFilterISS2ISS2.New()

class itkMirrorPadImageFilterISS2ISS2(itk.itkPadImageFilterPython.itkPadImageFilterISS2ISS2):
    r"""Proxy of C++ itkMirrorPadImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterISS2ISS2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterISS2ISS2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterISS2ISS2

        Create a new object of the class itkMirrorPadImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterISS2ISS2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS2ISS2_swigregister(itkMirrorPadImageFilterISS2ISS2)

def itkMirrorPadImageFilterISS3ISS3_New():
    return itkMirrorPadImageFilterISS3ISS3.New()

class itkMirrorPadImageFilterISS3ISS3(itk.itkPadImageFilterPython.itkPadImageFilterISS3ISS3):
    r"""Proxy of C++ itkMirrorPadImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterISS3ISS3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterISS3ISS3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterISS3ISS3

        Create a new object of the class itkMirrorPadImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterISS3ISS3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS3ISS3_swigregister(itkMirrorPadImageFilterISS3ISS3)

def itkMirrorPadImageFilterISS4ISS4_New():
    return itkMirrorPadImageFilterISS4ISS4.New()

class itkMirrorPadImageFilterISS4ISS4(itk.itkPadImageFilterPython.itkPadImageFilterISS4ISS4):
    r"""Proxy of C++ itkMirrorPadImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterISS4ISS4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterISS4ISS4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterISS4ISS4

        Create a new object of the class itkMirrorPadImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterISS4ISS4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterISS4ISS4_swigregister(itkMirrorPadImageFilterISS4ISS4)

def itkMirrorPadImageFilterIUC2IUC2_New():
    return itkMirrorPadImageFilterIUC2IUC2.New()

class itkMirrorPadImageFilterIUC2IUC2(itk.itkPadImageFilterPython.itkPadImageFilterIUC2IUC2):
    r"""Proxy of C++ itkMirrorPadImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUC2IUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUC2IUC2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUC2IUC2

        Create a new object of the class itkMirrorPadImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUC2IUC2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC2IUC2_swigregister(itkMirrorPadImageFilterIUC2IUC2)

def itkMirrorPadImageFilterIUC3IUC3_New():
    return itkMirrorPadImageFilterIUC3IUC3.New()

class itkMirrorPadImageFilterIUC3IUC3(itk.itkPadImageFilterPython.itkPadImageFilterIUC3IUC3):
    r"""Proxy of C++ itkMirrorPadImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUC3IUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUC3IUC3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUC3IUC3

        Create a new object of the class itkMirrorPadImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUC3IUC3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC3IUC3_swigregister(itkMirrorPadImageFilterIUC3IUC3)

def itkMirrorPadImageFilterIUC4IUC4_New():
    return itkMirrorPadImageFilterIUC4IUC4.New()

class itkMirrorPadImageFilterIUC4IUC4(itk.itkPadImageFilterPython.itkPadImageFilterIUC4IUC4):
    r"""Proxy of C++ itkMirrorPadImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUC4IUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUC4IUC4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUC4IUC4

        Create a new object of the class itkMirrorPadImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUC4IUC4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUC4IUC4_swigregister(itkMirrorPadImageFilterIUC4IUC4)

def itkMirrorPadImageFilterIUS2IUS2_New():
    return itkMirrorPadImageFilterIUS2IUS2.New()

class itkMirrorPadImageFilterIUS2IUS2(itk.itkPadImageFilterPython.itkPadImageFilterIUS2IUS2):
    r"""Proxy of C++ itkMirrorPadImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUS2IUS2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUS2IUS2_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUS2IUS2

        Create a new object of the class itkMirrorPadImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUS2IUS2 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS2IUS2_swigregister(itkMirrorPadImageFilterIUS2IUS2)

def itkMirrorPadImageFilterIUS3IUS3_New():
    return itkMirrorPadImageFilterIUS3IUS3.New()

class itkMirrorPadImageFilterIUS3IUS3(itk.itkPadImageFilterPython.itkPadImageFilterIUS3IUS3):
    r"""Proxy of C++ itkMirrorPadImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUS3IUS3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUS3IUS3_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUS3IUS3

        Create a new object of the class itkMirrorPadImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUS3IUS3 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS3IUS3_swigregister(itkMirrorPadImageFilterIUS3IUS3)

def itkMirrorPadImageFilterIUS4IUS4_New():
    return itkMirrorPadImageFilterIUS4IUS4.New()

class itkMirrorPadImageFilterIUS4IUS4(itk.itkPadImageFilterPython.itkPadImageFilterIUS4IUS4):
    r"""Proxy of C++ itkMirrorPadImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIUS4IUS4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIUS4IUS4_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIUS4IUS4

        Create a new object of the class itkMirrorPadImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIUS4IUS4 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIUS4IUS4_swigregister(itkMirrorPadImageFilterIUS4IUS4)

def itkMirrorPadImageFilterIVF22IVF22_New():
    return itkMirrorPadImageFilterIVF22IVF22.New()

class itkMirrorPadImageFilterIVF22IVF22(itk.itkPadImageFilterPython.itkPadImageFilterIVF22IVF22):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF22IVF22_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF22IVF22_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF22IVF22

        Create a new object of the class itkMirrorPadImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF22IVF22 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF22IVF22_swigregister(itkMirrorPadImageFilterIVF22IVF22)

def itkMirrorPadImageFilterIVF23IVF23_New():
    return itkMirrorPadImageFilterIVF23IVF23.New()

class itkMirrorPadImageFilterIVF23IVF23(itk.itkPadImageFilterPython.itkPadImageFilterIVF23IVF23):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF23IVF23_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF23IVF23_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF23IVF23

        Create a new object of the class itkMirrorPadImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF23IVF23 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF23IVF23_swigregister(itkMirrorPadImageFilterIVF23IVF23)

def itkMirrorPadImageFilterIVF24IVF24_New():
    return itkMirrorPadImageFilterIVF24IVF24.New()

class itkMirrorPadImageFilterIVF24IVF24(itk.itkPadImageFilterPython.itkPadImageFilterIVF24IVF24):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF24IVF24_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF24IVF24_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF24IVF24

        Create a new object of the class itkMirrorPadImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF24IVF24 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF24IVF24_swigregister(itkMirrorPadImageFilterIVF24IVF24)

def itkMirrorPadImageFilterIVF32IVF32_New():
    return itkMirrorPadImageFilterIVF32IVF32.New()

class itkMirrorPadImageFilterIVF32IVF32(itk.itkPadImageFilterPython.itkPadImageFilterIVF32IVF32):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF32IVF32_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF32IVF32_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF32IVF32

        Create a new object of the class itkMirrorPadImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF32IVF32 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF32IVF32_swigregister(itkMirrorPadImageFilterIVF32IVF32)

def itkMirrorPadImageFilterIVF33IVF33_New():
    return itkMirrorPadImageFilterIVF33IVF33.New()

class itkMirrorPadImageFilterIVF33IVF33(itk.itkPadImageFilterPython.itkPadImageFilterIVF33IVF33):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF33IVF33_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF33IVF33_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF33IVF33

        Create a new object of the class itkMirrorPadImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF33IVF33 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF33IVF33_swigregister(itkMirrorPadImageFilterIVF33IVF33)

def itkMirrorPadImageFilterIVF34IVF34_New():
    return itkMirrorPadImageFilterIVF34IVF34.New()

class itkMirrorPadImageFilterIVF34IVF34(itk.itkPadImageFilterPython.itkPadImageFilterIVF34IVF34):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF34IVF34_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF34IVF34_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF34IVF34

        Create a new object of the class itkMirrorPadImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF34IVF34 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF34IVF34_swigregister(itkMirrorPadImageFilterIVF34IVF34)

def itkMirrorPadImageFilterIVF42IVF42_New():
    return itkMirrorPadImageFilterIVF42IVF42.New()

class itkMirrorPadImageFilterIVF42IVF42(itk.itkPadImageFilterPython.itkPadImageFilterIVF42IVF42):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF42IVF42_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF42IVF42_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF42IVF42

        Create a new object of the class itkMirrorPadImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF42IVF42 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF42IVF42_swigregister(itkMirrorPadImageFilterIVF42IVF42)

def itkMirrorPadImageFilterIVF43IVF43_New():
    return itkMirrorPadImageFilterIVF43IVF43.New()

class itkMirrorPadImageFilterIVF43IVF43(itk.itkPadImageFilterPython.itkPadImageFilterIVF43IVF43):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF43IVF43_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF43IVF43_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF43IVF43

        Create a new object of the class itkMirrorPadImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF43IVF43 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF43IVF43_swigregister(itkMirrorPadImageFilterIVF43IVF43)

def itkMirrorPadImageFilterIVF44IVF44_New():
    return itkMirrorPadImageFilterIVF44IVF44.New()

class itkMirrorPadImageFilterIVF44IVF44(itk.itkPadImageFilterPython.itkPadImageFilterIVF44IVF44):
    r"""Proxy of C++ itkMirrorPadImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMirrorPadImageFilterIVF44IVF44_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMirrorPadImageFilterIVF44IVF44_Pointer"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_Clone(self)

    def GetDecayBase(self):
        r"""GetDecayBase(self) -> double"""
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_GetDecayBase(self)

    def SetDecayBase(self, _arg):
        r"""
        SetDecayBase(self, _arg)

        Parameters
        ----------
        _arg: double

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_SetDecayBase(self, _arg)
    InputConvertibleToOutputCheck = _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_InputConvertibleToOutputCheck
    
    __swig_destroy__ = _itkMirrorPadImageFilterPython.delete_itkMirrorPadImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMirrorPadImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMirrorPadImageFilterIVF44IVF44

        Create a new object of the class itkMirrorPadImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMirrorPadImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMirrorPadImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMirrorPadImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMirrorPadImageFilterIVF44IVF44 in _itkMirrorPadImageFilterPython:
_itkMirrorPadImageFilterPython.itkMirrorPadImageFilterIVF44IVF44_swigregister(itkMirrorPadImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def mirror_pad_image_filter(*args: itkt.ImageLike,  decay_base: float=..., pad_lower_bound: Sequence[int]=..., pad_upper_bound: Sequence[int]=..., pad_bound: Sequence[int]=..., boundary_condition: itkt.ImageBoundaryCondition=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for MirrorPadImageFilter"""
    import itk

    kwarg_typehints = { 'decay_base':decay_base,'pad_lower_bound':pad_lower_bound,'pad_upper_bound':pad_upper_bound,'pad_bound':pad_bound,'boundary_condition':boundary_condition }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.MirrorPadImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def mirror_pad_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.MirrorPadImageFilter
    mirror_pad_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    mirror_pad_image_filter.__doc__ = filter_object.__doc__



