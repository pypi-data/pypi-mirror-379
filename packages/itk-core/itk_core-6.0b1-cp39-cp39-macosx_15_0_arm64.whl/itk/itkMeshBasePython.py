# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKMeshPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkMeshBasePython
else:
    import _itkMeshBasePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkVectorContainerPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkContinuousIndexPython
import itk.itkIndexPython
import itk.itkSizePython
import itk.itkOffsetPython
import itk.itkArrayPython
import itk.itkMapContainerPython
import itk.itkPointSetPython
import itk.itkBoundingBoxPython
class itkCellInterfaceADCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceADCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceADCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceADCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceADCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceADCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceADCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceADCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceADCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceDCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2MCULPF2_AutoPointer)
class itkCellInterfaceDCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceDCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3MCULPF3_AutoPointer)
class itkCellInterfaceDCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceDCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceDCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULULULPF4MCULPF4_AutoPointer)
class itkCellInterfaceDCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceDCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceDCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceFCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2MCULPF2_AutoPointer)
class itkCellInterfaceFCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceFCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3MCULPF3_AutoPointer)
class itkCellInterfaceFCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceFCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceFCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULULULPF4MCULPF4_AutoPointer)
class itkCellInterfaceFCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceFCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceFCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2MCULPF2_AutoPointer)
class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3MCULPF3_AutoPointer)
class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceSSCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceSSCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULULULPF4MCULPF4_AutoPointer)
class itkCellInterfaceSSCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceSSCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2MCULPF2_AutoPointer)
class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3MCULPF3_AutoPointer)
class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceUCCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceUCCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULULULPF4MCULPF4_AutoPointer)
class itkCellInterfaceUCCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceUCCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2MCULPF2_AutoPointer)
class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2)
class itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF2 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer_swigregister(itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer)
class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3MCULPF3_AutoPointer)
class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3)
class itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF3 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer_swigregister(itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer)
class itkCellInterfaceUSCTI4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4

# Register itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceUSCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkMapContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULULULPF4MCULPF4_AutoPointer)
class itkCellInterfaceUSCTI4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_GetNameOfClass(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4

# Register itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_swigregister(itkCellInterfaceUSCTI4FFULULULPF4VCULPF4)
class itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer(object):
    r"""Proxy of C++ itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer
        __init__(self, p) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        __init__(self, p, takeOwnership) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer

        Parameters
        ----------
        p: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *
        takeOwnership: bool

        """
        _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_swiginit(self, _itkMeshBasePython.new_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer

    def __deref__(self):
        r"""__deref__(self) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___deref__(self)

    def Reset(self):
        r"""Reset(self)"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_Reset(self)

    def TakeOwnership(self, *args):
        r"""
        TakeOwnership(self)
        TakeOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeOwnership(self, *args)

    def TakeNoOwnership(self, objectptr):
        r"""
        TakeNoOwnership(self, objectptr)

        Parameters
        ----------
        objectptr: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_TakeNoOwnership(self, objectptr)

    def IsOwner(self):
        r"""IsOwner(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsOwner(self)

    def ReleaseOwnership(self):
        r"""ReleaseOwnership(self) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_ReleaseOwnership(self)

    def GetPointer(self):
        r"""GetPointer(self) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointer(self)

    def __eq__(self, r):
        r"""
        __eq__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___eq__(self, r)

    def __ne__(self, other):
        r"""
        __ne__(self, other) -> bool

        Parameters
        ----------
        other: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___ne__(self, other)

    def __lt__(self, r):
        r"""
        __lt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___lt__(self, r)

    def __gt__(self, r):
        r"""
        __gt__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___gt__(self, r)

    def __le__(self, r):
        r"""
        __le__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___le__(self, r)

    def __ge__(self, r):
        r"""
        __ge__(self, r) -> bool

        Parameters
        ----------
        r: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer___ge__(self, r)

    def Accept(self, cellId, arg1):
        r"""
        Accept(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_Accept(self, cellId, arg1)

    def GetType(self):
        r"""GetType(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetType(self)

    def MakeCopy(self, arg0):
        r"""
        MakeCopy(self, arg0)

        Parameters
        ----------
        arg0: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_MakeCopy(self, arg0)

    def GetDimension(self):
        r"""GetDimension(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetDimension(self)

    def GetInterpolationOrder(self):
        r"""GetInterpolationOrder(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetInterpolationOrder(self)

    def GetNumberOfPoints(self):
        r"""GetNumberOfPoints(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfPoints(self)

    def GetNumberOfBoundaryFeatures(self, dimension):
        r"""
        GetNumberOfBoundaryFeatures(self, dimension) -> unsigned long

        Parameters
        ----------
        dimension: int

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfBoundaryFeatures(self, dimension)

    def GetBoundaryFeature(self, dimension, arg1, arg2):
        r"""
        GetBoundaryFeature(self, dimension, arg1, arg2) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundaryFeature(self, dimension, arg1, arg2)

    def GetPointIds(self):
        r"""GetPointIds(self) -> unsigned long const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIds(self)

    def SetPointIds(self, *args):
        r"""
        SetPointIds(self, first)

        Parameters
        ----------
        first: unsigned long const *

        SetPointIds(self, first, last)

        Parameters
        ----------
        first: unsigned long const *
        last: unsigned long const *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIds(self, *args)

    def SetPointId(self, localId, arg1):
        r"""
        SetPointId(self, localId, arg1)

        Parameters
        ----------
        localId: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointId(self, localId, arg1)

    def PointIdsBegin(self, *args):
        r"""
        PointIdsBegin(self) -> unsigned long
        PointIdsBegin(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsBegin(self, *args)

    def PointIdsEnd(self, *args):
        r"""
        PointIdsEnd(self) -> unsigned long
        PointIdsEnd(self) -> unsigned long const *
        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_PointIdsEnd(self, *args)

    def GetPointIdsContainer(self):
        r"""GetPointIdsContainer(self) -> itkArrayUL"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetPointIdsContainer(self)

    def SetPointIdsContainer(self, arg0):
        r"""
        SetPointIdsContainer(self, arg0)

        Parameters
        ----------
        arg0: itkArrayUL const &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_SetPointIdsContainer(self, arg0)

    def GetClosestBoundary(self, arg0, arg1, arg2):
        r"""
        GetClosestBoundary(self, arg0, arg1, arg2) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: bool *
        arg2: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetClosestBoundary(self, arg0, arg1, arg2)

    def EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: itkVectorContainerULPF4 *
        arg2: float *
        arg3: float *
        arg4: double *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluatePosition(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def EvaluateShapeFunctions(self, arg0, arg1):
        r"""
        EvaluateShapeFunctions(self, arg0, arg1)

        Parameters
        ----------
        arg0: itkArrayF const &
        arg1: itkArrayF &

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_EvaluateShapeFunctions(self, arg0, arg1)

    def IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5):
        r"""
        IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float
        arg3: float *
        arg4: float *
        arg5: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectWithLine(self, arg0, arg1, arg2, arg3, arg4, arg5)

    def GetBoundingBox(self, arg0):
        r"""
        GetBoundingBox(self, arg0) -> float *

        Parameters
        ----------
        arg0: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBox(self, arg0)

    def GetBoundingBoxDiagonalLength2(self):
        r"""GetBoundingBoxDiagonalLength2(self) -> float"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetBoundingBoxDiagonalLength2(self)

    def IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4):
        r"""
        IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4) -> bool

        Parameters
        ----------
        arg0: float *
        arg1: float *
        arg2: float *
        arg3: float *
        arg4: float *

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IntersectBoundingBoxWithLine(self, arg0, arg1, arg2, arg3, arg4)

    def IsExplicitBoundary(self):
        r"""IsExplicitBoundary(self) -> bool"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsExplicitBoundary(self)

    def AddUsingCell(self, cellId):
        r"""
        AddUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_AddUsingCell(self, cellId)

    def RemoveUsingCell(self, cellId):
        r"""
        RemoveUsingCell(self, cellId)

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_RemoveUsingCell(self, cellId)

    def IsUsingCell(self, cellId):
        r"""
        IsUsingCell(self, cellId) -> bool

        Parameters
        ----------
        cellId: unsigned long

        """
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_IsUsingCell(self, cellId)

    def GetNumberOfUsingCells(self):
        r"""GetNumberOfUsingCells(self) -> unsigned int"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNumberOfUsingCells(self)

    def GetNameOfClass(self):
        r"""GetNameOfClass(self) -> char const *"""
        return _itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_GetNameOfClass(self)

# Register itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer_swigregister(itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer)
class itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_cast(obj)

# Register itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorDCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_cast(obj)

# Register itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorDCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_cast(obj)

# Register itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorDCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_cast(obj)

# Register itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorFCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_cast(obj)

# Register itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorFCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_cast(obj)

# Register itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorFCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_cast(obj)

# Register itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorSSCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_cast(obj)

# Register itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorSSCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_cast(obj)

# Register itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorSSCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_cast(obj)

# Register itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUCCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_cast(obj)

# Register itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUCCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_cast(obj)

# Register itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorUCCTI4FFULULULPF4MCULPF4)
class itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_cast(obj)

# Register itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2_swigregister(itkCellInterfaceVisitorUSCTI2FFULULULPF2MCULPF2)
class itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_cast(obj)

# Register itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3_swigregister(itkCellInterfaceVisitorUSCTI3FFULULULPF3MCULPF3)
class itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkLightObject):
    r"""Proxy of C++ itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def VisitFromCell(self, cellId, arg1):
        r"""
        VisitFromCell(self, cellId, arg1)

        Parameters
        ----------
        cellId: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_VisitFromCell(self, cellId, arg1)

    def GetCellTopologyId(self):
        r"""GetCellTopologyId(self) -> itkCommonEnums::CellGeometry"""
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_GetCellTopologyId(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_cast(obj)

# Register itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4_swigregister(itkCellInterfaceVisitorUSCTI4FFULULULPF4MCULPF4)
class itkCellTraitsInfo2FFULULULPF2MCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULULULPF2MCULPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULULULPF2MCULPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2MCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2MCULPF2

# Register itkCellTraitsInfo2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2MCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2MCULPF2)
class itkCellTraitsInfo2FFULULULPF2VCULPF2(object):
    r"""Proxy of C++ itkCellTraitsInfo2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo2FFULULULPF2VCULPF2
        __init__(self, arg0) -> itkCellTraitsInfo2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: itkCellTraitsInfo2FFULULULPF2VCULPF2 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo2FFULULULPF2VCULPF2(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo2FFULULULPF2VCULPF2

# Register itkCellTraitsInfo2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo2FFULULULPF2VCULPF2_swigregister(itkCellTraitsInfo2FFULULULPF2VCULPF2)
class itkCellTraitsInfo3FFULULULPF3MCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULULULPF3MCULPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULULULPF3MCULPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3MCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3MCULPF3

# Register itkCellTraitsInfo3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3MCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3MCULPF3)
class itkCellTraitsInfo3FFULULULPF3VCULPF3(object):
    r"""Proxy of C++ itkCellTraitsInfo3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo3FFULULULPF3VCULPF3
        __init__(self, arg0) -> itkCellTraitsInfo3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: itkCellTraitsInfo3FFULULULPF3VCULPF3 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo3FFULULULPF3VCULPF3(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo3FFULULULPF3VCULPF3

# Register itkCellTraitsInfo3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo3FFULULULPF3VCULPF3_swigregister(itkCellTraitsInfo3FFULULULPF3VCULPF3)
class itkCellTraitsInfo4FFULULULPF4MCULPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULULULPF4MCULPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULULULPF4MCULPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULULULPF4MCULPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULULULPF4MCULPF4

# Register itkCellTraitsInfo4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4MCULPF4_swigregister(itkCellTraitsInfo4FFULULULPF4MCULPF4)
class itkCellTraitsInfo4FFULULULPF4VCULPF4(object):
    r"""Proxy of C++ itkCellTraitsInfo4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkCellTraitsInfo4FFULULULPF4VCULPF4
        __init__(self, arg0) -> itkCellTraitsInfo4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: itkCellTraitsInfo4FFULULULPF4VCULPF4 const &

        """
        _itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4VCULPF4_swiginit(self, _itkMeshBasePython.new_itkCellTraitsInfo4FFULULULPF4VCULPF4(*args))
    __swig_destroy__ = _itkMeshBasePython.delete_itkCellTraitsInfo4FFULULULPF4VCULPF4

# Register itkCellTraitsInfo4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkCellTraitsInfo4FFULULULPF4VCULPF4_swigregister(itkCellTraitsInfo4FFULULULPF4VCULPF4)

def itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI2FFULULULPF2MCULPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI2FFULULULPF2MCULPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2MCULPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIDCTI2FFULULULPF2MCULPF2)

def itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI3FFULULULPF3MCULPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI3FFULULULPF3MCULPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3MCULPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIDCTI3FFULULULPF3MCULPF3)

def itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIDCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIDCTI4FFULULULPF4MCULPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI4FFULULULPF4MCULPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceDCTI4FFULULULPF4MCULPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4MCULPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIDCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIDCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIDCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIDCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIDCTI4FFULULULPF4MCULPF4)

def itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI2FFULULULPF2MCULPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI2FFULULULPF2MCULPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2MCULPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIFCTI2FFULULULPF2MCULPF2)

def itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI3FFULULULPF3MCULPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI3FFULULULPF3MCULPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3MCULPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIFCTI3FFULULULPF3MCULPF3)

def itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIFCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIFCTI4FFULULULPF4MCULPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI4FFULULULPF4MCULPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceFCTI4FFULULULPF4MCULPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4MCULPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIFCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIFCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIFCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIFCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIFCTI4FFULULULPF4MCULPF4)

def itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2MCULPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCISSCTI2FFULULULPF2MCULPF2)

def itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3MCULPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCISSCTI3FFULULULPF3MCULPF3)

def itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCISSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCISSCTI4FFULULULPF4MCULPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4MCULPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCISSCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCISSCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCISSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCISSCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCISSCTI4FFULULULPF4MCULPF4)

def itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2MCULPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUCCTI2FFULULULPF2MCULPF2)

def itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3MCULPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUCCTI3FFULULULPF3MCULPF3)

def itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4MCULPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIUCCTI4FFULULULPF4MCULPF4)

def itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_New():
    return itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()

class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2
        __init__(self, comp) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2MCULPF2 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2

        Create a new object of the class itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2_swigregister(itkMapContainerULCIUSCTI2FFULULULPF2MCULPF2)

def itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_New():
    return itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()

class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3
        __init__(self, comp) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3MCULPF3 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3

        Create a new object of the class itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3_swigregister(itkMapContainerULCIUSCTI3FFULULULPF3MCULPF3)

def itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_New():
    return itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New()

class itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def __init__(self, *args):
        r"""
        __init__(self) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4
        __init__(self, comp) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        comp: std::less< unsigned long > const &

        """
        _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_swiginit(self, _itkMeshBasePython.new_itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4(*args))

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Pointer"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 * > > > &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::map< unsigned long,itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *,std::less< unsigned long >,std::allocator< std::pair< unsigned long const,itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 * > > > const &"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4MCULPF4 **

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4

        Create a new object of the class itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4_swigregister(itkMapContainerULCIUSCTI4FFULULULPF4MCULPF4)

def itkMeshAD2_New():
    return itkMeshAD2.New()

class itkMeshAD2(itk.itkPointSetPython.itkPointSetAD2):
    r"""Proxy of C++ itkMeshAD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD2_Pointer"""
        return _itkMeshBasePython.itkMeshAD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD2_Pointer"""
        return _itkMeshBasePython.itkMeshAD2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshAD2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD2 *

        """
        return _itkMeshBasePython.itkMeshAD2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshAD2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshAD2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshAD2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshAD2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshAD2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshAD2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD2

        Create a new object of the class itkMeshAD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD2_swigregister(itkMeshAD2)

def itkMeshAD3_New():
    return itkMeshAD3.New()

class itkMeshAD3(itk.itkPointSetPython.itkPointSetAD3):
    r"""Proxy of C++ itkMeshAD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD3_Pointer"""
        return _itkMeshBasePython.itkMeshAD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD3_Pointer"""
        return _itkMeshBasePython.itkMeshAD3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshAD3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD3 *

        """
        return _itkMeshBasePython.itkMeshAD3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshAD3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshAD3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshAD3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshAD3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshAD3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshAD3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD3

        Create a new object of the class itkMeshAD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD3_swigregister(itkMeshAD3)

def itkMeshAD4_New():
    return itkMeshAD4.New()

class itkMeshAD4(itk.itkPointSetPython.itkPointSetAD4):
    r"""Proxy of C++ itkMeshAD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshAD4_Pointer"""
        return _itkMeshBasePython.itkMeshAD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshAD4_Pointer"""
        return _itkMeshBasePython.itkMeshAD4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshAD4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshAD4 *

        """
        return _itkMeshBasePython.itkMeshAD4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshAD4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshAD4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshAD4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshAD4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshAD4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshAD4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULAD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self) -> itkVectorContainerULAD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkArrayD *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshAD4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshAD4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshAD4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceADCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshAD4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshAD4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceADCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshAD4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshAD4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshAD4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshAD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshAD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshAD4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshAD4

        Create a new object of the class itkMeshAD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshAD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshAD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshAD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshAD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshAD4_swigregister(itkMeshAD4)

def itkMeshD2_New():
    return itkMeshD2.New()

class itkMeshD2(itk.itkPointSetPython.itkPointSetD2):
    r"""Proxy of C++ itkMeshD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD2_Pointer"""
        return _itkMeshBasePython.itkMeshD2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD2_Pointer"""
        return _itkMeshBasePython.itkMeshD2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshD2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD2 *

        """
        return _itkMeshBasePython.itkMeshD2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshD2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshD2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshD2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshD2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshD2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshD2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshD2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshD2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD2

        Create a new object of the class itkMeshD2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD2_swigregister(itkMeshD2)

def itkMeshD3_New():
    return itkMeshD3.New()

class itkMeshD3(itk.itkPointSetPython.itkPointSetD3):
    r"""Proxy of C++ itkMeshD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD3_Pointer"""
        return _itkMeshBasePython.itkMeshD3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD3_Pointer"""
        return _itkMeshBasePython.itkMeshD3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshD3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD3 *

        """
        return _itkMeshBasePython.itkMeshD3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshD3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshD3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshD3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshD3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshD3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshD3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshD3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshD3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD3

        Create a new object of the class itkMeshD3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD3_swigregister(itkMeshD3)

def itkMeshD4_New():
    return itkMeshD4.New()

class itkMeshD4(itk.itkPointSetPython.itkPointSetD4):
    r"""Proxy of C++ itkMeshD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshD4_Pointer"""
        return _itkMeshBasePython.itkMeshD4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshD4_Pointer"""
        return _itkMeshBasePython.itkMeshD4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshD4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshD4 *

        """
        return _itkMeshBasePython.itkMeshD4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshD4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshD4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshD4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshD4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshD4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshD4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshD4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshD4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULD *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: double

        """
        return _itkMeshBasePython.itkMeshD4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self) -> itkVectorContainerULD
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: double *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshD4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshD4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshD4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshD4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceDCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshD4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshD4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceDCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshD4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshD4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshD4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshD4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshD4

        Create a new object of the class itkMeshD4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshD4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshD4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshD4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshD4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshD4_swigregister(itkMeshD4)

def itkMeshF2_New():
    return itkMeshF2.New()

class itkMeshF2(itk.itkPointSetPython.itkPointSetF2):
    r"""Proxy of C++ itkMeshF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF2_Pointer"""
        return _itkMeshBasePython.itkMeshF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF2_Pointer"""
        return _itkMeshBasePython.itkMeshF2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshF2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF2 *

        """
        return _itkMeshBasePython.itkMeshF2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshF2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshF2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshF2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshF2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshF2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshF2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshF2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshF2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF2

        Create a new object of the class itkMeshF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF2_swigregister(itkMeshF2)

def itkMeshF3_New():
    return itkMeshF3.New()

class itkMeshF3(itk.itkPointSetPython.itkPointSetF3):
    r"""Proxy of C++ itkMeshF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF3_Pointer"""
        return _itkMeshBasePython.itkMeshF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF3_Pointer"""
        return _itkMeshBasePython.itkMeshF3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshF3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF3 *

        """
        return _itkMeshBasePython.itkMeshF3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshF3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshF3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshF3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshF3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshF3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshF3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshF3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshF3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF3

        Create a new object of the class itkMeshF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF3_swigregister(itkMeshF3)

def itkMeshF4_New():
    return itkMeshF4.New()

class itkMeshF4(itk.itkPointSetPython.itkPointSetF4):
    r"""Proxy of C++ itkMeshF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshF4_Pointer"""
        return _itkMeshBasePython.itkMeshF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshF4_Pointer"""
        return _itkMeshBasePython.itkMeshF4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshF4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshF4 *

        """
        return _itkMeshBasePython.itkMeshF4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshF4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshF4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshF4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshF4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshF4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshF4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshF4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshF4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULF *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: float

        """
        return _itkMeshBasePython.itkMeshF4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self) -> itkVectorContainerULF
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: float *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshF4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshF4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshF4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshF4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceFCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshF4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshF4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceFCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshF4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshF4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshF4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshF4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshF4

        Create a new object of the class itkMeshF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshF4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshF4_swigregister(itkMeshF4)

def itkMeshSS2_New():
    return itkMeshSS2.New()

class itkMeshSS2(itk.itkPointSetPython.itkPointSetSS2):
    r"""Proxy of C++ itkMeshSS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS2_Pointer"""
        return _itkMeshBasePython.itkMeshSS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS2_Pointer"""
        return _itkMeshBasePython.itkMeshSS2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshSS2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS2 *

        """
        return _itkMeshBasePython.itkMeshSS2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshSS2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshSS2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshSS2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshSS2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshSS2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshSS2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS2

        Create a new object of the class itkMeshSS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS2_swigregister(itkMeshSS2)

def itkMeshSS3_New():
    return itkMeshSS3.New()

class itkMeshSS3(itk.itkPointSetPython.itkPointSetSS3):
    r"""Proxy of C++ itkMeshSS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS3_Pointer"""
        return _itkMeshBasePython.itkMeshSS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS3_Pointer"""
        return _itkMeshBasePython.itkMeshSS3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshSS3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS3 *

        """
        return _itkMeshBasePython.itkMeshSS3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshSS3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshSS3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshSS3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshSS3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshSS3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshSS3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS3

        Create a new object of the class itkMeshSS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS3_swigregister(itkMeshSS3)

def itkMeshSS4_New():
    return itkMeshSS4.New()

class itkMeshSS4(itk.itkPointSetPython.itkPointSetSS4):
    r"""Proxy of C++ itkMeshSS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshSS4_Pointer"""
        return _itkMeshBasePython.itkMeshSS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshSS4_Pointer"""
        return _itkMeshBasePython.itkMeshSS4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshSS4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshSS4 *

        """
        return _itkMeshBasePython.itkMeshSS4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshSS4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshSS4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshSS4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshSS4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshSS4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshSS4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: short

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self) -> itkVectorContainerULSS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: short *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshSS4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshSS4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshSS4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshSS4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshSS4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshSS4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshSS4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshSS4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshSS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshSS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshSS4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshSS4

        Create a new object of the class itkMeshSS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshSS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshSS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshSS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshSS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshSS4_swigregister(itkMeshSS4)

def itkMeshUC2_New():
    return itkMeshUC2.New()

class itkMeshUC2(itk.itkPointSetPython.itkPointSetUC2):
    r"""Proxy of C++ itkMeshUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC2_Pointer"""
        return _itkMeshBasePython.itkMeshUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC2_Pointer"""
        return _itkMeshBasePython.itkMeshUC2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUC2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC2 *

        """
        return _itkMeshBasePython.itkMeshUC2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshUC2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUC2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshUC2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUC2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshUC2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUC2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC2

        Create a new object of the class itkMeshUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC2_swigregister(itkMeshUC2)

def itkMeshUC3_New():
    return itkMeshUC3.New()

class itkMeshUC3(itk.itkPointSetPython.itkPointSetUC3):
    r"""Proxy of C++ itkMeshUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC3_Pointer"""
        return _itkMeshBasePython.itkMeshUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC3_Pointer"""
        return _itkMeshBasePython.itkMeshUC3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUC3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC3 *

        """
        return _itkMeshBasePython.itkMeshUC3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshUC3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUC3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshUC3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUC3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshUC3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUC3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC3

        Create a new object of the class itkMeshUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC3_swigregister(itkMeshUC3)

def itkMeshUC4_New():
    return itkMeshUC4.New()

class itkMeshUC4(itk.itkPointSetPython.itkPointSetUC4):
    r"""Proxy of C++ itkMeshUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUC4_Pointer"""
        return _itkMeshBasePython.itkMeshUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUC4_Pointer"""
        return _itkMeshBasePython.itkMeshUC4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUC4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUC4 *

        """
        return _itkMeshBasePython.itkMeshUC4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshUC4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUC4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshUC4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUC4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshUC4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUC4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUC *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self) -> itkVectorContainerULUC
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned char *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUC4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUC4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUC4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUC4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUC4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUC4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUC4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUC4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUC4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUC4

        Create a new object of the class itkMeshUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUC4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUC4_swigregister(itkMeshUC4)

def itkMeshUS2_New():
    return itkMeshUS2.New()

class itkMeshUS2(itk.itkPointSetPython.itkPointSetUS2):
    r"""Proxy of C++ itkMeshUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS2_Pointer"""
        return _itkMeshBasePython.itkMeshUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS2_Pointer"""
        return _itkMeshBasePython.itkMeshUS2_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUS2_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS2 *

        """
        return _itkMeshBasePython.itkMeshUS2_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL2FVCULPF2"""
        return _itkMeshBasePython.itkMeshUS2_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUS2_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkMeshUS2_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUS2_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2
        GetCells(self) -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2
        """
        return _itkMeshBasePython.itkMeshUS2_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS2_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS2_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUS2_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS2_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS2_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS2_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS2_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS2_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS2_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS2_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS2_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS2_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS2

        Create a new object of the class itkMeshUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS2 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS2_swigregister(itkMeshUS2)

def itkMeshUS3_New():
    return itkMeshUS3.New()

class itkMeshUS3(itk.itkPointSetPython.itkPointSetUS3):
    r"""Proxy of C++ itkMeshUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS3_Pointer"""
        return _itkMeshBasePython.itkMeshUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS3_Pointer"""
        return _itkMeshBasePython.itkMeshUS3_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUS3_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS3 *

        """
        return _itkMeshBasePython.itkMeshUS3_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL3FVCULPF3"""
        return _itkMeshBasePython.itkMeshUS3_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUS3_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkMeshUS3_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUS3_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3
        GetCells(self) -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3
        """
        return _itkMeshBasePython.itkMeshUS3_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS3_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS3_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUS3_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS3_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS3_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS3_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS3_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS3_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS3_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS3_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS3_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS3_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS3

        Create a new object of the class itkMeshUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS3 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS3_swigregister(itkMeshUS3)

def itkMeshUS4_New():
    return itkMeshUS4.New()

class itkMeshUS4(itk.itkPointSetPython.itkPointSetUS4):
    r"""Proxy of C++ itkMeshUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkMeshUS4_Pointer"""
        return _itkMeshBasePython.itkMeshUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkMeshUS4_Pointer"""
        return _itkMeshBasePython.itkMeshUS4_Clone(self)

    def GetNumberOfCells(self):
        r"""GetNumberOfCells(self) -> unsigned long"""
        return _itkMeshBasePython.itkMeshUS4_GetNumberOfCells(self)

    def PassStructure(self, inputMesh):
        r"""
        PassStructure(self, inputMesh)

        Parameters
        ----------
        inputMesh: itkMeshUS4 *

        """
        return _itkMeshBasePython.itkMeshUS4_PassStructure(self, inputMesh)

    def GetBoundingBox(self):
        r"""GetBoundingBox(self) -> itkBoundingBoxUL4FVCULPF4"""
        return _itkMeshBasePython.itkMeshUS4_GetBoundingBox(self)

    def SetCellLinks(self, arg0):
        r"""
        SetCellLinks(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULSUL *

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellLinks(self, arg0)

    def GetCellLinks(self, *args):
        r"""
        GetCellLinks(self) -> itkVectorContainerULSUL
        GetCellLinks(self) -> itkVectorContainerULSUL
        """
        return _itkMeshBasePython.itkMeshUS4_GetCellLinks(self, *args)

    def SetCells(self, arg0):
        r"""
        SetCells(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkMeshUS4_SetCells(self, arg0)

    def SetCellsArray(self, *args):
        r"""
        SetCellsArray(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *

        SetCellsArray(self, arg0, cellType)

        Parameters
        ----------
        arg0: itkVectorContainerULUL *
        cellType: int

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellsArray(self, *args)

    def GetCellsArray(self):
        r"""GetCellsArray(self) -> itkVectorContainerULUL"""
        return _itkMeshBasePython.itkMeshUS4_GetCellsArray(self)

    def GetCells(self, *args):
        r"""
        GetCells(self) -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4
        GetCells(self) -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4
        """
        return _itkMeshBasePython.itkMeshUS4_GetCells(self, *args)

    def DeleteUnusedCellData(self):
        r"""DeleteUnusedCellData(self)"""
        return _itkMeshBasePython.itkMeshUS4_DeleteUnusedCellData(self)

    def SetCell(self, arg0, arg1):
        r"""
        SetCell(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_SetCell(self, arg0, arg1)

    def GetCell(self, arg0, arg1):
        r"""
        GetCell(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetCell(self, arg0, arg1)

    def SetCellData(self, *args):
        r"""
        SetCellData(self, arg0)

        Parameters
        ----------
        arg0: itkVectorContainerULUS *

        SetCellData(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellData(self, *args)

    def GetCellData(self, *args):
        r"""
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self) -> itkVectorContainerULUS
        GetCellData(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: unsigned short *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellData(self, *args)

    def SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS4_SetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId):
        r"""
        GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long
        boundaryId: unsigned long *

        """
        return _itkMeshBasePython.itkMeshUS4_GetBoundaryAssignment(self, dimension, cellId, featureId, boundaryId)

    def RemoveBoundaryAssignment(self, dimension, cellId, featureId):
        r"""
        RemoveBoundaryAssignment(self, dimension, cellId, featureId) -> bool

        Parameters
        ----------
        dimension: int
        cellId: unsigned long
        featureId: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS4_RemoveBoundaryAssignment(self, dimension, cellId, featureId)

    def GetNumberOfCellBoundaryFeatures(self, dimension, arg1):
        r"""
        GetNumberOfCellBoundaryFeatures(self, dimension, arg1) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long

        """
        return _itkMeshBasePython.itkMeshUS4_GetNumberOfCellBoundaryFeatures(self, dimension, arg1)

    def GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3):
        r"""
        GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeature(self, dimension, arg1, arg2, arg3)

    def GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet):
        r"""
        GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet) -> unsigned long

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellBoundaryFeatureNeighbors(self, dimension, arg1, arg2, cellSet)

    def GetCellNeighbors(self, cellId, cellSet):
        r"""
        GetCellNeighbors(self, cellId, cellSet) -> unsigned long

        Parameters
        ----------
        cellId: unsigned long
        cellSet: std::set< unsigned long,std::less< unsigned long >,std::allocator< unsigned long > > *

        """
        return _itkMeshBasePython.itkMeshUS4_GetCellNeighbors(self, cellId, cellSet)

    def GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3):
        r"""
        GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3) -> bool

        Parameters
        ----------
        dimension: int
        arg1: unsigned long
        arg2: unsigned long
        arg3: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4_AutoPointer &

        """
        return _itkMeshBasePython.itkMeshUS4_GetAssignedCellBoundaryIfOneExists(self, dimension, arg1, arg2, arg3)

    def BuildCellLinks(self):
        r"""BuildCellLinks(self)"""
        return _itkMeshBasePython.itkMeshUS4_BuildCellLinks(self)

    def Accept(self, mv):
        r"""
        Accept(self, mv)

        Parameters
        ----------
        mv: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4::MultiVisitor *

        """
        return _itkMeshBasePython.itkMeshUS4_Accept(self, mv)

    def SetCellsAllocationMethod(self, _arg):
        r"""
        SetCellsAllocationMethod(self, _arg)

        Parameters
        ----------
        _arg: enum itkMeshEnums::MeshClassCellsAllocationMethod

        """
        return _itkMeshBasePython.itkMeshUS4_SetCellsAllocationMethod(self, _arg)

    def GetCellsAllocationMethod(self):
        r"""GetCellsAllocationMethod(self) -> itkMeshEnums::MeshClassCellsAllocationMethod const &"""
        return _itkMeshBasePython.itkMeshUS4_GetCellsAllocationMethod(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkMeshUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkMeshUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkMeshUS4_cast(obj)

    def keys(self):
        """
        Return keys related to the mesh's metadata.
        These keys are used in the dictionary resulting from dict(mesh).
        """
        result = ['meshType', 'name', 'dimension', 'numberOfPoints', 'points', 'numberOfPointPixels', 'pointData',
                    'numberOfCells', 'cells', 'numberOfCellPixels', 'cellData', 'cellBufferSize']
        return result

    def __getitem__(self, key):
        """Access metadata keys, see help(mesh.keys), for string keys."""
        import itk
        if isinstance(key, str):
            state = itk.dict_from_mesh(self)
            return state[key]

    def __setitem__(self, key, value):
        """Set metadata keys, see help(image.keys), for string
        keys, otherwise provide NumPy indexing to the pixel buffer
        array view. The index order follows NumPy array indexing
        order, i.e. [z, y, x] versus [x, y, z]."""
        if isinstance(key, str):
            import numpy as np
            if key == 'name':
                self.SetObjectName(value)
            elif key == 'points':
                self.SetPoints(itk.vector_container_from_array(value))
            elif key == 'cells':
                self.SetCellsArray(itk.vector_container_from_array(value))
            elif key == 'pointData':
                self.SetPointData(itk.vector_container_from_array(value))
            elif key == 'cellData':
                self.SetCellData(itk.vector_container_from_array(value))

    def __getstate__(self):
        """Get object state, necessary for serialization with pickle."""
        import itk
        state = itk.dict_from_mesh(self)
        return state

    def __setstate__(self, state):
        """Set object state, necessary for serialization with pickle."""
        import itk
        import numpy as np
        deserialized = itk.mesh_from_dict(state)
        self.__dict__['this'] = deserialized


    def New(*args, **kargs):
        """New() -> itkMeshUS4

        Create a new object of the class itkMeshUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkMeshUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkMeshUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkMeshUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkMeshUS4 in _itkMeshBasePython:
_itkMeshBasePython.itkMeshUS4_swigregister(itkMeshUS4)

def itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceADCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceADCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIADCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceADCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceADCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIADCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceADCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceADCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceADCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceADCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIADCTI4FFULULULPF4VCULPF4)

def itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceDCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceDCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIDCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceDCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceDCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIDCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceDCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceDCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceDCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceDCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIDCTI4FFULULULPF4VCULPF4)

def itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceFCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceFCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIFCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceFCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceFCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIFCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceFCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceFCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceFCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceFCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIFCTI4FFULULULPF4VCULPF4)

def itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCISSCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCISSCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceSSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceSSCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCISSCTI4FFULULULPF4VCULPF4)

def itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUCCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUCCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUCCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUCCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIUCCTI4FFULULULPF4VCULPF4)

def itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_New():
    return itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()

class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *,std::allocator< itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI2FFULULULPF2VCULPF2 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2

        Create a new object of the class itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2_swigregister(itkVectorContainerULCIUSCTI2FFULULULPF2VCULPF2)

def itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_New():
    return itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()

class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *,std::allocator< itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI3FFULULULPF3VCULPF3 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3

        Create a new object of the class itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3_swigregister(itkVectorContainerULCIUSCTI3FFULULULPF3VCULPF3)

def itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_New():
    return itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New()

class itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4(itk.ITKCommonBasePython.itkObject):
    r"""Proxy of C++ itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Pointer"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Clone(self)

    def CastToSTLContainer(self):
        r"""CastToSTLContainer(self) -> std::vector< itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 * > > &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CastToSTLContainer(self)

    def CastToSTLConstContainer(self):
        r"""CastToSTLConstContainer(self) -> std::vector< itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *,std::allocator< itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 * > > const &"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CastToSTLConstContainer(self)

    def ElementAt(self, *args):
        r"""
        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        ElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_ElementAt(self, *args)

    def CreateElementAt(self, arg0):
        r"""
        CreateElementAt(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *&

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CreateElementAt(self, arg0)

    def GetElement(self, arg0):
        r"""
        GetElement(self, arg0) -> itkCellInterfaceUSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_GetElement(self, arg0)

    def SetElement(self, arg0, arg1):
        r"""
        SetElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_SetElement(self, arg0, arg1)

    def InsertElement(self, arg0, arg1):
        r"""
        InsertElement(self, arg0, arg1)

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_InsertElement(self, arg0, arg1)

    def IndexExists(self, arg0):
        r"""
        IndexExists(self, arg0) -> bool

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_IndexExists(self, arg0)

    def GetElementIfIndexExists(self, arg0, arg1):
        r"""
        GetElementIfIndexExists(self, arg0, arg1) -> bool

        Parameters
        ----------
        arg0: unsigned long
        arg1: itkCellInterfaceUSCTI4FFULULULPF4VCULPF4 **

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_GetElementIfIndexExists(self, arg0, arg1)

    def CreateIndex(self, arg0):
        r"""
        CreateIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_CreateIndex(self, arg0)

    def DeleteIndex(self, arg0):
        r"""
        DeleteIndex(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_DeleteIndex(self, arg0)

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Size(self)

    def Reserve(self, arg0):
        r"""
        Reserve(self, arg0)

        Parameters
        ----------
        arg0: unsigned long

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Reserve(self, arg0)

    def Squeeze(self):
        r"""Squeeze(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Squeeze(self)

    def Initialize(self):
        r"""Initialize(self)"""
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_Initialize(self)
    __swig_destroy__ = _itkMeshBasePython.delete_itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4

        Create a new object of the class itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4 in _itkMeshBasePython:
_itkMeshBasePython.itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4_swigregister(itkVectorContainerULCIUSCTI4FFULULULPF4VCULPF4)

