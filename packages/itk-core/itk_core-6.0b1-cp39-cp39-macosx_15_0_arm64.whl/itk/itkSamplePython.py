# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKStatisticsPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkSamplePython
else:
    import _itkSamplePython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkArrayPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.vnl_vector_refPython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.itkCovariantVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
class itkSampleAD(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleAD class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAD_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkArrayD

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleAD_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleAD_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAD_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleAD_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleAD_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleAD

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleAD

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleAD_cast(obj)

# Register itkSampleAD in _itkSamplePython:
_itkSamplePython.itkSampleAD_swigregister(itkSampleAD)
class itkSampleAF(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleAF class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAF_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkArrayF

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleAF_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleAF_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleAF_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleAF_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleAF_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleAF

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleAF

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleAF_cast(obj)

# Register itkSampleAF in _itkSamplePython:
_itkSamplePython.itkSampleAF_swigregister(itkSampleAF)
class itkSampleFAD1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAD1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayD1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAD1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAD1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAD1_cast(obj)

# Register itkSampleFAD1 in _itkSamplePython:
_itkSamplePython.itkSampleFAD1_swigregister(itkSampleFAD1)
class itkSampleFAD2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAD2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayD2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAD2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAD2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAD2_cast(obj)

# Register itkSampleFAD2 in _itkSamplePython:
_itkSamplePython.itkSampleFAD2_swigregister(itkSampleFAD2)
class itkSampleFAD3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAD3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayD3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAD3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAD3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAD3_cast(obj)

# Register itkSampleFAD3 in _itkSamplePython:
_itkSamplePython.itkSampleFAD3_swigregister(itkSampleFAD3)
class itkSampleFAD4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAD4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayD4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAD4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAD4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAD4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAD4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAD4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAD4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAD4_cast(obj)

# Register itkSampleFAD4 in _itkSamplePython:
_itkSamplePython.itkSampleFAD4_swigregister(itkSampleFAD4)
class itkSampleFAF1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAF1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayF1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAF1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAF1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAF1_cast(obj)

# Register itkSampleFAF1 in _itkSamplePython:
_itkSamplePython.itkSampleFAF1_swigregister(itkSampleFAF1)
class itkSampleFAF2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayF2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAF2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAF2_cast(obj)

# Register itkSampleFAF2 in _itkSamplePython:
_itkSamplePython.itkSampleFAF2_swigregister(itkSampleFAF2)
class itkSampleFAF3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayF3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAF3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAF3_cast(obj)

# Register itkSampleFAF3 in _itkSamplePython:
_itkSamplePython.itkSampleFAF3_swigregister(itkSampleFAF3)
class itkSampleFAF4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayF4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAF4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAF4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAF4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAF4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAF4_cast(obj)

# Register itkSampleFAF4 in _itkSamplePython:
_itkSamplePython.itkSampleFAF4_swigregister(itkSampleFAF4)
class itkSampleFASC1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySC1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASC1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASC1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASC1_cast(obj)

# Register itkSampleFASC1 in _itkSamplePython:
_itkSamplePython.itkSampleFASC1_swigregister(itkSampleFASC1)
class itkSampleFASC2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySC2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASC2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASC2_cast(obj)

# Register itkSampleFASC2 in _itkSamplePython:
_itkSamplePython.itkSampleFASC2_swigregister(itkSampleFASC2)
class itkSampleFASC3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySC3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASC3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASC3_cast(obj)

# Register itkSampleFASC3 in _itkSamplePython:
_itkSamplePython.itkSampleFASC3_swigregister(itkSampleFASC3)
class itkSampleFASC4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySC4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASC4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASC4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASC4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASC4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASC4_cast(obj)

# Register itkSampleFASC4 in _itkSamplePython:
_itkSamplePython.itkSampleFASC4_swigregister(itkSampleFASC4)
class itkSampleFASL1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASL1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySL1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASL1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASL1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASL1_cast(obj)

# Register itkSampleFASL1 in _itkSamplePython:
_itkSamplePython.itkSampleFASL1_swigregister(itkSampleFASL1)
class itkSampleFASL2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySL2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASL2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASL2_cast(obj)

# Register itkSampleFASL2 in _itkSamplePython:
_itkSamplePython.itkSampleFASL2_swigregister(itkSampleFASL2)
class itkSampleFASL3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySL3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASL3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASL3_cast(obj)

# Register itkSampleFASL3 in _itkSamplePython:
_itkSamplePython.itkSampleFASL3_swigregister(itkSampleFASL3)
class itkSampleFASL4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySL4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASL4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASL4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASL4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASL4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASL4_cast(obj)

# Register itkSampleFASL4 in _itkSamplePython:
_itkSamplePython.itkSampleFASL4_swigregister(itkSampleFASL4)
class itkSampleFASS1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySS1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASS1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASS1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASS1_cast(obj)

# Register itkSampleFASS1 in _itkSamplePython:
_itkSamplePython.itkSampleFASS1_swigregister(itkSampleFASS1)
class itkSampleFASS2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySS2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASS2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASS2_cast(obj)

# Register itkSampleFASS2 in _itkSamplePython:
_itkSamplePython.itkSampleFASS2_swigregister(itkSampleFASS2)
class itkSampleFASS3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySS3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASS3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASS3_cast(obj)

# Register itkSampleFASS3 in _itkSamplePython:
_itkSamplePython.itkSampleFASS3_swigregister(itkSampleFASS3)
class itkSampleFASS4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFASS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArraySS4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFASS4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFASS4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFASS4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFASS4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFASS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFASS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFASS4_cast(obj)

# Register itkSampleFASS4 in _itkSamplePython:
_itkSamplePython.itkSampleFASS4_swigregister(itkSampleFASS4)
class itkSampleFAUC1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUC1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUC1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUC1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUC1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUC1_cast(obj)

# Register itkSampleFAUC1 in _itkSamplePython:
_itkSamplePython.itkSampleFAUC1_swigregister(itkSampleFAUC1)
class itkSampleFAUC2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUC2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUC2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUC2_cast(obj)

# Register itkSampleFAUC2 in _itkSamplePython:
_itkSamplePython.itkSampleFAUC2_swigregister(itkSampleFAUC2)
class itkSampleFAUC3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUC3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUC3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUC3_cast(obj)

# Register itkSampleFAUC3 in _itkSamplePython:
_itkSamplePython.itkSampleFAUC3_swigregister(itkSampleFAUC3)
class itkSampleFAUC4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUC4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUC4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUC4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUC4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUC4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUC4_cast(obj)

# Register itkSampleFAUC4 in _itkSamplePython:
_itkSamplePython.itkSampleFAUC4_swigregister(itkSampleFAUC4)
class itkSampleFAUL1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUL1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUL1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUL1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUL1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUL1_cast(obj)

# Register itkSampleFAUL1 in _itkSamplePython:
_itkSamplePython.itkSampleFAUL1_swigregister(itkSampleFAUL1)
class itkSampleFAUL2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUL2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUL2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUL2_cast(obj)

# Register itkSampleFAUL2 in _itkSamplePython:
_itkSamplePython.itkSampleFAUL2_swigregister(itkSampleFAUL2)
class itkSampleFAUL3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUL3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUL3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUL3_cast(obj)

# Register itkSampleFAUL3 in _itkSamplePython:
_itkSamplePython.itkSampleFAUL3_swigregister(itkSampleFAUL3)
class itkSampleFAUL4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUL4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUL4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUL4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUL4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUL4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUL4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUL4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUL4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUL4_cast(obj)

# Register itkSampleFAUL4 in _itkSamplePython:
_itkSamplePython.itkSampleFAUL4_swigregister(itkSampleFAUL4)
class itkSampleFAUS1(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUS1 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS1_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUS1

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS1_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS1_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS1_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUS1_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS1_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS1

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUS1

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUS1_cast(obj)

# Register itkSampleFAUS1 in _itkSamplePython:
_itkSamplePython.itkSampleFAUS1_swigregister(itkSampleFAUS1)
class itkSampleFAUS2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUS2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUS2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUS2_cast(obj)

# Register itkSampleFAUS2 in _itkSamplePython:
_itkSamplePython.itkSampleFAUS2_swigregister(itkSampleFAUS2)
class itkSampleFAUS3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUS3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUS3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUS3_cast(obj)

# Register itkSampleFAUS3 in _itkSamplePython:
_itkSamplePython.itkSampleFAUS3_swigregister(itkSampleFAUS3)
class itkSampleFAUS4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleFAUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkFixedArrayUS4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleFAUS4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleFAUS4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleFAUS4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleFAUS4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleFAUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleFAUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleFAUS4_cast(obj)

# Register itkSampleFAUS4 in _itkSamplePython:
_itkSamplePython.itkSampleFAUS4_swigregister(itkSampleFAUS4)
class itkSampleVF2(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleVF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF2_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkVectorF2

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF2_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF2_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF2_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleVF2_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleVF2_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleVF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleVF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleVF2_cast(obj)

# Register itkSampleVF2 in _itkSamplePython:
_itkSamplePython.itkSampleVF2_swigregister(itkSampleVF2)
class itkSampleVF3(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleVF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF3_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkVectorF3

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF3_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF3_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF3_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleVF3_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleVF3_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleVF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleVF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleVF3_cast(obj)

# Register itkSampleVF3 in _itkSamplePython:
_itkSamplePython.itkSampleVF3_swigregister(itkSampleVF3)
class itkSampleVF4(itk.ITKCommonBasePython.itkDataObject):
    r"""Proxy of C++ itkSampleVF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def Size(self):
        r"""Size(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF4_Size(self)

    def GetMeasurementVector(self, id):
        r"""
        GetMeasurementVector(self, id) -> itkVectorF4

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF4_GetMeasurementVector(self, id)

    def GetFrequency(self, id):
        r"""
        GetFrequency(self, id) -> unsigned long

        Parameters
        ----------
        id: unsigned long

        """
        return _itkSamplePython.itkSampleVF4_GetFrequency(self, id)

    def GetTotalFrequency(self):
        r"""GetTotalFrequency(self) -> unsigned long"""
        return _itkSamplePython.itkSampleVF4_GetTotalFrequency(self)

    def SetMeasurementVectorSize(self, s):
        r"""
        SetMeasurementVectorSize(self, s)

        Parameters
        ----------
        s: unsigned int

        """
        return _itkSamplePython.itkSampleVF4_SetMeasurementVectorSize(self, s)

    def GetMeasurementVectorSize(self):
        r"""GetMeasurementVectorSize(self) -> unsigned int"""
        return _itkSamplePython.itkSampleVF4_GetMeasurementVectorSize(self)
    __swig_destroy__ = _itkSamplePython.delete_itkSampleVF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkSampleVF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkSamplePython.itkSampleVF4_cast(obj)

# Register itkSampleVF4 in _itkSamplePython:
_itkSamplePython.itkSampleVF4_swigregister(itkSampleVF4)

