# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKImageGridPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkExpandImageFilterPython
else:
    import _itkExpandImageFilterPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.pyBasePython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkImageToImageFilterAPython
import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
import itk.itkImageToImageFilterCommonPython
import itk.itkImageSourcePython
import itk.itkImageSourceCommonPython
import itk.itkVectorImagePython
import itk.itkVariableLengthVectorPython
import itk.itkPhasedArray3DSpecialCoordinatesImagePython
import itk.itkInterpolateImageFunctionPython
import itk.itkImageFunctionBasePython
import itk.itkContinuousIndexPython
import itk.itkFunctionBasePython
import itk.itkArrayPython

def itkExpandImageFilterID2ID2_New():
    return itkExpandImageFilterID2ID2.New()

class itkExpandImageFilterID2ID2(itk.itkImageToImageFilterAPython.itkImageToImageFilterID2ID2):
    r"""Proxy of C++ itkExpandImageFilterID2ID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterID2ID2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterID2ID2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID2D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID2D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        GetInterpolator(self) -> itkInterpolateImageFunctionID2D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterID2ID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterID2ID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID2ID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterID2ID2

        Create a new object of the class itkExpandImageFilterID2ID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterID2ID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterID2ID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterID2ID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterID2ID2 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterID2ID2_swigregister(itkExpandImageFilterID2ID2)

def itkExpandImageFilterID3ID3_New():
    return itkExpandImageFilterID3ID3.New()

class itkExpandImageFilterID3ID3(itk.itkImageToImageFilterAPython.itkImageToImageFilterID3ID3):
    r"""Proxy of C++ itkExpandImageFilterID3ID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterID3ID3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterID3ID3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID3D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID3D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        GetInterpolator(self) -> itkInterpolateImageFunctionID3D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterID3ID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterID3ID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID3ID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterID3ID3

        Create a new object of the class itkExpandImageFilterID3ID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterID3ID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterID3ID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterID3ID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterID3ID3 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterID3ID3_swigregister(itkExpandImageFilterID3ID3)

def itkExpandImageFilterID4ID4_New():
    return itkExpandImageFilterID4ID4.New()

class itkExpandImageFilterID4ID4(itk.itkImageToImageFilterAPython.itkImageToImageFilterID4ID4):
    r"""Proxy of C++ itkExpandImageFilterID4ID4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterID4ID4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterID4ID4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionID4D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionID4D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        GetInterpolator(self) -> itkInterpolateImageFunctionID4D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterID4ID4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterID4ID4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterID4ID4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterID4ID4

        Create a new object of the class itkExpandImageFilterID4ID4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterID4ID4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterID4ID4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterID4ID4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterID4ID4 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterID4ID4_swigregister(itkExpandImageFilterID4ID4)

def itkExpandImageFilterIF2IF2_New():
    return itkExpandImageFilterIF2IF2.New()

class itkExpandImageFilterIF2IF2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF2IF2):
    r"""Proxy of C++ itkExpandImageFilterIF2IF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIF2IF2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIF2IF2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF2D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF2D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF2D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIF2IF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIF2IF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIF2IF2

        Create a new object of the class itkExpandImageFilterIF2IF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIF2IF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIF2IF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIF2IF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIF2IF2 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIF2IF2_swigregister(itkExpandImageFilterIF2IF2)

def itkExpandImageFilterIF3IF3_New():
    return itkExpandImageFilterIF3IF3.New()

class itkExpandImageFilterIF3IF3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF3IF3):
    r"""Proxy of C++ itkExpandImageFilterIF3IF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIF3IF3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIF3IF3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF3D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF3D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF3D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIF3IF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIF3IF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIF3IF3

        Create a new object of the class itkExpandImageFilterIF3IF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIF3IF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIF3IF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIF3IF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIF3IF3 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIF3IF3_swigregister(itkExpandImageFilterIF3IF3)

def itkExpandImageFilterIF4IF4_New():
    return itkExpandImageFilterIF4IF4.New()

class itkExpandImageFilterIF4IF4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIF4IF4):
    r"""Proxy of C++ itkExpandImageFilterIF4IF4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIF4IF4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIF4IF4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIF4D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIF4D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIF4D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIF4IF4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIF4IF4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIF4IF4

        Create a new object of the class itkExpandImageFilterIF4IF4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIF4IF4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIF4IF4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIF4IF4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIF4IF4 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIF4IF4_swigregister(itkExpandImageFilterIF4IF4)

def itkExpandImageFilterISS2ISS2_New():
    return itkExpandImageFilterISS2ISS2.New()

class itkExpandImageFilterISS2ISS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS2ISS2):
    r"""Proxy of C++ itkExpandImageFilterISS2ISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterISS2ISS2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterISS2ISS2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS2D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS2D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS2D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterISS2ISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterISS2ISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterISS2ISS2

        Create a new object of the class itkExpandImageFilterISS2ISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterISS2ISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterISS2ISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterISS2ISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterISS2ISS2 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterISS2ISS2_swigregister(itkExpandImageFilterISS2ISS2)

def itkExpandImageFilterISS3ISS3_New():
    return itkExpandImageFilterISS3ISS3.New()

class itkExpandImageFilterISS3ISS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS3ISS3):
    r"""Proxy of C++ itkExpandImageFilterISS3ISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterISS3ISS3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterISS3ISS3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS3D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS3D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS3D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterISS3ISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterISS3ISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterISS3ISS3

        Create a new object of the class itkExpandImageFilterISS3ISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterISS3ISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterISS3ISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterISS3ISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterISS3ISS3 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterISS3ISS3_swigregister(itkExpandImageFilterISS3ISS3)

def itkExpandImageFilterISS4ISS4_New():
    return itkExpandImageFilterISS4ISS4.New()

class itkExpandImageFilterISS4ISS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterISS4ISS4):
    r"""Proxy of C++ itkExpandImageFilterISS4ISS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterISS4ISS4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterISS4ISS4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionISS4D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionISS4D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionISS4D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterISS4ISS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterISS4ISS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterISS4ISS4

        Create a new object of the class itkExpandImageFilterISS4ISS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterISS4ISS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterISS4ISS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterISS4ISS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterISS4ISS4 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterISS4ISS4_swigregister(itkExpandImageFilterISS4ISS4)

def itkExpandImageFilterIUC2IUC2_New():
    return itkExpandImageFilterIUC2IUC2.New()

class itkExpandImageFilterIUC2IUC2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC2IUC2):
    r"""Proxy of C++ itkExpandImageFilterIUC2IUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUC2IUC2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUC2IUC2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC2D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC2D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC2D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUC2IUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUC2IUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUC2IUC2

        Create a new object of the class itkExpandImageFilterIUC2IUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUC2IUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUC2IUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUC2IUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUC2IUC2 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUC2IUC2_swigregister(itkExpandImageFilterIUC2IUC2)

def itkExpandImageFilterIUC3IUC3_New():
    return itkExpandImageFilterIUC3IUC3.New()

class itkExpandImageFilterIUC3IUC3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC3IUC3):
    r"""Proxy of C++ itkExpandImageFilterIUC3IUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUC3IUC3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUC3IUC3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC3D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC3D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC3D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUC3IUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUC3IUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUC3IUC3

        Create a new object of the class itkExpandImageFilterIUC3IUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUC3IUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUC3IUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUC3IUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUC3IUC3 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUC3IUC3_swigregister(itkExpandImageFilterIUC3IUC3)

def itkExpandImageFilterIUC4IUC4_New():
    return itkExpandImageFilterIUC4IUC4.New()

class itkExpandImageFilterIUC4IUC4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUC4IUC4):
    r"""Proxy of C++ itkExpandImageFilterIUC4IUC4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUC4IUC4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUC4IUC4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUC4D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUC4D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUC4D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUC4IUC4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUC4IUC4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUC4IUC4

        Create a new object of the class itkExpandImageFilterIUC4IUC4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUC4IUC4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUC4IUC4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUC4IUC4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUC4IUC4 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUC4IUC4_swigregister(itkExpandImageFilterIUC4IUC4)

def itkExpandImageFilterIUS2IUS2_New():
    return itkExpandImageFilterIUS2IUS2.New()

class itkExpandImageFilterIUS2IUS2(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS2IUS2):
    r"""Proxy of C++ itkExpandImageFilterIUS2IUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUS2IUS2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUS2IUS2_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS2D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS2D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS2D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUS2IUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUS2IUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUS2IUS2

        Create a new object of the class itkExpandImageFilterIUS2IUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUS2IUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUS2IUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUS2IUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUS2IUS2 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUS2IUS2_swigregister(itkExpandImageFilterIUS2IUS2)

def itkExpandImageFilterIUS3IUS3_New():
    return itkExpandImageFilterIUS3IUS3.New()

class itkExpandImageFilterIUS3IUS3(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS3IUS3):
    r"""Proxy of C++ itkExpandImageFilterIUS3IUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUS3IUS3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUS3IUS3_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS3D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS3D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS3D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUS3IUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUS3IUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUS3IUS3

        Create a new object of the class itkExpandImageFilterIUS3IUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUS3IUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUS3IUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUS3IUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUS3IUS3 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUS3IUS3_swigregister(itkExpandImageFilterIUS3IUS3)

def itkExpandImageFilterIUS4IUS4_New():
    return itkExpandImageFilterIUS4IUS4.New()

class itkExpandImageFilterIUS4IUS4(itk.itkImageToImageFilterAPython.itkImageToImageFilterIUS4IUS4):
    r"""Proxy of C++ itkExpandImageFilterIUS4IUS4 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIUS4IUS4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIUS4IUS4_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIUS4D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIUS4D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        GetInterpolator(self) -> itkInterpolateImageFunctionIUS4D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIUS4IUS4

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIUS4IUS4

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIUS4IUS4

        Create a new object of the class itkExpandImageFilterIUS4IUS4 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIUS4IUS4.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIUS4IUS4.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIUS4IUS4.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIUS4IUS4 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIUS4IUS4_swigregister(itkExpandImageFilterIUS4IUS4)

def itkExpandImageFilterIVF22IVF22_New():
    return itkExpandImageFilterIVF22IVF22.New()

class itkExpandImageFilterIVF22IVF22(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF22IVF22):
    r"""Proxy of C++ itkExpandImageFilterIVF22IVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF22IVF22_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF22IVF22_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIVF22D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIVF22D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF22D
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF22D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF22IVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF22IVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF22IVF22

        Create a new object of the class itkExpandImageFilterIVF22IVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF22IVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF22IVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF22IVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF22IVF22 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF22IVF22_swigregister(itkExpandImageFilterIVF22IVF22)

def itkExpandImageFilterIVF23IVF23_New():
    return itkExpandImageFilterIVF23IVF23.New()

class itkExpandImageFilterIVF23IVF23(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF23IVF23):
    r"""Proxy of C++ itkExpandImageFilterIVF23IVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF23IVF23_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF23IVF23_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,3 > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF23IVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF23IVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF23IVF23

        Create a new object of the class itkExpandImageFilterIVF23IVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF23IVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF23IVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF23IVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF23IVF23 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF23IVF23_swigregister(itkExpandImageFilterIVF23IVF23)

def itkExpandImageFilterIVF24IVF24_New():
    return itkExpandImageFilterIVF24IVF24.New()

class itkExpandImageFilterIVF24IVF24(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF24IVF24):
    r"""Proxy of C++ itkExpandImageFilterIVF24IVF24 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF24IVF24_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF24IVF24_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,4 > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,4 > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,4 > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,2 >,4 > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF24IVF24

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF24IVF24

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF24IVF24

        Create a new object of the class itkExpandImageFilterIVF24IVF24 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF24IVF24.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF24IVF24.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF24IVF24.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF24IVF24 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF24IVF24_swigregister(itkExpandImageFilterIVF24IVF24)

def itkExpandImageFilterIVF32IVF32_New():
    return itkExpandImageFilterIVF32IVF32.New()

class itkExpandImageFilterIVF32IVF32(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF32IVF32):
    r"""Proxy of C++ itkExpandImageFilterIVF32IVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF32IVF32_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF32IVF32_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float > > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float > > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float > > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float > > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF32IVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF32IVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF32IVF32

        Create a new object of the class itkExpandImageFilterIVF32IVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF32IVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF32IVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF32IVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF32IVF32 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF32IVF32_swigregister(itkExpandImageFilterIVF32IVF32)

def itkExpandImageFilterIVF33IVF33_New():
    return itkExpandImageFilterIVF33IVF33.New()

class itkExpandImageFilterIVF33IVF33(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF33IVF33):
    r"""Proxy of C++ itkExpandImageFilterIVF33IVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF33IVF33_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF33IVF33_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIVF33D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIVF33D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF33D
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF33D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF33IVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF33IVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF33IVF33

        Create a new object of the class itkExpandImageFilterIVF33IVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF33IVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF33IVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF33IVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF33IVF33 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF33IVF33_swigregister(itkExpandImageFilterIVF33IVF33)

def itkExpandImageFilterIVF34IVF34_New():
    return itkExpandImageFilterIVF34IVF34.New()

class itkExpandImageFilterIVF34IVF34(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF34IVF34):
    r"""Proxy of C++ itkExpandImageFilterIVF34IVF34 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF34IVF34_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF34IVF34_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float >,4 > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float >,4 > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float >,4 > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float >,4 > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF34IVF34

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF34IVF34

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF34IVF34

        Create a new object of the class itkExpandImageFilterIVF34IVF34 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF34IVF34.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF34IVF34.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF34IVF34.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF34IVF34 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF34IVF34_swigregister(itkExpandImageFilterIVF34IVF34)

def itkExpandImageFilterIVF42IVF42_New():
    return itkExpandImageFilterIVF42IVF42.New()

class itkExpandImageFilterIVF42IVF42(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF42IVF42):
    r"""Proxy of C++ itkExpandImageFilterIVF42IVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF42IVF42_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF42IVF42_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 > > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 > > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 > > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 > > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI2

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI2"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF42IVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF42IVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF42IVF42

        Create a new object of the class itkExpandImageFilterIVF42IVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF42IVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF42IVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF42IVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF42IVF42 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF42IVF42_swigregister(itkExpandImageFilterIVF42IVF42)

def itkExpandImageFilterIVF43IVF43_New():
    return itkExpandImageFilterIVF43IVF43.New()

class itkExpandImageFilterIVF43IVF43(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF43IVF43):
    r"""Proxy of C++ itkExpandImageFilterIVF43IVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF43IVF43_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF43IVF43_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 > > *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 > > *"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 > > const
        GetInterpolator(self) -> itk::InterpolateImageFunction< itk::Image< itk::Vector< float,4 >,3 > > *
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI3

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI3"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF43IVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF43IVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF43IVF43

        Create a new object of the class itkExpandImageFilterIVF43IVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF43IVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF43IVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF43IVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF43IVF43 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF43IVF43_swigregister(itkExpandImageFilterIVF43IVF43)

def itkExpandImageFilterIVF44IVF44_New():
    return itkExpandImageFilterIVF44IVF44.New()

class itkExpandImageFilterIVF44IVF44(itk.itkImageToImageFilterAPython.itkImageToImageFilterIVF44IVF44):
    r"""Proxy of C++ itkExpandImageFilterIVF44IVF44 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkExpandImageFilterIVF44IVF44_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkExpandImageFilterIVF44IVF44_Pointer"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_Clone(self)

    def SetInterpolator(self, _arg):
        r"""
        SetInterpolator(self, _arg)

        Parameters
        ----------
        _arg: itkInterpolateImageFunctionIVF44D *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_SetInterpolator(self, _arg)

    def GetModifiableInterpolator(self):
        r"""GetModifiableInterpolator(self) -> itkInterpolateImageFunctionIVF44D"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_GetModifiableInterpolator(self)

    def GetInterpolator(self, *args):
        r"""
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF44D
        GetInterpolator(self) -> itkInterpolateImageFunctionIVF44D
        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_GetInterpolator(self, *args)

    def SetExpandFactors(self, *args):
        r"""
        SetExpandFactors(self, _arg)

        Parameters
        ----------
        _arg: itkFixedArrayUI4

        SetExpandFactors(self, factor)

        Parameters
        ----------
        factor: unsigned int const

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_SetExpandFactors(self, *args)

    def GetExpandFactors(self):
        r"""GetExpandFactors(self) -> itkFixedArrayUI4"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_GetExpandFactors(self)

    def GenerateOutputInformation(self):
        r"""GenerateOutputInformation(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_GenerateOutputInformation(self)

    def GenerateInputRequestedRegion(self):
        r"""GenerateInputRequestedRegion(self)"""
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_GenerateInputRequestedRegion(self)
    __swig_destroy__ = _itkExpandImageFilterPython.delete_itkExpandImageFilterIVF44IVF44

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkExpandImageFilterIVF44IVF44

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_cast(obj)

    def New(*args, **kargs):
        """New() -> itkExpandImageFilterIVF44IVF44

        Create a new object of the class itkExpandImageFilterIVF44IVF44 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkExpandImageFilterIVF44IVF44.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkExpandImageFilterIVF44IVF44.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkExpandImageFilterIVF44IVF44.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkExpandImageFilterIVF44IVF44 in _itkExpandImageFilterPython:
_itkExpandImageFilterPython.itkExpandImageFilterIVF44IVF44_swigregister(itkExpandImageFilterIVF44IVF44)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def expand_image_filter(*args: itkt.ImageLike,  interpolator: itkt.InterpolateImageFunction=..., expand_factors: Union[int, Sequence[int]]=...,**kwargs)-> itkt.ImageSourceReturn:
    """Functional interface for ExpandImageFilter"""
    import itk

    kwarg_typehints = { 'interpolator':interpolator,'expand_factors':expand_factors }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.ExpandImageFilter.New(*args, **kwargs)

    return instance.__internal_call__()

def expand_image_filter_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKImageGrid.ExpandImageFilter
    expand_image_filter.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    expand_image_filter.__doc__ = filter_object.__doc__



