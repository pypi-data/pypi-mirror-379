# This file was automatically generated by SWIG (https://www.swig.org).
# Version 4.3.0
#
# Do not make changes to this file unless you know what you are doing - modify
# the SWIG interface file instead.


import collections

from sys import version_info as _version_info
if _version_info < (3, 7, 0):
    raise RuntimeError("Python 3.7 or later required")

from . import _ITKCommonPython


from . import _ITKVTKPython



from sys import version_info as _swig_python_version_info
# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _itkVTKImageExportPython
else:
    import _itkVTKImageExportPython

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "this":
            set(self, name, value)
        elif name == "thisown":
            self.this.own(value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


if _swig_python_version_info[0:2] >= (3, 3):
    import collections.abc
else:
    import collections

import itk.itkImagePython
import itk.itkImageRegionPython
import itk.itkSizePython
import itk.pyBasePython
import itk.ITKCommonBasePython
import itk.itkMatrixPython
import itk.vnl_vectorPython
import itk.stdcomplexPython
import itk.vnl_matrixPython
import itk.itkCovariantVectorPython
import itk.vnl_vector_refPython
import itk.itkFixedArrayPython
import itk.itkVectorPython
import itk.itkPointPython
import itk.vnl_matrix_fixedPython
import itk.itkIndexPython
import itk.itkOffsetPython
import itk.itkSymmetricSecondRankTensorPython
import itk.itkRGBAPixelPython
import itk.itkRGBPixelPython
class itkVTKImageExportBase(itk.ITKCommonBasePython.itkProcessObject):
    r"""Proxy of C++ itkVTKImageExportBase class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined - class is abstract")
    __repr__ = _swig_repr

    def GetCallbackUserData(self):
        r"""GetCallbackUserData(self) -> void *"""
        return _itkVTKImageExportPython.itkVTKImageExportBase_GetCallbackUserData(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportBase

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportBase

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportBase_cast(obj)

# Register itkVTKImageExportBase in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportBase_swigregister(itkVTKImageExportBase)

def itkVTKImageExportICVF22_New():
    return itkVTKImageExportICVF22.New()

class itkVTKImageExportICVF22(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF22_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF22 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF22

        Create a new object of the class itkVTKImageExportICVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF22 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF22_swigregister(itkVTKImageExportICVF22)

def itkVTKImageExportICVF23_New():
    return itkVTKImageExportICVF23.New()

class itkVTKImageExportICVF23(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF23_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF23 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF23

        Create a new object of the class itkVTKImageExportICVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF23 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF23_swigregister(itkVTKImageExportICVF23)

def itkVTKImageExportICVF32_New():
    return itkVTKImageExportICVF32.New()

class itkVTKImageExportICVF32(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF32_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF32 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF32

        Create a new object of the class itkVTKImageExportICVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF32 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF32_swigregister(itkVTKImageExportICVF32)

def itkVTKImageExportICVF33_New():
    return itkVTKImageExportICVF33.New()

class itkVTKImageExportICVF33(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF33_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF33 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF33

        Create a new object of the class itkVTKImageExportICVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF33 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF33_swigregister(itkVTKImageExportICVF33)

def itkVTKImageExportICVF42_New():
    return itkVTKImageExportICVF42.New()

class itkVTKImageExportICVF42(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF42_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF42 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF42

        Create a new object of the class itkVTKImageExportICVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF42 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF42_swigregister(itkVTKImageExportICVF42)

def itkVTKImageExportICVF43_New():
    return itkVTKImageExportICVF43.New()

class itkVTKImageExportICVF43(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportICVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportICVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportICVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportICVF43_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageCVF43 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageCVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportICVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportICVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportICVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportICVF43

        Create a new object of the class itkVTKImageExportICVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportICVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportICVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportICVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportICVF43 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportICVF43_swigregister(itkVTKImageExportICVF43)

def itkVTKImageExportID2_New():
    return itkVTKImageExportID2.New()

class itkVTKImageExportID2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportID2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportID2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportID2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportID2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportID2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportID2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageD2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportID2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD2"""
        return _itkVTKImageExportPython.itkVTKImageExportID2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportID2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportID2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportID2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportID2

        Create a new object of the class itkVTKImageExportID2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportID2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportID2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportID2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportID2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportID2_swigregister(itkVTKImageExportID2)

def itkVTKImageExportID3_New():
    return itkVTKImageExportID3.New()

class itkVTKImageExportID3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportID3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportID3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportID3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportID3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportID3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportID3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageD3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportID3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageD3"""
        return _itkVTKImageExportPython.itkVTKImageExportID3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportID3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportID3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportID3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportID3

        Create a new object of the class itkVTKImageExportID3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportID3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportID3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportID3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportID3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportID3_swigregister(itkVTKImageExportID3)

def itkVTKImageExportIF2_New():
    return itkVTKImageExportIF2.New()

class itkVTKImageExportIF2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIF2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIF2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIF2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIF2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageF2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIF2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF2"""
        return _itkVTKImageExportPython.itkVTKImageExportIF2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIF2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIF2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF2

        Create a new object of the class itkVTKImageExportIF2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIF2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIF2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIF2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIF2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIF2_swigregister(itkVTKImageExportIF2)

def itkVTKImageExportIF3_New():
    return itkVTKImageExportIF3.New()

class itkVTKImageExportIF3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIF3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIF3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIF3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIF3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageF3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIF3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageF3"""
        return _itkVTKImageExportPython.itkVTKImageExportIF3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIF3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIF3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIF3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIF3

        Create a new object of the class itkVTKImageExportIF3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIF3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIF3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIF3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIF3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIF3_swigregister(itkVTKImageExportIF3)

def itkVTKImageExportIRGBAUC2_New():
    return itkVTKImageExportIRGBAUC2.New()

class itkVTKImageExportIRGBAUC2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIRGBAUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIRGBAUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIRGBAUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageRGBAUC2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageRGBAUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBAUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIRGBAUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBAUC2

        Create a new object of the class itkVTKImageExportIRGBAUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBAUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBAUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIRGBAUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIRGBAUC2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIRGBAUC2_swigregister(itkVTKImageExportIRGBAUC2)

def itkVTKImageExportIRGBAUC3_New():
    return itkVTKImageExportIRGBAUC3.New()

class itkVTKImageExportIRGBAUC3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIRGBAUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIRGBAUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIRGBAUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageRGBAUC3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageRGBAUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBAUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIRGBAUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBAUC3

        Create a new object of the class itkVTKImageExportIRGBAUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBAUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBAUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIRGBAUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIRGBAUC3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIRGBAUC3_swigregister(itkVTKImageExportIRGBAUC3)

def itkVTKImageExportIRGBUC2_New():
    return itkVTKImageExportIRGBUC2.New()

class itkVTKImageExportIRGBUC2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIRGBUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIRGBUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIRGBUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageRGBUC2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageRGBUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIRGBUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBUC2

        Create a new object of the class itkVTKImageExportIRGBUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIRGBUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIRGBUC2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIRGBUC2_swigregister(itkVTKImageExportIRGBUC2)

def itkVTKImageExportIRGBUC3_New():
    return itkVTKImageExportIRGBUC3.New()

class itkVTKImageExportIRGBUC3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIRGBUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIRGBUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIRGBUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageRGBUC3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageRGBUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIRGBUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIRGBUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIRGBUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIRGBUC3

        Create a new object of the class itkVTKImageExportIRGBUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIRGBUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIRGBUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIRGBUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIRGBUC3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIRGBUC3_swigregister(itkVTKImageExportIRGBUC3)

def itkVTKImageExportISS2_New():
    return itkVTKImageExportISS2.New()

class itkVTKImageExportISS2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportISS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportISS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportISS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportISS2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportISS2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS2"""
        return _itkVTKImageExportPython.itkVTKImageExportISS2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportISS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportISS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportISS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportISS2

        Create a new object of the class itkVTKImageExportISS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportISS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportISS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportISS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportISS2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportISS2_swigregister(itkVTKImageExportISS2)

def itkVTKImageExportISS3_New():
    return itkVTKImageExportISS3.New()

class itkVTKImageExportISS3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportISS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportISS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportISS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportISS3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageSS3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportISS3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageSS3"""
        return _itkVTKImageExportPython.itkVTKImageExportISS3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportISS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportISS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportISS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportISS3

        Create a new object of the class itkVTKImageExportISS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportISS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportISS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportISS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportISS3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportISS3_swigregister(itkVTKImageExportISS3)

def itkVTKImageExportIUC2_New():
    return itkVTKImageExportIUC2.New()

class itkVTKImageExportIUC2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUC2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUC2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUC2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUC2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUC2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC2

        Create a new object of the class itkVTKImageExportIUC2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUC2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUC2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUC2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUC2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUC2_swigregister(itkVTKImageExportIUC2)

def itkVTKImageExportIUC3_New():
    return itkVTKImageExportIUC3.New()

class itkVTKImageExportIUC3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUC3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUC3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUC3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUC3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUC3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUC3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUC3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUC3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUC3

        Create a new object of the class itkVTKImageExportIUC3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUC3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUC3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUC3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUC3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUC3_swigregister(itkVTKImageExportIUC3)

def itkVTKImageExportIUL2_New():
    return itkVTKImageExportIUL2.New()

class itkVTKImageExportIUL2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUL2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUL2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUL2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUL2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUL2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUL2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUL2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUL2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL2

        Create a new object of the class itkVTKImageExportIUL2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUL2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUL2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUL2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUL2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUL2_swigregister(itkVTKImageExportIUL2)

def itkVTKImageExportIUL3_New():
    return itkVTKImageExportIUL3.New()

class itkVTKImageExportIUL3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUL3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUL3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUL3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUL3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUL3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUL3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUL3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUL3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUL3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUL3

        Create a new object of the class itkVTKImageExportIUL3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUL3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUL3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUL3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUL3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUL3_swigregister(itkVTKImageExportIUL3)

def itkVTKImageExportIUS2_New():
    return itkVTKImageExportIUS2.New()

class itkVTKImageExportIUS2(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUS2 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUS2_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUS2_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS2 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS2"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS2

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUS2

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUS2_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS2

        Create a new object of the class itkVTKImageExportIUS2 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUS2.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUS2.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUS2.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUS2 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUS2_swigregister(itkVTKImageExportIUS2)

def itkVTKImageExportIUS3_New():
    return itkVTKImageExportIUS3.New()

class itkVTKImageExportIUS3(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIUS3 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIUS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIUS3_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIUS3_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageUS3 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageUS3"""
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIUS3

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIUS3

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIUS3_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIUS3

        Create a new object of the class itkVTKImageExportIUS3 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIUS3.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIUS3.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIUS3.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIUS3 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIUS3_swigregister(itkVTKImageExportIUS3)

def itkVTKImageExportIVF22_New():
    return itkVTKImageExportIVF22.New()

class itkVTKImageExportIVF22(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF22 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF22_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF22_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF22 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF22"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF22

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF22

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF22_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF22

        Create a new object of the class itkVTKImageExportIVF22 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF22.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF22.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF22.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF22 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF22_swigregister(itkVTKImageExportIVF22)

def itkVTKImageExportIVF23_New():
    return itkVTKImageExportIVF23.New()

class itkVTKImageExportIVF23(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF23 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF23_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF23_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF23 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF23"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF23

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF23

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF23_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF23

        Create a new object of the class itkVTKImageExportIVF23 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF23.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF23.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF23.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF23 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF23_swigregister(itkVTKImageExportIVF23)

def itkVTKImageExportIVF32_New():
    return itkVTKImageExportIVF32.New()

class itkVTKImageExportIVF32(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF32 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF32_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF32_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF32 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF32"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF32

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF32

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF32_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF32

        Create a new object of the class itkVTKImageExportIVF32 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF32.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF32.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF32.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF32 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF32_swigregister(itkVTKImageExportIVF32)

def itkVTKImageExportIVF33_New():
    return itkVTKImageExportIVF33.New()

class itkVTKImageExportIVF33(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF33 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF33_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF33_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF33 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF33"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF33

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF33

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF33_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF33

        Create a new object of the class itkVTKImageExportIVF33 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF33.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF33.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF33.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF33 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF33_swigregister(itkVTKImageExportIVF33)

def itkVTKImageExportIVF42_New():
    return itkVTKImageExportIVF42.New()

class itkVTKImageExportIVF42(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF42 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF42_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF42_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF42 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF42"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF42

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF42

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF42_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF42

        Create a new object of the class itkVTKImageExportIVF42 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF42.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF42.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF42.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF42 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF42_swigregister(itkVTKImageExportIVF42)

def itkVTKImageExportIVF43_New():
    return itkVTKImageExportIVF43.New()

class itkVTKImageExportIVF43(itkVTKImageExportBase):
    r"""Proxy of C++ itkVTKImageExportIVF43 class."""

    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")

    def __init__(self, *args, **kwargs):
        raise AttributeError("No constructor defined")
    __repr__ = _swig_repr

    @staticmethod
    def __New_orig__():
        r"""__New_orig__() -> itkVTKImageExportIVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43___New_orig__()

    def Clone(self):
        r"""Clone(self) -> itkVTKImageExportIVF43_Pointer"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_Clone(self)
    ImageDimensionCheck = _itkVTKImageExportPython.itkVTKImageExportIVF43_ImageDimensionCheck
    

    def SetInput(self, arg0):
        r"""
        SetInput(self, arg0)

        Parameters
        ----------
        arg0: itkImageVF43 const *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_SetInput(self, arg0)

    def GetInput(self):
        r"""GetInput(self) -> itkImageVF43"""
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_GetInput(self)
    __swig_destroy__ = _itkVTKImageExportPython.delete_itkVTKImageExportIVF43

    @staticmethod
    def cast(obj):
        r"""
        cast(obj) -> itkVTKImageExportIVF43

        Parameters
        ----------
        obj: itkLightObject *

        """
        return _itkVTKImageExportPython.itkVTKImageExportIVF43_cast(obj)

    def New(*args, **kargs):
        """New() -> itkVTKImageExportIVF43

        Create a new object of the class itkVTKImageExportIVF43 and set the input and the parameters if some
        named or non-named arguments are passed to that method.

        New() tries to assign all the non named parameters to the input of the new objects - the
        first non named parameter in the first input, etc.

        The named parameters are used by calling the method with the same name prefixed by 'Set'.

        Ex:

          itkVTKImageExportIVF43.New(reader, threshold=10)

        is (most of the time) equivalent to:

          obj = itkVTKImageExportIVF43.New()
          obj.SetInput(0, reader.GetOutput())
          obj.SetThreshold(10)
        """
        obj = itkVTKImageExportIVF43.__New_orig__()
        from itk.support import template_class
        template_class.New(obj, *args, **kargs)
        return obj
    New = staticmethod(New)


# Register itkVTKImageExportIVF43 in _itkVTKImageExportPython:
_itkVTKImageExportPython.itkVTKImageExportIVF43_swigregister(itkVTKImageExportIVF43)

from itk.support import helpers
import itk.support.types as itkt
from typing import Union
from collections.abc import Sequence

@helpers.accept_array_like_xarray_torch
def vtk_image_export(*args, **kwargs):
    """Functional interface for VTKImageExport"""
    import itk

    kwarg_typehints = {  }
    specified_kwarg_typehints = { k:v for (k,v) in kwarg_typehints.items() if kwarg_typehints[k] is not ... }
    kwargs.update(specified_kwarg_typehints)


    instance = itk.VTKImageExport.New(*args, **kwargs)

    return instance.__internal_call__()

def vtk_image_export_init_docstring():
    import itk
    from itk.support import template_class

    filter_class = itk.ITKVTK.VTKImageExport
    vtk_image_export.process_object = filter_class
    is_template = isinstance(filter_class, template_class.itkTemplate)
    if is_template:
        filter_object = filter_class.values()[0]
    else:
        filter_object = filter_class

    vtk_image_export.__doc__ = filter_object.__doc__



